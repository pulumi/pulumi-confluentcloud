# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

import types

__config__ = pulumi.Config('confluentcloud')


class _ExportableConfig(types.ModuleType):
    @_builtins.property
    def catalog_rest_endpoint(self) -> Optional[str]:
        """
        The Stream Catalog REST Endpoint.
        """
        return __config__.get('catalogRestEndpoint')

    @_builtins.property
    def cloud_api_key(self) -> Optional[str]:
        """
        The Confluent Cloud API Key.
        """
        return __config__.get('cloudApiKey')

    @_builtins.property
    def cloud_api_secret(self) -> Optional[str]:
        """
        The Confluent Cloud API Secret.
        """
        return __config__.get('cloudApiSecret')

    @_builtins.property
    def endpoint(self) -> Optional[str]:
        """
        The base endpoint of Confluent Cloud API.
        """
        return __config__.get('endpoint')

    @_builtins.property
    def environment_id(self) -> Optional[str]:
        """
        The Flink Environment ID.
        """
        return __config__.get('environmentId')

    @_builtins.property
    def flink_api_key(self) -> Optional[str]:
        """
        The Flink API Key.
        """
        return __config__.get('flinkApiKey')

    @_builtins.property
    def flink_api_secret(self) -> Optional[str]:
        """
        The Flink API Secret.
        """
        return __config__.get('flinkApiSecret')

    @_builtins.property
    def flink_compute_pool_id(self) -> Optional[str]:
        """
        The Flink Compute Pool ID.
        """
        return __config__.get('flinkComputePoolId')

    @_builtins.property
    def flink_principal_id(self) -> Optional[str]:
        """
        The Flink Principal ID.
        """
        return __config__.get('flinkPrincipalId')

    @_builtins.property
    def flink_rest_endpoint(self) -> Optional[str]:
        """
        The Flink REST Endpoint.
        """
        return __config__.get('flinkRestEndpoint')

    @_builtins.property
    def kafka_api_key(self) -> Optional[str]:
        """
        The Kafka Cluster API Key.
        """
        return __config__.get('kafkaApiKey')

    @_builtins.property
    def kafka_api_secret(self) -> Optional[str]:
        """
        The Kafka Cluster API Secret.
        """
        return __config__.get('kafkaApiSecret')

    @_builtins.property
    def kafka_id(self) -> Optional[str]:
        """
        The Kafka Cluster ID.
        """
        return __config__.get('kafkaId')

    @_builtins.property
    def kafka_rest_endpoint(self) -> Optional[str]:
        """
        The Kafka Cluster REST Endpoint.
        """
        return __config__.get('kafkaRestEndpoint')

    @_builtins.property
    def max_retries(self) -> Optional[int]:
        """
        Maximum number of retries of HTTP client. Defaults to 4.
        """
        return __config__.get_int('maxRetries')

    @_builtins.property
    def oauth(self) -> Optional[str]:
        """
        OAuth config settings
        """
        return __config__.get('oauth')

    @_builtins.property
    def organization_id(self) -> Optional[str]:
        """
        The Flink Organization ID.
        """
        return __config__.get('organizationId')

    @_builtins.property
    def schema_registry_api_key(self) -> Optional[str]:
        """
        The Schema Registry Cluster API Key.
        """
        return __config__.get('schemaRegistryApiKey')

    @_builtins.property
    def schema_registry_api_secret(self) -> Optional[str]:
        """
        The Schema Registry Cluster API Secret.
        """
        return __config__.get('schemaRegistryApiSecret')

    @_builtins.property
    def schema_registry_id(self) -> Optional[str]:
        """
        The Schema Registry Cluster ID.
        """
        return __config__.get('schemaRegistryId')

    @_builtins.property
    def schema_registry_rest_endpoint(self) -> Optional[str]:
        """
        The Schema Registry Cluster REST Endpoint.
        """
        return __config__.get('schemaRegistryRestEndpoint')

    @_builtins.property
    def tableflow_api_key(self) -> Optional[str]:
        """
        The Tableflow API Key.
        """
        return __config__.get('tableflowApiKey')

    @_builtins.property
    def tableflow_api_secret(self) -> Optional[str]:
        """
        The Tableflow API Secret.
        """
        return __config__.get('tableflowApiSecret')

