# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSchemaRegistryClustersResult',
    'AwaitableGetSchemaRegistryClustersResult',
    'get_schema_registry_clusters',
    'get_schema_registry_clusters_output',
]

@pulumi.output_type
class GetSchemaRegistryClustersResult:
    """
    A collection of values returned by getSchemaRegistryClusters.
    """
    def __init__(__self__, clusters=None, id=None):
        if clusters and not isinstance(clusters, list):
            raise TypeError("Expected argument 'clusters' to be a list")
        pulumi.set(__self__, "clusters", clusters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def clusters(self) -> Sequence['outputs.GetSchemaRegistryClustersClusterResult']:
        """
        (Required List of Object) List of Schema Registry clusters. Each Schema Registry cluster object exports the following attributes:
        """
        return pulumi.get(self, "clusters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetSchemaRegistryClustersResult(GetSchemaRegistryClustersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSchemaRegistryClustersResult(
            clusters=self.clusters,
            id=self.id)


def get_schema_registry_clusters(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSchemaRegistryClustersResult:
    """
    [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)

    `get_schema_registry_clusters` describes a data source for Schema Registry Clusters.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_confluentcloud as confluentcloud

    main = confluentcloud.get_schema_registry_clusters()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('confluentcloud:index/getSchemaRegistryClusters:getSchemaRegistryClusters', __args__, opts=opts, typ=GetSchemaRegistryClustersResult).value

    return AwaitableGetSchemaRegistryClustersResult(
        clusters=pulumi.get(__ret__, 'clusters'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_schema_registry_clusters)
def get_schema_registry_clusters_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSchemaRegistryClustersResult]:
    """
    [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)

    `get_schema_registry_clusters` describes a data source for Schema Registry Clusters.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_confluentcloud as confluentcloud

    main = confluentcloud.get_schema_registry_clusters()
    ```
    """
    ...
