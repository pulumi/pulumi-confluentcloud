// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the confluent package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// The Confluent Cloud API Key.
	CloudApiKey pulumi.StringPtrOutput `pulumi:"cloudApiKey"`
	// The Confluent Cloud API Secret.
	CloudApiSecret pulumi.StringPtrOutput `pulumi:"cloudApiSecret"`
	// The base endpoint of Confluent Cloud API.
	Endpoint pulumi.StringPtrOutput `pulumi:"endpoint"`
	// The Flink API Key.
	FlinkApiKey pulumi.StringPtrOutput `pulumi:"flinkApiKey"`
	// The Flink API Secret.
	FlinkApiSecret pulumi.StringPtrOutput `pulumi:"flinkApiSecret"`
	// The Flink Compute Pool ID.
	FlinkComputePoolId pulumi.StringPtrOutput `pulumi:"flinkComputePoolId"`
	// The Flink Principal ID.
	FlinkPrincipalId pulumi.StringPtrOutput `pulumi:"flinkPrincipalId"`
	// The Flink REST Endpoint.
	FlinkRestEndpoint pulumi.StringPtrOutput `pulumi:"flinkRestEndpoint"`
	// The Kafka Cluster API Key.
	KafkaApiKey pulumi.StringPtrOutput `pulumi:"kafkaApiKey"`
	// The Kafka Cluster API Secret.
	KafkaApiSecret pulumi.StringPtrOutput `pulumi:"kafkaApiSecret"`
	// The Kafka Cluster ID.
	KafkaId pulumi.StringPtrOutput `pulumi:"kafkaId"`
	// The Kafka Cluster REST Endpoint.
	KafkaRestEndpoint pulumi.StringPtrOutput `pulumi:"kafkaRestEndpoint"`
	// The Schema Registry Cluster API Key.
	SchemaRegistryApiKey pulumi.StringPtrOutput `pulumi:"schemaRegistryApiKey"`
	// The Schema Registry Cluster API Secret.
	SchemaRegistryApiSecret pulumi.StringPtrOutput `pulumi:"schemaRegistryApiSecret"`
	// The Schema Registry Cluster ID.
	SchemaRegistryId pulumi.StringPtrOutput `pulumi:"schemaRegistryId"`
	// The Schema Registry Cluster REST Endpoint.
	SchemaRegistryRestEndpoint pulumi.StringPtrOutput `pulumi:"schemaRegistryRestEndpoint"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.CloudApiKey != nil {
		args.CloudApiKey = pulumi.ToSecret(args.CloudApiKey).(pulumi.StringPtrInput)
	}
	if args.CloudApiSecret != nil {
		args.CloudApiSecret = pulumi.ToSecret(args.CloudApiSecret).(pulumi.StringPtrInput)
	}
	if args.FlinkApiKey != nil {
		args.FlinkApiKey = pulumi.ToSecret(args.FlinkApiKey).(pulumi.StringPtrInput)
	}
	if args.FlinkApiSecret != nil {
		args.FlinkApiSecret = pulumi.ToSecret(args.FlinkApiSecret).(pulumi.StringPtrInput)
	}
	if args.KafkaApiKey != nil {
		args.KafkaApiKey = pulumi.ToSecret(args.KafkaApiKey).(pulumi.StringPtrInput)
	}
	if args.KafkaApiSecret != nil {
		args.KafkaApiSecret = pulumi.ToSecret(args.KafkaApiSecret).(pulumi.StringPtrInput)
	}
	if args.SchemaRegistryApiKey != nil {
		args.SchemaRegistryApiKey = pulumi.ToSecret(args.SchemaRegistryApiKey).(pulumi.StringPtrInput)
	}
	if args.SchemaRegistryApiSecret != nil {
		args.SchemaRegistryApiSecret = pulumi.ToSecret(args.SchemaRegistryApiSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"cloudApiKey",
		"cloudApiSecret",
		"flinkApiKey",
		"flinkApiSecret",
		"kafkaApiKey",
		"kafkaApiSecret",
		"schemaRegistryApiKey",
		"schemaRegistryApiSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:confluentcloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// The Confluent Cloud API Key.
	CloudApiKey *string `pulumi:"cloudApiKey"`
	// The Confluent Cloud API Secret.
	CloudApiSecret *string `pulumi:"cloudApiSecret"`
	// The base endpoint of Confluent Cloud API.
	Endpoint *string `pulumi:"endpoint"`
	// The Flink API Key.
	FlinkApiKey *string `pulumi:"flinkApiKey"`
	// The Flink API Secret.
	FlinkApiSecret *string `pulumi:"flinkApiSecret"`
	// The Flink Compute Pool ID.
	FlinkComputePoolId *string `pulumi:"flinkComputePoolId"`
	// The Flink Principal ID.
	FlinkPrincipalId *string `pulumi:"flinkPrincipalId"`
	// The Flink REST Endpoint.
	FlinkRestEndpoint *string `pulumi:"flinkRestEndpoint"`
	// The Kafka Cluster API Key.
	KafkaApiKey *string `pulumi:"kafkaApiKey"`
	// The Kafka Cluster API Secret.
	KafkaApiSecret *string `pulumi:"kafkaApiSecret"`
	// The Kafka Cluster ID.
	KafkaId *string `pulumi:"kafkaId"`
	// The Kafka Cluster REST Endpoint.
	KafkaRestEndpoint *string `pulumi:"kafkaRestEndpoint"`
	// Maximum number of retries of HTTP client. Defaults to 4.
	MaxRetries *int `pulumi:"maxRetries"`
	// The Schema Registry Cluster API Key.
	SchemaRegistryApiKey *string `pulumi:"schemaRegistryApiKey"`
	// The Schema Registry Cluster API Secret.
	SchemaRegistryApiSecret *string `pulumi:"schemaRegistryApiSecret"`
	// The Schema Registry Cluster ID.
	SchemaRegistryId *string `pulumi:"schemaRegistryId"`
	// The Schema Registry Cluster REST Endpoint.
	SchemaRegistryRestEndpoint *string `pulumi:"schemaRegistryRestEndpoint"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The Confluent Cloud API Key.
	CloudApiKey pulumi.StringPtrInput
	// The Confluent Cloud API Secret.
	CloudApiSecret pulumi.StringPtrInput
	// The base endpoint of Confluent Cloud API.
	Endpoint pulumi.StringPtrInput
	// The Flink API Key.
	FlinkApiKey pulumi.StringPtrInput
	// The Flink API Secret.
	FlinkApiSecret pulumi.StringPtrInput
	// The Flink Compute Pool ID.
	FlinkComputePoolId pulumi.StringPtrInput
	// The Flink Principal ID.
	FlinkPrincipalId pulumi.StringPtrInput
	// The Flink REST Endpoint.
	FlinkRestEndpoint pulumi.StringPtrInput
	// The Kafka Cluster API Key.
	KafkaApiKey pulumi.StringPtrInput
	// The Kafka Cluster API Secret.
	KafkaApiSecret pulumi.StringPtrInput
	// The Kafka Cluster ID.
	KafkaId pulumi.StringPtrInput
	// The Kafka Cluster REST Endpoint.
	KafkaRestEndpoint pulumi.StringPtrInput
	// Maximum number of retries of HTTP client. Defaults to 4.
	MaxRetries pulumi.IntPtrInput
	// The Schema Registry Cluster API Key.
	SchemaRegistryApiKey pulumi.StringPtrInput
	// The Schema Registry Cluster API Secret.
	SchemaRegistryApiSecret pulumi.StringPtrInput
	// The Schema Registry Cluster ID.
	SchemaRegistryId pulumi.StringPtrInput
	// The Schema Registry Cluster REST Endpoint.
	SchemaRegistryRestEndpoint pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The Confluent Cloud API Key.
func (o ProviderOutput) CloudApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.CloudApiKey }).(pulumi.StringPtrOutput)
}

// The Confluent Cloud API Secret.
func (o ProviderOutput) CloudApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.CloudApiSecret }).(pulumi.StringPtrOutput)
}

// The base endpoint of Confluent Cloud API.
func (o ProviderOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The Flink API Key.
func (o ProviderOutput) FlinkApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.FlinkApiKey }).(pulumi.StringPtrOutput)
}

// The Flink API Secret.
func (o ProviderOutput) FlinkApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.FlinkApiSecret }).(pulumi.StringPtrOutput)
}

// The Flink Compute Pool ID.
func (o ProviderOutput) FlinkComputePoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.FlinkComputePoolId }).(pulumi.StringPtrOutput)
}

// The Flink Principal ID.
func (o ProviderOutput) FlinkPrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.FlinkPrincipalId }).(pulumi.StringPtrOutput)
}

// The Flink REST Endpoint.
func (o ProviderOutput) FlinkRestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.FlinkRestEndpoint }).(pulumi.StringPtrOutput)
}

// The Kafka Cluster API Key.
func (o ProviderOutput) KafkaApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.KafkaApiKey }).(pulumi.StringPtrOutput)
}

// The Kafka Cluster API Secret.
func (o ProviderOutput) KafkaApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.KafkaApiSecret }).(pulumi.StringPtrOutput)
}

// The Kafka Cluster ID.
func (o ProviderOutput) KafkaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.KafkaId }).(pulumi.StringPtrOutput)
}

// The Kafka Cluster REST Endpoint.
func (o ProviderOutput) KafkaRestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.KafkaRestEndpoint }).(pulumi.StringPtrOutput)
}

// The Schema Registry Cluster API Key.
func (o ProviderOutput) SchemaRegistryApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SchemaRegistryApiKey }).(pulumi.StringPtrOutput)
}

// The Schema Registry Cluster API Secret.
func (o ProviderOutput) SchemaRegistryApiSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SchemaRegistryApiSecret }).(pulumi.StringPtrOutput)
}

// The Schema Registry Cluster ID.
func (o ProviderOutput) SchemaRegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SchemaRegistryId }).(pulumi.StringPtrOutput)
}

// The Schema Registry Cluster REST Endpoint.
func (o ProviderOutput) SchemaRegistryRestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SchemaRegistryRestEndpoint }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
