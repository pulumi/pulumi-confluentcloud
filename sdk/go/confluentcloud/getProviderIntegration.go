// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
//
// `ProviderIntegration` describes a Confluent Provider Integration data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleUsingId, err := confluentcloud.LookupProviderIntegration(ctx, &confluentcloud.LookupProviderIntegrationArgs{
//				Id: pulumi.StringRef("cspi-4xg0q"),
//				Environment: confluentcloud.GetProviderIntegrationEnvironment{
//					Id: "env-xyz456",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("exampleUsingId", exampleUsingId)
//			exampleUsingName, err := confluentcloud.LookupProviderIntegration(ctx, &confluentcloud.LookupProviderIntegrationArgs{
//				DisplayName: pulumi.StringRef("provider_integration_main"),
//				Environment: confluentcloud.GetProviderIntegrationEnvironment{
//					Id: "env-xyz456",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("exampleUsingName", exampleUsingName)
//			return nil
//		})
//	}
//
// ```
func LookupProviderIntegration(ctx *pulumi.Context, args *LookupProviderIntegrationArgs, opts ...pulumi.InvokeOption) (*LookupProviderIntegrationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProviderIntegrationResult
	err := ctx.Invoke("confluentcloud:index/getProviderIntegration:getProviderIntegration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProviderIntegration.
type LookupProviderIntegrationArgs struct {
	// A human-readable name for the Provider Integration.
	DisplayName *string `pulumi:"displayName"`
	// (Required Configuration Block) supports the following:
	Environment GetProviderIntegrationEnvironment `pulumi:"environment"`
	// The ID of the Provider Integration, for example, `cspi-4xg0q`.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getProviderIntegration.
type LookupProviderIntegrationResult struct {
	// (Required Configuration Block) The AWS-specific Provider Integration config details. It supports the following:
	Aws []GetProviderIntegrationAw `pulumi:"aws"`
	// (Required String) A human-readable name for the Provider Integration.
	DisplayName string `pulumi:"displayName"`
	// (Required Configuration Block) supports the following:
	Environment GetProviderIntegrationEnvironment `pulumi:"environment"`
	// (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
	// (Required List of Strings) List of resource CRNs where this provider integration is being used.
	Usages []string `pulumi:"usages"`
}

func LookupProviderIntegrationOutput(ctx *pulumi.Context, args LookupProviderIntegrationOutputArgs, opts ...pulumi.InvokeOption) LookupProviderIntegrationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProviderIntegrationResultOutput, error) {
			args := v.(LookupProviderIntegrationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProviderIntegrationResult
			secret, err := ctx.InvokePackageRaw("confluentcloud:index/getProviderIntegration:getProviderIntegration", args, &rv, "", opts...)
			if err != nil {
				return LookupProviderIntegrationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProviderIntegrationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProviderIntegrationResultOutput), nil
			}
			return output, nil
		}).(LookupProviderIntegrationResultOutput)
}

// A collection of arguments for invoking getProviderIntegration.
type LookupProviderIntegrationOutputArgs struct {
	// A human-readable name for the Provider Integration.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Required Configuration Block) supports the following:
	Environment GetProviderIntegrationEnvironmentInput `pulumi:"environment"`
	// The ID of the Provider Integration, for example, `cspi-4xg0q`.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupProviderIntegrationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProviderIntegrationArgs)(nil)).Elem()
}

// A collection of values returned by getProviderIntegration.
type LookupProviderIntegrationResultOutput struct{ *pulumi.OutputState }

func (LookupProviderIntegrationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProviderIntegrationResult)(nil)).Elem()
}

func (o LookupProviderIntegrationResultOutput) ToLookupProviderIntegrationResultOutput() LookupProviderIntegrationResultOutput {
	return o
}

func (o LookupProviderIntegrationResultOutput) ToLookupProviderIntegrationResultOutputWithContext(ctx context.Context) LookupProviderIntegrationResultOutput {
	return o
}

// (Required Configuration Block) The AWS-specific Provider Integration config details. It supports the following:
func (o LookupProviderIntegrationResultOutput) Aws() GetProviderIntegrationAwArrayOutput {
	return o.ApplyT(func(v LookupProviderIntegrationResult) []GetProviderIntegrationAw { return v.Aws }).(GetProviderIntegrationAwArrayOutput)
}

// (Required String) A human-readable name for the Provider Integration.
func (o LookupProviderIntegrationResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderIntegrationResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Required Configuration Block) supports the following:
func (o LookupProviderIntegrationResultOutput) Environment() GetProviderIntegrationEnvironmentOutput {
	return o.ApplyT(func(v LookupProviderIntegrationResult) GetProviderIntegrationEnvironment { return v.Environment }).(GetProviderIntegrationEnvironmentOutput)
}

// (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
func (o LookupProviderIntegrationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderIntegrationResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required List of Strings) List of resource CRNs where this provider integration is being used.
func (o LookupProviderIntegrationResultOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProviderIntegrationResult) []string { return v.Usages }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProviderIntegrationResultOutput{})
}
