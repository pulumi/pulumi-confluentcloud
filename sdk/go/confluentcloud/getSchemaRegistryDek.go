// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSchemaRegistryDek(ctx *pulumi.Context, args *LookupSchemaRegistryDekArgs, opts ...pulumi.InvokeOption) (*LookupSchemaRegistryDekResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSchemaRegistryDekResult
	err := ctx.Invoke("confluentcloud:index/getSchemaRegistryDek:getSchemaRegistryDek", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSchemaRegistryDek.
type LookupSchemaRegistryDekArgs struct {
	Algorithm             *string                                    `pulumi:"algorithm"`
	Credentials           *GetSchemaRegistryDekCredentials           `pulumi:"credentials"`
	KekName               string                                     `pulumi:"kekName"`
	RestEndpoint          *string                                    `pulumi:"restEndpoint"`
	SchemaRegistryCluster *GetSchemaRegistryDekSchemaRegistryCluster `pulumi:"schemaRegistryCluster"`
	SubjectName           string                                     `pulumi:"subjectName"`
	Version               *int                                       `pulumi:"version"`
}

// A collection of values returned by getSchemaRegistryDek.
type LookupSchemaRegistryDekResult struct {
	Algorithm            *string                          `pulumi:"algorithm"`
	Credentials          *GetSchemaRegistryDekCredentials `pulumi:"credentials"`
	EncryptedKeyMaterial string                           `pulumi:"encryptedKeyMaterial"`
	HardDelete           bool                             `pulumi:"hardDelete"`
	// The provider-assigned unique ID for this managed resource.
	Id                    string                                     `pulumi:"id"`
	KekName               string                                     `pulumi:"kekName"`
	KeyMaterial           string                                     `pulumi:"keyMaterial"`
	RestEndpoint          *string                                    `pulumi:"restEndpoint"`
	SchemaRegistryCluster *GetSchemaRegistryDekSchemaRegistryCluster `pulumi:"schemaRegistryCluster"`
	SubjectName           string                                     `pulumi:"subjectName"`
	Version               *int                                       `pulumi:"version"`
}

func LookupSchemaRegistryDekOutput(ctx *pulumi.Context, args LookupSchemaRegistryDekOutputArgs, opts ...pulumi.InvokeOption) LookupSchemaRegistryDekResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSchemaRegistryDekResult, error) {
			args := v.(LookupSchemaRegistryDekArgs)
			r, err := LookupSchemaRegistryDek(ctx, &args, opts...)
			var s LookupSchemaRegistryDekResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSchemaRegistryDekResultOutput)
}

// A collection of arguments for invoking getSchemaRegistryDek.
type LookupSchemaRegistryDekOutputArgs struct {
	Algorithm             pulumi.StringPtrInput                             `pulumi:"algorithm"`
	Credentials           GetSchemaRegistryDekCredentialsPtrInput           `pulumi:"credentials"`
	KekName               pulumi.StringInput                                `pulumi:"kekName"`
	RestEndpoint          pulumi.StringPtrInput                             `pulumi:"restEndpoint"`
	SchemaRegistryCluster GetSchemaRegistryDekSchemaRegistryClusterPtrInput `pulumi:"schemaRegistryCluster"`
	SubjectName           pulumi.StringInput                                `pulumi:"subjectName"`
	Version               pulumi.IntPtrInput                                `pulumi:"version"`
}

func (LookupSchemaRegistryDekOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaRegistryDekArgs)(nil)).Elem()
}

// A collection of values returned by getSchemaRegistryDek.
type LookupSchemaRegistryDekResultOutput struct{ *pulumi.OutputState }

func (LookupSchemaRegistryDekResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSchemaRegistryDekResult)(nil)).Elem()
}

func (o LookupSchemaRegistryDekResultOutput) ToLookupSchemaRegistryDekResultOutput() LookupSchemaRegistryDekResultOutput {
	return o
}

func (o LookupSchemaRegistryDekResultOutput) ToLookupSchemaRegistryDekResultOutputWithContext(ctx context.Context) LookupSchemaRegistryDekResultOutput {
	return o
}

func (o LookupSchemaRegistryDekResultOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o LookupSchemaRegistryDekResultOutput) Credentials() GetSchemaRegistryDekCredentialsPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) *GetSchemaRegistryDekCredentials { return v.Credentials }).(GetSchemaRegistryDekCredentialsPtrOutput)
}

func (o LookupSchemaRegistryDekResultOutput) EncryptedKeyMaterial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) string { return v.EncryptedKeyMaterial }).(pulumi.StringOutput)
}

func (o LookupSchemaRegistryDekResultOutput) HardDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) bool { return v.HardDelete }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSchemaRegistryDekResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSchemaRegistryDekResultOutput) KekName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) string { return v.KekName }).(pulumi.StringOutput)
}

func (o LookupSchemaRegistryDekResultOutput) KeyMaterial() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) string { return v.KeyMaterial }).(pulumi.StringOutput)
}

func (o LookupSchemaRegistryDekResultOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

func (o LookupSchemaRegistryDekResultOutput) SchemaRegistryCluster() GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) *GetSchemaRegistryDekSchemaRegistryCluster {
		return v.SchemaRegistryCluster
	}).(GetSchemaRegistryDekSchemaRegistryClusterPtrOutput)
}

func (o LookupSchemaRegistryDekResultOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) string { return v.SubjectName }).(pulumi.StringOutput)
}

func (o LookupSchemaRegistryDekResultOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupSchemaRegistryDekResult) *int { return v.Version }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSchemaRegistryDekResultOutput{})
}
