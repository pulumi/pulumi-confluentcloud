// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Oauth struct {
	// OAuth existing static access token already fetched from external Identity Provider.
	OauthExternalAccessToken *string `pulumi:"oauthExternalAccessToken"`
	// OAuth token application client id from external Identity Provider.
	OauthExternalClientId *string `pulumi:"oauthExternalClientId"`
	// OAuth token application client secret from external Identity Provider.
	OauthExternalClientSecret *string `pulumi:"oauthExternalClientSecret"`
	// OAuth client application scope, this is a required field when using Microsoft Azure Entra ID as the identity provider.
	OauthExternalTokenScope *string `pulumi:"oauthExternalTokenScope"`
	// OAuth token URL to fetch access token from external Identity Provider.
	OauthExternalTokenUrl *string `pulumi:"oauthExternalTokenUrl"`
	// OAuth identity pool id used for processing external token and exchange STS token, registered with Confluent Cloud.
	OauthIdentityPoolId string `pulumi:"oauthIdentityPoolId"`
	// OAuth STS access token expired in second from Confluent Cloud
	OauthStsTokenExpiredInSeconds *string `pulumi:"oauthStsTokenExpiredInSeconds"`
}

// OauthInput is an input type that accepts OauthArgs and OauthOutput values.
// You can construct a concrete instance of `OauthInput` via:
//
//	OauthArgs{...}
type OauthInput interface {
	pulumi.Input

	ToOauthOutput() OauthOutput
	ToOauthOutputWithContext(context.Context) OauthOutput
}

type OauthArgs struct {
	// OAuth existing static access token already fetched from external Identity Provider.
	OauthExternalAccessToken pulumi.StringPtrInput `pulumi:"oauthExternalAccessToken"`
	// OAuth token application client id from external Identity Provider.
	OauthExternalClientId pulumi.StringPtrInput `pulumi:"oauthExternalClientId"`
	// OAuth token application client secret from external Identity Provider.
	OauthExternalClientSecret pulumi.StringPtrInput `pulumi:"oauthExternalClientSecret"`
	// OAuth client application scope, this is a required field when using Microsoft Azure Entra ID as the identity provider.
	OauthExternalTokenScope pulumi.StringPtrInput `pulumi:"oauthExternalTokenScope"`
	// OAuth token URL to fetch access token from external Identity Provider.
	OauthExternalTokenUrl pulumi.StringPtrInput `pulumi:"oauthExternalTokenUrl"`
	// OAuth identity pool id used for processing external token and exchange STS token, registered with Confluent Cloud.
	OauthIdentityPoolId pulumi.StringInput `pulumi:"oauthIdentityPoolId"`
	// OAuth STS access token expired in second from Confluent Cloud
	OauthStsTokenExpiredInSeconds pulumi.StringPtrInput `pulumi:"oauthStsTokenExpiredInSeconds"`
}

func (OauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Oauth)(nil)).Elem()
}

func (i OauthArgs) ToOauthOutput() OauthOutput {
	return i.ToOauthOutputWithContext(context.Background())
}

func (i OauthArgs) ToOauthOutputWithContext(ctx context.Context) OauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OauthOutput)
}

type OauthOutput struct{ *pulumi.OutputState }

func (OauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Oauth)(nil)).Elem()
}

func (o OauthOutput) ToOauthOutput() OauthOutput {
	return o
}

func (o OauthOutput) ToOauthOutputWithContext(ctx context.Context) OauthOutput {
	return o
}

// OAuth existing static access token already fetched from external Identity Provider.
func (o OauthOutput) OauthExternalAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Oauth) *string { return v.OauthExternalAccessToken }).(pulumi.StringPtrOutput)
}

// OAuth token application client id from external Identity Provider.
func (o OauthOutput) OauthExternalClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Oauth) *string { return v.OauthExternalClientId }).(pulumi.StringPtrOutput)
}

// OAuth token application client secret from external Identity Provider.
func (o OauthOutput) OauthExternalClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Oauth) *string { return v.OauthExternalClientSecret }).(pulumi.StringPtrOutput)
}

// OAuth client application scope, this is a required field when using Microsoft Azure Entra ID as the identity provider.
func (o OauthOutput) OauthExternalTokenScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Oauth) *string { return v.OauthExternalTokenScope }).(pulumi.StringPtrOutput)
}

// OAuth token URL to fetch access token from external Identity Provider.
func (o OauthOutput) OauthExternalTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Oauth) *string { return v.OauthExternalTokenUrl }).(pulumi.StringPtrOutput)
}

// OAuth identity pool id used for processing external token and exchange STS token, registered with Confluent Cloud.
func (o OauthOutput) OauthIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v Oauth) string { return v.OauthIdentityPoolId }).(pulumi.StringOutput)
}

// OAuth STS access token expired in second from Confluent Cloud
func (o OauthOutput) OauthStsTokenExpiredInSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Oauth) *string { return v.OauthStsTokenExpiredInSeconds }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OauthInput)(nil)).Elem(), OauthArgs{})
	pulumi.RegisterOutputType(OauthOutput{})
}
