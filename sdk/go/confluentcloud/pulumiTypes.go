// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiKeyManagedResource struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion  string                           `pulumi:"apiVersion"`
	Environment ApiKeyManagedResourceEnvironment `pulumi:"environment"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind string `pulumi:"kind"`
}

// ApiKeyManagedResourceInput is an input type that accepts ApiKeyManagedResourceArgs and ApiKeyManagedResourceOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceInput` via:
//
//	ApiKeyManagedResourceArgs{...}
type ApiKeyManagedResourceInput interface {
	pulumi.Input

	ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput
	ToApiKeyManagedResourceOutputWithContext(context.Context) ApiKeyManagedResourceOutput
}

type ApiKeyManagedResourceArgs struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion  pulumi.StringInput                    `pulumi:"apiVersion"`
	Environment ApiKeyManagedResourceEnvironmentInput `pulumi:"environment"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ApiKeyManagedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResource)(nil)).Elem()
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput {
	return i.ToApiKeyManagedResourceOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourceOutputWithContext(ctx context.Context) ApiKeyManagedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceOutput)
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return i.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceOutput).ToApiKeyManagedResourcePtrOutputWithContext(ctx)
}

// ApiKeyManagedResourcePtrInput is an input type that accepts ApiKeyManagedResourceArgs, ApiKeyManagedResourcePtr and ApiKeyManagedResourcePtrOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourcePtrInput` via:
//
//	        ApiKeyManagedResourceArgs{...}
//
//	or:
//
//	        nil
type ApiKeyManagedResourcePtrInput interface {
	pulumi.Input

	ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput
	ToApiKeyManagedResourcePtrOutputWithContext(context.Context) ApiKeyManagedResourcePtrOutput
}

type apiKeyManagedResourcePtrType ApiKeyManagedResourceArgs

func ApiKeyManagedResourcePtr(v *ApiKeyManagedResourceArgs) ApiKeyManagedResourcePtrInput {
	return (*apiKeyManagedResourcePtrType)(v)
}

func (*apiKeyManagedResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResource)(nil)).Elem()
}

func (i *apiKeyManagedResourcePtrType) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return i.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (i *apiKeyManagedResourcePtrType) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourcePtrOutput)
}

type ApiKeyManagedResourceOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResource)(nil)).Elem()
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput {
	return o
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourceOutputWithContext(ctx context.Context) ApiKeyManagedResourceOutput {
	return o
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return o.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyManagedResource) *ApiKeyManagedResource {
		return &v
	}).(ApiKeyManagedResourcePtrOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyManagedResourceOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o ApiKeyManagedResourceOutput) Environment() ApiKeyManagedResourceEnvironmentOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) ApiKeyManagedResourceEnvironment { return v.Environment }).(ApiKeyManagedResourceEnvironmentOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyManagedResourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.Kind }).(pulumi.StringOutput)
}

type ApiKeyManagedResourcePtrOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResource)(nil)).Elem()
}

func (o ApiKeyManagedResourcePtrOutput) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return o
}

func (o ApiKeyManagedResourcePtrOutput) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return o
}

func (o ApiKeyManagedResourcePtrOutput) Elem() ApiKeyManagedResourceOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) ApiKeyManagedResource {
		if v != nil {
			return *v
		}
		var ret ApiKeyManagedResource
		return ret
	}).(ApiKeyManagedResourceOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyManagedResourcePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o ApiKeyManagedResourcePtrOutput) Environment() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *ApiKeyManagedResourceEnvironment {
		if v == nil {
			return nil
		}
		return &v.Environment
	}).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyManagedResourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

type ApiKeyManagedResourceEnvironment struct {
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// ApiKeyManagedResourceEnvironmentInput is an input type that accepts ApiKeyManagedResourceEnvironmentArgs and ApiKeyManagedResourceEnvironmentOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceEnvironmentInput` via:
//
//	ApiKeyManagedResourceEnvironmentArgs{...}
type ApiKeyManagedResourceEnvironmentInput interface {
	pulumi.Input

	ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput
	ToApiKeyManagedResourceEnvironmentOutputWithContext(context.Context) ApiKeyManagedResourceEnvironmentOutput
}

type ApiKeyManagedResourceEnvironmentArgs struct {
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ApiKeyManagedResourceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput {
	return i.ToApiKeyManagedResourceEnvironmentOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentOutput)
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return i.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentOutput).ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx)
}

// ApiKeyManagedResourceEnvironmentPtrInput is an input type that accepts ApiKeyManagedResourceEnvironmentArgs, ApiKeyManagedResourceEnvironmentPtr and ApiKeyManagedResourceEnvironmentPtrOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceEnvironmentPtrInput` via:
//
//	        ApiKeyManagedResourceEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ApiKeyManagedResourceEnvironmentPtrInput interface {
	pulumi.Input

	ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput
	ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Context) ApiKeyManagedResourceEnvironmentPtrOutput
}

type apiKeyManagedResourceEnvironmentPtrType ApiKeyManagedResourceEnvironmentArgs

func ApiKeyManagedResourceEnvironmentPtr(v *ApiKeyManagedResourceEnvironmentArgs) ApiKeyManagedResourceEnvironmentPtrInput {
	return (*apiKeyManagedResourceEnvironmentPtrType)(v)
}

func (*apiKeyManagedResourceEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (i *apiKeyManagedResourceEnvironmentPtrType) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return i.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (i *apiKeyManagedResourceEnvironmentPtrType) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

type ApiKeyManagedResourceEnvironmentOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyManagedResourceEnvironment) *ApiKeyManagedResourceEnvironment {
		return &v
	}).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResourceEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type ApiKeyManagedResourceEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) Elem() ApiKeyManagedResourceEnvironmentOutput {
	return o.ApplyT(func(v *ApiKeyManagedResourceEnvironment) ApiKeyManagedResourceEnvironment {
		if v != nil {
			return *v
		}
		var ret ApiKeyManagedResourceEnvironment
		return ret
	}).(ApiKeyManagedResourceEnvironmentOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResourceEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ApiKeyOwner struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion string `pulumi:"apiVersion"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind string `pulumi:"kind"`
}

// ApiKeyOwnerInput is an input type that accepts ApiKeyOwnerArgs and ApiKeyOwnerOutput values.
// You can construct a concrete instance of `ApiKeyOwnerInput` via:
//
//	ApiKeyOwnerArgs{...}
type ApiKeyOwnerInput interface {
	pulumi.Input

	ToApiKeyOwnerOutput() ApiKeyOwnerOutput
	ToApiKeyOwnerOutputWithContext(context.Context) ApiKeyOwnerOutput
}

type ApiKeyOwnerArgs struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ApiKeyOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyOwner)(nil)).Elem()
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerOutput() ApiKeyOwnerOutput {
	return i.ToApiKeyOwnerOutputWithContext(context.Background())
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerOutputWithContext(ctx context.Context) ApiKeyOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerOutput)
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return i.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerOutput).ToApiKeyOwnerPtrOutputWithContext(ctx)
}

// ApiKeyOwnerPtrInput is an input type that accepts ApiKeyOwnerArgs, ApiKeyOwnerPtr and ApiKeyOwnerPtrOutput values.
// You can construct a concrete instance of `ApiKeyOwnerPtrInput` via:
//
//	        ApiKeyOwnerArgs{...}
//
//	or:
//
//	        nil
type ApiKeyOwnerPtrInput interface {
	pulumi.Input

	ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput
	ToApiKeyOwnerPtrOutputWithContext(context.Context) ApiKeyOwnerPtrOutput
}

type apiKeyOwnerPtrType ApiKeyOwnerArgs

func ApiKeyOwnerPtr(v *ApiKeyOwnerArgs) ApiKeyOwnerPtrInput {
	return (*apiKeyOwnerPtrType)(v)
}

func (*apiKeyOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyOwner)(nil)).Elem()
}

func (i *apiKeyOwnerPtrType) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return i.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (i *apiKeyOwnerPtrType) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerPtrOutput)
}

type ApiKeyOwnerOutput struct{ *pulumi.OutputState }

func (ApiKeyOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyOwner)(nil)).Elem()
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerOutput() ApiKeyOwnerOutput {
	return o
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerOutputWithContext(ctx context.Context) ApiKeyOwnerOutput {
	return o
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return o.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyOwner) *ApiKeyOwner {
		return &v
	}).(ApiKeyOwnerPtrOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyOwnerOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyOwnerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyOwnerOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.Kind }).(pulumi.StringOutput)
}

type ApiKeyOwnerPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyOwner)(nil)).Elem()
}

func (o ApiKeyOwnerPtrOutput) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return o
}

func (o ApiKeyOwnerPtrOutput) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return o
}

func (o ApiKeyOwnerPtrOutput) Elem() ApiKeyOwnerOutput {
	return o.ApplyT(func(v *ApiKeyOwner) ApiKeyOwner {
		if v != nil {
			return *v
		}
		var ret ApiKeyOwner
		return ret
	}).(ApiKeyOwnerOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyOwnerPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyOwnerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyOwnerPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkDestinationKafkaCluster struct {
	// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint *string                                        `pulumi:"bootstrapEndpoint"`
	Credentials       *ClusterLinkDestinationKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// ClusterLinkDestinationKafkaClusterInput is an input type that accepts ClusterLinkDestinationKafkaClusterArgs and ClusterLinkDestinationKafkaClusterOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterInput` via:
//
//	ClusterLinkDestinationKafkaClusterArgs{...}
type ClusterLinkDestinationKafkaClusterInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterOutput() ClusterLinkDestinationKafkaClusterOutput
	ToClusterLinkDestinationKafkaClusterOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterOutput
}

type ClusterLinkDestinationKafkaClusterArgs struct {
	// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint pulumi.StringPtrInput                                 `pulumi:"bootstrapEndpoint"`
	Credentials       ClusterLinkDestinationKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (ClusterLinkDestinationKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterOutput() ClusterLinkDestinationKafkaClusterOutput {
	return i.ToClusterLinkDestinationKafkaClusterOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterOutput)
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterOutput).ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx)
}

// ClusterLinkDestinationKafkaClusterPtrInput is an input type that accepts ClusterLinkDestinationKafkaClusterArgs, ClusterLinkDestinationKafkaClusterPtr and ClusterLinkDestinationKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterPtrInput` via:
//
//	        ClusterLinkDestinationKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkDestinationKafkaClusterPtrInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput
	ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterPtrOutput
}

type clusterLinkDestinationKafkaClusterPtrType ClusterLinkDestinationKafkaClusterArgs

func ClusterLinkDestinationKafkaClusterPtr(v *ClusterLinkDestinationKafkaClusterArgs) ClusterLinkDestinationKafkaClusterPtrInput {
	return (*clusterLinkDestinationKafkaClusterPtrType)(v)
}

func (*clusterLinkDestinationKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (i *clusterLinkDestinationKafkaClusterPtrType) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *clusterLinkDestinationKafkaClusterPtrType) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterPtrOutput)
}

type ClusterLinkDestinationKafkaClusterOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterOutput() ClusterLinkDestinationKafkaClusterOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return o.ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkDestinationKafkaCluster) *ClusterLinkDestinationKafkaCluster {
		return &v
	}).(ClusterLinkDestinationKafkaClusterPtrOutput)
}

// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkDestinationKafkaClusterOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) *string { return v.BootstrapEndpoint }).(pulumi.StringPtrOutput)
}

func (o ClusterLinkDestinationKafkaClusterOutput) Credentials() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) *ClusterLinkDestinationKafkaClusterCredentials {
		return v.Credentials
	}).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkDestinationKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkDestinationKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterLinkDestinationKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) Elem() ClusterLinkDestinationKafkaClusterOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) ClusterLinkDestinationKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ClusterLinkDestinationKafkaCluster
		return ret
	}).(ClusterLinkDestinationKafkaClusterOutput)
}

// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkDestinationKafkaClusterPtrOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) Credentials() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *ClusterLinkDestinationKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkDestinationKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkDestinationKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkDestinationKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// ClusterLinkDestinationKafkaClusterCredentialsInput is an input type that accepts ClusterLinkDestinationKafkaClusterCredentialsArgs and ClusterLinkDestinationKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterCredentialsInput` via:
//
//	ClusterLinkDestinationKafkaClusterCredentialsArgs{...}
type ClusterLinkDestinationKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterCredentialsOutput() ClusterLinkDestinationKafkaClusterCredentialsOutput
	ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterCredentialsOutput
}

type ClusterLinkDestinationKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterLinkDestinationKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsOutput() ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return i.ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterCredentialsOutput)
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterCredentialsOutput).ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// ClusterLinkDestinationKafkaClusterCredentialsPtrInput is an input type that accepts ClusterLinkDestinationKafkaClusterCredentialsArgs, ClusterLinkDestinationKafkaClusterCredentialsPtr and ClusterLinkDestinationKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterCredentialsPtrInput` via:
//
//	        ClusterLinkDestinationKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkDestinationKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput
	ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput
}

type clusterLinkDestinationKafkaClusterCredentialsPtrType ClusterLinkDestinationKafkaClusterCredentialsArgs

func ClusterLinkDestinationKafkaClusterCredentialsPtr(v *ClusterLinkDestinationKafkaClusterCredentialsArgs) ClusterLinkDestinationKafkaClusterCredentialsPtrInput {
	return (*clusterLinkDestinationKafkaClusterCredentialsPtrType)(v)
}

func (*clusterLinkDestinationKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (i *clusterLinkDestinationKafkaClusterCredentialsPtrType) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterLinkDestinationKafkaClusterCredentialsPtrType) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

type ClusterLinkDestinationKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsOutput() ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkDestinationKafkaClusterCredentials) *ClusterLinkDestinationKafkaClusterCredentials {
		return &v
	}).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterLinkDestinationKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) Elem() ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaClusterCredentials) ClusterLinkDestinationKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterLinkDestinationKafkaClusterCredentials
		return ret
	}).(ClusterLinkDestinationKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkSourceKafkaCluster struct {
	// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint *string                                   `pulumi:"bootstrapEndpoint"`
	Credentials       *ClusterLinkSourceKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// ClusterLinkSourceKafkaClusterInput is an input type that accepts ClusterLinkSourceKafkaClusterArgs and ClusterLinkSourceKafkaClusterOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterInput` via:
//
//	ClusterLinkSourceKafkaClusterArgs{...}
type ClusterLinkSourceKafkaClusterInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterOutput() ClusterLinkSourceKafkaClusterOutput
	ToClusterLinkSourceKafkaClusterOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterOutput
}

type ClusterLinkSourceKafkaClusterArgs struct {
	// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint pulumi.StringPtrInput                            `pulumi:"bootstrapEndpoint"`
	Credentials       ClusterLinkSourceKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (ClusterLinkSourceKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterOutput() ClusterLinkSourceKafkaClusterOutput {
	return i.ToClusterLinkSourceKafkaClusterOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterOutput)
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterOutput).ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx)
}

// ClusterLinkSourceKafkaClusterPtrInput is an input type that accepts ClusterLinkSourceKafkaClusterArgs, ClusterLinkSourceKafkaClusterPtr and ClusterLinkSourceKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterPtrInput` via:
//
//	        ClusterLinkSourceKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkSourceKafkaClusterPtrInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput
	ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterPtrOutput
}

type clusterLinkSourceKafkaClusterPtrType ClusterLinkSourceKafkaClusterArgs

func ClusterLinkSourceKafkaClusterPtr(v *ClusterLinkSourceKafkaClusterArgs) ClusterLinkSourceKafkaClusterPtrInput {
	return (*clusterLinkSourceKafkaClusterPtrType)(v)
}

func (*clusterLinkSourceKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (i *clusterLinkSourceKafkaClusterPtrType) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *clusterLinkSourceKafkaClusterPtrType) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterPtrOutput)
}

type ClusterLinkSourceKafkaClusterOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterOutput() ClusterLinkSourceKafkaClusterOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return o.ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkSourceKafkaCluster) *ClusterLinkSourceKafkaCluster {
		return &v
	}).(ClusterLinkSourceKafkaClusterPtrOutput)
}

// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkSourceKafkaClusterOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) *string { return v.BootstrapEndpoint }).(pulumi.StringPtrOutput)
}

func (o ClusterLinkSourceKafkaClusterOutput) Credentials() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) *ClusterLinkSourceKafkaClusterCredentials { return v.Credentials }).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkSourceKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkSourceKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterLinkSourceKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) Elem() ClusterLinkSourceKafkaClusterOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) ClusterLinkSourceKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ClusterLinkSourceKafkaCluster
		return ret
	}).(ClusterLinkSourceKafkaClusterOutput)
}

// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkSourceKafkaClusterPtrOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) Credentials() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *ClusterLinkSourceKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkSourceKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkSourceKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkSourceKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// ClusterLinkSourceKafkaClusterCredentialsInput is an input type that accepts ClusterLinkSourceKafkaClusterCredentialsArgs and ClusterLinkSourceKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterCredentialsInput` via:
//
//	ClusterLinkSourceKafkaClusterCredentialsArgs{...}
type ClusterLinkSourceKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterCredentialsOutput() ClusterLinkSourceKafkaClusterCredentialsOutput
	ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterCredentialsOutput
}

type ClusterLinkSourceKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterLinkSourceKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsOutput() ClusterLinkSourceKafkaClusterCredentialsOutput {
	return i.ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterCredentialsOutput)
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterCredentialsOutput).ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// ClusterLinkSourceKafkaClusterCredentialsPtrInput is an input type that accepts ClusterLinkSourceKafkaClusterCredentialsArgs, ClusterLinkSourceKafkaClusterCredentialsPtr and ClusterLinkSourceKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterCredentialsPtrInput` via:
//
//	        ClusterLinkSourceKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkSourceKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput
	ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput
}

type clusterLinkSourceKafkaClusterCredentialsPtrType ClusterLinkSourceKafkaClusterCredentialsArgs

func ClusterLinkSourceKafkaClusterCredentialsPtr(v *ClusterLinkSourceKafkaClusterCredentialsArgs) ClusterLinkSourceKafkaClusterCredentialsPtrInput {
	return (*clusterLinkSourceKafkaClusterCredentialsPtrType)(v)
}

func (*clusterLinkSourceKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (i *clusterLinkSourceKafkaClusterCredentialsPtrType) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterLinkSourceKafkaClusterCredentialsPtrType) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

type ClusterLinkSourceKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsOutput() ClusterLinkSourceKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkSourceKafkaClusterCredentials) *ClusterLinkSourceKafkaClusterCredentials {
		return &v
	}).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o ClusterLinkSourceKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o ClusterLinkSourceKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterLinkSourceKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) Elem() ClusterLinkSourceKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaClusterCredentials) ClusterLinkSourceKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterLinkSourceKafkaClusterCredentials
		return ret
	}).(ClusterLinkSourceKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type ConnectorEnvironment struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// ConnectorEnvironmentInput is an input type that accepts ConnectorEnvironmentArgs and ConnectorEnvironmentOutput values.
// You can construct a concrete instance of `ConnectorEnvironmentInput` via:
//
//	ConnectorEnvironmentArgs{...}
type ConnectorEnvironmentInput interface {
	pulumi.Input

	ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput
	ToConnectorEnvironmentOutputWithContext(context.Context) ConnectorEnvironmentOutput
}

type ConnectorEnvironmentArgs struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ConnectorEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorEnvironment)(nil)).Elem()
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput {
	return i.ToConnectorEnvironmentOutputWithContext(context.Background())
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentOutputWithContext(ctx context.Context) ConnectorEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentOutput)
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return i.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentOutput).ToConnectorEnvironmentPtrOutputWithContext(ctx)
}

// ConnectorEnvironmentPtrInput is an input type that accepts ConnectorEnvironmentArgs, ConnectorEnvironmentPtr and ConnectorEnvironmentPtrOutput values.
// You can construct a concrete instance of `ConnectorEnvironmentPtrInput` via:
//
//	        ConnectorEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ConnectorEnvironmentPtrInput interface {
	pulumi.Input

	ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput
	ToConnectorEnvironmentPtrOutputWithContext(context.Context) ConnectorEnvironmentPtrOutput
}

type connectorEnvironmentPtrType ConnectorEnvironmentArgs

func ConnectorEnvironmentPtr(v *ConnectorEnvironmentArgs) ConnectorEnvironmentPtrInput {
	return (*connectorEnvironmentPtrType)(v)
}

func (*connectorEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorEnvironment)(nil)).Elem()
}

func (i *connectorEnvironmentPtrType) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return i.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (i *connectorEnvironmentPtrType) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentPtrOutput)
}

type ConnectorEnvironmentOutput struct{ *pulumi.OutputState }

func (ConnectorEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorEnvironment)(nil)).Elem()
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput {
	return o
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentOutputWithContext(ctx context.Context) ConnectorEnvironmentOutput {
	return o
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return o.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorEnvironment) *ConnectorEnvironment {
		return &v
	}).(ConnectorEnvironmentPtrOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type ConnectorEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ConnectorEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorEnvironment)(nil)).Elem()
}

func (o ConnectorEnvironmentPtrOutput) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return o
}

func (o ConnectorEnvironmentPtrOutput) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return o
}

func (o ConnectorEnvironmentPtrOutput) Elem() ConnectorEnvironmentOutput {
	return o.ApplyT(func(v *ConnectorEnvironment) ConnectorEnvironment {
		if v != nil {
			return *v
		}
		var ret ConnectorEnvironment
		return ret
	}).(ConnectorEnvironmentOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ConnectorKafkaCluster struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// ConnectorKafkaClusterInput is an input type that accepts ConnectorKafkaClusterArgs and ConnectorKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterInput` via:
//
//	ConnectorKafkaClusterArgs{...}
type ConnectorKafkaClusterInput interface {
	pulumi.Input

	ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput
	ToConnectorKafkaClusterOutputWithContext(context.Context) ConnectorKafkaClusterOutput
}

type ConnectorKafkaClusterArgs struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ConnectorKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return i.ToConnectorKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput)
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput).ToConnectorKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterPtrInput is an input type that accepts ConnectorKafkaClusterArgs, ConnectorKafkaClusterPtr and ConnectorKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterPtrInput` via:
//
//	        ConnectorKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ConnectorKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput
	ToConnectorKafkaClusterPtrOutputWithContext(context.Context) ConnectorKafkaClusterPtrOutput
}

type connectorKafkaClusterPtrType ConnectorKafkaClusterArgs

func ConnectorKafkaClusterPtr(v *ConnectorKafkaClusterArgs) ConnectorKafkaClusterPtrInput {
	return (*connectorKafkaClusterPtrType)(v)
}

func (*connectorKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterPtrOutput)
}

type ConnectorKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaCluster) *ConnectorKafkaCluster {
		return &v
	}).(ConnectorKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type ConnectorKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) Elem() ConnectorKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) ConnectorKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaCluster
		return ret
	}).(ConnectorKafkaClusterOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type IdentityPoolIdentityProvider struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	Id string `pulumi:"id"`
}

// IdentityPoolIdentityProviderInput is an input type that accepts IdentityPoolIdentityProviderArgs and IdentityPoolIdentityProviderOutput values.
// You can construct a concrete instance of `IdentityPoolIdentityProviderInput` via:
//
//	IdentityPoolIdentityProviderArgs{...}
type IdentityPoolIdentityProviderInput interface {
	pulumi.Input

	ToIdentityPoolIdentityProviderOutput() IdentityPoolIdentityProviderOutput
	ToIdentityPoolIdentityProviderOutputWithContext(context.Context) IdentityPoolIdentityProviderOutput
}

type IdentityPoolIdentityProviderArgs struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (IdentityPoolIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderOutput() IdentityPoolIdentityProviderOutput {
	return i.ToIdentityPoolIdentityProviderOutputWithContext(context.Background())
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolIdentityProviderOutput)
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return i.ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Background())
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolIdentityProviderOutput).ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx)
}

// IdentityPoolIdentityProviderPtrInput is an input type that accepts IdentityPoolIdentityProviderArgs, IdentityPoolIdentityProviderPtr and IdentityPoolIdentityProviderPtrOutput values.
// You can construct a concrete instance of `IdentityPoolIdentityProviderPtrInput` via:
//
//	        IdentityPoolIdentityProviderArgs{...}
//
//	or:
//
//	        nil
type IdentityPoolIdentityProviderPtrInput interface {
	pulumi.Input

	ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput
	ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Context) IdentityPoolIdentityProviderPtrOutput
}

type identityPoolIdentityProviderPtrType IdentityPoolIdentityProviderArgs

func IdentityPoolIdentityProviderPtr(v *IdentityPoolIdentityProviderArgs) IdentityPoolIdentityProviderPtrInput {
	return (*identityPoolIdentityProviderPtrType)(v)
}

func (*identityPoolIdentityProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolIdentityProvider)(nil)).Elem()
}

func (i *identityPoolIdentityProviderPtrType) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return i.ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Background())
}

func (i *identityPoolIdentityProviderPtrType) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolIdentityProviderPtrOutput)
}

type IdentityPoolIdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityPoolIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderOutput() IdentityPoolIdentityProviderOutput {
	return o
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderOutput {
	return o
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return o.ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Background())
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityPoolIdentityProvider) *IdentityPoolIdentityProvider {
		return &v
	}).(IdentityPoolIdentityProviderPtrOutput)
}

// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
func (o IdentityPoolIdentityProviderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolIdentityProvider) string { return v.Id }).(pulumi.StringOutput)
}

type IdentityPoolIdentityProviderPtrOutput struct{ *pulumi.OutputState }

func (IdentityPoolIdentityProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolIdentityProviderPtrOutput) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return o
}

func (o IdentityPoolIdentityProviderPtrOutput) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return o
}

func (o IdentityPoolIdentityProviderPtrOutput) Elem() IdentityPoolIdentityProviderOutput {
	return o.ApplyT(func(v *IdentityPoolIdentityProvider) IdentityPoolIdentityProvider {
		if v != nil {
			return *v
		}
		var ret IdentityPoolIdentityProvider
		return ret
	}).(IdentityPoolIdentityProviderOutput)
}

// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
func (o IdentityPoolIdentityProviderPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPoolIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaAclCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaAclCredentialsInput is an input type that accepts KafkaAclCredentialsArgs and KafkaAclCredentialsOutput values.
// You can construct a concrete instance of `KafkaAclCredentialsInput` via:
//
//	KafkaAclCredentialsArgs{...}
type KafkaAclCredentialsInput interface {
	pulumi.Input

	ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput
	ToKafkaAclCredentialsOutputWithContext(context.Context) KafkaAclCredentialsOutput
}

type KafkaAclCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaAclCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclCredentials)(nil)).Elem()
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput {
	return i.ToKafkaAclCredentialsOutputWithContext(context.Background())
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsOutputWithContext(ctx context.Context) KafkaAclCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsOutput)
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return i.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsOutput).ToKafkaAclCredentialsPtrOutputWithContext(ctx)
}

// KafkaAclCredentialsPtrInput is an input type that accepts KafkaAclCredentialsArgs, KafkaAclCredentialsPtr and KafkaAclCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaAclCredentialsPtrInput` via:
//
//	        KafkaAclCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaAclCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput
	ToKafkaAclCredentialsPtrOutputWithContext(context.Context) KafkaAclCredentialsPtrOutput
}

type kafkaAclCredentialsPtrType KafkaAclCredentialsArgs

func KafkaAclCredentialsPtr(v *KafkaAclCredentialsArgs) KafkaAclCredentialsPtrInput {
	return (*kafkaAclCredentialsPtrType)(v)
}

func (*kafkaAclCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclCredentials)(nil)).Elem()
}

func (i *kafkaAclCredentialsPtrType) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return i.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaAclCredentialsPtrType) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsPtrOutput)
}

type KafkaAclCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaAclCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclCredentials)(nil)).Elem()
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput {
	return o
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsOutputWithContext(ctx context.Context) KafkaAclCredentialsOutput {
	return o
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return o.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaAclCredentials) *KafkaAclCredentials {
		return &v
	}).(KafkaAclCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaAclCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaAclCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaAclCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaAclCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclCredentials)(nil)).Elem()
}

func (o KafkaAclCredentialsPtrOutput) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return o
}

func (o KafkaAclCredentialsPtrOutput) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return o
}

func (o KafkaAclCredentialsPtrOutput) Elem() KafkaAclCredentialsOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) KafkaAclCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaAclCredentials
		return ret
	}).(KafkaAclCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaAclCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaAclCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaAclKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaAclKafkaClusterInput is an input type that accepts KafkaAclKafkaClusterArgs and KafkaAclKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaAclKafkaClusterInput` via:
//
//	KafkaAclKafkaClusterArgs{...}
type KafkaAclKafkaClusterInput interface {
	pulumi.Input

	ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput
	ToKafkaAclKafkaClusterOutputWithContext(context.Context) KafkaAclKafkaClusterOutput
}

type KafkaAclKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaAclKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclKafkaCluster)(nil)).Elem()
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput {
	return i.ToKafkaAclKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterOutputWithContext(ctx context.Context) KafkaAclKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterOutput)
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return i.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterOutput).ToKafkaAclKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaAclKafkaClusterPtrInput is an input type that accepts KafkaAclKafkaClusterArgs, KafkaAclKafkaClusterPtr and KafkaAclKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaAclKafkaClusterPtrInput` via:
//
//	        KafkaAclKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaAclKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput
	ToKafkaAclKafkaClusterPtrOutputWithContext(context.Context) KafkaAclKafkaClusterPtrOutput
}

type kafkaAclKafkaClusterPtrType KafkaAclKafkaClusterArgs

func KafkaAclKafkaClusterPtr(v *KafkaAclKafkaClusterArgs) KafkaAclKafkaClusterPtrInput {
	return (*kafkaAclKafkaClusterPtrType)(v)
}

func (*kafkaAclKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclKafkaCluster)(nil)).Elem()
}

func (i *kafkaAclKafkaClusterPtrType) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return i.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaAclKafkaClusterPtrType) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterPtrOutput)
}

type KafkaAclKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaAclKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclKafkaCluster)(nil)).Elem()
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput {
	return o
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterOutputWithContext(ctx context.Context) KafkaAclKafkaClusterOutput {
	return o
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return o.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaAclKafkaCluster) *KafkaAclKafkaCluster {
		return &v
	}).(KafkaAclKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaAclKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaAclKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaAclKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclKafkaCluster)(nil)).Elem()
}

func (o KafkaAclKafkaClusterPtrOutput) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return o
}

func (o KafkaAclKafkaClusterPtrOutput) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return o
}

func (o KafkaAclKafkaClusterPtrOutput) Elem() KafkaAclKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaAclKafkaCluster) KafkaAclKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaAclKafkaCluster
		return ret
	}).(KafkaAclKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaAclKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClientQuotaEnvironment struct {
	// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClientQuotaEnvironmentInput is an input type that accepts KafkaClientQuotaEnvironmentArgs and KafkaClientQuotaEnvironmentOutput values.
// You can construct a concrete instance of `KafkaClientQuotaEnvironmentInput` via:
//
//	KafkaClientQuotaEnvironmentArgs{...}
type KafkaClientQuotaEnvironmentInput interface {
	pulumi.Input

	ToKafkaClientQuotaEnvironmentOutput() KafkaClientQuotaEnvironmentOutput
	ToKafkaClientQuotaEnvironmentOutputWithContext(context.Context) KafkaClientQuotaEnvironmentOutput
}

type KafkaClientQuotaEnvironmentArgs struct {
	// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClientQuotaEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentOutput() KafkaClientQuotaEnvironmentOutput {
	return i.ToKafkaClientQuotaEnvironmentOutputWithContext(context.Background())
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaEnvironmentOutput)
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return i.ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Background())
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaEnvironmentOutput).ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx)
}

// KafkaClientQuotaEnvironmentPtrInput is an input type that accepts KafkaClientQuotaEnvironmentArgs, KafkaClientQuotaEnvironmentPtr and KafkaClientQuotaEnvironmentPtrOutput values.
// You can construct a concrete instance of `KafkaClientQuotaEnvironmentPtrInput` via:
//
//	        KafkaClientQuotaEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KafkaClientQuotaEnvironmentPtrInput interface {
	pulumi.Input

	ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput
	ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Context) KafkaClientQuotaEnvironmentPtrOutput
}

type kafkaClientQuotaEnvironmentPtrType KafkaClientQuotaEnvironmentArgs

func KafkaClientQuotaEnvironmentPtr(v *KafkaClientQuotaEnvironmentArgs) KafkaClientQuotaEnvironmentPtrInput {
	return (*kafkaClientQuotaEnvironmentPtrType)(v)
}

func (*kafkaClientQuotaEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i *kafkaClientQuotaEnvironmentPtrType) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return i.ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Background())
}

func (i *kafkaClientQuotaEnvironmentPtrType) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaEnvironmentPtrOutput)
}

type KafkaClientQuotaEnvironmentOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentOutput() KafkaClientQuotaEnvironmentOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return o.ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Background())
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClientQuotaEnvironment) *KafkaClientQuotaEnvironment {
		return &v
	}).(KafkaClientQuotaEnvironmentPtrOutput)
}

// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
func (o KafkaClientQuotaEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClientQuotaEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o KafkaClientQuotaEnvironmentPtrOutput) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentPtrOutput) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentPtrOutput) Elem() KafkaClientQuotaEnvironmentOutput {
	return o.ApplyT(func(v *KafkaClientQuotaEnvironment) KafkaClientQuotaEnvironment {
		if v != nil {
			return *v
		}
		var ret KafkaClientQuotaEnvironment
		return ret
	}).(KafkaClientQuotaEnvironmentOutput)
}

// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
func (o KafkaClientQuotaEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClientQuotaKafkaCluster struct {
	// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClientQuotaKafkaClusterInput is an input type that accepts KafkaClientQuotaKafkaClusterArgs and KafkaClientQuotaKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaClientQuotaKafkaClusterInput` via:
//
//	KafkaClientQuotaKafkaClusterArgs{...}
type KafkaClientQuotaKafkaClusterInput interface {
	pulumi.Input

	ToKafkaClientQuotaKafkaClusterOutput() KafkaClientQuotaKafkaClusterOutput
	ToKafkaClientQuotaKafkaClusterOutputWithContext(context.Context) KafkaClientQuotaKafkaClusterOutput
}

type KafkaClientQuotaKafkaClusterArgs struct {
	// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClientQuotaKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterOutput() KafkaClientQuotaKafkaClusterOutput {
	return i.ToKafkaClientQuotaKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaKafkaClusterOutput)
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return i.ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaKafkaClusterOutput).ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaClientQuotaKafkaClusterPtrInput is an input type that accepts KafkaClientQuotaKafkaClusterArgs, KafkaClientQuotaKafkaClusterPtr and KafkaClientQuotaKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaClientQuotaKafkaClusterPtrInput` via:
//
//	        KafkaClientQuotaKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaClientQuotaKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput
	ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Context) KafkaClientQuotaKafkaClusterPtrOutput
}

type kafkaClientQuotaKafkaClusterPtrType KafkaClientQuotaKafkaClusterArgs

func KafkaClientQuotaKafkaClusterPtr(v *KafkaClientQuotaKafkaClusterArgs) KafkaClientQuotaKafkaClusterPtrInput {
	return (*kafkaClientQuotaKafkaClusterPtrType)(v)
}

func (*kafkaClientQuotaKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i *kafkaClientQuotaKafkaClusterPtrType) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return i.ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaClientQuotaKafkaClusterPtrType) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaKafkaClusterPtrOutput)
}

type KafkaClientQuotaKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterOutput() KafkaClientQuotaKafkaClusterOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return o.ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClientQuotaKafkaCluster) *KafkaClientQuotaKafkaCluster {
		return &v
	}).(KafkaClientQuotaKafkaClusterPtrOutput)
}

// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
func (o KafkaClientQuotaKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClientQuotaKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o KafkaClientQuotaKafkaClusterPtrOutput) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterPtrOutput) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterPtrOutput) Elem() KafkaClientQuotaKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaClientQuotaKafkaCluster) KafkaClientQuotaKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaClientQuotaKafkaCluster
		return ret
	}).(KafkaClientQuotaKafkaClusterOutput)
}

// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
func (o KafkaClientQuotaKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClientQuotaThroughput struct {
	// The egress throughput limit in bytes per second.
	EgressByteRate string `pulumi:"egressByteRate"`
	// The ingress throughput limit in bytes per second.
	IngressByteRate string `pulumi:"ingressByteRate"`
}

// KafkaClientQuotaThroughputInput is an input type that accepts KafkaClientQuotaThroughputArgs and KafkaClientQuotaThroughputOutput values.
// You can construct a concrete instance of `KafkaClientQuotaThroughputInput` via:
//
//	KafkaClientQuotaThroughputArgs{...}
type KafkaClientQuotaThroughputInput interface {
	pulumi.Input

	ToKafkaClientQuotaThroughputOutput() KafkaClientQuotaThroughputOutput
	ToKafkaClientQuotaThroughputOutputWithContext(context.Context) KafkaClientQuotaThroughputOutput
}

type KafkaClientQuotaThroughputArgs struct {
	// The egress throughput limit in bytes per second.
	EgressByteRate pulumi.StringInput `pulumi:"egressByteRate"`
	// The ingress throughput limit in bytes per second.
	IngressByteRate pulumi.StringInput `pulumi:"ingressByteRate"`
}

func (KafkaClientQuotaThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaThroughput)(nil)).Elem()
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputOutput() KafkaClientQuotaThroughputOutput {
	return i.ToKafkaClientQuotaThroughputOutputWithContext(context.Background())
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaThroughputOutput)
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return i.ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Background())
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaThroughputOutput).ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx)
}

// KafkaClientQuotaThroughputPtrInput is an input type that accepts KafkaClientQuotaThroughputArgs, KafkaClientQuotaThroughputPtr and KafkaClientQuotaThroughputPtrOutput values.
// You can construct a concrete instance of `KafkaClientQuotaThroughputPtrInput` via:
//
//	        KafkaClientQuotaThroughputArgs{...}
//
//	or:
//
//	        nil
type KafkaClientQuotaThroughputPtrInput interface {
	pulumi.Input

	ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput
	ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Context) KafkaClientQuotaThroughputPtrOutput
}

type kafkaClientQuotaThroughputPtrType KafkaClientQuotaThroughputArgs

func KafkaClientQuotaThroughputPtr(v *KafkaClientQuotaThroughputArgs) KafkaClientQuotaThroughputPtrInput {
	return (*kafkaClientQuotaThroughputPtrType)(v)
}

func (*kafkaClientQuotaThroughputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaThroughput)(nil)).Elem()
}

func (i *kafkaClientQuotaThroughputPtrType) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return i.ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Background())
}

func (i *kafkaClientQuotaThroughputPtrType) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaThroughputPtrOutput)
}

type KafkaClientQuotaThroughputOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaThroughput)(nil)).Elem()
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputOutput() KafkaClientQuotaThroughputOutput {
	return o
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputOutput {
	return o
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return o.ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Background())
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClientQuotaThroughput) *KafkaClientQuotaThroughput {
		return &v
	}).(KafkaClientQuotaThroughputPtrOutput)
}

// The egress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputOutput) EgressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaThroughput) string { return v.EgressByteRate }).(pulumi.StringOutput)
}

// The ingress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputOutput) IngressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaThroughput) string { return v.IngressByteRate }).(pulumi.StringOutput)
}

type KafkaClientQuotaThroughputPtrOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaThroughputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaThroughput)(nil)).Elem()
}

func (o KafkaClientQuotaThroughputPtrOutput) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return o
}

func (o KafkaClientQuotaThroughputPtrOutput) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return o
}

func (o KafkaClientQuotaThroughputPtrOutput) Elem() KafkaClientQuotaThroughputOutput {
	return o.ApplyT(func(v *KafkaClientQuotaThroughput) KafkaClientQuotaThroughput {
		if v != nil {
			return *v
		}
		var ret KafkaClientQuotaThroughput
		return ret
	}).(KafkaClientQuotaThroughputOutput)
}

// The egress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputPtrOutput) EgressByteRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaThroughput) *string {
		if v == nil {
			return nil
		}
		return &v.EgressByteRate
	}).(pulumi.StringPtrOutput)
}

// The ingress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputPtrOutput) IngressByteRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaThroughput) *string {
		if v == nil {
			return nil
		}
		return &v.IngressByteRate
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterBasic struct {
}

// KafkaClusterBasicInput is an input type that accepts KafkaClusterBasicArgs and KafkaClusterBasicOutput values.
// You can construct a concrete instance of `KafkaClusterBasicInput` via:
//
//	KafkaClusterBasicArgs{...}
type KafkaClusterBasicInput interface {
	pulumi.Input

	ToKafkaClusterBasicOutput() KafkaClusterBasicOutput
	ToKafkaClusterBasicOutputWithContext(context.Context) KafkaClusterBasicOutput
}

type KafkaClusterBasicArgs struct {
}

func (KafkaClusterBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterBasic)(nil)).Elem()
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicOutput() KafkaClusterBasicOutput {
	return i.ToKafkaClusterBasicOutputWithContext(context.Background())
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicOutputWithContext(ctx context.Context) KafkaClusterBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicOutput)
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return i.ToKafkaClusterBasicPtrOutputWithContext(context.Background())
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicOutput).ToKafkaClusterBasicPtrOutputWithContext(ctx)
}

// KafkaClusterBasicPtrInput is an input type that accepts KafkaClusterBasicArgs, KafkaClusterBasicPtr and KafkaClusterBasicPtrOutput values.
// You can construct a concrete instance of `KafkaClusterBasicPtrInput` via:
//
//	        KafkaClusterBasicArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterBasicPtrInput interface {
	pulumi.Input

	ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput
	ToKafkaClusterBasicPtrOutputWithContext(context.Context) KafkaClusterBasicPtrOutput
}

type kafkaClusterBasicPtrType KafkaClusterBasicArgs

func KafkaClusterBasicPtr(v *KafkaClusterBasicArgs) KafkaClusterBasicPtrInput {
	return (*kafkaClusterBasicPtrType)(v)
}

func (*kafkaClusterBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterBasic)(nil)).Elem()
}

func (i *kafkaClusterBasicPtrType) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return i.ToKafkaClusterBasicPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterBasicPtrType) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicPtrOutput)
}

type KafkaClusterBasicOutput struct{ *pulumi.OutputState }

func (KafkaClusterBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterBasic)(nil)).Elem()
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicOutput() KafkaClusterBasicOutput {
	return o
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicOutputWithContext(ctx context.Context) KafkaClusterBasicOutput {
	return o
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return o.ToKafkaClusterBasicPtrOutputWithContext(context.Background())
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterBasic) *KafkaClusterBasic {
		return &v
	}).(KafkaClusterBasicPtrOutput)
}

type KafkaClusterBasicPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterBasic)(nil)).Elem()
}

func (o KafkaClusterBasicPtrOutput) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return o
}

func (o KafkaClusterBasicPtrOutput) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return o
}

func (o KafkaClusterBasicPtrOutput) Elem() KafkaClusterBasicOutput {
	return o.ApplyT(func(v *KafkaClusterBasic) KafkaClusterBasic {
		if v != nil {
			return *v
		}
		var ret KafkaClusterBasic
		return ret
	}).(KafkaClusterBasicOutput)
}

type KafkaClusterConfigCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaClusterConfigCredentialsInput is an input type that accepts KafkaClusterConfigCredentialsArgs and KafkaClusterConfigCredentialsOutput values.
// You can construct a concrete instance of `KafkaClusterConfigCredentialsInput` via:
//
//	KafkaClusterConfigCredentialsArgs{...}
type KafkaClusterConfigCredentialsInput interface {
	pulumi.Input

	ToKafkaClusterConfigCredentialsOutput() KafkaClusterConfigCredentialsOutput
	ToKafkaClusterConfigCredentialsOutputWithContext(context.Context) KafkaClusterConfigCredentialsOutput
}

type KafkaClusterConfigCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaClusterConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigCredentials)(nil)).Elem()
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsOutput() KafkaClusterConfigCredentialsOutput {
	return i.ToKafkaClusterConfigCredentialsOutputWithContext(context.Background())
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigCredentialsOutput)
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return i.ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigCredentialsOutput).ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx)
}

// KafkaClusterConfigCredentialsPtrInput is an input type that accepts KafkaClusterConfigCredentialsArgs, KafkaClusterConfigCredentialsPtr and KafkaClusterConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaClusterConfigCredentialsPtrInput` via:
//
//	        KafkaClusterConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterConfigCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput
	ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Context) KafkaClusterConfigCredentialsPtrOutput
}

type kafkaClusterConfigCredentialsPtrType KafkaClusterConfigCredentialsArgs

func KafkaClusterConfigCredentialsPtr(v *KafkaClusterConfigCredentialsArgs) KafkaClusterConfigCredentialsPtrInput {
	return (*kafkaClusterConfigCredentialsPtrType)(v)
}

func (*kafkaClusterConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigCredentials)(nil)).Elem()
}

func (i *kafkaClusterConfigCredentialsPtrType) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return i.ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterConfigCredentialsPtrType) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigCredentialsPtrOutput)
}

type KafkaClusterConfigCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigCredentials)(nil)).Elem()
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsOutput() KafkaClusterConfigCredentialsOutput {
	return o
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsOutput {
	return o
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return o.ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterConfigCredentials) *KafkaClusterConfigCredentials {
		return &v
	}).(KafkaClusterConfigCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaClusterConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaClusterConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaClusterConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigCredentials)(nil)).Elem()
}

func (o KafkaClusterConfigCredentialsPtrOutput) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return o
}

func (o KafkaClusterConfigCredentialsPtrOutput) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return o
}

func (o KafkaClusterConfigCredentialsPtrOutput) Elem() KafkaClusterConfigCredentialsOutput {
	return o.ApplyT(func(v *KafkaClusterConfigCredentials) KafkaClusterConfigCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaClusterConfigCredentials
		return ret
	}).(KafkaClusterConfigCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaClusterConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaClusterConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterConfigKafkaCluster struct {
	// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterConfigKafkaClusterInput is an input type that accepts KafkaClusterConfigKafkaClusterArgs and KafkaClusterConfigKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaClusterConfigKafkaClusterInput` via:
//
//	KafkaClusterConfigKafkaClusterArgs{...}
type KafkaClusterConfigKafkaClusterInput interface {
	pulumi.Input

	ToKafkaClusterConfigKafkaClusterOutput() KafkaClusterConfigKafkaClusterOutput
	ToKafkaClusterConfigKafkaClusterOutputWithContext(context.Context) KafkaClusterConfigKafkaClusterOutput
}

type KafkaClusterConfigKafkaClusterArgs struct {
	// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterConfigKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterOutput() KafkaClusterConfigKafkaClusterOutput {
	return i.ToKafkaClusterConfigKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigKafkaClusterOutput)
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return i.ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigKafkaClusterOutput).ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaClusterConfigKafkaClusterPtrInput is an input type that accepts KafkaClusterConfigKafkaClusterArgs, KafkaClusterConfigKafkaClusterPtr and KafkaClusterConfigKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaClusterConfigKafkaClusterPtrInput` via:
//
//	        KafkaClusterConfigKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterConfigKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput
	ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Context) KafkaClusterConfigKafkaClusterPtrOutput
}

type kafkaClusterConfigKafkaClusterPtrType KafkaClusterConfigKafkaClusterArgs

func KafkaClusterConfigKafkaClusterPtr(v *KafkaClusterConfigKafkaClusterArgs) KafkaClusterConfigKafkaClusterPtrInput {
	return (*kafkaClusterConfigKafkaClusterPtrType)(v)
}

func (*kafkaClusterConfigKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (i *kafkaClusterConfigKafkaClusterPtrType) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return i.ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterConfigKafkaClusterPtrType) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigKafkaClusterPtrOutput)
}

type KafkaClusterConfigKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterOutput() KafkaClusterConfigKafkaClusterOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return o.ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterConfigKafkaCluster) *KafkaClusterConfigKafkaCluster {
		return &v
	}).(KafkaClusterConfigKafkaClusterPtrOutput)
}

// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
func (o KafkaClusterConfigKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConfigKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterConfigKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (o KafkaClusterConfigKafkaClusterPtrOutput) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterPtrOutput) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterPtrOutput) Elem() KafkaClusterConfigKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaClusterConfigKafkaCluster) KafkaClusterConfigKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaClusterConfigKafkaCluster
		return ret
	}).(KafkaClusterConfigKafkaClusterOutput)
}

// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
func (o KafkaClusterConfigKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConfigKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterDedicated struct {
	// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku int `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey *string `pulumi:"encryptionKey"`
}

// KafkaClusterDedicatedInput is an input type that accepts KafkaClusterDedicatedArgs and KafkaClusterDedicatedOutput values.
// You can construct a concrete instance of `KafkaClusterDedicatedInput` via:
//
//	KafkaClusterDedicatedArgs{...}
type KafkaClusterDedicatedInput interface {
	pulumi.Input

	ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput
	ToKafkaClusterDedicatedOutputWithContext(context.Context) KafkaClusterDedicatedOutput
}

type KafkaClusterDedicatedArgs struct {
	// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku pulumi.IntInput `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
}

func (KafkaClusterDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterDedicated)(nil)).Elem()
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput {
	return i.ToKafkaClusterDedicatedOutputWithContext(context.Background())
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedOutputWithContext(ctx context.Context) KafkaClusterDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedOutput)
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return i.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedOutput).ToKafkaClusterDedicatedPtrOutputWithContext(ctx)
}

// KafkaClusterDedicatedPtrInput is an input type that accepts KafkaClusterDedicatedArgs, KafkaClusterDedicatedPtr and KafkaClusterDedicatedPtrOutput values.
// You can construct a concrete instance of `KafkaClusterDedicatedPtrInput` via:
//
//	        KafkaClusterDedicatedArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterDedicatedPtrInput interface {
	pulumi.Input

	ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput
	ToKafkaClusterDedicatedPtrOutputWithContext(context.Context) KafkaClusterDedicatedPtrOutput
}

type kafkaClusterDedicatedPtrType KafkaClusterDedicatedArgs

func KafkaClusterDedicatedPtr(v *KafkaClusterDedicatedArgs) KafkaClusterDedicatedPtrInput {
	return (*kafkaClusterDedicatedPtrType)(v)
}

func (*kafkaClusterDedicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterDedicated)(nil)).Elem()
}

func (i *kafkaClusterDedicatedPtrType) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return i.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterDedicatedPtrType) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedPtrOutput)
}

type KafkaClusterDedicatedOutput struct{ *pulumi.OutputState }

func (KafkaClusterDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterDedicated)(nil)).Elem()
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput {
	return o
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedOutputWithContext(ctx context.Context) KafkaClusterDedicatedOutput {
	return o
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return o.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterDedicated) *KafkaClusterDedicated {
		return &v
	}).(KafkaClusterDedicatedPtrOutput)
}

// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o KafkaClusterDedicatedOutput) Cku() pulumi.IntOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) int { return v.Cku }).(pulumi.IntOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o KafkaClusterDedicatedOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

type KafkaClusterDedicatedPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterDedicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterDedicated)(nil)).Elem()
}

func (o KafkaClusterDedicatedPtrOutput) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return o
}

func (o KafkaClusterDedicatedPtrOutput) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return o
}

func (o KafkaClusterDedicatedPtrOutput) Elem() KafkaClusterDedicatedOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) KafkaClusterDedicated {
		if v != nil {
			return *v
		}
		var ret KafkaClusterDedicated
		return ret
	}).(KafkaClusterDedicatedOutput)
}

// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o KafkaClusterDedicatedPtrOutput) Cku() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) *int {
		if v == nil {
			return nil
		}
		return &v.Cku
	}).(pulumi.IntPtrOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o KafkaClusterDedicatedPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterEnvironment struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterEnvironmentInput is an input type that accepts KafkaClusterEnvironmentArgs and KafkaClusterEnvironmentOutput values.
// You can construct a concrete instance of `KafkaClusterEnvironmentInput` via:
//
//	KafkaClusterEnvironmentArgs{...}
type KafkaClusterEnvironmentInput interface {
	pulumi.Input

	ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput
	ToKafkaClusterEnvironmentOutputWithContext(context.Context) KafkaClusterEnvironmentOutput
}

type KafkaClusterEnvironmentArgs struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnvironment)(nil)).Elem()
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput {
	return i.ToKafkaClusterEnvironmentOutputWithContext(context.Background())
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentOutputWithContext(ctx context.Context) KafkaClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentOutput)
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return i.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentOutput).ToKafkaClusterEnvironmentPtrOutputWithContext(ctx)
}

// KafkaClusterEnvironmentPtrInput is an input type that accepts KafkaClusterEnvironmentArgs, KafkaClusterEnvironmentPtr and KafkaClusterEnvironmentPtrOutput values.
// You can construct a concrete instance of `KafkaClusterEnvironmentPtrInput` via:
//
//	        KafkaClusterEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterEnvironmentPtrInput interface {
	pulumi.Input

	ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput
	ToKafkaClusterEnvironmentPtrOutputWithContext(context.Context) KafkaClusterEnvironmentPtrOutput
}

type kafkaClusterEnvironmentPtrType KafkaClusterEnvironmentArgs

func KafkaClusterEnvironmentPtr(v *KafkaClusterEnvironmentArgs) KafkaClusterEnvironmentPtrInput {
	return (*kafkaClusterEnvironmentPtrType)(v)
}

func (*kafkaClusterEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterEnvironment)(nil)).Elem()
}

func (i *kafkaClusterEnvironmentPtrType) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return i.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterEnvironmentPtrType) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentPtrOutput)
}

type KafkaClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnvironment)(nil)).Elem()
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput {
	return o
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentOutputWithContext(ctx context.Context) KafkaClusterEnvironmentOutput {
	return o
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return o.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterEnvironment) *KafkaClusterEnvironment {
		return &v
	}).(KafkaClusterEnvironmentPtrOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterEnvironment)(nil)).Elem()
}

func (o KafkaClusterEnvironmentPtrOutput) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return o
}

func (o KafkaClusterEnvironmentPtrOutput) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return o
}

func (o KafkaClusterEnvironmentPtrOutput) Elem() KafkaClusterEnvironmentOutput {
	return o.ApplyT(func(v *KafkaClusterEnvironment) KafkaClusterEnvironment {
		if v != nil {
			return *v
		}
		var ret KafkaClusterEnvironment
		return ret
	}).(KafkaClusterEnvironmentOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterNetwork struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterNetworkInput is an input type that accepts KafkaClusterNetworkArgs and KafkaClusterNetworkOutput values.
// You can construct a concrete instance of `KafkaClusterNetworkInput` via:
//
//	KafkaClusterNetworkArgs{...}
type KafkaClusterNetworkInput interface {
	pulumi.Input

	ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput
	ToKafkaClusterNetworkOutputWithContext(context.Context) KafkaClusterNetworkOutput
}

type KafkaClusterNetworkArgs struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterNetwork)(nil)).Elem()
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput {
	return i.ToKafkaClusterNetworkOutputWithContext(context.Background())
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkOutputWithContext(ctx context.Context) KafkaClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkOutput)
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return i.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkOutput).ToKafkaClusterNetworkPtrOutputWithContext(ctx)
}

// KafkaClusterNetworkPtrInput is an input type that accepts KafkaClusterNetworkArgs, KafkaClusterNetworkPtr and KafkaClusterNetworkPtrOutput values.
// You can construct a concrete instance of `KafkaClusterNetworkPtrInput` via:
//
//	        KafkaClusterNetworkArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterNetworkPtrInput interface {
	pulumi.Input

	ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput
	ToKafkaClusterNetworkPtrOutputWithContext(context.Context) KafkaClusterNetworkPtrOutput
}

type kafkaClusterNetworkPtrType KafkaClusterNetworkArgs

func KafkaClusterNetworkPtr(v *KafkaClusterNetworkArgs) KafkaClusterNetworkPtrInput {
	return (*kafkaClusterNetworkPtrType)(v)
}

func (*kafkaClusterNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterNetwork)(nil)).Elem()
}

func (i *kafkaClusterNetworkPtrType) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return i.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterNetworkPtrType) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkPtrOutput)
}

type KafkaClusterNetworkOutput struct{ *pulumi.OutputState }

func (KafkaClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterNetwork)(nil)).Elem()
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput {
	return o
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkOutputWithContext(ctx context.Context) KafkaClusterNetworkOutput {
	return o
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return o.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterNetwork) *KafkaClusterNetwork {
		return &v
	}).(KafkaClusterNetworkPtrOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterNetworkPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterNetwork)(nil)).Elem()
}

func (o KafkaClusterNetworkPtrOutput) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return o
}

func (o KafkaClusterNetworkPtrOutput) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return o
}

func (o KafkaClusterNetworkPtrOutput) Elem() KafkaClusterNetworkOutput {
	return o.ApplyT(func(v *KafkaClusterNetwork) KafkaClusterNetwork {
		if v != nil {
			return *v
		}
		var ret KafkaClusterNetwork
		return ret
	}).(KafkaClusterNetworkOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterStandard struct {
}

// KafkaClusterStandardInput is an input type that accepts KafkaClusterStandardArgs and KafkaClusterStandardOutput values.
// You can construct a concrete instance of `KafkaClusterStandardInput` via:
//
//	KafkaClusterStandardArgs{...}
type KafkaClusterStandardInput interface {
	pulumi.Input

	ToKafkaClusterStandardOutput() KafkaClusterStandardOutput
	ToKafkaClusterStandardOutputWithContext(context.Context) KafkaClusterStandardOutput
}

type KafkaClusterStandardArgs struct {
}

func (KafkaClusterStandardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterStandard)(nil)).Elem()
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardOutput() KafkaClusterStandardOutput {
	return i.ToKafkaClusterStandardOutputWithContext(context.Background())
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardOutputWithContext(ctx context.Context) KafkaClusterStandardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardOutput)
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return i.ToKafkaClusterStandardPtrOutputWithContext(context.Background())
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardOutput).ToKafkaClusterStandardPtrOutputWithContext(ctx)
}

// KafkaClusterStandardPtrInput is an input type that accepts KafkaClusterStandardArgs, KafkaClusterStandardPtr and KafkaClusterStandardPtrOutput values.
// You can construct a concrete instance of `KafkaClusterStandardPtrInput` via:
//
//	        KafkaClusterStandardArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterStandardPtrInput interface {
	pulumi.Input

	ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput
	ToKafkaClusterStandardPtrOutputWithContext(context.Context) KafkaClusterStandardPtrOutput
}

type kafkaClusterStandardPtrType KafkaClusterStandardArgs

func KafkaClusterStandardPtr(v *KafkaClusterStandardArgs) KafkaClusterStandardPtrInput {
	return (*kafkaClusterStandardPtrType)(v)
}

func (*kafkaClusterStandardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterStandard)(nil)).Elem()
}

func (i *kafkaClusterStandardPtrType) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return i.ToKafkaClusterStandardPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterStandardPtrType) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardPtrOutput)
}

type KafkaClusterStandardOutput struct{ *pulumi.OutputState }

func (KafkaClusterStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterStandard)(nil)).Elem()
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardOutput() KafkaClusterStandardOutput {
	return o
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardOutputWithContext(ctx context.Context) KafkaClusterStandardOutput {
	return o
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return o.ToKafkaClusterStandardPtrOutputWithContext(context.Background())
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterStandard) *KafkaClusterStandard {
		return &v
	}).(KafkaClusterStandardPtrOutput)
}

type KafkaClusterStandardPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterStandardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterStandard)(nil)).Elem()
}

func (o KafkaClusterStandardPtrOutput) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return o
}

func (o KafkaClusterStandardPtrOutput) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return o
}

func (o KafkaClusterStandardPtrOutput) Elem() KafkaClusterStandardOutput {
	return o.ApplyT(func(v *KafkaClusterStandard) KafkaClusterStandard {
		if v != nil {
			return *v
		}
		var ret KafkaClusterStandard
		return ret
	}).(KafkaClusterStandardOutput)
}

type KafkaMirrorTopicClusterLink struct {
	// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
	LinkName string `pulumi:"linkName"`
}

// KafkaMirrorTopicClusterLinkInput is an input type that accepts KafkaMirrorTopicClusterLinkArgs and KafkaMirrorTopicClusterLinkOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicClusterLinkInput` via:
//
//	KafkaMirrorTopicClusterLinkArgs{...}
type KafkaMirrorTopicClusterLinkInput interface {
	pulumi.Input

	ToKafkaMirrorTopicClusterLinkOutput() KafkaMirrorTopicClusterLinkOutput
	ToKafkaMirrorTopicClusterLinkOutputWithContext(context.Context) KafkaMirrorTopicClusterLinkOutput
}

type KafkaMirrorTopicClusterLinkArgs struct {
	// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
	LinkName pulumi.StringInput `pulumi:"linkName"`
}

func (KafkaMirrorTopicClusterLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkOutput() KafkaMirrorTopicClusterLinkOutput {
	return i.ToKafkaMirrorTopicClusterLinkOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicClusterLinkOutput)
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return i.ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicClusterLinkOutput).ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicClusterLinkPtrInput is an input type that accepts KafkaMirrorTopicClusterLinkArgs, KafkaMirrorTopicClusterLinkPtr and KafkaMirrorTopicClusterLinkPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicClusterLinkPtrInput` via:
//
//	        KafkaMirrorTopicClusterLinkArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicClusterLinkPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput
	ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Context) KafkaMirrorTopicClusterLinkPtrOutput
}

type kafkaMirrorTopicClusterLinkPtrType KafkaMirrorTopicClusterLinkArgs

func KafkaMirrorTopicClusterLinkPtr(v *KafkaMirrorTopicClusterLinkArgs) KafkaMirrorTopicClusterLinkPtrInput {
	return (*kafkaMirrorTopicClusterLinkPtrType)(v)
}

func (*kafkaMirrorTopicClusterLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (i *kafkaMirrorTopicClusterLinkPtrType) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return i.ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicClusterLinkPtrType) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicClusterLinkPtrOutput)
}

type KafkaMirrorTopicClusterLinkOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicClusterLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkOutput() KafkaMirrorTopicClusterLinkOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return o.ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicClusterLink) *KafkaMirrorTopicClusterLink {
		return &v
	}).(KafkaMirrorTopicClusterLinkPtrOutput)
}

// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
func (o KafkaMirrorTopicClusterLinkOutput) LinkName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicClusterLink) string { return v.LinkName }).(pulumi.StringOutput)
}

type KafkaMirrorTopicClusterLinkPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicClusterLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (o KafkaMirrorTopicClusterLinkPtrOutput) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkPtrOutput) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkPtrOutput) Elem() KafkaMirrorTopicClusterLinkOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicClusterLink) KafkaMirrorTopicClusterLink {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicClusterLink
		return ret
	}).(KafkaMirrorTopicClusterLinkOutput)
}

// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
func (o KafkaMirrorTopicClusterLinkPtrOutput) LinkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicClusterLink) *string {
		if v == nil {
			return nil
		}
		return &v.LinkName
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicKafkaCluster struct {
	Credentials *KafkaMirrorTopicKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// KafkaMirrorTopicKafkaClusterInput is an input type that accepts KafkaMirrorTopicKafkaClusterArgs and KafkaMirrorTopicKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterInput` via:
//
//	KafkaMirrorTopicKafkaClusterArgs{...}
type KafkaMirrorTopicKafkaClusterInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterOutput() KafkaMirrorTopicKafkaClusterOutput
	ToKafkaMirrorTopicKafkaClusterOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterOutput
}

type KafkaMirrorTopicKafkaClusterArgs struct {
	Credentials KafkaMirrorTopicKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (KafkaMirrorTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterOutput() KafkaMirrorTopicKafkaClusterOutput {
	return i.ToKafkaMirrorTopicKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterOutput)
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterOutput).ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicKafkaClusterPtrInput is an input type that accepts KafkaMirrorTopicKafkaClusterArgs, KafkaMirrorTopicKafkaClusterPtr and KafkaMirrorTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterPtrInput` via:
//
//	        KafkaMirrorTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput
	ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterPtrOutput
}

type kafkaMirrorTopicKafkaClusterPtrType KafkaMirrorTopicKafkaClusterArgs

func KafkaMirrorTopicKafkaClusterPtr(v *KafkaMirrorTopicKafkaClusterArgs) KafkaMirrorTopicKafkaClusterPtrInput {
	return (*kafkaMirrorTopicKafkaClusterPtrType)(v)
}

func (*kafkaMirrorTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (i *kafkaMirrorTopicKafkaClusterPtrType) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicKafkaClusterPtrType) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterPtrOutput)
}

type KafkaMirrorTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterOutput() KafkaMirrorTopicKafkaClusterOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return o.ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicKafkaCluster) *KafkaMirrorTopicKafkaCluster {
		return &v
	}).(KafkaMirrorTopicKafkaClusterPtrOutput)
}

func (o KafkaMirrorTopicKafkaClusterOutput) Credentials() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaCluster) *KafkaMirrorTopicKafkaClusterCredentials { return v.Credentials }).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o KafkaMirrorTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o KafkaMirrorTopicKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) Elem() KafkaMirrorTopicKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) KafkaMirrorTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicKafkaCluster
		return ret
	}).(KafkaMirrorTopicKafkaClusterOutput)
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) Credentials() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) *KafkaMirrorTopicKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o KafkaMirrorTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o KafkaMirrorTopicKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaMirrorTopicKafkaClusterCredentialsInput is an input type that accepts KafkaMirrorTopicKafkaClusterCredentialsArgs and KafkaMirrorTopicKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterCredentialsInput` via:
//
//	KafkaMirrorTopicKafkaClusterCredentialsArgs{...}
type KafkaMirrorTopicKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterCredentialsOutput() KafkaMirrorTopicKafkaClusterCredentialsOutput
	ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterCredentialsOutput
}

type KafkaMirrorTopicKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaMirrorTopicKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsOutput() KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return i.ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterCredentialsOutput)
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterCredentialsOutput).ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicKafkaClusterCredentialsPtrInput is an input type that accepts KafkaMirrorTopicKafkaClusterCredentialsArgs, KafkaMirrorTopicKafkaClusterCredentialsPtr and KafkaMirrorTopicKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterCredentialsPtrInput` via:
//
//	        KafkaMirrorTopicKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput
	ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput
}

type kafkaMirrorTopicKafkaClusterCredentialsPtrType KafkaMirrorTopicKafkaClusterCredentialsArgs

func KafkaMirrorTopicKafkaClusterCredentialsPtr(v *KafkaMirrorTopicKafkaClusterCredentialsArgs) KafkaMirrorTopicKafkaClusterCredentialsPtrInput {
	return (*kafkaMirrorTopicKafkaClusterCredentialsPtrType)(v)
}

func (*kafkaMirrorTopicKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (i *kafkaMirrorTopicKafkaClusterCredentialsPtrType) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicKafkaClusterCredentialsPtrType) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

type KafkaMirrorTopicKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsOutput() KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicKafkaClusterCredentials) *KafkaMirrorTopicKafkaClusterCredentials {
		return &v
	}).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaMirrorTopicKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) Elem() KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaClusterCredentials) KafkaMirrorTopicKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicKafkaClusterCredentials
		return ret
	}).(KafkaMirrorTopicKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicSourceKafkaTopic struct {
	// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
	TopicName string `pulumi:"topicName"`
}

// KafkaMirrorTopicSourceKafkaTopicInput is an input type that accepts KafkaMirrorTopicSourceKafkaTopicArgs and KafkaMirrorTopicSourceKafkaTopicOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicSourceKafkaTopicInput` via:
//
//	KafkaMirrorTopicSourceKafkaTopicArgs{...}
type KafkaMirrorTopicSourceKafkaTopicInput interface {
	pulumi.Input

	ToKafkaMirrorTopicSourceKafkaTopicOutput() KafkaMirrorTopicSourceKafkaTopicOutput
	ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(context.Context) KafkaMirrorTopicSourceKafkaTopicOutput
}

type KafkaMirrorTopicSourceKafkaTopicArgs struct {
	// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (KafkaMirrorTopicSourceKafkaTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicOutput() KafkaMirrorTopicSourceKafkaTopicOutput {
	return i.ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicSourceKafkaTopicOutput)
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return i.ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicSourceKafkaTopicOutput).ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicSourceKafkaTopicPtrInput is an input type that accepts KafkaMirrorTopicSourceKafkaTopicArgs, KafkaMirrorTopicSourceKafkaTopicPtr and KafkaMirrorTopicSourceKafkaTopicPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicSourceKafkaTopicPtrInput` via:
//
//	        KafkaMirrorTopicSourceKafkaTopicArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicSourceKafkaTopicPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput
	ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput
}

type kafkaMirrorTopicSourceKafkaTopicPtrType KafkaMirrorTopicSourceKafkaTopicArgs

func KafkaMirrorTopicSourceKafkaTopicPtr(v *KafkaMirrorTopicSourceKafkaTopicArgs) KafkaMirrorTopicSourceKafkaTopicPtrInput {
	return (*kafkaMirrorTopicSourceKafkaTopicPtrType)(v)
}

func (*kafkaMirrorTopicSourceKafkaTopicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (i *kafkaMirrorTopicSourceKafkaTopicPtrType) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return i.ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicSourceKafkaTopicPtrType) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicSourceKafkaTopicPtrOutput)
}

type KafkaMirrorTopicSourceKafkaTopicOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicSourceKafkaTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicOutput() KafkaMirrorTopicSourceKafkaTopicOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o.ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicSourceKafkaTopic) *KafkaMirrorTopicSourceKafkaTopic {
		return &v
	}).(KafkaMirrorTopicSourceKafkaTopicPtrOutput)
}

// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
func (o KafkaMirrorTopicSourceKafkaTopicOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicSourceKafkaTopic) string { return v.TopicName }).(pulumi.StringOutput)
}

type KafkaMirrorTopicSourceKafkaTopicPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicSourceKafkaTopicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) Elem() KafkaMirrorTopicSourceKafkaTopicOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicSourceKafkaTopic) KafkaMirrorTopicSourceKafkaTopic {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicSourceKafkaTopic
		return ret
	}).(KafkaMirrorTopicSourceKafkaTopicOutput)
}

// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicSourceKafkaTopic) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaTopicCredentialsInput is an input type that accepts KafkaTopicCredentialsArgs and KafkaTopicCredentialsOutput values.
// You can construct a concrete instance of `KafkaTopicCredentialsInput` via:
//
//	KafkaTopicCredentialsArgs{...}
type KafkaTopicCredentialsInput interface {
	pulumi.Input

	ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput
	ToKafkaTopicCredentialsOutputWithContext(context.Context) KafkaTopicCredentialsOutput
}

type KafkaTopicCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaTopicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicCredentials)(nil)).Elem()
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput {
	return i.ToKafkaTopicCredentialsOutputWithContext(context.Background())
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsOutputWithContext(ctx context.Context) KafkaTopicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsOutput)
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return i.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsOutput).ToKafkaTopicCredentialsPtrOutputWithContext(ctx)
}

// KafkaTopicCredentialsPtrInput is an input type that accepts KafkaTopicCredentialsArgs, KafkaTopicCredentialsPtr and KafkaTopicCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaTopicCredentialsPtrInput` via:
//
//	        KafkaTopicCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput
	ToKafkaTopicCredentialsPtrOutputWithContext(context.Context) KafkaTopicCredentialsPtrOutput
}

type kafkaTopicCredentialsPtrType KafkaTopicCredentialsArgs

func KafkaTopicCredentialsPtr(v *KafkaTopicCredentialsArgs) KafkaTopicCredentialsPtrInput {
	return (*kafkaTopicCredentialsPtrType)(v)
}

func (*kafkaTopicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicCredentials)(nil)).Elem()
}

func (i *kafkaTopicCredentialsPtrType) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return i.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicCredentialsPtrType) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsPtrOutput)
}

type KafkaTopicCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaTopicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicCredentials)(nil)).Elem()
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput {
	return o
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsOutputWithContext(ctx context.Context) KafkaTopicCredentialsOutput {
	return o
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return o.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicCredentials) *KafkaTopicCredentials {
		return &v
	}).(KafkaTopicCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaTopicCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaTopicCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaTopicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicCredentials)(nil)).Elem()
}

func (o KafkaTopicCredentialsPtrOutput) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return o
}

func (o KafkaTopicCredentialsPtrOutput) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return o
}

func (o KafkaTopicCredentialsPtrOutput) Elem() KafkaTopicCredentialsOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) KafkaTopicCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaTopicCredentials
		return ret
	}).(KafkaTopicCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaTopicCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaTopicCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaTopicKafkaClusterInput is an input type that accepts KafkaTopicKafkaClusterArgs and KafkaTopicKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaTopicKafkaClusterInput` via:
//
//	KafkaTopicKafkaClusterArgs{...}
type KafkaTopicKafkaClusterInput interface {
	pulumi.Input

	ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput
	ToKafkaTopicKafkaClusterOutputWithContext(context.Context) KafkaTopicKafkaClusterOutput
}

type KafkaTopicKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicKafkaCluster)(nil)).Elem()
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput {
	return i.ToKafkaTopicKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterOutput)
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return i.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterOutput).ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaTopicKafkaClusterPtrInput is an input type that accepts KafkaTopicKafkaClusterArgs, KafkaTopicKafkaClusterPtr and KafkaTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaTopicKafkaClusterPtrInput` via:
//
//	        KafkaTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput
	ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Context) KafkaTopicKafkaClusterPtrOutput
}

type kafkaTopicKafkaClusterPtrType KafkaTopicKafkaClusterArgs

func KafkaTopicKafkaClusterPtr(v *KafkaTopicKafkaClusterArgs) KafkaTopicKafkaClusterPtrInput {
	return (*kafkaTopicKafkaClusterPtrType)(v)
}

func (*kafkaTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicKafkaCluster)(nil)).Elem()
}

func (i *kafkaTopicKafkaClusterPtrType) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return i.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicKafkaClusterPtrType) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterPtrOutput)
}

type KafkaTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput {
	return o
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterOutput {
	return o
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return o.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicKafkaCluster) *KafkaTopicKafkaCluster {
		return &v
	}).(KafkaTopicKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaTopicKafkaClusterPtrOutput) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaTopicKafkaClusterPtrOutput) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaTopicKafkaClusterPtrOutput) Elem() KafkaTopicKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaTopicKafkaCluster) KafkaTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaTopicKafkaCluster
		return ret
	}).(KafkaTopicKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KsqlClusterCredentialIdentity struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id string `pulumi:"id"`
}

// KsqlClusterCredentialIdentityInput is an input type that accepts KsqlClusterCredentialIdentityArgs and KsqlClusterCredentialIdentityOutput values.
// You can construct a concrete instance of `KsqlClusterCredentialIdentityInput` via:
//
//	KsqlClusterCredentialIdentityArgs{...}
type KsqlClusterCredentialIdentityInput interface {
	pulumi.Input

	ToKsqlClusterCredentialIdentityOutput() KsqlClusterCredentialIdentityOutput
	ToKsqlClusterCredentialIdentityOutputWithContext(context.Context) KsqlClusterCredentialIdentityOutput
}

type KsqlClusterCredentialIdentityArgs struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KsqlClusterCredentialIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityOutput() KsqlClusterCredentialIdentityOutput {
	return i.ToKsqlClusterCredentialIdentityOutputWithContext(context.Background())
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterCredentialIdentityOutput)
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return i.ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Background())
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterCredentialIdentityOutput).ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx)
}

// KsqlClusterCredentialIdentityPtrInput is an input type that accepts KsqlClusterCredentialIdentityArgs, KsqlClusterCredentialIdentityPtr and KsqlClusterCredentialIdentityPtrOutput values.
// You can construct a concrete instance of `KsqlClusterCredentialIdentityPtrInput` via:
//
//	        KsqlClusterCredentialIdentityArgs{...}
//
//	or:
//
//	        nil
type KsqlClusterCredentialIdentityPtrInput interface {
	pulumi.Input

	ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput
	ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Context) KsqlClusterCredentialIdentityPtrOutput
}

type ksqlClusterCredentialIdentityPtrType KsqlClusterCredentialIdentityArgs

func KsqlClusterCredentialIdentityPtr(v *KsqlClusterCredentialIdentityArgs) KsqlClusterCredentialIdentityPtrInput {
	return (*ksqlClusterCredentialIdentityPtrType)(v)
}

func (*ksqlClusterCredentialIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i *ksqlClusterCredentialIdentityPtrType) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return i.ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Background())
}

func (i *ksqlClusterCredentialIdentityPtrType) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterCredentialIdentityPtrOutput)
}

type KsqlClusterCredentialIdentityOutput struct{ *pulumi.OutputState }

func (KsqlClusterCredentialIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityOutput() KsqlClusterCredentialIdentityOutput {
	return o
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityOutput {
	return o
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return o.ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Background())
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KsqlClusterCredentialIdentity) *KsqlClusterCredentialIdentity {
		return &v
	}).(KsqlClusterCredentialIdentityPtrOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterCredentialIdentityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KsqlClusterCredentialIdentity) string { return v.Id }).(pulumi.StringOutput)
}

type KsqlClusterCredentialIdentityPtrOutput struct{ *pulumi.OutputState }

func (KsqlClusterCredentialIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o KsqlClusterCredentialIdentityPtrOutput) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return o
}

func (o KsqlClusterCredentialIdentityPtrOutput) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return o
}

func (o KsqlClusterCredentialIdentityPtrOutput) Elem() KsqlClusterCredentialIdentityOutput {
	return o.ApplyT(func(v *KsqlClusterCredentialIdentity) KsqlClusterCredentialIdentity {
		if v != nil {
			return *v
		}
		var ret KsqlClusterCredentialIdentity
		return ret
	}).(KsqlClusterCredentialIdentityOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterCredentialIdentityPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KsqlClusterCredentialIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KsqlClusterEnvironment struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id string `pulumi:"id"`
}

// KsqlClusterEnvironmentInput is an input type that accepts KsqlClusterEnvironmentArgs and KsqlClusterEnvironmentOutput values.
// You can construct a concrete instance of `KsqlClusterEnvironmentInput` via:
//
//	KsqlClusterEnvironmentArgs{...}
type KsqlClusterEnvironmentInput interface {
	pulumi.Input

	ToKsqlClusterEnvironmentOutput() KsqlClusterEnvironmentOutput
	ToKsqlClusterEnvironmentOutputWithContext(context.Context) KsqlClusterEnvironmentOutput
}

type KsqlClusterEnvironmentArgs struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KsqlClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterEnvironment)(nil)).Elem()
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentOutput() KsqlClusterEnvironmentOutput {
	return i.ToKsqlClusterEnvironmentOutputWithContext(context.Background())
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentOutputWithContext(ctx context.Context) KsqlClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterEnvironmentOutput)
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return i.ToKsqlClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterEnvironmentOutput).ToKsqlClusterEnvironmentPtrOutputWithContext(ctx)
}

// KsqlClusterEnvironmentPtrInput is an input type that accepts KsqlClusterEnvironmentArgs, KsqlClusterEnvironmentPtr and KsqlClusterEnvironmentPtrOutput values.
// You can construct a concrete instance of `KsqlClusterEnvironmentPtrInput` via:
//
//	        KsqlClusterEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KsqlClusterEnvironmentPtrInput interface {
	pulumi.Input

	ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput
	ToKsqlClusterEnvironmentPtrOutputWithContext(context.Context) KsqlClusterEnvironmentPtrOutput
}

type ksqlClusterEnvironmentPtrType KsqlClusterEnvironmentArgs

func KsqlClusterEnvironmentPtr(v *KsqlClusterEnvironmentArgs) KsqlClusterEnvironmentPtrInput {
	return (*ksqlClusterEnvironmentPtrType)(v)
}

func (*ksqlClusterEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterEnvironment)(nil)).Elem()
}

func (i *ksqlClusterEnvironmentPtrType) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return i.ToKsqlClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i *ksqlClusterEnvironmentPtrType) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterEnvironmentPtrOutput)
}

type KsqlClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (KsqlClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterEnvironment)(nil)).Elem()
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentOutput() KsqlClusterEnvironmentOutput {
	return o
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentOutputWithContext(ctx context.Context) KsqlClusterEnvironmentOutput {
	return o
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return o.ToKsqlClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KsqlClusterEnvironment) *KsqlClusterEnvironment {
		return &v
	}).(KsqlClusterEnvironmentPtrOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KsqlClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KsqlClusterEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KsqlClusterEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterEnvironment)(nil)).Elem()
}

func (o KsqlClusterEnvironmentPtrOutput) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return o
}

func (o KsqlClusterEnvironmentPtrOutput) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return o
}

func (o KsqlClusterEnvironmentPtrOutput) Elem() KsqlClusterEnvironmentOutput {
	return o.ApplyT(func(v *KsqlClusterEnvironment) KsqlClusterEnvironment {
		if v != nil {
			return *v
		}
		var ret KsqlClusterEnvironment
		return ret
	}).(KsqlClusterEnvironmentOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KsqlClusterEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KsqlClusterKafkaCluster struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id string `pulumi:"id"`
}

// KsqlClusterKafkaClusterInput is an input type that accepts KsqlClusterKafkaClusterArgs and KsqlClusterKafkaClusterOutput values.
// You can construct a concrete instance of `KsqlClusterKafkaClusterInput` via:
//
//	KsqlClusterKafkaClusterArgs{...}
type KsqlClusterKafkaClusterInput interface {
	pulumi.Input

	ToKsqlClusterKafkaClusterOutput() KsqlClusterKafkaClusterOutput
	ToKsqlClusterKafkaClusterOutputWithContext(context.Context) KsqlClusterKafkaClusterOutput
}

type KsqlClusterKafkaClusterArgs struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KsqlClusterKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterKafkaCluster)(nil)).Elem()
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterOutput() KsqlClusterKafkaClusterOutput {
	return i.ToKsqlClusterKafkaClusterOutputWithContext(context.Background())
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterKafkaClusterOutput)
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return i.ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterKafkaClusterOutput).ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx)
}

// KsqlClusterKafkaClusterPtrInput is an input type that accepts KsqlClusterKafkaClusterArgs, KsqlClusterKafkaClusterPtr and KsqlClusterKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KsqlClusterKafkaClusterPtrInput` via:
//
//	        KsqlClusterKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KsqlClusterKafkaClusterPtrInput interface {
	pulumi.Input

	ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput
	ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Context) KsqlClusterKafkaClusterPtrOutput
}

type ksqlClusterKafkaClusterPtrType KsqlClusterKafkaClusterArgs

func KsqlClusterKafkaClusterPtr(v *KsqlClusterKafkaClusterArgs) KsqlClusterKafkaClusterPtrInput {
	return (*ksqlClusterKafkaClusterPtrType)(v)
}

func (*ksqlClusterKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterKafkaCluster)(nil)).Elem()
}

func (i *ksqlClusterKafkaClusterPtrType) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return i.ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *ksqlClusterKafkaClusterPtrType) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterKafkaClusterPtrOutput)
}

type KsqlClusterKafkaClusterOutput struct{ *pulumi.OutputState }

func (KsqlClusterKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterKafkaCluster)(nil)).Elem()
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterOutput() KsqlClusterKafkaClusterOutput {
	return o
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterOutput {
	return o
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return o.ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KsqlClusterKafkaCluster) *KsqlClusterKafkaCluster {
		return &v
	}).(KsqlClusterKafkaClusterPtrOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KsqlClusterKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KsqlClusterKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KsqlClusterKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterKafkaCluster)(nil)).Elem()
}

func (o KsqlClusterKafkaClusterPtrOutput) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return o
}

func (o KsqlClusterKafkaClusterPtrOutput) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return o
}

func (o KsqlClusterKafkaClusterPtrOutput) Elem() KsqlClusterKafkaClusterOutput {
	return o.ApplyT(func(v *KsqlClusterKafkaCluster) KsqlClusterKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KsqlClusterKafkaCluster
		return ret
	}).(KsqlClusterKafkaClusterOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KsqlClusterKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkAw struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account *string `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService *string `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc *string `pulumi:"vpc"`
}

// NetworkAwInput is an input type that accepts NetworkAwArgs and NetworkAwOutput values.
// You can construct a concrete instance of `NetworkAwInput` via:
//
//	NetworkAwArgs{...}
type NetworkAwInput interface {
	pulumi.Input

	ToNetworkAwOutput() NetworkAwOutput
	ToNetworkAwOutputWithContext(context.Context) NetworkAwOutput
}

type NetworkAwArgs struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account pulumi.StringPtrInput `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService pulumi.StringPtrInput `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (NetworkAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAw)(nil)).Elem()
}

func (i NetworkAwArgs) ToNetworkAwOutput() NetworkAwOutput {
	return i.ToNetworkAwOutputWithContext(context.Background())
}

func (i NetworkAwArgs) ToNetworkAwOutputWithContext(ctx context.Context) NetworkAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAwOutput)
}

// NetworkAwArrayInput is an input type that accepts NetworkAwArray and NetworkAwArrayOutput values.
// You can construct a concrete instance of `NetworkAwArrayInput` via:
//
//	NetworkAwArray{ NetworkAwArgs{...} }
type NetworkAwArrayInput interface {
	pulumi.Input

	ToNetworkAwArrayOutput() NetworkAwArrayOutput
	ToNetworkAwArrayOutputWithContext(context.Context) NetworkAwArrayOutput
}

type NetworkAwArray []NetworkAwInput

func (NetworkAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAw)(nil)).Elem()
}

func (i NetworkAwArray) ToNetworkAwArrayOutput() NetworkAwArrayOutput {
	return i.ToNetworkAwArrayOutputWithContext(context.Background())
}

func (i NetworkAwArray) ToNetworkAwArrayOutputWithContext(ctx context.Context) NetworkAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAwArrayOutput)
}

type NetworkAwOutput struct{ *pulumi.OutputState }

func (NetworkAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAw)(nil)).Elem()
}

func (o NetworkAwOutput) ToNetworkAwOutput() NetworkAwOutput {
	return o
}

func (o NetworkAwOutput) ToNetworkAwOutputWithContext(ctx context.Context) NetworkAwOutput {
	return o
}

// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
func (o NetworkAwOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
func (o NetworkAwOutput) PrivateLinkEndpointService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.PrivateLinkEndpointService }).(pulumi.StringPtrOutput)
}

// (Required String) The Confluent Cloud VPC ID.
func (o NetworkAwOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type NetworkAwArrayOutput struct{ *pulumi.OutputState }

func (NetworkAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAw)(nil)).Elem()
}

func (o NetworkAwArrayOutput) ToNetworkAwArrayOutput() NetworkAwArrayOutput {
	return o
}

func (o NetworkAwArrayOutput) ToNetworkAwArrayOutputWithContext(ctx context.Context) NetworkAwArrayOutput {
	return o
}

func (o NetworkAwArrayOutput) Index(i pulumi.IntInput) NetworkAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAw {
		return vs[0].([]NetworkAw)[vs[1].(int)]
	}).(NetworkAwOutput)
}

type NetworkAzure struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
	PrivateLinkServiceAliases map[string]string `pulumi:"privateLinkServiceAliases"`
}

// NetworkAzureInput is an input type that accepts NetworkAzureArgs and NetworkAzureOutput values.
// You can construct a concrete instance of `NetworkAzureInput` via:
//
//	NetworkAzureArgs{...}
type NetworkAzureInput interface {
	pulumi.Input

	ToNetworkAzureOutput() NetworkAzureOutput
	ToNetworkAzureOutputWithContext(context.Context) NetworkAzureOutput
}

type NetworkAzureArgs struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
	PrivateLinkServiceAliases pulumi.StringMapInput `pulumi:"privateLinkServiceAliases"`
}

func (NetworkAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAzure)(nil)).Elem()
}

func (i NetworkAzureArgs) ToNetworkAzureOutput() NetworkAzureOutput {
	return i.ToNetworkAzureOutputWithContext(context.Background())
}

func (i NetworkAzureArgs) ToNetworkAzureOutputWithContext(ctx context.Context) NetworkAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAzureOutput)
}

// NetworkAzureArrayInput is an input type that accepts NetworkAzureArray and NetworkAzureArrayOutput values.
// You can construct a concrete instance of `NetworkAzureArrayInput` via:
//
//	NetworkAzureArray{ NetworkAzureArgs{...} }
type NetworkAzureArrayInput interface {
	pulumi.Input

	ToNetworkAzureArrayOutput() NetworkAzureArrayOutput
	ToNetworkAzureArrayOutputWithContext(context.Context) NetworkAzureArrayOutput
}

type NetworkAzureArray []NetworkAzureInput

func (NetworkAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAzure)(nil)).Elem()
}

func (i NetworkAzureArray) ToNetworkAzureArrayOutput() NetworkAzureArrayOutput {
	return i.ToNetworkAzureArrayOutputWithContext(context.Background())
}

func (i NetworkAzureArray) ToNetworkAzureArrayOutputWithContext(ctx context.Context) NetworkAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAzureArrayOutput)
}

type NetworkAzureOutput struct{ *pulumi.OutputState }

func (NetworkAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAzure)(nil)).Elem()
}

func (o NetworkAzureOutput) ToNetworkAzureOutput() NetworkAzureOutput {
	return o
}

func (o NetworkAzureOutput) ToNetworkAzureOutputWithContext(ctx context.Context) NetworkAzureOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
func (o NetworkAzureOutput) PrivateLinkServiceAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkAzure) map[string]string { return v.PrivateLinkServiceAliases }).(pulumi.StringMapOutput)
}

type NetworkAzureArrayOutput struct{ *pulumi.OutputState }

func (NetworkAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAzure)(nil)).Elem()
}

func (o NetworkAzureArrayOutput) ToNetworkAzureArrayOutput() NetworkAzureArrayOutput {
	return o
}

func (o NetworkAzureArrayOutput) ToNetworkAzureArrayOutputWithContext(ctx context.Context) NetworkAzureArrayOutput {
	return o
}

func (o NetworkAzureArrayOutput) Index(i pulumi.IntInput) NetworkAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAzure {
		return vs[0].([]NetworkAzure)[vs[1].(int)]
	}).(NetworkAzureOutput)
}

type NetworkDnsConfig struct {
	// Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	Resolution string `pulumi:"resolution"`
}

// NetworkDnsConfigInput is an input type that accepts NetworkDnsConfigArgs and NetworkDnsConfigOutput values.
// You can construct a concrete instance of `NetworkDnsConfigInput` via:
//
//	NetworkDnsConfigArgs{...}
type NetworkDnsConfigInput interface {
	pulumi.Input

	ToNetworkDnsConfigOutput() NetworkDnsConfigOutput
	ToNetworkDnsConfigOutputWithContext(context.Context) NetworkDnsConfigOutput
}

type NetworkDnsConfigArgs struct {
	// Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	Resolution pulumi.StringInput `pulumi:"resolution"`
}

func (NetworkDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDnsConfig)(nil)).Elem()
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigOutput() NetworkDnsConfigOutput {
	return i.ToNetworkDnsConfigOutputWithContext(context.Background())
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigOutputWithContext(ctx context.Context) NetworkDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDnsConfigOutput)
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return i.ToNetworkDnsConfigPtrOutputWithContext(context.Background())
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDnsConfigOutput).ToNetworkDnsConfigPtrOutputWithContext(ctx)
}

// NetworkDnsConfigPtrInput is an input type that accepts NetworkDnsConfigArgs, NetworkDnsConfigPtr and NetworkDnsConfigPtrOutput values.
// You can construct a concrete instance of `NetworkDnsConfigPtrInput` via:
//
//	        NetworkDnsConfigArgs{...}
//
//	or:
//
//	        nil
type NetworkDnsConfigPtrInput interface {
	pulumi.Input

	ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput
	ToNetworkDnsConfigPtrOutputWithContext(context.Context) NetworkDnsConfigPtrOutput
}

type networkDnsConfigPtrType NetworkDnsConfigArgs

func NetworkDnsConfigPtr(v *NetworkDnsConfigArgs) NetworkDnsConfigPtrInput {
	return (*networkDnsConfigPtrType)(v)
}

func (*networkDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDnsConfig)(nil)).Elem()
}

func (i *networkDnsConfigPtrType) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return i.ToNetworkDnsConfigPtrOutputWithContext(context.Background())
}

func (i *networkDnsConfigPtrType) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDnsConfigPtrOutput)
}

type NetworkDnsConfigOutput struct{ *pulumi.OutputState }

func (NetworkDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDnsConfig)(nil)).Elem()
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigOutput() NetworkDnsConfigOutput {
	return o
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigOutputWithContext(ctx context.Context) NetworkDnsConfigOutput {
	return o
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return o.ToNetworkDnsConfigPtrOutputWithContext(context.Background())
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkDnsConfig) *NetworkDnsConfig {
		return &v
	}).(NetworkDnsConfigPtrOutput)
}

// Network DNS resolution.
// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
func (o NetworkDnsConfigOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkDnsConfig) string { return v.Resolution }).(pulumi.StringOutput)
}

type NetworkDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (NetworkDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDnsConfig)(nil)).Elem()
}

func (o NetworkDnsConfigPtrOutput) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return o
}

func (o NetworkDnsConfigPtrOutput) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return o
}

func (o NetworkDnsConfigPtrOutput) Elem() NetworkDnsConfigOutput {
	return o.ApplyT(func(v *NetworkDnsConfig) NetworkDnsConfig {
		if v != nil {
			return *v
		}
		var ret NetworkDnsConfig
		return ret
	}).(NetworkDnsConfigOutput)
}

// Network DNS resolution.
// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
func (o NetworkDnsConfigPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkDnsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(pulumi.StringPtrOutput)
}

type NetworkEnvironment struct {
	// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// NetworkEnvironmentInput is an input type that accepts NetworkEnvironmentArgs and NetworkEnvironmentOutput values.
// You can construct a concrete instance of `NetworkEnvironmentInput` via:
//
//	NetworkEnvironmentArgs{...}
type NetworkEnvironmentInput interface {
	pulumi.Input

	ToNetworkEnvironmentOutput() NetworkEnvironmentOutput
	ToNetworkEnvironmentOutputWithContext(context.Context) NetworkEnvironmentOutput
}

type NetworkEnvironmentArgs struct {
	// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEnvironment)(nil)).Elem()
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentOutput() NetworkEnvironmentOutput {
	return i.ToNetworkEnvironmentOutputWithContext(context.Background())
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentOutputWithContext(ctx context.Context) NetworkEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentOutput)
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return i.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentOutput).ToNetworkEnvironmentPtrOutputWithContext(ctx)
}

// NetworkEnvironmentPtrInput is an input type that accepts NetworkEnvironmentArgs, NetworkEnvironmentPtr and NetworkEnvironmentPtrOutput values.
// You can construct a concrete instance of `NetworkEnvironmentPtrInput` via:
//
//	        NetworkEnvironmentArgs{...}
//
//	or:
//
//	        nil
type NetworkEnvironmentPtrInput interface {
	pulumi.Input

	ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput
	ToNetworkEnvironmentPtrOutputWithContext(context.Context) NetworkEnvironmentPtrOutput
}

type networkEnvironmentPtrType NetworkEnvironmentArgs

func NetworkEnvironmentPtr(v *NetworkEnvironmentArgs) NetworkEnvironmentPtrInput {
	return (*networkEnvironmentPtrType)(v)
}

func (*networkEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEnvironment)(nil)).Elem()
}

func (i *networkEnvironmentPtrType) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return i.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (i *networkEnvironmentPtrType) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentPtrOutput)
}

type NetworkEnvironmentOutput struct{ *pulumi.OutputState }

func (NetworkEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEnvironment)(nil)).Elem()
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentOutput() NetworkEnvironmentOutput {
	return o
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentOutputWithContext(ctx context.Context) NetworkEnvironmentOutput {
	return o
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return o.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkEnvironment) *NetworkEnvironment {
		return &v
	}).(NetworkEnvironmentPtrOutput)
}

// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
func (o NetworkEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (NetworkEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEnvironment)(nil)).Elem()
}

func (o NetworkEnvironmentPtrOutput) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return o
}

func (o NetworkEnvironmentPtrOutput) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return o
}

func (o NetworkEnvironmentPtrOutput) Elem() NetworkEnvironmentOutput {
	return o.ApplyT(func(v *NetworkEnvironment) NetworkEnvironment {
		if v != nil {
			return *v
		}
		var ret NetworkEnvironment
		return ret
	}).(NetworkEnvironmentOutput)
}

// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
func (o NetworkEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkGcp struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments map[string]string `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project *string `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork *string `pulumi:"vpcNetwork"`
}

// NetworkGcpInput is an input type that accepts NetworkGcpArgs and NetworkGcpOutput values.
// You can construct a concrete instance of `NetworkGcpInput` via:
//
//	NetworkGcpArgs{...}
type NetworkGcpInput interface {
	pulumi.Input

	ToNetworkGcpOutput() NetworkGcpOutput
	ToNetworkGcpOutputWithContext(context.Context) NetworkGcpOutput
}

type NetworkGcpArgs struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments pulumi.StringMapInput `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork pulumi.StringPtrInput `pulumi:"vpcNetwork"`
}

func (NetworkGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGcp)(nil)).Elem()
}

func (i NetworkGcpArgs) ToNetworkGcpOutput() NetworkGcpOutput {
	return i.ToNetworkGcpOutputWithContext(context.Background())
}

func (i NetworkGcpArgs) ToNetworkGcpOutputWithContext(ctx context.Context) NetworkGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGcpOutput)
}

// NetworkGcpArrayInput is an input type that accepts NetworkGcpArray and NetworkGcpArrayOutput values.
// You can construct a concrete instance of `NetworkGcpArrayInput` via:
//
//	NetworkGcpArray{ NetworkGcpArgs{...} }
type NetworkGcpArrayInput interface {
	pulumi.Input

	ToNetworkGcpArrayOutput() NetworkGcpArrayOutput
	ToNetworkGcpArrayOutputWithContext(context.Context) NetworkGcpArrayOutput
}

type NetworkGcpArray []NetworkGcpInput

func (NetworkGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGcp)(nil)).Elem()
}

func (i NetworkGcpArray) ToNetworkGcpArrayOutput() NetworkGcpArrayOutput {
	return i.ToNetworkGcpArrayOutputWithContext(context.Background())
}

func (i NetworkGcpArray) ToNetworkGcpArrayOutputWithContext(ctx context.Context) NetworkGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGcpArrayOutput)
}

type NetworkGcpOutput struct{ *pulumi.OutputState }

func (NetworkGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGcp)(nil)).Elem()
}

func (o NetworkGcpOutput) ToNetworkGcpOutput() NetworkGcpOutput {
	return o
}

func (o NetworkGcpOutput) ToNetworkGcpOutputWithContext(ctx context.Context) NetworkGcpOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
func (o NetworkGcpOutput) PrivateServiceConnectServiceAttachments() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkGcp) map[string]string { return v.PrivateServiceConnectServiceAttachments }).(pulumi.StringMapOutput)
}

// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
func (o NetworkGcpOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGcp) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// (Required String) The network name of the Confluent Cloud VPC.
func (o NetworkGcpOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGcp) *string { return v.VpcNetwork }).(pulumi.StringPtrOutput)
}

type NetworkGcpArrayOutput struct{ *pulumi.OutputState }

func (NetworkGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGcp)(nil)).Elem()
}

func (o NetworkGcpArrayOutput) ToNetworkGcpArrayOutput() NetworkGcpArrayOutput {
	return o
}

func (o NetworkGcpArrayOutput) ToNetworkGcpArrayOutputWithContext(ctx context.Context) NetworkGcpArrayOutput {
	return o
}

func (o NetworkGcpArrayOutput) Index(i pulumi.IntInput) NetworkGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkGcp {
		return vs[0].([]NetworkGcp)[vs[1].(int)]
	}).(NetworkGcpOutput)
}

type PeeringAws struct {
	// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
	// The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes []string `pulumi:"routes"`
	// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc string `pulumi:"vpc"`
}

// PeeringAwsInput is an input type that accepts PeeringAwsArgs and PeeringAwsOutput values.
// You can construct a concrete instance of `PeeringAwsInput` via:
//
//	PeeringAwsArgs{...}
type PeeringAwsInput interface {
	pulumi.Input

	ToPeeringAwsOutput() PeeringAwsOutput
	ToPeeringAwsOutputWithContext(context.Context) PeeringAwsOutput
}

type PeeringAwsArgs struct {
	// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
	// The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (PeeringAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAws)(nil)).Elem()
}

func (i PeeringAwsArgs) ToPeeringAwsOutput() PeeringAwsOutput {
	return i.ToPeeringAwsOutputWithContext(context.Background())
}

func (i PeeringAwsArgs) ToPeeringAwsOutputWithContext(ctx context.Context) PeeringAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsOutput)
}

func (i PeeringAwsArgs) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return i.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (i PeeringAwsArgs) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsOutput).ToPeeringAwsPtrOutputWithContext(ctx)
}

// PeeringAwsPtrInput is an input type that accepts PeeringAwsArgs, PeeringAwsPtr and PeeringAwsPtrOutput values.
// You can construct a concrete instance of `PeeringAwsPtrInput` via:
//
//	        PeeringAwsArgs{...}
//
//	or:
//
//	        nil
type PeeringAwsPtrInput interface {
	pulumi.Input

	ToPeeringAwsPtrOutput() PeeringAwsPtrOutput
	ToPeeringAwsPtrOutputWithContext(context.Context) PeeringAwsPtrOutput
}

type peeringAwsPtrType PeeringAwsArgs

func PeeringAwsPtr(v *PeeringAwsArgs) PeeringAwsPtrInput {
	return (*peeringAwsPtrType)(v)
}

func (*peeringAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAws)(nil)).Elem()
}

func (i *peeringAwsPtrType) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return i.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (i *peeringAwsPtrType) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsPtrOutput)
}

type PeeringAwsOutput struct{ *pulumi.OutputState }

func (PeeringAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAws)(nil)).Elem()
}

func (o PeeringAwsOutput) ToPeeringAwsOutput() PeeringAwsOutput {
	return o
}

func (o PeeringAwsOutput) ToPeeringAwsOutputWithContext(ctx context.Context) PeeringAwsOutput {
	return o
}

func (o PeeringAwsOutput) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return o.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (o PeeringAwsOutput) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringAws) *PeeringAws {
		return &v
	}).(PeeringAwsPtrOutput)
}

// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o PeeringAwsOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.Account }).(pulumi.StringOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAwsOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o PeeringAwsOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PeeringAws) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o PeeringAwsOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.Vpc }).(pulumi.StringOutput)
}

type PeeringAwsPtrOutput struct{ *pulumi.OutputState }

func (PeeringAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAws)(nil)).Elem()
}

func (o PeeringAwsPtrOutput) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return o
}

func (o PeeringAwsPtrOutput) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return o
}

func (o PeeringAwsPtrOutput) Elem() PeeringAwsOutput {
	return o.ApplyT(func(v *PeeringAws) PeeringAws {
		if v != nil {
			return *v
		}
		var ret PeeringAws
		return ret
	}).(PeeringAwsOutput)
}

// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o PeeringAwsPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAwsPtrOutput) CustomerRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerRegion
	}).(pulumi.StringPtrOutput)
}

// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o PeeringAwsPtrOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PeeringAws) []string {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(pulumi.StringArrayOutput)
}

// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o PeeringAwsPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.Vpc
	}).(pulumi.StringPtrOutput)
}

type PeeringAzure struct {
	// The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant string `pulumi:"tenant"`
	// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet string `pulumi:"vnet"`
}

// PeeringAzureInput is an input type that accepts PeeringAzureArgs and PeeringAzureOutput values.
// You can construct a concrete instance of `PeeringAzureInput` via:
//
//	PeeringAzureArgs{...}
type PeeringAzureInput interface {
	pulumi.Input

	ToPeeringAzureOutput() PeeringAzureOutput
	ToPeeringAzureOutputWithContext(context.Context) PeeringAzureOutput
}

type PeeringAzureArgs struct {
	// The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant pulumi.StringInput `pulumi:"tenant"`
	// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet pulumi.StringInput `pulumi:"vnet"`
}

func (PeeringAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAzure)(nil)).Elem()
}

func (i PeeringAzureArgs) ToPeeringAzureOutput() PeeringAzureOutput {
	return i.ToPeeringAzureOutputWithContext(context.Background())
}

func (i PeeringAzureArgs) ToPeeringAzureOutputWithContext(ctx context.Context) PeeringAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzureOutput)
}

func (i PeeringAzureArgs) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return i.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (i PeeringAzureArgs) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzureOutput).ToPeeringAzurePtrOutputWithContext(ctx)
}

// PeeringAzurePtrInput is an input type that accepts PeeringAzureArgs, PeeringAzurePtr and PeeringAzurePtrOutput values.
// You can construct a concrete instance of `PeeringAzurePtrInput` via:
//
//	        PeeringAzureArgs{...}
//
//	or:
//
//	        nil
type PeeringAzurePtrInput interface {
	pulumi.Input

	ToPeeringAzurePtrOutput() PeeringAzurePtrOutput
	ToPeeringAzurePtrOutputWithContext(context.Context) PeeringAzurePtrOutput
}

type peeringAzurePtrType PeeringAzureArgs

func PeeringAzurePtr(v *PeeringAzureArgs) PeeringAzurePtrInput {
	return (*peeringAzurePtrType)(v)
}

func (*peeringAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAzure)(nil)).Elem()
}

func (i *peeringAzurePtrType) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return i.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (i *peeringAzurePtrType) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzurePtrOutput)
}

type PeeringAzureOutput struct{ *pulumi.OutputState }

func (PeeringAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAzure)(nil)).Elem()
}

func (o PeeringAzureOutput) ToPeeringAzureOutput() PeeringAzureOutput {
	return o
}

func (o PeeringAzureOutput) ToPeeringAzureOutputWithContext(ctx context.Context) PeeringAzureOutput {
	return o
}

func (o PeeringAzureOutput) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return o.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (o PeeringAzureOutput) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringAzure) *PeeringAzure {
		return &v
	}).(PeeringAzurePtrOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAzureOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o PeeringAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.Tenant }).(pulumi.StringOutput)
}

// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o PeeringAzureOutput) Vnet() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.Vnet }).(pulumi.StringOutput)
}

type PeeringAzurePtrOutput struct{ *pulumi.OutputState }

func (PeeringAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAzure)(nil)).Elem()
}

func (o PeeringAzurePtrOutput) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return o
}

func (o PeeringAzurePtrOutput) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return o
}

func (o PeeringAzurePtrOutput) Elem() PeeringAzureOutput {
	return o.ApplyT(func(v *PeeringAzure) PeeringAzure {
		if v != nil {
			return *v
		}
		var ret PeeringAzure
		return ret
	}).(PeeringAzureOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAzurePtrOutput) CustomerRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerRegion
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o PeeringAzurePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Tenant
	}).(pulumi.StringPtrOutput)
}

// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o PeeringAzurePtrOutput) Vnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Vnet
	}).(pulumi.StringPtrOutput)
}

type PeeringEnvironment struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PeeringEnvironmentInput is an input type that accepts PeeringEnvironmentArgs and PeeringEnvironmentOutput values.
// You can construct a concrete instance of `PeeringEnvironmentInput` via:
//
//	PeeringEnvironmentArgs{...}
type PeeringEnvironmentInput interface {
	pulumi.Input

	ToPeeringEnvironmentOutput() PeeringEnvironmentOutput
	ToPeeringEnvironmentOutputWithContext(context.Context) PeeringEnvironmentOutput
}

type PeeringEnvironmentArgs struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PeeringEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringEnvironment)(nil)).Elem()
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentOutput() PeeringEnvironmentOutput {
	return i.ToPeeringEnvironmentOutputWithContext(context.Background())
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentOutputWithContext(ctx context.Context) PeeringEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentOutput)
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return i.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentOutput).ToPeeringEnvironmentPtrOutputWithContext(ctx)
}

// PeeringEnvironmentPtrInput is an input type that accepts PeeringEnvironmentArgs, PeeringEnvironmentPtr and PeeringEnvironmentPtrOutput values.
// You can construct a concrete instance of `PeeringEnvironmentPtrInput` via:
//
//	        PeeringEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PeeringEnvironmentPtrInput interface {
	pulumi.Input

	ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput
	ToPeeringEnvironmentPtrOutputWithContext(context.Context) PeeringEnvironmentPtrOutput
}

type peeringEnvironmentPtrType PeeringEnvironmentArgs

func PeeringEnvironmentPtr(v *PeeringEnvironmentArgs) PeeringEnvironmentPtrInput {
	return (*peeringEnvironmentPtrType)(v)
}

func (*peeringEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringEnvironment)(nil)).Elem()
}

func (i *peeringEnvironmentPtrType) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return i.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (i *peeringEnvironmentPtrType) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentPtrOutput)
}

type PeeringEnvironmentOutput struct{ *pulumi.OutputState }

func (PeeringEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringEnvironment)(nil)).Elem()
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentOutput() PeeringEnvironmentOutput {
	return o
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentOutputWithContext(ctx context.Context) PeeringEnvironmentOutput {
	return o
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return o.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringEnvironment) *PeeringEnvironment {
		return &v
	}).(PeeringEnvironmentPtrOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PeeringEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PeeringEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringEnvironment)(nil)).Elem()
}

func (o PeeringEnvironmentPtrOutput) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return o
}

func (o PeeringEnvironmentPtrOutput) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return o
}

func (o PeeringEnvironmentPtrOutput) Elem() PeeringEnvironmentOutput {
	return o.ApplyT(func(v *PeeringEnvironment) PeeringEnvironment {
		if v != nil {
			return *v
		}
		var ret PeeringEnvironment
		return ret
	}).(PeeringEnvironmentOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PeeringGcp struct {
	// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes *bool `pulumi:"importCustomRoutes"`
	// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
	// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// PeeringGcpInput is an input type that accepts PeeringGcpArgs and PeeringGcpOutput values.
// You can construct a concrete instance of `PeeringGcpInput` via:
//
//	PeeringGcpArgs{...}
type PeeringGcpInput interface {
	pulumi.Input

	ToPeeringGcpOutput() PeeringGcpOutput
	ToPeeringGcpOutputWithContext(context.Context) PeeringGcpOutput
}

type PeeringGcpArgs struct {
	// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes pulumi.BoolPtrInput `pulumi:"importCustomRoutes"`
	// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
	// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (PeeringGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringGcp)(nil)).Elem()
}

func (i PeeringGcpArgs) ToPeeringGcpOutput() PeeringGcpOutput {
	return i.ToPeeringGcpOutputWithContext(context.Background())
}

func (i PeeringGcpArgs) ToPeeringGcpOutputWithContext(ctx context.Context) PeeringGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpOutput)
}

func (i PeeringGcpArgs) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return i.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (i PeeringGcpArgs) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpOutput).ToPeeringGcpPtrOutputWithContext(ctx)
}

// PeeringGcpPtrInput is an input type that accepts PeeringGcpArgs, PeeringGcpPtr and PeeringGcpPtrOutput values.
// You can construct a concrete instance of `PeeringGcpPtrInput` via:
//
//	        PeeringGcpArgs{...}
//
//	or:
//
//	        nil
type PeeringGcpPtrInput interface {
	pulumi.Input

	ToPeeringGcpPtrOutput() PeeringGcpPtrOutput
	ToPeeringGcpPtrOutputWithContext(context.Context) PeeringGcpPtrOutput
}

type peeringGcpPtrType PeeringGcpArgs

func PeeringGcpPtr(v *PeeringGcpArgs) PeeringGcpPtrInput {
	return (*peeringGcpPtrType)(v)
}

func (*peeringGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringGcp)(nil)).Elem()
}

func (i *peeringGcpPtrType) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return i.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (i *peeringGcpPtrType) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpPtrOutput)
}

type PeeringGcpOutput struct{ *pulumi.OutputState }

func (PeeringGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringGcp)(nil)).Elem()
}

func (o PeeringGcpOutput) ToPeeringGcpOutput() PeeringGcpOutput {
	return o
}

func (o PeeringGcpOutput) ToPeeringGcpOutputWithContext(ctx context.Context) PeeringGcpOutput {
	return o
}

func (o PeeringGcpOutput) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return o.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (o PeeringGcpOutput) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringGcp) *PeeringGcp {
		return &v
	}).(PeeringGcpPtrOutput)
}

// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o PeeringGcpOutput) ImportCustomRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringGcp) *bool { return v.ImportCustomRoutes }).(pulumi.BoolPtrOutput)
}

// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PeeringGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringGcp) string { return v.Project }).(pulumi.StringOutput)
}

// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o PeeringGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type PeeringGcpPtrOutput struct{ *pulumi.OutputState }

func (PeeringGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringGcp)(nil)).Elem()
}

func (o PeeringGcpPtrOutput) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return o
}

func (o PeeringGcpPtrOutput) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return o
}

func (o PeeringGcpPtrOutput) Elem() PeeringGcpOutput {
	return o.ApplyT(func(v *PeeringGcp) PeeringGcp {
		if v != nil {
			return *v
		}
		var ret PeeringGcp
		return ret
	}).(PeeringGcpOutput)
}

// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o PeeringGcpPtrOutput) ImportCustomRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *bool {
		if v == nil {
			return nil
		}
		return v.ImportCustomRoutes
	}).(pulumi.BoolPtrOutput)
}

// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PeeringGcpPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o PeeringGcpPtrOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *string {
		if v == nil {
			return nil
		}
		return &v.VpcNetwork
	}).(pulumi.StringPtrOutput)
}

type PeeringNetwork struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PeeringNetworkInput is an input type that accepts PeeringNetworkArgs and PeeringNetworkOutput values.
// You can construct a concrete instance of `PeeringNetworkInput` via:
//
//	PeeringNetworkArgs{...}
type PeeringNetworkInput interface {
	pulumi.Input

	ToPeeringNetworkOutput() PeeringNetworkOutput
	ToPeeringNetworkOutputWithContext(context.Context) PeeringNetworkOutput
}

type PeeringNetworkArgs struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringNetwork)(nil)).Elem()
}

func (i PeeringNetworkArgs) ToPeeringNetworkOutput() PeeringNetworkOutput {
	return i.ToPeeringNetworkOutputWithContext(context.Background())
}

func (i PeeringNetworkArgs) ToPeeringNetworkOutputWithContext(ctx context.Context) PeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkOutput)
}

func (i PeeringNetworkArgs) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return i.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i PeeringNetworkArgs) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkOutput).ToPeeringNetworkPtrOutputWithContext(ctx)
}

// PeeringNetworkPtrInput is an input type that accepts PeeringNetworkArgs, PeeringNetworkPtr and PeeringNetworkPtrOutput values.
// You can construct a concrete instance of `PeeringNetworkPtrInput` via:
//
//	        PeeringNetworkArgs{...}
//
//	or:
//
//	        nil
type PeeringNetworkPtrInput interface {
	pulumi.Input

	ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput
	ToPeeringNetworkPtrOutputWithContext(context.Context) PeeringNetworkPtrOutput
}

type peeringNetworkPtrType PeeringNetworkArgs

func PeeringNetworkPtr(v *PeeringNetworkArgs) PeeringNetworkPtrInput {
	return (*peeringNetworkPtrType)(v)
}

func (*peeringNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringNetwork)(nil)).Elem()
}

func (i *peeringNetworkPtrType) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return i.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i *peeringNetworkPtrType) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkPtrOutput)
}

type PeeringNetworkOutput struct{ *pulumi.OutputState }

func (PeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringNetwork)(nil)).Elem()
}

func (o PeeringNetworkOutput) ToPeeringNetworkOutput() PeeringNetworkOutput {
	return o
}

func (o PeeringNetworkOutput) ToPeeringNetworkOutputWithContext(ctx context.Context) PeeringNetworkOutput {
	return o
}

func (o PeeringNetworkOutput) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return o.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (o PeeringNetworkOutput) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringNetwork) *PeeringNetwork {
		return &v
	}).(PeeringNetworkPtrOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type PeeringNetworkPtrOutput struct{ *pulumi.OutputState }

func (PeeringNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringNetwork)(nil)).Elem()
}

func (o PeeringNetworkPtrOutput) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return o
}

func (o PeeringNetworkPtrOutput) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return o
}

func (o PeeringNetworkPtrOutput) Elem() PeeringNetworkOutput {
	return o.ApplyT(func(v *PeeringNetwork) PeeringNetwork {
		if v != nil {
			return *v
		}
		var ret PeeringNetwork
		return ret
	}).(PeeringNetworkOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessAws struct {
	// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
}

// PrivateLinkAccessAwsInput is an input type that accepts PrivateLinkAccessAwsArgs and PrivateLinkAccessAwsOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAwsInput` via:
//
//	PrivateLinkAccessAwsArgs{...}
type PrivateLinkAccessAwsInput interface {
	pulumi.Input

	ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput
	ToPrivateLinkAccessAwsOutputWithContext(context.Context) PrivateLinkAccessAwsOutput
}

type PrivateLinkAccessAwsArgs struct {
	// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
}

func (PrivateLinkAccessAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAws)(nil)).Elem()
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput {
	return i.ToPrivateLinkAccessAwsOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsOutputWithContext(ctx context.Context) PrivateLinkAccessAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsOutput)
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return i.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsOutput).ToPrivateLinkAccessAwsPtrOutputWithContext(ctx)
}

// PrivateLinkAccessAwsPtrInput is an input type that accepts PrivateLinkAccessAwsArgs, PrivateLinkAccessAwsPtr and PrivateLinkAccessAwsPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAwsPtrInput` via:
//
//	        PrivateLinkAccessAwsArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessAwsPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput
	ToPrivateLinkAccessAwsPtrOutputWithContext(context.Context) PrivateLinkAccessAwsPtrOutput
}

type privateLinkAccessAwsPtrType PrivateLinkAccessAwsArgs

func PrivateLinkAccessAwsPtr(v *PrivateLinkAccessAwsArgs) PrivateLinkAccessAwsPtrInput {
	return (*privateLinkAccessAwsPtrType)(v)
}

func (*privateLinkAccessAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAws)(nil)).Elem()
}

func (i *privateLinkAccessAwsPtrType) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return i.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessAwsPtrType) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsPtrOutput)
}

type PrivateLinkAccessAwsOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAws)(nil)).Elem()
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput {
	return o
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsOutputWithContext(ctx context.Context) PrivateLinkAccessAwsOutput {
	return o
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return o.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessAws) *PrivateLinkAccessAws {
		return &v
	}).(PrivateLinkAccessAwsPtrOutput)
}

// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o PrivateLinkAccessAwsOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessAws) string { return v.Account }).(pulumi.StringOutput)
}

type PrivateLinkAccessAwsPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAws)(nil)).Elem()
}

func (o PrivateLinkAccessAwsPtrOutput) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return o
}

func (o PrivateLinkAccessAwsPtrOutput) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return o
}

func (o PrivateLinkAccessAwsPtrOutput) Elem() PrivateLinkAccessAwsOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAws) PrivateLinkAccessAws {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessAws
		return ret
	}).(PrivateLinkAccessAwsOutput)
}

// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o PrivateLinkAccessAwsPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAws) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessAzure struct {
	// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription string `pulumi:"subscription"`
}

// PrivateLinkAccessAzureInput is an input type that accepts PrivateLinkAccessAzureArgs and PrivateLinkAccessAzureOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAzureInput` via:
//
//	PrivateLinkAccessAzureArgs{...}
type PrivateLinkAccessAzureInput interface {
	pulumi.Input

	ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput
	ToPrivateLinkAccessAzureOutputWithContext(context.Context) PrivateLinkAccessAzureOutput
}

type PrivateLinkAccessAzureArgs struct {
	// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (PrivateLinkAccessAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAzure)(nil)).Elem()
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput {
	return i.ToPrivateLinkAccessAzureOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzureOutputWithContext(ctx context.Context) PrivateLinkAccessAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzureOutput)
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return i.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzureOutput).ToPrivateLinkAccessAzurePtrOutputWithContext(ctx)
}

// PrivateLinkAccessAzurePtrInput is an input type that accepts PrivateLinkAccessAzureArgs, PrivateLinkAccessAzurePtr and PrivateLinkAccessAzurePtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAzurePtrInput` via:
//
//	        PrivateLinkAccessAzureArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessAzurePtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput
	ToPrivateLinkAccessAzurePtrOutputWithContext(context.Context) PrivateLinkAccessAzurePtrOutput
}

type privateLinkAccessAzurePtrType PrivateLinkAccessAzureArgs

func PrivateLinkAccessAzurePtr(v *PrivateLinkAccessAzureArgs) PrivateLinkAccessAzurePtrInput {
	return (*privateLinkAccessAzurePtrType)(v)
}

func (*privateLinkAccessAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAzure)(nil)).Elem()
}

func (i *privateLinkAccessAzurePtrType) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return i.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessAzurePtrType) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzurePtrOutput)
}

type PrivateLinkAccessAzureOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAzure)(nil)).Elem()
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput {
	return o
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzureOutputWithContext(ctx context.Context) PrivateLinkAccessAzureOutput {
	return o
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return o.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessAzure) *PrivateLinkAccessAzure {
		return &v
	}).(PrivateLinkAccessAzurePtrOutput)
}

// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o PrivateLinkAccessAzureOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessAzure) string { return v.Subscription }).(pulumi.StringOutput)
}

type PrivateLinkAccessAzurePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAzure)(nil)).Elem()
}

func (o PrivateLinkAccessAzurePtrOutput) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return o
}

func (o PrivateLinkAccessAzurePtrOutput) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return o
}

func (o PrivateLinkAccessAzurePtrOutput) Elem() PrivateLinkAccessAzureOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAzure) PrivateLinkAccessAzure {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessAzure
		return ret
	}).(PrivateLinkAccessAzureOutput)
}

// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o PrivateLinkAccessAzurePtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Subscription
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessEnvironment struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PrivateLinkAccessEnvironmentInput is an input type that accepts PrivateLinkAccessEnvironmentArgs and PrivateLinkAccessEnvironmentOutput values.
// You can construct a concrete instance of `PrivateLinkAccessEnvironmentInput` via:
//
//	PrivateLinkAccessEnvironmentArgs{...}
type PrivateLinkAccessEnvironmentInput interface {
	pulumi.Input

	ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput
	ToPrivateLinkAccessEnvironmentOutputWithContext(context.Context) PrivateLinkAccessEnvironmentOutput
}

type PrivateLinkAccessEnvironmentArgs struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAccessEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput {
	return i.ToPrivateLinkAccessEnvironmentOutputWithContext(context.Background())
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentOutput)
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return i.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentOutput).ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx)
}

// PrivateLinkAccessEnvironmentPtrInput is an input type that accepts PrivateLinkAccessEnvironmentArgs, PrivateLinkAccessEnvironmentPtr and PrivateLinkAccessEnvironmentPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessEnvironmentPtrInput` via:
//
//	        PrivateLinkAccessEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessEnvironmentPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput
	ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Context) PrivateLinkAccessEnvironmentPtrOutput
}

type privateLinkAccessEnvironmentPtrType PrivateLinkAccessEnvironmentArgs

func PrivateLinkAccessEnvironmentPtr(v *PrivateLinkAccessEnvironmentArgs) PrivateLinkAccessEnvironmentPtrInput {
	return (*privateLinkAccessEnvironmentPtrType)(v)
}

func (*privateLinkAccessEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i *privateLinkAccessEnvironmentPtrType) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return i.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessEnvironmentPtrType) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentPtrOutput)
}

type PrivateLinkAccessEnvironmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return o.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessEnvironment) *PrivateLinkAccessEnvironment {
		return &v
	}).(PrivateLinkAccessEnvironmentPtrOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAccessEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o PrivateLinkAccessEnvironmentPtrOutput) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentPtrOutput) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentPtrOutput) Elem() PrivateLinkAccessEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAccessEnvironment) PrivateLinkAccessEnvironment {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessEnvironment
		return ret
	}).(PrivateLinkAccessEnvironmentOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessGcp struct {
	// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
}

// PrivateLinkAccessGcpInput is an input type that accepts PrivateLinkAccessGcpArgs and PrivateLinkAccessGcpOutput values.
// You can construct a concrete instance of `PrivateLinkAccessGcpInput` via:
//
//	PrivateLinkAccessGcpArgs{...}
type PrivateLinkAccessGcpInput interface {
	pulumi.Input

	ToPrivateLinkAccessGcpOutput() PrivateLinkAccessGcpOutput
	ToPrivateLinkAccessGcpOutputWithContext(context.Context) PrivateLinkAccessGcpOutput
}

type PrivateLinkAccessGcpArgs struct {
	// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
}

func (PrivateLinkAccessGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessGcp)(nil)).Elem()
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpOutput() PrivateLinkAccessGcpOutput {
	return i.ToPrivateLinkAccessGcpOutputWithContext(context.Background())
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpOutputWithContext(ctx context.Context) PrivateLinkAccessGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessGcpOutput)
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return i.ToPrivateLinkAccessGcpPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessGcpOutput).ToPrivateLinkAccessGcpPtrOutputWithContext(ctx)
}

// PrivateLinkAccessGcpPtrInput is an input type that accepts PrivateLinkAccessGcpArgs, PrivateLinkAccessGcpPtr and PrivateLinkAccessGcpPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessGcpPtrInput` via:
//
//	        PrivateLinkAccessGcpArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessGcpPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput
	ToPrivateLinkAccessGcpPtrOutputWithContext(context.Context) PrivateLinkAccessGcpPtrOutput
}

type privateLinkAccessGcpPtrType PrivateLinkAccessGcpArgs

func PrivateLinkAccessGcpPtr(v *PrivateLinkAccessGcpArgs) PrivateLinkAccessGcpPtrInput {
	return (*privateLinkAccessGcpPtrType)(v)
}

func (*privateLinkAccessGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessGcp)(nil)).Elem()
}

func (i *privateLinkAccessGcpPtrType) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return i.ToPrivateLinkAccessGcpPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessGcpPtrType) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessGcpPtrOutput)
}

type PrivateLinkAccessGcpOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessGcp)(nil)).Elem()
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpOutput() PrivateLinkAccessGcpOutput {
	return o
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpOutputWithContext(ctx context.Context) PrivateLinkAccessGcpOutput {
	return o
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return o.ToPrivateLinkAccessGcpPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessGcp) *PrivateLinkAccessGcp {
		return &v
	}).(PrivateLinkAccessGcpPtrOutput)
}

// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PrivateLinkAccessGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessGcp) string { return v.Project }).(pulumi.StringOutput)
}

type PrivateLinkAccessGcpPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessGcp)(nil)).Elem()
}

func (o PrivateLinkAccessGcpPtrOutput) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return o
}

func (o PrivateLinkAccessGcpPtrOutput) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return o
}

func (o PrivateLinkAccessGcpPtrOutput) Elem() PrivateLinkAccessGcpOutput {
	return o.ApplyT(func(v *PrivateLinkAccessGcp) PrivateLinkAccessGcp {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessGcp
		return ret
	}).(PrivateLinkAccessGcpOutput)
}

// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PrivateLinkAccessGcpPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessGcp) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessNetwork struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PrivateLinkAccessNetworkInput is an input type that accepts PrivateLinkAccessNetworkArgs and PrivateLinkAccessNetworkOutput values.
// You can construct a concrete instance of `PrivateLinkAccessNetworkInput` via:
//
//	PrivateLinkAccessNetworkArgs{...}
type PrivateLinkAccessNetworkInput interface {
	pulumi.Input

	ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput
	ToPrivateLinkAccessNetworkOutputWithContext(context.Context) PrivateLinkAccessNetworkOutput
}

type PrivateLinkAccessNetworkArgs struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAccessNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessNetwork)(nil)).Elem()
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput {
	return i.ToPrivateLinkAccessNetworkOutputWithContext(context.Background())
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkOutput)
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return i.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkOutput).ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx)
}

// PrivateLinkAccessNetworkPtrInput is an input type that accepts PrivateLinkAccessNetworkArgs, PrivateLinkAccessNetworkPtr and PrivateLinkAccessNetworkPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessNetworkPtrInput` via:
//
//	        PrivateLinkAccessNetworkArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessNetworkPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput
	ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Context) PrivateLinkAccessNetworkPtrOutput
}

type privateLinkAccessNetworkPtrType PrivateLinkAccessNetworkArgs

func PrivateLinkAccessNetworkPtr(v *PrivateLinkAccessNetworkArgs) PrivateLinkAccessNetworkPtrInput {
	return (*privateLinkAccessNetworkPtrType)(v)
}

func (*privateLinkAccessNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessNetwork)(nil)).Elem()
}

func (i *privateLinkAccessNetworkPtrType) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return i.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessNetworkPtrType) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkPtrOutput)
}

type PrivateLinkAccessNetworkOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessNetwork)(nil)).Elem()
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput {
	return o
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkOutput {
	return o
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return o.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessNetwork) *PrivateLinkAccessNetwork {
		return &v
	}).(PrivateLinkAccessNetworkPtrOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAccessNetworkPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessNetwork)(nil)).Elem()
}

func (o PrivateLinkAccessNetworkPtrOutput) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return o
}

func (o PrivateLinkAccessNetworkPtrOutput) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return o
}

func (o PrivateLinkAccessNetworkPtrOutput) Elem() PrivateLinkAccessNetworkOutput {
	return o.ApplyT(func(v *PrivateLinkAccessNetwork) PrivateLinkAccessNetwork {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessNetwork
		return ret
	}).(PrivateLinkAccessNetworkOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaCredentialsInput is an input type that accepts SchemaCredentialsArgs and SchemaCredentialsOutput values.
// You can construct a concrete instance of `SchemaCredentialsInput` via:
//
//	SchemaCredentialsArgs{...}
type SchemaCredentialsInput interface {
	pulumi.Input

	ToSchemaCredentialsOutput() SchemaCredentialsOutput
	ToSchemaCredentialsOutputWithContext(context.Context) SchemaCredentialsOutput
}

type SchemaCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaCredentials)(nil)).Elem()
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsOutput() SchemaCredentialsOutput {
	return i.ToSchemaCredentialsOutputWithContext(context.Background())
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsOutputWithContext(ctx context.Context) SchemaCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaCredentialsOutput)
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return i.ToSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaCredentialsOutput).ToSchemaCredentialsPtrOutputWithContext(ctx)
}

// SchemaCredentialsPtrInput is an input type that accepts SchemaCredentialsArgs, SchemaCredentialsPtr and SchemaCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaCredentialsPtrInput` via:
//
//	        SchemaCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput
	ToSchemaCredentialsPtrOutputWithContext(context.Context) SchemaCredentialsPtrOutput
}

type schemaCredentialsPtrType SchemaCredentialsArgs

func SchemaCredentialsPtr(v *SchemaCredentialsArgs) SchemaCredentialsPtrInput {
	return (*schemaCredentialsPtrType)(v)
}

func (*schemaCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaCredentials)(nil)).Elem()
}

func (i *schemaCredentialsPtrType) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return i.ToSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaCredentialsPtrType) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaCredentialsPtrOutput)
}

type SchemaCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaCredentials)(nil)).Elem()
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsOutput() SchemaCredentialsOutput {
	return o
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsOutputWithContext(ctx context.Context) SchemaCredentialsOutput {
	return o
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return o.ToSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaCredentials) *SchemaCredentials {
		return &v
	}).(SchemaCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaCredentials)(nil)).Elem()
}

func (o SchemaCredentialsPtrOutput) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return o
}

func (o SchemaCredentialsPtrOutput) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return o
}

func (o SchemaCredentialsPtrOutput) Elem() SchemaCredentialsOutput {
	return o.ApplyT(func(v *SchemaCredentials) SchemaCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaCredentials
		return ret
	}).(SchemaCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaRegistryClusterConfigCredentialsInput is an input type that accepts SchemaRegistryClusterConfigCredentialsArgs and SchemaRegistryClusterConfigCredentialsOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigCredentialsInput` via:
//
//	SchemaRegistryClusterConfigCredentialsArgs{...}
type SchemaRegistryClusterConfigCredentialsInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigCredentialsOutput() SchemaRegistryClusterConfigCredentialsOutput
	ToSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Context) SchemaRegistryClusterConfigCredentialsOutput
}

type SchemaRegistryClusterConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaRegistryClusterConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsOutput() SchemaRegistryClusterConfigCredentialsOutput {
	return i.ToSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigCredentialsOutput)
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigCredentialsOutput).ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterConfigCredentialsPtrInput is an input type that accepts SchemaRegistryClusterConfigCredentialsArgs, SchemaRegistryClusterConfigCredentialsPtr and SchemaRegistryClusterConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigCredentialsPtrInput` via:
//
//	        SchemaRegistryClusterConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterConfigCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput
	ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput
}

type schemaRegistryClusterConfigCredentialsPtrType SchemaRegistryClusterConfigCredentialsArgs

func SchemaRegistryClusterConfigCredentialsPtr(v *SchemaRegistryClusterConfigCredentialsArgs) SchemaRegistryClusterConfigCredentialsPtrInput {
	return (*schemaRegistryClusterConfigCredentialsPtrType)(v)
}

func (*schemaRegistryClusterConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i *schemaRegistryClusterConfigCredentialsPtrType) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterConfigCredentialsPtrType) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigCredentialsPtrOutput)
}

type SchemaRegistryClusterConfigCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsOutput() SchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterConfigCredentials) *SchemaRegistryClusterConfigCredentials {
		return &v
	}).(SchemaRegistryClusterConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryClusterConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaRegistryClusterConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigCredentialsPtrOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsPtrOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsPtrOutput) Elem() SchemaRegistryClusterConfigCredentialsOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigCredentials) SchemaRegistryClusterConfigCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterConfigCredentials
		return ret
	}).(SchemaRegistryClusterConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryClusterConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaRegistryClusterConfigSchemaRegistryClusterInput is an input type that accepts SchemaRegistryClusterConfigSchemaRegistryClusterArgs and SchemaRegistryClusterConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigSchemaRegistryClusterInput` via:
//
//	SchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
type SchemaRegistryClusterConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigSchemaRegistryClusterOutput() SchemaRegistryClusterConfigSchemaRegistryClusterOutput
	ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterOutput
}

type SchemaRegistryClusterConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutput() SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return i.ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigSchemaRegistryClusterOutput).ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput is an input type that accepts SchemaRegistryClusterConfigSchemaRegistryClusterArgs, SchemaRegistryClusterConfigSchemaRegistryClusterPtr and SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput` via:
//
//	        SchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
	ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
}

type schemaRegistryClusterConfigSchemaRegistryClusterPtrType SchemaRegistryClusterConfigSchemaRegistryClusterArgs

func SchemaRegistryClusterConfigSchemaRegistryClusterPtr(v *SchemaRegistryClusterConfigSchemaRegistryClusterArgs) SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput {
	return (*schemaRegistryClusterConfigSchemaRegistryClusterPtrType)(v)
}

func (*schemaRegistryClusterConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

type SchemaRegistryClusterConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutput() SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterConfigSchemaRegistryCluster) *SchemaRegistryClusterConfigSchemaRegistryCluster {
		return &v
	}).(SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Elem() SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigSchemaRegistryCluster) SchemaRegistryClusterConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterConfigSchemaRegistryCluster
		return ret
	}).(SchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterEnvironment struct {
	// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
	Id string `pulumi:"id"`
}

// SchemaRegistryClusterEnvironmentInput is an input type that accepts SchemaRegistryClusterEnvironmentArgs and SchemaRegistryClusterEnvironmentOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterEnvironmentInput` via:
//
//	SchemaRegistryClusterEnvironmentArgs{...}
type SchemaRegistryClusterEnvironmentInput interface {
	pulumi.Input

	ToSchemaRegistryClusterEnvironmentOutput() SchemaRegistryClusterEnvironmentOutput
	ToSchemaRegistryClusterEnvironmentOutputWithContext(context.Context) SchemaRegistryClusterEnvironmentOutput
}

type SchemaRegistryClusterEnvironmentArgs struct {
	// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (i SchemaRegistryClusterEnvironmentArgs) ToSchemaRegistryClusterEnvironmentOutput() SchemaRegistryClusterEnvironmentOutput {
	return i.ToSchemaRegistryClusterEnvironmentOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterEnvironmentArgs) ToSchemaRegistryClusterEnvironmentOutputWithContext(ctx context.Context) SchemaRegistryClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterEnvironmentOutput)
}

func (i SchemaRegistryClusterEnvironmentArgs) ToSchemaRegistryClusterEnvironmentPtrOutput() SchemaRegistryClusterEnvironmentPtrOutput {
	return i.ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterEnvironmentArgs) ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterEnvironmentOutput).ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterEnvironmentPtrInput is an input type that accepts SchemaRegistryClusterEnvironmentArgs, SchemaRegistryClusterEnvironmentPtr and SchemaRegistryClusterEnvironmentPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterEnvironmentPtrInput` via:
//
//	        SchemaRegistryClusterEnvironmentArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterEnvironmentPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterEnvironmentPtrOutput() SchemaRegistryClusterEnvironmentPtrOutput
	ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(context.Context) SchemaRegistryClusterEnvironmentPtrOutput
}

type schemaRegistryClusterEnvironmentPtrType SchemaRegistryClusterEnvironmentArgs

func SchemaRegistryClusterEnvironmentPtr(v *SchemaRegistryClusterEnvironmentArgs) SchemaRegistryClusterEnvironmentPtrInput {
	return (*schemaRegistryClusterEnvironmentPtrType)(v)
}

func (*schemaRegistryClusterEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (i *schemaRegistryClusterEnvironmentPtrType) ToSchemaRegistryClusterEnvironmentPtrOutput() SchemaRegistryClusterEnvironmentPtrOutput {
	return i.ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterEnvironmentPtrType) ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterEnvironmentPtrOutput)
}

type SchemaRegistryClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (o SchemaRegistryClusterEnvironmentOutput) ToSchemaRegistryClusterEnvironmentOutput() SchemaRegistryClusterEnvironmentOutput {
	return o
}

func (o SchemaRegistryClusterEnvironmentOutput) ToSchemaRegistryClusterEnvironmentOutputWithContext(ctx context.Context) SchemaRegistryClusterEnvironmentOutput {
	return o
}

func (o SchemaRegistryClusterEnvironmentOutput) ToSchemaRegistryClusterEnvironmentPtrOutput() SchemaRegistryClusterEnvironmentPtrOutput {
	return o.ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterEnvironmentOutput) ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterEnvironment) *SchemaRegistryClusterEnvironment {
		return &v
	}).(SchemaRegistryClusterEnvironmentPtrOutput)
}

// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
func (o SchemaRegistryClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryClusterEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (o SchemaRegistryClusterEnvironmentPtrOutput) ToSchemaRegistryClusterEnvironmentPtrOutput() SchemaRegistryClusterEnvironmentPtrOutput {
	return o
}

func (o SchemaRegistryClusterEnvironmentPtrOutput) ToSchemaRegistryClusterEnvironmentPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterEnvironmentPtrOutput {
	return o
}

func (o SchemaRegistryClusterEnvironmentPtrOutput) Elem() SchemaRegistryClusterEnvironmentOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterEnvironment) SchemaRegistryClusterEnvironment {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterEnvironment
		return ret
	}).(SchemaRegistryClusterEnvironmentOutput)
}

// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
func (o SchemaRegistryClusterEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaRegistryClusterModeCredentialsInput is an input type that accepts SchemaRegistryClusterModeCredentialsArgs and SchemaRegistryClusterModeCredentialsOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeCredentialsInput` via:
//
//	SchemaRegistryClusterModeCredentialsArgs{...}
type SchemaRegistryClusterModeCredentialsInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeCredentialsOutput() SchemaRegistryClusterModeCredentialsOutput
	ToSchemaRegistryClusterModeCredentialsOutputWithContext(context.Context) SchemaRegistryClusterModeCredentialsOutput
}

type SchemaRegistryClusterModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaRegistryClusterModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsOutput() SchemaRegistryClusterModeCredentialsOutput {
	return i.ToSchemaRegistryClusterModeCredentialsOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeCredentialsOutput)
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeCredentialsOutput).ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterModeCredentialsPtrInput is an input type that accepts SchemaRegistryClusterModeCredentialsArgs, SchemaRegistryClusterModeCredentialsPtr and SchemaRegistryClusterModeCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeCredentialsPtrInput` via:
//
//	        SchemaRegistryClusterModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterModeCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput
	ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Context) SchemaRegistryClusterModeCredentialsPtrOutput
}

type schemaRegistryClusterModeCredentialsPtrType SchemaRegistryClusterModeCredentialsArgs

func SchemaRegistryClusterModeCredentialsPtr(v *SchemaRegistryClusterModeCredentialsArgs) SchemaRegistryClusterModeCredentialsPtrInput {
	return (*schemaRegistryClusterModeCredentialsPtrType)(v)
}

func (*schemaRegistryClusterModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i *schemaRegistryClusterModeCredentialsPtrType) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterModeCredentialsPtrType) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeCredentialsPtrOutput)
}

type SchemaRegistryClusterModeCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsOutput() SchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterModeCredentials) *SchemaRegistryClusterModeCredentials {
		return &v
	}).(SchemaRegistryClusterModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryClusterModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaRegistryClusterModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterModeCredentialsPtrOutput) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsPtrOutput) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsPtrOutput) Elem() SchemaRegistryClusterModeCredentialsOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeCredentials) SchemaRegistryClusterModeCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterModeCredentials
		return ret
	}).(SchemaRegistryClusterModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryClusterModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaRegistryClusterModeSchemaRegistryClusterInput is an input type that accepts SchemaRegistryClusterModeSchemaRegistryClusterArgs and SchemaRegistryClusterModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeSchemaRegistryClusterInput` via:
//
//	SchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
type SchemaRegistryClusterModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeSchemaRegistryClusterOutput() SchemaRegistryClusterModeSchemaRegistryClusterOutput
	ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Context) SchemaRegistryClusterModeSchemaRegistryClusterOutput
}

type SchemaRegistryClusterModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryClusterModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterOutput() SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return i.ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeSchemaRegistryClusterOutput).ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterModeSchemaRegistryClusterPtrInput is an input type that accepts SchemaRegistryClusterModeSchemaRegistryClusterArgs, SchemaRegistryClusterModeSchemaRegistryClusterPtr and SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeSchemaRegistryClusterPtrInput` via:
//
//	        SchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
	ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
}

type schemaRegistryClusterModeSchemaRegistryClusterPtrType SchemaRegistryClusterModeSchemaRegistryClusterArgs

func SchemaRegistryClusterModeSchemaRegistryClusterPtr(v *SchemaRegistryClusterModeSchemaRegistryClusterArgs) SchemaRegistryClusterModeSchemaRegistryClusterPtrInput {
	return (*schemaRegistryClusterModeSchemaRegistryClusterPtrType)(v)
}

func (*schemaRegistryClusterModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaRegistryClusterModeSchemaRegistryClusterPtrType) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterModeSchemaRegistryClusterPtrType) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

type SchemaRegistryClusterModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterOutput() SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterModeSchemaRegistryCluster) *SchemaRegistryClusterModeSchemaRegistryCluster {
		return &v
	}).(SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Elem() SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeSchemaRegistryCluster) SchemaRegistryClusterModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterModeSchemaRegistryCluster
		return ret
	}).(SchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterRegion struct {
	// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
	Id string `pulumi:"id"`
}

// SchemaRegistryClusterRegionInput is an input type that accepts SchemaRegistryClusterRegionArgs and SchemaRegistryClusterRegionOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterRegionInput` via:
//
//	SchemaRegistryClusterRegionArgs{...}
type SchemaRegistryClusterRegionInput interface {
	pulumi.Input

	ToSchemaRegistryClusterRegionOutput() SchemaRegistryClusterRegionOutput
	ToSchemaRegistryClusterRegionOutputWithContext(context.Context) SchemaRegistryClusterRegionOutput
}

type SchemaRegistryClusterRegionArgs struct {
	// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryClusterRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterRegion)(nil)).Elem()
}

func (i SchemaRegistryClusterRegionArgs) ToSchemaRegistryClusterRegionOutput() SchemaRegistryClusterRegionOutput {
	return i.ToSchemaRegistryClusterRegionOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterRegionArgs) ToSchemaRegistryClusterRegionOutputWithContext(ctx context.Context) SchemaRegistryClusterRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterRegionOutput)
}

func (i SchemaRegistryClusterRegionArgs) ToSchemaRegistryClusterRegionPtrOutput() SchemaRegistryClusterRegionPtrOutput {
	return i.ToSchemaRegistryClusterRegionPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterRegionArgs) ToSchemaRegistryClusterRegionPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterRegionOutput).ToSchemaRegistryClusterRegionPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterRegionPtrInput is an input type that accepts SchemaRegistryClusterRegionArgs, SchemaRegistryClusterRegionPtr and SchemaRegistryClusterRegionPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterRegionPtrInput` via:
//
//	        SchemaRegistryClusterRegionArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterRegionPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterRegionPtrOutput() SchemaRegistryClusterRegionPtrOutput
	ToSchemaRegistryClusterRegionPtrOutputWithContext(context.Context) SchemaRegistryClusterRegionPtrOutput
}

type schemaRegistryClusterRegionPtrType SchemaRegistryClusterRegionArgs

func SchemaRegistryClusterRegionPtr(v *SchemaRegistryClusterRegionArgs) SchemaRegistryClusterRegionPtrInput {
	return (*schemaRegistryClusterRegionPtrType)(v)
}

func (*schemaRegistryClusterRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterRegion)(nil)).Elem()
}

func (i *schemaRegistryClusterRegionPtrType) ToSchemaRegistryClusterRegionPtrOutput() SchemaRegistryClusterRegionPtrOutput {
	return i.ToSchemaRegistryClusterRegionPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterRegionPtrType) ToSchemaRegistryClusterRegionPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterRegionPtrOutput)
}

type SchemaRegistryClusterRegionOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterRegion)(nil)).Elem()
}

func (o SchemaRegistryClusterRegionOutput) ToSchemaRegistryClusterRegionOutput() SchemaRegistryClusterRegionOutput {
	return o
}

func (o SchemaRegistryClusterRegionOutput) ToSchemaRegistryClusterRegionOutputWithContext(ctx context.Context) SchemaRegistryClusterRegionOutput {
	return o
}

func (o SchemaRegistryClusterRegionOutput) ToSchemaRegistryClusterRegionPtrOutput() SchemaRegistryClusterRegionPtrOutput {
	return o.ToSchemaRegistryClusterRegionPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterRegionOutput) ToSchemaRegistryClusterRegionPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterRegion) *SchemaRegistryClusterRegion {
		return &v
	}).(SchemaRegistryClusterRegionPtrOutput)
}

// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
func (o SchemaRegistryClusterRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterRegion) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryClusterRegionPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterRegion)(nil)).Elem()
}

func (o SchemaRegistryClusterRegionPtrOutput) ToSchemaRegistryClusterRegionPtrOutput() SchemaRegistryClusterRegionPtrOutput {
	return o
}

func (o SchemaRegistryClusterRegionPtrOutput) ToSchemaRegistryClusterRegionPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterRegionPtrOutput {
	return o
}

func (o SchemaRegistryClusterRegionPtrOutput) Elem() SchemaRegistryClusterRegionOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterRegion) SchemaRegistryClusterRegion {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterRegion
		return ret
	}).(SchemaRegistryClusterRegionOutput)
}

// The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `sgreg-1`. See [Schema Registry Regions](https://docs.confluent.io/cloud/current/stream-governance/packages.html#stream-governance-regions) to find a corresponding region ID based on desired cloud provider region and types of the billing package.
func (o SchemaRegistryClusterRegionPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterRegion) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaSchemaReference struct {
	// The name of the subject, representing the subject under which the referenced schema is registered.
	Name string `pulumi:"name"`
	// The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName string `pulumi:"subjectName"`
	// The version, representing the exact version of the schema under the registered subject.
	Version int `pulumi:"version"`
}

// SchemaSchemaReferenceInput is an input type that accepts SchemaSchemaReferenceArgs and SchemaSchemaReferenceOutput values.
// You can construct a concrete instance of `SchemaSchemaReferenceInput` via:
//
//	SchemaSchemaReferenceArgs{...}
type SchemaSchemaReferenceInput interface {
	pulumi.Input

	ToSchemaSchemaReferenceOutput() SchemaSchemaReferenceOutput
	ToSchemaSchemaReferenceOutputWithContext(context.Context) SchemaSchemaReferenceOutput
}

type SchemaSchemaReferenceArgs struct {
	// The name of the subject, representing the subject under which the referenced schema is registered.
	Name pulumi.StringInput `pulumi:"name"`
	// The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// The version, representing the exact version of the schema under the registered subject.
	Version pulumi.IntInput `pulumi:"version"`
}

func (SchemaSchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaReference)(nil)).Elem()
}

func (i SchemaSchemaReferenceArgs) ToSchemaSchemaReferenceOutput() SchemaSchemaReferenceOutput {
	return i.ToSchemaSchemaReferenceOutputWithContext(context.Background())
}

func (i SchemaSchemaReferenceArgs) ToSchemaSchemaReferenceOutputWithContext(ctx context.Context) SchemaSchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaReferenceOutput)
}

// SchemaSchemaReferenceArrayInput is an input type that accepts SchemaSchemaReferenceArray and SchemaSchemaReferenceArrayOutput values.
// You can construct a concrete instance of `SchemaSchemaReferenceArrayInput` via:
//
//	SchemaSchemaReferenceArray{ SchemaSchemaReferenceArgs{...} }
type SchemaSchemaReferenceArrayInput interface {
	pulumi.Input

	ToSchemaSchemaReferenceArrayOutput() SchemaSchemaReferenceArrayOutput
	ToSchemaSchemaReferenceArrayOutputWithContext(context.Context) SchemaSchemaReferenceArrayOutput
}

type SchemaSchemaReferenceArray []SchemaSchemaReferenceInput

func (SchemaSchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaSchemaReference)(nil)).Elem()
}

func (i SchemaSchemaReferenceArray) ToSchemaSchemaReferenceArrayOutput() SchemaSchemaReferenceArrayOutput {
	return i.ToSchemaSchemaReferenceArrayOutputWithContext(context.Background())
}

func (i SchemaSchemaReferenceArray) ToSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) SchemaSchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaReferenceArrayOutput)
}

type SchemaSchemaReferenceOutput struct{ *pulumi.OutputState }

func (SchemaSchemaReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaReference)(nil)).Elem()
}

func (o SchemaSchemaReferenceOutput) ToSchemaSchemaReferenceOutput() SchemaSchemaReferenceOutput {
	return o
}

func (o SchemaSchemaReferenceOutput) ToSchemaSchemaReferenceOutputWithContext(ctx context.Context) SchemaSchemaReferenceOutput {
	return o
}

// The name of the subject, representing the subject under which the referenced schema is registered.
func (o SchemaSchemaReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaSchemaReference) string { return v.Name }).(pulumi.StringOutput)
}

// The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
func (o SchemaSchemaReferenceOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaSchemaReference) string { return v.SubjectName }).(pulumi.StringOutput)
}

// The version, representing the exact version of the schema under the registered subject.
func (o SchemaSchemaReferenceOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v SchemaSchemaReference) int { return v.Version }).(pulumi.IntOutput)
}

type SchemaSchemaReferenceArrayOutput struct{ *pulumi.OutputState }

func (SchemaSchemaReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaSchemaReference)(nil)).Elem()
}

func (o SchemaSchemaReferenceArrayOutput) ToSchemaSchemaReferenceArrayOutput() SchemaSchemaReferenceArrayOutput {
	return o
}

func (o SchemaSchemaReferenceArrayOutput) ToSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) SchemaSchemaReferenceArrayOutput {
	return o
}

func (o SchemaSchemaReferenceArrayOutput) Index(i pulumi.IntInput) SchemaSchemaReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaSchemaReference {
		return vs[0].([]SchemaSchemaReference)[vs[1].(int)]
	}).(SchemaSchemaReferenceOutput)
}

type SchemaSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaSchemaRegistryClusterInput is an input type that accepts SchemaSchemaRegistryClusterArgs and SchemaSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaSchemaRegistryClusterInput` via:
//
//	SchemaSchemaRegistryClusterArgs{...}
type SchemaSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaSchemaRegistryClusterOutput() SchemaSchemaRegistryClusterOutput
	ToSchemaSchemaRegistryClusterOutputWithContext(context.Context) SchemaSchemaRegistryClusterOutput
}

type SchemaSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterOutput() SchemaSchemaRegistryClusterOutput {
	return i.ToSchemaSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaRegistryClusterOutput)
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return i.ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaRegistryClusterOutput).ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaSchemaRegistryClusterPtrInput is an input type that accepts SchemaSchemaRegistryClusterArgs, SchemaSchemaRegistryClusterPtr and SchemaSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaSchemaRegistryClusterPtrInput` via:
//
//	        SchemaSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput
	ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaSchemaRegistryClusterPtrOutput
}

type schemaSchemaRegistryClusterPtrType SchemaSchemaRegistryClusterArgs

func SchemaSchemaRegistryClusterPtr(v *SchemaSchemaRegistryClusterArgs) SchemaSchemaRegistryClusterPtrInput {
	return (*schemaSchemaRegistryClusterPtrType)(v)
}

func (*schemaSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaSchemaRegistryClusterPtrType) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return i.ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaSchemaRegistryClusterPtrType) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaRegistryClusterPtrOutput)
}

type SchemaSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterOutput() SchemaSchemaRegistryClusterOutput {
	return o
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterOutput {
	return o
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return o.ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaSchemaRegistryCluster) *SchemaSchemaRegistryCluster {
		return &v
	}).(SchemaSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaSchemaRegistryClusterPtrOutput) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaSchemaRegistryClusterPtrOutput) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaSchemaRegistryClusterPtrOutput) Elem() SchemaSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaSchemaRegistryCluster) SchemaSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaSchemaRegistryCluster
		return ret
	}).(SchemaSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SubjectConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SubjectConfigCredentialsInput is an input type that accepts SubjectConfigCredentialsArgs and SubjectConfigCredentialsOutput values.
// You can construct a concrete instance of `SubjectConfigCredentialsInput` via:
//
//	SubjectConfigCredentialsArgs{...}
type SubjectConfigCredentialsInput interface {
	pulumi.Input

	ToSubjectConfigCredentialsOutput() SubjectConfigCredentialsOutput
	ToSubjectConfigCredentialsOutputWithContext(context.Context) SubjectConfigCredentialsOutput
}

type SubjectConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SubjectConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigCredentials)(nil)).Elem()
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsOutput() SubjectConfigCredentialsOutput {
	return i.ToSubjectConfigCredentialsOutputWithContext(context.Background())
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsOutputWithContext(ctx context.Context) SubjectConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigCredentialsOutput)
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return i.ToSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigCredentialsOutput).ToSubjectConfigCredentialsPtrOutputWithContext(ctx)
}

// SubjectConfigCredentialsPtrInput is an input type that accepts SubjectConfigCredentialsArgs, SubjectConfigCredentialsPtr and SubjectConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `SubjectConfigCredentialsPtrInput` via:
//
//	        SubjectConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type SubjectConfigCredentialsPtrInput interface {
	pulumi.Input

	ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput
	ToSubjectConfigCredentialsPtrOutputWithContext(context.Context) SubjectConfigCredentialsPtrOutput
}

type subjectConfigCredentialsPtrType SubjectConfigCredentialsArgs

func SubjectConfigCredentialsPtr(v *SubjectConfigCredentialsArgs) SubjectConfigCredentialsPtrInput {
	return (*subjectConfigCredentialsPtrType)(v)
}

func (*subjectConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigCredentials)(nil)).Elem()
}

func (i *subjectConfigCredentialsPtrType) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return i.ToSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *subjectConfigCredentialsPtrType) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigCredentialsPtrOutput)
}

type SubjectConfigCredentialsOutput struct{ *pulumi.OutputState }

func (SubjectConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigCredentials)(nil)).Elem()
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsOutput() SubjectConfigCredentialsOutput {
	return o
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsOutputWithContext(ctx context.Context) SubjectConfigCredentialsOutput {
	return o
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return o.ToSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectConfigCredentials) *SubjectConfigCredentials {
		return &v
	}).(SubjectConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SubjectConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SubjectConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SubjectConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SubjectConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigCredentials)(nil)).Elem()
}

func (o SubjectConfigCredentialsPtrOutput) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return o
}

func (o SubjectConfigCredentialsPtrOutput) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return o
}

func (o SubjectConfigCredentialsPtrOutput) Elem() SubjectConfigCredentialsOutput {
	return o.ApplyT(func(v *SubjectConfigCredentials) SubjectConfigCredentials {
		if v != nil {
			return *v
		}
		var ret SubjectConfigCredentials
		return ret
	}).(SubjectConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o SubjectConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SubjectConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SubjectConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SubjectConfigSchemaRegistryClusterInput is an input type that accepts SubjectConfigSchemaRegistryClusterArgs and SubjectConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SubjectConfigSchemaRegistryClusterInput` via:
//
//	SubjectConfigSchemaRegistryClusterArgs{...}
type SubjectConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSubjectConfigSchemaRegistryClusterOutput() SubjectConfigSchemaRegistryClusterOutput
	ToSubjectConfigSchemaRegistryClusterOutputWithContext(context.Context) SubjectConfigSchemaRegistryClusterOutput
}

type SubjectConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SubjectConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterOutput() SubjectConfigSchemaRegistryClusterOutput {
	return i.ToSubjectConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigSchemaRegistryClusterOutput)
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigSchemaRegistryClusterOutput).ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SubjectConfigSchemaRegistryClusterPtrInput is an input type that accepts SubjectConfigSchemaRegistryClusterArgs, SubjectConfigSchemaRegistryClusterPtr and SubjectConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SubjectConfigSchemaRegistryClusterPtrInput` via:
//
//	        SubjectConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SubjectConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput
	ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) SubjectConfigSchemaRegistryClusterPtrOutput
}

type subjectConfigSchemaRegistryClusterPtrType SubjectConfigSchemaRegistryClusterArgs

func SubjectConfigSchemaRegistryClusterPtr(v *SubjectConfigSchemaRegistryClusterArgs) SubjectConfigSchemaRegistryClusterPtrInput {
	return (*subjectConfigSchemaRegistryClusterPtrType)(v)
}

func (*subjectConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *subjectConfigSchemaRegistryClusterPtrType) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *subjectConfigSchemaRegistryClusterPtrType) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigSchemaRegistryClusterPtrOutput)
}

type SubjectConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SubjectConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterOutput() SubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectConfigSchemaRegistryCluster) *SubjectConfigSchemaRegistryCluster {
		return &v
	}).(SubjectConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SubjectConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SubjectConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectConfigSchemaRegistryClusterPtrOutput) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterPtrOutput) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterPtrOutput) Elem() SubjectConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SubjectConfigSchemaRegistryCluster) SubjectConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SubjectConfigSchemaRegistryCluster
		return ret
	}).(SubjectConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SubjectModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SubjectModeCredentialsInput is an input type that accepts SubjectModeCredentialsArgs and SubjectModeCredentialsOutput values.
// You can construct a concrete instance of `SubjectModeCredentialsInput` via:
//
//	SubjectModeCredentialsArgs{...}
type SubjectModeCredentialsInput interface {
	pulumi.Input

	ToSubjectModeCredentialsOutput() SubjectModeCredentialsOutput
	ToSubjectModeCredentialsOutputWithContext(context.Context) SubjectModeCredentialsOutput
}

type SubjectModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SubjectModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeCredentials)(nil)).Elem()
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsOutput() SubjectModeCredentialsOutput {
	return i.ToSubjectModeCredentialsOutputWithContext(context.Background())
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsOutputWithContext(ctx context.Context) SubjectModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeCredentialsOutput)
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return i.ToSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeCredentialsOutput).ToSubjectModeCredentialsPtrOutputWithContext(ctx)
}

// SubjectModeCredentialsPtrInput is an input type that accepts SubjectModeCredentialsArgs, SubjectModeCredentialsPtr and SubjectModeCredentialsPtrOutput values.
// You can construct a concrete instance of `SubjectModeCredentialsPtrInput` via:
//
//	        SubjectModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type SubjectModeCredentialsPtrInput interface {
	pulumi.Input

	ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput
	ToSubjectModeCredentialsPtrOutputWithContext(context.Context) SubjectModeCredentialsPtrOutput
}

type subjectModeCredentialsPtrType SubjectModeCredentialsArgs

func SubjectModeCredentialsPtr(v *SubjectModeCredentialsArgs) SubjectModeCredentialsPtrInput {
	return (*subjectModeCredentialsPtrType)(v)
}

func (*subjectModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeCredentials)(nil)).Elem()
}

func (i *subjectModeCredentialsPtrType) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return i.ToSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *subjectModeCredentialsPtrType) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeCredentialsPtrOutput)
}

type SubjectModeCredentialsOutput struct{ *pulumi.OutputState }

func (SubjectModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeCredentials)(nil)).Elem()
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsOutput() SubjectModeCredentialsOutput {
	return o
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsOutputWithContext(ctx context.Context) SubjectModeCredentialsOutput {
	return o
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return o.ToSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectModeCredentials) *SubjectModeCredentials {
		return &v
	}).(SubjectModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SubjectModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SubjectModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SubjectModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SubjectModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeCredentials)(nil)).Elem()
}

func (o SubjectModeCredentialsPtrOutput) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return o
}

func (o SubjectModeCredentialsPtrOutput) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return o
}

func (o SubjectModeCredentialsPtrOutput) Elem() SubjectModeCredentialsOutput {
	return o.ApplyT(func(v *SubjectModeCredentials) SubjectModeCredentials {
		if v != nil {
			return *v
		}
		var ret SubjectModeCredentials
		return ret
	}).(SubjectModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o SubjectModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SubjectModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SubjectModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SubjectModeSchemaRegistryClusterInput is an input type that accepts SubjectModeSchemaRegistryClusterArgs and SubjectModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SubjectModeSchemaRegistryClusterInput` via:
//
//	SubjectModeSchemaRegistryClusterArgs{...}
type SubjectModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSubjectModeSchemaRegistryClusterOutput() SubjectModeSchemaRegistryClusterOutput
	ToSubjectModeSchemaRegistryClusterOutputWithContext(context.Context) SubjectModeSchemaRegistryClusterOutput
}

type SubjectModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SubjectModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterOutput() SubjectModeSchemaRegistryClusterOutput {
	return i.ToSubjectModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeSchemaRegistryClusterOutput)
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeSchemaRegistryClusterOutput).ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SubjectModeSchemaRegistryClusterPtrInput is an input type that accepts SubjectModeSchemaRegistryClusterArgs, SubjectModeSchemaRegistryClusterPtr and SubjectModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SubjectModeSchemaRegistryClusterPtrInput` via:
//
//	        SubjectModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SubjectModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput
	ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Context) SubjectModeSchemaRegistryClusterPtrOutput
}

type subjectModeSchemaRegistryClusterPtrType SubjectModeSchemaRegistryClusterArgs

func SubjectModeSchemaRegistryClusterPtr(v *SubjectModeSchemaRegistryClusterArgs) SubjectModeSchemaRegistryClusterPtrInput {
	return (*subjectModeSchemaRegistryClusterPtrType)(v)
}

func (*subjectModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *subjectModeSchemaRegistryClusterPtrType) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *subjectModeSchemaRegistryClusterPtrType) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeSchemaRegistryClusterPtrOutput)
}

type SubjectModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SubjectModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterOutput() SubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return o.ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectModeSchemaRegistryCluster) *SubjectModeSchemaRegistryCluster {
		return &v
	}).(SubjectModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SubjectModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SubjectModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectModeSchemaRegistryClusterPtrOutput) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterPtrOutput) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterPtrOutput) Elem() SubjectModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SubjectModeSchemaRegistryCluster) SubjectModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SubjectModeSchemaRegistryCluster
		return ret
	}).(SubjectModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TransitGatewayAttachmentAws struct {
	// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn string `pulumi:"ramResourceShareArn"`
	// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	Routes []string `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// TransitGatewayAttachmentAwsInput is an input type that accepts TransitGatewayAttachmentAwsArgs and TransitGatewayAttachmentAwsOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentAwsInput` via:
//
//	TransitGatewayAttachmentAwsArgs{...}
type TransitGatewayAttachmentAwsInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentAwsOutput() TransitGatewayAttachmentAwsOutput
	ToTransitGatewayAttachmentAwsOutputWithContext(context.Context) TransitGatewayAttachmentAwsOutput
}

type TransitGatewayAttachmentAwsArgs struct {
	// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn pulumi.StringInput `pulumi:"ramResourceShareArn"`
	// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId pulumi.StringPtrInput `pulumi:"transitGatewayAttachmentId"`
	// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
}

func (TransitGatewayAttachmentAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentAws)(nil)).Elem()
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsOutput() TransitGatewayAttachmentAwsOutput {
	return i.ToTransitGatewayAttachmentAwsOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentAwsOutput)
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return i.ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentAwsOutput).ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx)
}

// TransitGatewayAttachmentAwsPtrInput is an input type that accepts TransitGatewayAttachmentAwsArgs, TransitGatewayAttachmentAwsPtr and TransitGatewayAttachmentAwsPtrOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentAwsPtrInput` via:
//
//	        TransitGatewayAttachmentAwsArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayAttachmentAwsPtrInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput
	ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Context) TransitGatewayAttachmentAwsPtrOutput
}

type transitGatewayAttachmentAwsPtrType TransitGatewayAttachmentAwsArgs

func TransitGatewayAttachmentAwsPtr(v *TransitGatewayAttachmentAwsArgs) TransitGatewayAttachmentAwsPtrInput {
	return (*transitGatewayAttachmentAwsPtrType)(v)
}

func (*transitGatewayAttachmentAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentAws)(nil)).Elem()
}

func (i *transitGatewayAttachmentAwsPtrType) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return i.ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Background())
}

func (i *transitGatewayAttachmentAwsPtrType) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentAwsPtrOutput)
}

type TransitGatewayAttachmentAwsOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentAws)(nil)).Elem()
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsOutput() TransitGatewayAttachmentAwsOutput {
	return o
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsOutput {
	return o
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return o.ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Background())
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayAttachmentAws) *TransitGatewayAttachmentAws {
		return &v
	}).(TransitGatewayAttachmentAwsPtrOutput)
}

// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
func (o TransitGatewayAttachmentAwsOutput) RamResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) string { return v.RamResourceShareArn }).(pulumi.StringOutput)
}

// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
func (o TransitGatewayAttachmentAwsOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
func (o TransitGatewayAttachmentAwsOutput) TransitGatewayAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) *string { return v.TransitGatewayAttachmentId }).(pulumi.StringPtrOutput)
}

// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
func (o TransitGatewayAttachmentAwsOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

type TransitGatewayAttachmentAwsPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentAws)(nil)).Elem()
}

func (o TransitGatewayAttachmentAwsPtrOutput) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return o
}

func (o TransitGatewayAttachmentAwsPtrOutput) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return o
}

func (o TransitGatewayAttachmentAwsPtrOutput) Elem() TransitGatewayAttachmentAwsOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) TransitGatewayAttachmentAws {
		if v != nil {
			return *v
		}
		var ret TransitGatewayAttachmentAws
		return ret
	}).(TransitGatewayAttachmentAwsOutput)
}

// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
func (o TransitGatewayAttachmentAwsPtrOutput) RamResourceShareArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) *string {
		if v == nil {
			return nil
		}
		return &v.RamResourceShareArn
	}).(pulumi.StringPtrOutput)
}

// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
func (o TransitGatewayAttachmentAwsPtrOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) []string {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(pulumi.StringArrayOutput)
}

// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
func (o TransitGatewayAttachmentAwsPtrOutput) TransitGatewayAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) *string {
		if v == nil {
			return nil
		}
		return v.TransitGatewayAttachmentId
	}).(pulumi.StringPtrOutput)
}

// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
func (o TransitGatewayAttachmentAwsPtrOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) *string {
		if v == nil {
			return nil
		}
		return &v.TransitGatewayId
	}).(pulumi.StringPtrOutput)
}

type TransitGatewayAttachmentEnvironment struct {
	// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// TransitGatewayAttachmentEnvironmentInput is an input type that accepts TransitGatewayAttachmentEnvironmentArgs and TransitGatewayAttachmentEnvironmentOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentEnvironmentInput` via:
//
//	TransitGatewayAttachmentEnvironmentArgs{...}
type TransitGatewayAttachmentEnvironmentInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentEnvironmentOutput() TransitGatewayAttachmentEnvironmentOutput
	ToTransitGatewayAttachmentEnvironmentOutputWithContext(context.Context) TransitGatewayAttachmentEnvironmentOutput
}

type TransitGatewayAttachmentEnvironmentArgs struct {
	// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TransitGatewayAttachmentEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentOutput() TransitGatewayAttachmentEnvironmentOutput {
	return i.ToTransitGatewayAttachmentEnvironmentOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentEnvironmentOutput)
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return i.ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentEnvironmentOutput).ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx)
}

// TransitGatewayAttachmentEnvironmentPtrInput is an input type that accepts TransitGatewayAttachmentEnvironmentArgs, TransitGatewayAttachmentEnvironmentPtr and TransitGatewayAttachmentEnvironmentPtrOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentEnvironmentPtrInput` via:
//
//	        TransitGatewayAttachmentEnvironmentArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayAttachmentEnvironmentPtrInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput
	ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Context) TransitGatewayAttachmentEnvironmentPtrOutput
}

type transitGatewayAttachmentEnvironmentPtrType TransitGatewayAttachmentEnvironmentArgs

func TransitGatewayAttachmentEnvironmentPtr(v *TransitGatewayAttachmentEnvironmentArgs) TransitGatewayAttachmentEnvironmentPtrInput {
	return (*transitGatewayAttachmentEnvironmentPtrType)(v)
}

func (*transitGatewayAttachmentEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (i *transitGatewayAttachmentEnvironmentPtrType) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return i.ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (i *transitGatewayAttachmentEnvironmentPtrType) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentEnvironmentPtrOutput)
}

type TransitGatewayAttachmentEnvironmentOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentOutput() TransitGatewayAttachmentEnvironmentOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return o.ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayAttachmentEnvironment) *TransitGatewayAttachmentEnvironment {
		return &v
	}).(TransitGatewayAttachmentEnvironmentPtrOutput)
}

// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
func (o TransitGatewayAttachmentEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type TransitGatewayAttachmentEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (o TransitGatewayAttachmentEnvironmentPtrOutput) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentPtrOutput) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentPtrOutput) Elem() TransitGatewayAttachmentEnvironmentOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentEnvironment) TransitGatewayAttachmentEnvironment {
		if v != nil {
			return *v
		}
		var ret TransitGatewayAttachmentEnvironment
		return ret
	}).(TransitGatewayAttachmentEnvironmentOutput)
}

// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
func (o TransitGatewayAttachmentEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TransitGatewayAttachmentNetwork struct {
	// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// TransitGatewayAttachmentNetworkInput is an input type that accepts TransitGatewayAttachmentNetworkArgs and TransitGatewayAttachmentNetworkOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentNetworkInput` via:
//
//	TransitGatewayAttachmentNetworkArgs{...}
type TransitGatewayAttachmentNetworkInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentNetworkOutput() TransitGatewayAttachmentNetworkOutput
	ToTransitGatewayAttachmentNetworkOutputWithContext(context.Context) TransitGatewayAttachmentNetworkOutput
}

type TransitGatewayAttachmentNetworkArgs struct {
	// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TransitGatewayAttachmentNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkOutput() TransitGatewayAttachmentNetworkOutput {
	return i.ToTransitGatewayAttachmentNetworkOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentNetworkOutput)
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return i.ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentNetworkOutput).ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx)
}

// TransitGatewayAttachmentNetworkPtrInput is an input type that accepts TransitGatewayAttachmentNetworkArgs, TransitGatewayAttachmentNetworkPtr and TransitGatewayAttachmentNetworkPtrOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentNetworkPtrInput` via:
//
//	        TransitGatewayAttachmentNetworkArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayAttachmentNetworkPtrInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput
	ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Context) TransitGatewayAttachmentNetworkPtrOutput
}

type transitGatewayAttachmentNetworkPtrType TransitGatewayAttachmentNetworkArgs

func TransitGatewayAttachmentNetworkPtr(v *TransitGatewayAttachmentNetworkArgs) TransitGatewayAttachmentNetworkPtrInput {
	return (*transitGatewayAttachmentNetworkPtrType)(v)
}

func (*transitGatewayAttachmentNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i *transitGatewayAttachmentNetworkPtrType) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return i.ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Background())
}

func (i *transitGatewayAttachmentNetworkPtrType) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentNetworkPtrOutput)
}

type TransitGatewayAttachmentNetworkOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkOutput() TransitGatewayAttachmentNetworkOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return o.ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Background())
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayAttachmentNetwork) *TransitGatewayAttachmentNetwork {
		return &v
	}).(TransitGatewayAttachmentNetworkPtrOutput)
}

// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
func (o TransitGatewayAttachmentNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type TransitGatewayAttachmentNetworkPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o TransitGatewayAttachmentNetworkPtrOutput) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkPtrOutput) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkPtrOutput) Elem() TransitGatewayAttachmentNetworkOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentNetwork) TransitGatewayAttachmentNetwork {
		if v != nil {
			return *v
		}
		var ret TransitGatewayAttachmentNetwork
		return ret
	}).(TransitGatewayAttachmentNetworkOutput)
}

// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
func (o TransitGatewayAttachmentNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetIdentityPoolIdentityProvider struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	Id string `pulumi:"id"`
}

// GetIdentityPoolIdentityProviderInput is an input type that accepts GetIdentityPoolIdentityProviderArgs and GetIdentityPoolIdentityProviderOutput values.
// You can construct a concrete instance of `GetIdentityPoolIdentityProviderInput` via:
//
//	GetIdentityPoolIdentityProviderArgs{...}
type GetIdentityPoolIdentityProviderInput interface {
	pulumi.Input

	ToGetIdentityPoolIdentityProviderOutput() GetIdentityPoolIdentityProviderOutput
	ToGetIdentityPoolIdentityProviderOutputWithContext(context.Context) GetIdentityPoolIdentityProviderOutput
}

type GetIdentityPoolIdentityProviderArgs struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetIdentityPoolIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityPoolIdentityProvider)(nil)).Elem()
}

func (i GetIdentityPoolIdentityProviderArgs) ToGetIdentityPoolIdentityProviderOutput() GetIdentityPoolIdentityProviderOutput {
	return i.ToGetIdentityPoolIdentityProviderOutputWithContext(context.Background())
}

func (i GetIdentityPoolIdentityProviderArgs) ToGetIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) GetIdentityPoolIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityPoolIdentityProviderOutput)
}

type GetIdentityPoolIdentityProviderOutput struct{ *pulumi.OutputState }

func (GetIdentityPoolIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityPoolIdentityProvider)(nil)).Elem()
}

func (o GetIdentityPoolIdentityProviderOutput) ToGetIdentityPoolIdentityProviderOutput() GetIdentityPoolIdentityProviderOutput {
	return o
}

func (o GetIdentityPoolIdentityProviderOutput) ToGetIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) GetIdentityPoolIdentityProviderOutput {
	return o
}

// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
func (o GetIdentityPoolIdentityProviderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityPoolIdentityProvider) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaEnvironment struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id string `pulumi:"id"`
}

// GetKafkaClientQuotaEnvironmentInput is an input type that accepts GetKafkaClientQuotaEnvironmentArgs and GetKafkaClientQuotaEnvironmentOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaEnvironmentInput` via:
//
//	GetKafkaClientQuotaEnvironmentArgs{...}
type GetKafkaClientQuotaEnvironmentInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaEnvironmentOutput() GetKafkaClientQuotaEnvironmentOutput
	ToGetKafkaClientQuotaEnvironmentOutputWithContext(context.Context) GetKafkaClientQuotaEnvironmentOutput
}

type GetKafkaClientQuotaEnvironmentArgs struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClientQuotaEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i GetKafkaClientQuotaEnvironmentArgs) ToGetKafkaClientQuotaEnvironmentOutput() GetKafkaClientQuotaEnvironmentOutput {
	return i.ToGetKafkaClientQuotaEnvironmentOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaEnvironmentArgs) ToGetKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaEnvironmentOutput)
}

// GetKafkaClientQuotaEnvironmentArrayInput is an input type that accepts GetKafkaClientQuotaEnvironmentArray and GetKafkaClientQuotaEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaEnvironmentArrayInput` via:
//
//	GetKafkaClientQuotaEnvironmentArray{ GetKafkaClientQuotaEnvironmentArgs{...} }
type GetKafkaClientQuotaEnvironmentArrayInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaEnvironmentArrayOutput() GetKafkaClientQuotaEnvironmentArrayOutput
	ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(context.Context) GetKafkaClientQuotaEnvironmentArrayOutput
}

type GetKafkaClientQuotaEnvironmentArray []GetKafkaClientQuotaEnvironmentInput

func (GetKafkaClientQuotaEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i GetKafkaClientQuotaEnvironmentArray) ToGetKafkaClientQuotaEnvironmentArrayOutput() GetKafkaClientQuotaEnvironmentArrayOutput {
	return i.ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaEnvironmentArray) ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaEnvironmentArrayOutput)
}

type GetKafkaClientQuotaEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o GetKafkaClientQuotaEnvironmentOutput) ToGetKafkaClientQuotaEnvironmentOutput() GetKafkaClientQuotaEnvironmentOutput {
	return o
}

func (o GetKafkaClientQuotaEnvironmentOutput) ToGetKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentOutput {
	return o
}

// The ID of the Kafka Client Quota (for example, `cq-abc123`).
func (o GetKafkaClientQuotaEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o GetKafkaClientQuotaEnvironmentArrayOutput) ToGetKafkaClientQuotaEnvironmentArrayOutput() GetKafkaClientQuotaEnvironmentArrayOutput {
	return o
}

func (o GetKafkaClientQuotaEnvironmentArrayOutput) ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentArrayOutput {
	return o
}

func (o GetKafkaClientQuotaEnvironmentArrayOutput) Index(i pulumi.IntInput) GetKafkaClientQuotaEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClientQuotaEnvironment {
		return vs[0].([]GetKafkaClientQuotaEnvironment)[vs[1].(int)]
	}).(GetKafkaClientQuotaEnvironmentOutput)
}

type GetKafkaClientQuotaKafkaCluster struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id string `pulumi:"id"`
}

// GetKafkaClientQuotaKafkaClusterInput is an input type that accepts GetKafkaClientQuotaKafkaClusterArgs and GetKafkaClientQuotaKafkaClusterOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaKafkaClusterInput` via:
//
//	GetKafkaClientQuotaKafkaClusterArgs{...}
type GetKafkaClientQuotaKafkaClusterInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaKafkaClusterOutput() GetKafkaClientQuotaKafkaClusterOutput
	ToGetKafkaClientQuotaKafkaClusterOutputWithContext(context.Context) GetKafkaClientQuotaKafkaClusterOutput
}

type GetKafkaClientQuotaKafkaClusterArgs struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClientQuotaKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i GetKafkaClientQuotaKafkaClusterArgs) ToGetKafkaClientQuotaKafkaClusterOutput() GetKafkaClientQuotaKafkaClusterOutput {
	return i.ToGetKafkaClientQuotaKafkaClusterOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaKafkaClusterArgs) ToGetKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaKafkaClusterOutput)
}

// GetKafkaClientQuotaKafkaClusterArrayInput is an input type that accepts GetKafkaClientQuotaKafkaClusterArray and GetKafkaClientQuotaKafkaClusterArrayOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaKafkaClusterArrayInput` via:
//
//	GetKafkaClientQuotaKafkaClusterArray{ GetKafkaClientQuotaKafkaClusterArgs{...} }
type GetKafkaClientQuotaKafkaClusterArrayInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaKafkaClusterArrayOutput() GetKafkaClientQuotaKafkaClusterArrayOutput
	ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(context.Context) GetKafkaClientQuotaKafkaClusterArrayOutput
}

type GetKafkaClientQuotaKafkaClusterArray []GetKafkaClientQuotaKafkaClusterInput

func (GetKafkaClientQuotaKafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i GetKafkaClientQuotaKafkaClusterArray) ToGetKafkaClientQuotaKafkaClusterArrayOutput() GetKafkaClientQuotaKafkaClusterArrayOutput {
	return i.ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaKafkaClusterArray) ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaKafkaClusterArrayOutput)
}

type GetKafkaClientQuotaKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o GetKafkaClientQuotaKafkaClusterOutput) ToGetKafkaClientQuotaKafkaClusterOutput() GetKafkaClientQuotaKafkaClusterOutput {
	return o
}

func (o GetKafkaClientQuotaKafkaClusterOutput) ToGetKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterOutput {
	return o
}

// The ID of the Kafka Client Quota (for example, `cq-abc123`).
func (o GetKafkaClientQuotaKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaKafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaKafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o GetKafkaClientQuotaKafkaClusterArrayOutput) ToGetKafkaClientQuotaKafkaClusterArrayOutput() GetKafkaClientQuotaKafkaClusterArrayOutput {
	return o
}

func (o GetKafkaClientQuotaKafkaClusterArrayOutput) ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterArrayOutput {
	return o
}

func (o GetKafkaClientQuotaKafkaClusterArrayOutput) Index(i pulumi.IntInput) GetKafkaClientQuotaKafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClientQuotaKafkaCluster {
		return vs[0].([]GetKafkaClientQuotaKafkaCluster)[vs[1].(int)]
	}).(GetKafkaClientQuotaKafkaClusterOutput)
}

type GetKafkaClientQuotaThroughput struct {
	// (Required String) The egress throughput limit in bytes per second.
	EgressByteRate string `pulumi:"egressByteRate"`
	// (Required String) The ingress throughput limit in bytes per second.
	IngressByteRate string `pulumi:"ingressByteRate"`
}

// GetKafkaClientQuotaThroughputInput is an input type that accepts GetKafkaClientQuotaThroughputArgs and GetKafkaClientQuotaThroughputOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaThroughputInput` via:
//
//	GetKafkaClientQuotaThroughputArgs{...}
type GetKafkaClientQuotaThroughputInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaThroughputOutput() GetKafkaClientQuotaThroughputOutput
	ToGetKafkaClientQuotaThroughputOutputWithContext(context.Context) GetKafkaClientQuotaThroughputOutput
}

type GetKafkaClientQuotaThroughputArgs struct {
	// (Required String) The egress throughput limit in bytes per second.
	EgressByteRate pulumi.StringInput `pulumi:"egressByteRate"`
	// (Required String) The ingress throughput limit in bytes per second.
	IngressByteRate pulumi.StringInput `pulumi:"ingressByteRate"`
}

func (GetKafkaClientQuotaThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (i GetKafkaClientQuotaThroughputArgs) ToGetKafkaClientQuotaThroughputOutput() GetKafkaClientQuotaThroughputOutput {
	return i.ToGetKafkaClientQuotaThroughputOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaThroughputArgs) ToGetKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaThroughputOutput)
}

// GetKafkaClientQuotaThroughputArrayInput is an input type that accepts GetKafkaClientQuotaThroughputArray and GetKafkaClientQuotaThroughputArrayOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaThroughputArrayInput` via:
//
//	GetKafkaClientQuotaThroughputArray{ GetKafkaClientQuotaThroughputArgs{...} }
type GetKafkaClientQuotaThroughputArrayInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaThroughputArrayOutput() GetKafkaClientQuotaThroughputArrayOutput
	ToGetKafkaClientQuotaThroughputArrayOutputWithContext(context.Context) GetKafkaClientQuotaThroughputArrayOutput
}

type GetKafkaClientQuotaThroughputArray []GetKafkaClientQuotaThroughputInput

func (GetKafkaClientQuotaThroughputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (i GetKafkaClientQuotaThroughputArray) ToGetKafkaClientQuotaThroughputArrayOutput() GetKafkaClientQuotaThroughputArrayOutput {
	return i.ToGetKafkaClientQuotaThroughputArrayOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaThroughputArray) ToGetKafkaClientQuotaThroughputArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaThroughputArrayOutput)
}

type GetKafkaClientQuotaThroughputOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (o GetKafkaClientQuotaThroughputOutput) ToGetKafkaClientQuotaThroughputOutput() GetKafkaClientQuotaThroughputOutput {
	return o
}

func (o GetKafkaClientQuotaThroughputOutput) ToGetKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputOutput {
	return o
}

// (Required String) The egress throughput limit in bytes per second.
func (o GetKafkaClientQuotaThroughputOutput) EgressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaThroughput) string { return v.EgressByteRate }).(pulumi.StringOutput)
}

// (Required String) The ingress throughput limit in bytes per second.
func (o GetKafkaClientQuotaThroughputOutput) IngressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaThroughput) string { return v.IngressByteRate }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaThroughputArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaThroughputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (o GetKafkaClientQuotaThroughputArrayOutput) ToGetKafkaClientQuotaThroughputArrayOutput() GetKafkaClientQuotaThroughputArrayOutput {
	return o
}

func (o GetKafkaClientQuotaThroughputArrayOutput) ToGetKafkaClientQuotaThroughputArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputArrayOutput {
	return o
}

func (o GetKafkaClientQuotaThroughputArrayOutput) Index(i pulumi.IntInput) GetKafkaClientQuotaThroughputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClientQuotaThroughput {
		return vs[0].([]GetKafkaClientQuotaThroughput)[vs[1].(int)]
	}).(GetKafkaClientQuotaThroughputOutput)
}

type GetKafkaClusterBasic struct {
}

// GetKafkaClusterBasicInput is an input type that accepts GetKafkaClusterBasicArgs and GetKafkaClusterBasicOutput values.
// You can construct a concrete instance of `GetKafkaClusterBasicInput` via:
//
//	GetKafkaClusterBasicArgs{...}
type GetKafkaClusterBasicInput interface {
	pulumi.Input

	ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput
	ToGetKafkaClusterBasicOutputWithContext(context.Context) GetKafkaClusterBasicOutput
}

type GetKafkaClusterBasicArgs struct {
}

func (GetKafkaClusterBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterBasic)(nil)).Elem()
}

func (i GetKafkaClusterBasicArgs) ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput {
	return i.ToGetKafkaClusterBasicOutputWithContext(context.Background())
}

func (i GetKafkaClusterBasicArgs) ToGetKafkaClusterBasicOutputWithContext(ctx context.Context) GetKafkaClusterBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterBasicOutput)
}

// GetKafkaClusterBasicArrayInput is an input type that accepts GetKafkaClusterBasicArray and GetKafkaClusterBasicArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterBasicArrayInput` via:
//
//	GetKafkaClusterBasicArray{ GetKafkaClusterBasicArgs{...} }
type GetKafkaClusterBasicArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput
	ToGetKafkaClusterBasicArrayOutputWithContext(context.Context) GetKafkaClusterBasicArrayOutput
}

type GetKafkaClusterBasicArray []GetKafkaClusterBasicInput

func (GetKafkaClusterBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterBasic)(nil)).Elem()
}

func (i GetKafkaClusterBasicArray) ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput {
	return i.ToGetKafkaClusterBasicArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterBasicArray) ToGetKafkaClusterBasicArrayOutputWithContext(ctx context.Context) GetKafkaClusterBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterBasicArrayOutput)
}

type GetKafkaClusterBasicOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterBasic)(nil)).Elem()
}

func (o GetKafkaClusterBasicOutput) ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput {
	return o
}

func (o GetKafkaClusterBasicOutput) ToGetKafkaClusterBasicOutputWithContext(ctx context.Context) GetKafkaClusterBasicOutput {
	return o
}

type GetKafkaClusterBasicArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterBasic)(nil)).Elem()
}

func (o GetKafkaClusterBasicArrayOutput) ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput {
	return o
}

func (o GetKafkaClusterBasicArrayOutput) ToGetKafkaClusterBasicArrayOutputWithContext(ctx context.Context) GetKafkaClusterBasicArrayOutput {
	return o
}

func (o GetKafkaClusterBasicArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterBasic {
		return vs[0].([]GetKafkaClusterBasic)[vs[1].(int)]
	}).(GetKafkaClusterBasicOutput)
}

type GetKafkaClusterDedicated struct {
	// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku int `pulumi:"cku"`
	// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey string `pulumi:"encryptionKey"`
}

// GetKafkaClusterDedicatedInput is an input type that accepts GetKafkaClusterDedicatedArgs and GetKafkaClusterDedicatedOutput values.
// You can construct a concrete instance of `GetKafkaClusterDedicatedInput` via:
//
//	GetKafkaClusterDedicatedArgs{...}
type GetKafkaClusterDedicatedInput interface {
	pulumi.Input

	ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput
	ToGetKafkaClusterDedicatedOutputWithContext(context.Context) GetKafkaClusterDedicatedOutput
}

type GetKafkaClusterDedicatedArgs struct {
	// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku pulumi.IntInput `pulumi:"cku"`
	// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey pulumi.StringInput `pulumi:"encryptionKey"`
}

func (GetKafkaClusterDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterDedicated)(nil)).Elem()
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput {
	return i.ToGetKafkaClusterDedicatedOutputWithContext(context.Background())
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedOutput)
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return i.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedOutput).ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx)
}

// GetKafkaClusterDedicatedPtrInput is an input type that accepts GetKafkaClusterDedicatedArgs, GetKafkaClusterDedicatedPtr and GetKafkaClusterDedicatedPtrOutput values.
// You can construct a concrete instance of `GetKafkaClusterDedicatedPtrInput` via:
//
//	        GetKafkaClusterDedicatedArgs{...}
//
//	or:
//
//	        nil
type GetKafkaClusterDedicatedPtrInput interface {
	pulumi.Input

	ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput
	ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Context) GetKafkaClusterDedicatedPtrOutput
}

type getKafkaClusterDedicatedPtrType GetKafkaClusterDedicatedArgs

func GetKafkaClusterDedicatedPtr(v *GetKafkaClusterDedicatedArgs) GetKafkaClusterDedicatedPtrInput {
	return (*getKafkaClusterDedicatedPtrType)(v)
}

func (*getKafkaClusterDedicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaClusterDedicated)(nil)).Elem()
}

func (i *getKafkaClusterDedicatedPtrType) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return i.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i *getKafkaClusterDedicatedPtrType) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedPtrOutput)
}

type GetKafkaClusterDedicatedOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterDedicated)(nil)).Elem()
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput {
	return o
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedOutput {
	return o
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return o.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaClusterDedicated) *GetKafkaClusterDedicated {
		return &v
	}).(GetKafkaClusterDedicatedPtrOutput)
}

// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o GetKafkaClusterDedicatedOutput) Cku() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) int { return v.Cku }).(pulumi.IntOutput)
}

// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o GetKafkaClusterDedicatedOutput) EncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) string { return v.EncryptionKey }).(pulumi.StringOutput)
}

type GetKafkaClusterDedicatedPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterDedicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaClusterDedicated)(nil)).Elem()
}

func (o GetKafkaClusterDedicatedPtrOutput) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return o
}

func (o GetKafkaClusterDedicatedPtrOutput) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return o
}

func (o GetKafkaClusterDedicatedPtrOutput) Elem() GetKafkaClusterDedicatedOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) GetKafkaClusterDedicated {
		if v != nil {
			return *v
		}
		var ret GetKafkaClusterDedicated
		return ret
	}).(GetKafkaClusterDedicatedOutput)
}

// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o GetKafkaClusterDedicatedPtrOutput) Cku() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) *int {
		if v == nil {
			return nil
		}
		return &v.Cku
	}).(pulumi.IntPtrOutput)
}

// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o GetKafkaClusterDedicatedPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

type GetKafkaClusterEnvironment struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKafkaClusterEnvironmentInput is an input type that accepts GetKafkaClusterEnvironmentArgs and GetKafkaClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetKafkaClusterEnvironmentInput` via:
//
//	GetKafkaClusterEnvironmentArgs{...}
type GetKafkaClusterEnvironmentInput interface {
	pulumi.Input

	ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput
	ToGetKafkaClusterEnvironmentOutputWithContext(context.Context) GetKafkaClusterEnvironmentOutput
}

type GetKafkaClusterEnvironmentArgs struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnvironment)(nil)).Elem()
}

func (i GetKafkaClusterEnvironmentArgs) ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput {
	return i.ToGetKafkaClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetKafkaClusterEnvironmentArgs) ToGetKafkaClusterEnvironmentOutputWithContext(ctx context.Context) GetKafkaClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterEnvironmentOutput)
}

type GetKafkaClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnvironment)(nil)).Elem()
}

func (o GetKafkaClusterEnvironmentOutput) ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput {
	return o
}

func (o GetKafkaClusterEnvironmentOutput) ToGetKafkaClusterEnvironmentOutputWithContext(ctx context.Context) GetKafkaClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
func (o GetKafkaClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterNetwork struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKafkaClusterNetworkInput is an input type that accepts GetKafkaClusterNetworkArgs and GetKafkaClusterNetworkOutput values.
// You can construct a concrete instance of `GetKafkaClusterNetworkInput` via:
//
//	GetKafkaClusterNetworkArgs{...}
type GetKafkaClusterNetworkInput interface {
	pulumi.Input

	ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput
	ToGetKafkaClusterNetworkOutputWithContext(context.Context) GetKafkaClusterNetworkOutput
}

type GetKafkaClusterNetworkArgs struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterNetwork)(nil)).Elem()
}

func (i GetKafkaClusterNetworkArgs) ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput {
	return i.ToGetKafkaClusterNetworkOutputWithContext(context.Background())
}

func (i GetKafkaClusterNetworkArgs) ToGetKafkaClusterNetworkOutputWithContext(ctx context.Context) GetKafkaClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterNetworkOutput)
}

// GetKafkaClusterNetworkArrayInput is an input type that accepts GetKafkaClusterNetworkArray and GetKafkaClusterNetworkArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterNetworkArrayInput` via:
//
//	GetKafkaClusterNetworkArray{ GetKafkaClusterNetworkArgs{...} }
type GetKafkaClusterNetworkArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput
	ToGetKafkaClusterNetworkArrayOutputWithContext(context.Context) GetKafkaClusterNetworkArrayOutput
}

type GetKafkaClusterNetworkArray []GetKafkaClusterNetworkInput

func (GetKafkaClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterNetwork)(nil)).Elem()
}

func (i GetKafkaClusterNetworkArray) ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput {
	return i.ToGetKafkaClusterNetworkArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterNetworkArray) ToGetKafkaClusterNetworkArrayOutputWithContext(ctx context.Context) GetKafkaClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterNetworkArrayOutput)
}

type GetKafkaClusterNetworkOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterNetwork)(nil)).Elem()
}

func (o GetKafkaClusterNetworkOutput) ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput {
	return o
}

func (o GetKafkaClusterNetworkOutput) ToGetKafkaClusterNetworkOutputWithContext(ctx context.Context) GetKafkaClusterNetworkOutput {
	return o
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
func (o GetKafkaClusterNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterNetwork)(nil)).Elem()
}

func (o GetKafkaClusterNetworkArrayOutput) ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput {
	return o
}

func (o GetKafkaClusterNetworkArrayOutput) ToGetKafkaClusterNetworkArrayOutputWithContext(ctx context.Context) GetKafkaClusterNetworkArrayOutput {
	return o
}

func (o GetKafkaClusterNetworkArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterNetwork {
		return vs[0].([]GetKafkaClusterNetwork)[vs[1].(int)]
	}).(GetKafkaClusterNetworkOutput)
}

type GetKafkaClusterStandard struct {
}

// GetKafkaClusterStandardInput is an input type that accepts GetKafkaClusterStandardArgs and GetKafkaClusterStandardOutput values.
// You can construct a concrete instance of `GetKafkaClusterStandardInput` via:
//
//	GetKafkaClusterStandardArgs{...}
type GetKafkaClusterStandardInput interface {
	pulumi.Input

	ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput
	ToGetKafkaClusterStandardOutputWithContext(context.Context) GetKafkaClusterStandardOutput
}

type GetKafkaClusterStandardArgs struct {
}

func (GetKafkaClusterStandardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterStandard)(nil)).Elem()
}

func (i GetKafkaClusterStandardArgs) ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput {
	return i.ToGetKafkaClusterStandardOutputWithContext(context.Background())
}

func (i GetKafkaClusterStandardArgs) ToGetKafkaClusterStandardOutputWithContext(ctx context.Context) GetKafkaClusterStandardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterStandardOutput)
}

// GetKafkaClusterStandardArrayInput is an input type that accepts GetKafkaClusterStandardArray and GetKafkaClusterStandardArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterStandardArrayInput` via:
//
//	GetKafkaClusterStandardArray{ GetKafkaClusterStandardArgs{...} }
type GetKafkaClusterStandardArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput
	ToGetKafkaClusterStandardArrayOutputWithContext(context.Context) GetKafkaClusterStandardArrayOutput
}

type GetKafkaClusterStandardArray []GetKafkaClusterStandardInput

func (GetKafkaClusterStandardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterStandard)(nil)).Elem()
}

func (i GetKafkaClusterStandardArray) ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput {
	return i.ToGetKafkaClusterStandardArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterStandardArray) ToGetKafkaClusterStandardArrayOutputWithContext(ctx context.Context) GetKafkaClusterStandardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterStandardArrayOutput)
}

type GetKafkaClusterStandardOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterStandard)(nil)).Elem()
}

func (o GetKafkaClusterStandardOutput) ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput {
	return o
}

func (o GetKafkaClusterStandardOutput) ToGetKafkaClusterStandardOutputWithContext(ctx context.Context) GetKafkaClusterStandardOutput {
	return o
}

type GetKafkaClusterStandardArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterStandardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterStandard)(nil)).Elem()
}

func (o GetKafkaClusterStandardArrayOutput) ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput {
	return o
}

func (o GetKafkaClusterStandardArrayOutput) ToGetKafkaClusterStandardArrayOutputWithContext(ctx context.Context) GetKafkaClusterStandardArrayOutput {
	return o
}

func (o GetKafkaClusterStandardArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterStandardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterStandard {
		return vs[0].([]GetKafkaClusterStandard)[vs[1].(int)]
	}).(GetKafkaClusterStandardOutput)
}

type GetKafkaTopicCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// GetKafkaTopicCredentialsInput is an input type that accepts GetKafkaTopicCredentialsArgs and GetKafkaTopicCredentialsOutput values.
// You can construct a concrete instance of `GetKafkaTopicCredentialsInput` via:
//
//	GetKafkaTopicCredentialsArgs{...}
type GetKafkaTopicCredentialsInput interface {
	pulumi.Input

	ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput
	ToGetKafkaTopicCredentialsOutputWithContext(context.Context) GetKafkaTopicCredentialsOutput
}

type GetKafkaTopicCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetKafkaTopicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicCredentials)(nil)).Elem()
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput {
	return i.ToGetKafkaTopicCredentialsOutputWithContext(context.Background())
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsOutput)
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return i.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsOutput).ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx)
}

// GetKafkaTopicCredentialsPtrInput is an input type that accepts GetKafkaTopicCredentialsArgs, GetKafkaTopicCredentialsPtr and GetKafkaTopicCredentialsPtrOutput values.
// You can construct a concrete instance of `GetKafkaTopicCredentialsPtrInput` via:
//
//	        GetKafkaTopicCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetKafkaTopicCredentialsPtrInput interface {
	pulumi.Input

	ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput
	ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Context) GetKafkaTopicCredentialsPtrOutput
}

type getKafkaTopicCredentialsPtrType GetKafkaTopicCredentialsArgs

func GetKafkaTopicCredentialsPtr(v *GetKafkaTopicCredentialsArgs) GetKafkaTopicCredentialsPtrInput {
	return (*getKafkaTopicCredentialsPtrType)(v)
}

func (*getKafkaTopicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicCredentials)(nil)).Elem()
}

func (i *getKafkaTopicCredentialsPtrType) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return i.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i *getKafkaTopicCredentialsPtrType) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsPtrOutput)
}

type GetKafkaTopicCredentialsOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicCredentials)(nil)).Elem()
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput {
	return o
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsOutput {
	return o
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return o.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaTopicCredentials) *GetKafkaTopicCredentials {
		return &v
	}).(GetKafkaTopicCredentialsPtrOutput)
}

// The Kafka API Key.
func (o GetKafkaTopicCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o GetKafkaTopicCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetKafkaTopicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicCredentials)(nil)).Elem()
}

func (o GetKafkaTopicCredentialsPtrOutput) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return o
}

func (o GetKafkaTopicCredentialsPtrOutput) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return o
}

func (o GetKafkaTopicCredentialsPtrOutput) Elem() GetKafkaTopicCredentialsOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) GetKafkaTopicCredentials {
		if v != nil {
			return *v
		}
		var ret GetKafkaTopicCredentials
		return ret
	}).(GetKafkaTopicCredentialsOutput)
}

// The Kafka API Key.
func (o GetKafkaTopicCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o GetKafkaTopicCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetKafkaTopicKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// GetKafkaTopicKafkaClusterInput is an input type that accepts GetKafkaTopicKafkaClusterArgs and GetKafkaTopicKafkaClusterOutput values.
// You can construct a concrete instance of `GetKafkaTopicKafkaClusterInput` via:
//
//	GetKafkaTopicKafkaClusterArgs{...}
type GetKafkaTopicKafkaClusterInput interface {
	pulumi.Input

	ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput
	ToGetKafkaTopicKafkaClusterOutputWithContext(context.Context) GetKafkaTopicKafkaClusterOutput
}

type GetKafkaTopicKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput {
	return i.ToGetKafkaTopicKafkaClusterOutputWithContext(context.Background())
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterOutput)
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return i.ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterOutput).ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx)
}

// GetKafkaTopicKafkaClusterPtrInput is an input type that accepts GetKafkaTopicKafkaClusterArgs, GetKafkaTopicKafkaClusterPtr and GetKafkaTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `GetKafkaTopicKafkaClusterPtrInput` via:
//
//	        GetKafkaTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type GetKafkaTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput
	ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Context) GetKafkaTopicKafkaClusterPtrOutput
}

type getKafkaTopicKafkaClusterPtrType GetKafkaTopicKafkaClusterArgs

func GetKafkaTopicKafkaClusterPtr(v *GetKafkaTopicKafkaClusterArgs) GetKafkaTopicKafkaClusterPtrInput {
	return (*getKafkaTopicKafkaClusterPtrType)(v)
}

func (*getKafkaTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (i *getKafkaTopicKafkaClusterPtrType) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return i.ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *getKafkaTopicKafkaClusterPtrType) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterPtrOutput)
}

type GetKafkaTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return o.ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaTopicKafkaCluster) *GetKafkaTopicKafkaCluster {
		return &v
	}).(GetKafkaTopicKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (o GetKafkaTopicKafkaClusterPtrOutput) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterPtrOutput) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterPtrOutput) Elem() GetKafkaTopicKafkaClusterOutput {
	return o.ApplyT(func(v *GetKafkaTopicKafkaCluster) GetKafkaTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret GetKafkaTopicKafkaCluster
		return ret
	}).(GetKafkaTopicKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetKsqlClusterCredentialIdentity struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKsqlClusterCredentialIdentityInput is an input type that accepts GetKsqlClusterCredentialIdentityArgs and GetKsqlClusterCredentialIdentityOutput values.
// You can construct a concrete instance of `GetKsqlClusterCredentialIdentityInput` via:
//
//	GetKsqlClusterCredentialIdentityArgs{...}
type GetKsqlClusterCredentialIdentityInput interface {
	pulumi.Input

	ToGetKsqlClusterCredentialIdentityOutput() GetKsqlClusterCredentialIdentityOutput
	ToGetKsqlClusterCredentialIdentityOutputWithContext(context.Context) GetKsqlClusterCredentialIdentityOutput
}

type GetKsqlClusterCredentialIdentityArgs struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKsqlClusterCredentialIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i GetKsqlClusterCredentialIdentityArgs) ToGetKsqlClusterCredentialIdentityOutput() GetKsqlClusterCredentialIdentityOutput {
	return i.ToGetKsqlClusterCredentialIdentityOutputWithContext(context.Background())
}

func (i GetKsqlClusterCredentialIdentityArgs) ToGetKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterCredentialIdentityOutput)
}

// GetKsqlClusterCredentialIdentityArrayInput is an input type that accepts GetKsqlClusterCredentialIdentityArray and GetKsqlClusterCredentialIdentityArrayOutput values.
// You can construct a concrete instance of `GetKsqlClusterCredentialIdentityArrayInput` via:
//
//	GetKsqlClusterCredentialIdentityArray{ GetKsqlClusterCredentialIdentityArgs{...} }
type GetKsqlClusterCredentialIdentityArrayInput interface {
	pulumi.Input

	ToGetKsqlClusterCredentialIdentityArrayOutput() GetKsqlClusterCredentialIdentityArrayOutput
	ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(context.Context) GetKsqlClusterCredentialIdentityArrayOutput
}

type GetKsqlClusterCredentialIdentityArray []GetKsqlClusterCredentialIdentityInput

func (GetKsqlClusterCredentialIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i GetKsqlClusterCredentialIdentityArray) ToGetKsqlClusterCredentialIdentityArrayOutput() GetKsqlClusterCredentialIdentityArrayOutput {
	return i.ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(context.Background())
}

func (i GetKsqlClusterCredentialIdentityArray) ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterCredentialIdentityArrayOutput)
}

type GetKsqlClusterCredentialIdentityOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterCredentialIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o GetKsqlClusterCredentialIdentityOutput) ToGetKsqlClusterCredentialIdentityOutput() GetKsqlClusterCredentialIdentityOutput {
	return o
}

func (o GetKsqlClusterCredentialIdentityOutput) ToGetKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityOutput {
	return o
}

// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
func (o GetKsqlClusterCredentialIdentityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKsqlClusterCredentialIdentity) string { return v.Id }).(pulumi.StringOutput)
}

type GetKsqlClusterCredentialIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterCredentialIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o GetKsqlClusterCredentialIdentityArrayOutput) ToGetKsqlClusterCredentialIdentityArrayOutput() GetKsqlClusterCredentialIdentityArrayOutput {
	return o
}

func (o GetKsqlClusterCredentialIdentityArrayOutput) ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityArrayOutput {
	return o
}

func (o GetKsqlClusterCredentialIdentityArrayOutput) Index(i pulumi.IntInput) GetKsqlClusterCredentialIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKsqlClusterCredentialIdentity {
		return vs[0].([]GetKsqlClusterCredentialIdentity)[vs[1].(int)]
	}).(GetKsqlClusterCredentialIdentityOutput)
}

type GetKsqlClusterEnvironment struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKsqlClusterEnvironmentInput is an input type that accepts GetKsqlClusterEnvironmentArgs and GetKsqlClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetKsqlClusterEnvironmentInput` via:
//
//	GetKsqlClusterEnvironmentArgs{...}
type GetKsqlClusterEnvironmentInput interface {
	pulumi.Input

	ToGetKsqlClusterEnvironmentOutput() GetKsqlClusterEnvironmentOutput
	ToGetKsqlClusterEnvironmentOutputWithContext(context.Context) GetKsqlClusterEnvironmentOutput
}

type GetKsqlClusterEnvironmentArgs struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKsqlClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterEnvironment)(nil)).Elem()
}

func (i GetKsqlClusterEnvironmentArgs) ToGetKsqlClusterEnvironmentOutput() GetKsqlClusterEnvironmentOutput {
	return i.ToGetKsqlClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetKsqlClusterEnvironmentArgs) ToGetKsqlClusterEnvironmentOutputWithContext(ctx context.Context) GetKsqlClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterEnvironmentOutput)
}

type GetKsqlClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterEnvironment)(nil)).Elem()
}

func (o GetKsqlClusterEnvironmentOutput) ToGetKsqlClusterEnvironmentOutput() GetKsqlClusterEnvironmentOutput {
	return o
}

func (o GetKsqlClusterEnvironmentOutput) ToGetKsqlClusterEnvironmentOutputWithContext(ctx context.Context) GetKsqlClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
func (o GetKsqlClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKsqlClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKsqlClusterKafkaCluster struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKsqlClusterKafkaClusterInput is an input type that accepts GetKsqlClusterKafkaClusterArgs and GetKsqlClusterKafkaClusterOutput values.
// You can construct a concrete instance of `GetKsqlClusterKafkaClusterInput` via:
//
//	GetKsqlClusterKafkaClusterArgs{...}
type GetKsqlClusterKafkaClusterInput interface {
	pulumi.Input

	ToGetKsqlClusterKafkaClusterOutput() GetKsqlClusterKafkaClusterOutput
	ToGetKsqlClusterKafkaClusterOutputWithContext(context.Context) GetKsqlClusterKafkaClusterOutput
}

type GetKsqlClusterKafkaClusterArgs struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKsqlClusterKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (i GetKsqlClusterKafkaClusterArgs) ToGetKsqlClusterKafkaClusterOutput() GetKsqlClusterKafkaClusterOutput {
	return i.ToGetKsqlClusterKafkaClusterOutputWithContext(context.Background())
}

func (i GetKsqlClusterKafkaClusterArgs) ToGetKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterKafkaClusterOutput)
}

// GetKsqlClusterKafkaClusterArrayInput is an input type that accepts GetKsqlClusterKafkaClusterArray and GetKsqlClusterKafkaClusterArrayOutput values.
// You can construct a concrete instance of `GetKsqlClusterKafkaClusterArrayInput` via:
//
//	GetKsqlClusterKafkaClusterArray{ GetKsqlClusterKafkaClusterArgs{...} }
type GetKsqlClusterKafkaClusterArrayInput interface {
	pulumi.Input

	ToGetKsqlClusterKafkaClusterArrayOutput() GetKsqlClusterKafkaClusterArrayOutput
	ToGetKsqlClusterKafkaClusterArrayOutputWithContext(context.Context) GetKsqlClusterKafkaClusterArrayOutput
}

type GetKsqlClusterKafkaClusterArray []GetKsqlClusterKafkaClusterInput

func (GetKsqlClusterKafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (i GetKsqlClusterKafkaClusterArray) ToGetKsqlClusterKafkaClusterArrayOutput() GetKsqlClusterKafkaClusterArrayOutput {
	return i.ToGetKsqlClusterKafkaClusterArrayOutputWithContext(context.Background())
}

func (i GetKsqlClusterKafkaClusterArray) ToGetKsqlClusterKafkaClusterArrayOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterKafkaClusterArrayOutput)
}

type GetKsqlClusterKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (o GetKsqlClusterKafkaClusterOutput) ToGetKsqlClusterKafkaClusterOutput() GetKsqlClusterKafkaClusterOutput {
	return o
}

func (o GetKsqlClusterKafkaClusterOutput) ToGetKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterOutput {
	return o
}

// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
func (o GetKsqlClusterKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKsqlClusterKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetKsqlClusterKafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterKafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (o GetKsqlClusterKafkaClusterArrayOutput) ToGetKsqlClusterKafkaClusterArrayOutput() GetKsqlClusterKafkaClusterArrayOutput {
	return o
}

func (o GetKsqlClusterKafkaClusterArrayOutput) ToGetKsqlClusterKafkaClusterArrayOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterArrayOutput {
	return o
}

func (o GetKsqlClusterKafkaClusterArrayOutput) Index(i pulumi.IntInput) GetKsqlClusterKafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKsqlClusterKafkaCluster {
		return vs[0].([]GetKsqlClusterKafkaCluster)[vs[1].(int)]
	}).(GetKsqlClusterKafkaClusterOutput)
}

type GetNetworkAw struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account string `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService string `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc string `pulumi:"vpc"`
}

// GetNetworkAwInput is an input type that accepts GetNetworkAwArgs and GetNetworkAwOutput values.
// You can construct a concrete instance of `GetNetworkAwInput` via:
//
//	GetNetworkAwArgs{...}
type GetNetworkAwInput interface {
	pulumi.Input

	ToGetNetworkAwOutput() GetNetworkAwOutput
	ToGetNetworkAwOutputWithContext(context.Context) GetNetworkAwOutput
}

type GetNetworkAwArgs struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account pulumi.StringInput `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService pulumi.StringInput `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetNetworkAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAw)(nil)).Elem()
}

func (i GetNetworkAwArgs) ToGetNetworkAwOutput() GetNetworkAwOutput {
	return i.ToGetNetworkAwOutputWithContext(context.Background())
}

func (i GetNetworkAwArgs) ToGetNetworkAwOutputWithContext(ctx context.Context) GetNetworkAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAwOutput)
}

// GetNetworkAwArrayInput is an input type that accepts GetNetworkAwArray and GetNetworkAwArrayOutput values.
// You can construct a concrete instance of `GetNetworkAwArrayInput` via:
//
//	GetNetworkAwArray{ GetNetworkAwArgs{...} }
type GetNetworkAwArrayInput interface {
	pulumi.Input

	ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput
	ToGetNetworkAwArrayOutputWithContext(context.Context) GetNetworkAwArrayOutput
}

type GetNetworkAwArray []GetNetworkAwInput

func (GetNetworkAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAw)(nil)).Elem()
}

func (i GetNetworkAwArray) ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput {
	return i.ToGetNetworkAwArrayOutputWithContext(context.Background())
}

func (i GetNetworkAwArray) ToGetNetworkAwArrayOutputWithContext(ctx context.Context) GetNetworkAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAwArrayOutput)
}

type GetNetworkAwOutput struct{ *pulumi.OutputState }

func (GetNetworkAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAw)(nil)).Elem()
}

func (o GetNetworkAwOutput) ToGetNetworkAwOutput() GetNetworkAwOutput {
	return o
}

func (o GetNetworkAwOutput) ToGetNetworkAwOutputWithContext(ctx context.Context) GetNetworkAwOutput {
	return o
}

// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
func (o GetNetworkAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.Account }).(pulumi.StringOutput)
}

// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
func (o GetNetworkAwOutput) PrivateLinkEndpointService() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.PrivateLinkEndpointService }).(pulumi.StringOutput)
}

// (Required String) The Confluent Cloud VPC ID.
func (o GetNetworkAwOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetNetworkAwArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAw)(nil)).Elem()
}

func (o GetNetworkAwArrayOutput) ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput {
	return o
}

func (o GetNetworkAwArrayOutput) ToGetNetworkAwArrayOutputWithContext(ctx context.Context) GetNetworkAwArrayOutput {
	return o
}

func (o GetNetworkAwArrayOutput) Index(i pulumi.IntInput) GetNetworkAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAw {
		return vs[0].([]GetNetworkAw)[vs[1].(int)]
	}).(GetNetworkAwOutput)
}

type GetNetworkAzure struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases map[string]string `pulumi:"privateLinkServiceAliases"`
}

// GetNetworkAzureInput is an input type that accepts GetNetworkAzureArgs and GetNetworkAzureOutput values.
// You can construct a concrete instance of `GetNetworkAzureInput` via:
//
//	GetNetworkAzureArgs{...}
type GetNetworkAzureInput interface {
	pulumi.Input

	ToGetNetworkAzureOutput() GetNetworkAzureOutput
	ToGetNetworkAzureOutputWithContext(context.Context) GetNetworkAzureOutput
}

type GetNetworkAzureArgs struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases pulumi.StringMapInput `pulumi:"privateLinkServiceAliases"`
}

func (GetNetworkAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAzure)(nil)).Elem()
}

func (i GetNetworkAzureArgs) ToGetNetworkAzureOutput() GetNetworkAzureOutput {
	return i.ToGetNetworkAzureOutputWithContext(context.Background())
}

func (i GetNetworkAzureArgs) ToGetNetworkAzureOutputWithContext(ctx context.Context) GetNetworkAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAzureOutput)
}

// GetNetworkAzureArrayInput is an input type that accepts GetNetworkAzureArray and GetNetworkAzureArrayOutput values.
// You can construct a concrete instance of `GetNetworkAzureArrayInput` via:
//
//	GetNetworkAzureArray{ GetNetworkAzureArgs{...} }
type GetNetworkAzureArrayInput interface {
	pulumi.Input

	ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput
	ToGetNetworkAzureArrayOutputWithContext(context.Context) GetNetworkAzureArrayOutput
}

type GetNetworkAzureArray []GetNetworkAzureInput

func (GetNetworkAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAzure)(nil)).Elem()
}

func (i GetNetworkAzureArray) ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput {
	return i.ToGetNetworkAzureArrayOutputWithContext(context.Background())
}

func (i GetNetworkAzureArray) ToGetNetworkAzureArrayOutputWithContext(ctx context.Context) GetNetworkAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAzureArrayOutput)
}

type GetNetworkAzureOutput struct{ *pulumi.OutputState }

func (GetNetworkAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAzure)(nil)).Elem()
}

func (o GetNetworkAzureOutput) ToGetNetworkAzureOutput() GetNetworkAzureOutput {
	return o
}

func (o GetNetworkAzureOutput) ToGetNetworkAzureOutputWithContext(ctx context.Context) GetNetworkAzureOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
func (o GetNetworkAzureOutput) PrivateLinkServiceAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkAzure) map[string]string { return v.PrivateLinkServiceAliases }).(pulumi.StringMapOutput)
}

type GetNetworkAzureArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAzure)(nil)).Elem()
}

func (o GetNetworkAzureArrayOutput) ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput {
	return o
}

func (o GetNetworkAzureArrayOutput) ToGetNetworkAzureArrayOutputWithContext(ctx context.Context) GetNetworkAzureArrayOutput {
	return o
}

func (o GetNetworkAzureArrayOutput) Index(i pulumi.IntInput) GetNetworkAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAzure {
		return vs[0].([]GetNetworkAzure)[vs[1].(int)]
	}).(GetNetworkAzureOutput)
}

type GetNetworkDnsConfig struct {
	// (Required String) Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	Resolution string `pulumi:"resolution"`
}

// GetNetworkDnsConfigInput is an input type that accepts GetNetworkDnsConfigArgs and GetNetworkDnsConfigOutput values.
// You can construct a concrete instance of `GetNetworkDnsConfigInput` via:
//
//	GetNetworkDnsConfigArgs{...}
type GetNetworkDnsConfigInput interface {
	pulumi.Input

	ToGetNetworkDnsConfigOutput() GetNetworkDnsConfigOutput
	ToGetNetworkDnsConfigOutputWithContext(context.Context) GetNetworkDnsConfigOutput
}

type GetNetworkDnsConfigArgs struct {
	// (Required String) Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	Resolution pulumi.StringInput `pulumi:"resolution"`
}

func (GetNetworkDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDnsConfig)(nil)).Elem()
}

func (i GetNetworkDnsConfigArgs) ToGetNetworkDnsConfigOutput() GetNetworkDnsConfigOutput {
	return i.ToGetNetworkDnsConfigOutputWithContext(context.Background())
}

func (i GetNetworkDnsConfigArgs) ToGetNetworkDnsConfigOutputWithContext(ctx context.Context) GetNetworkDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDnsConfigOutput)
}

// GetNetworkDnsConfigArrayInput is an input type that accepts GetNetworkDnsConfigArray and GetNetworkDnsConfigArrayOutput values.
// You can construct a concrete instance of `GetNetworkDnsConfigArrayInput` via:
//
//	GetNetworkDnsConfigArray{ GetNetworkDnsConfigArgs{...} }
type GetNetworkDnsConfigArrayInput interface {
	pulumi.Input

	ToGetNetworkDnsConfigArrayOutput() GetNetworkDnsConfigArrayOutput
	ToGetNetworkDnsConfigArrayOutputWithContext(context.Context) GetNetworkDnsConfigArrayOutput
}

type GetNetworkDnsConfigArray []GetNetworkDnsConfigInput

func (GetNetworkDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDnsConfig)(nil)).Elem()
}

func (i GetNetworkDnsConfigArray) ToGetNetworkDnsConfigArrayOutput() GetNetworkDnsConfigArrayOutput {
	return i.ToGetNetworkDnsConfigArrayOutputWithContext(context.Background())
}

func (i GetNetworkDnsConfigArray) ToGetNetworkDnsConfigArrayOutputWithContext(ctx context.Context) GetNetworkDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDnsConfigArrayOutput)
}

type GetNetworkDnsConfigOutput struct{ *pulumi.OutputState }

func (GetNetworkDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDnsConfig)(nil)).Elem()
}

func (o GetNetworkDnsConfigOutput) ToGetNetworkDnsConfigOutput() GetNetworkDnsConfigOutput {
	return o
}

func (o GetNetworkDnsConfigOutput) ToGetNetworkDnsConfigOutputWithContext(ctx context.Context) GetNetworkDnsConfigOutput {
	return o
}

// (Required String) Network DNS resolution.
// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
func (o GetNetworkDnsConfigOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDnsConfig) string { return v.Resolution }).(pulumi.StringOutput)
}

type GetNetworkDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDnsConfig)(nil)).Elem()
}

func (o GetNetworkDnsConfigArrayOutput) ToGetNetworkDnsConfigArrayOutput() GetNetworkDnsConfigArrayOutput {
	return o
}

func (o GetNetworkDnsConfigArrayOutput) ToGetNetworkDnsConfigArrayOutputWithContext(ctx context.Context) GetNetworkDnsConfigArrayOutput {
	return o
}

func (o GetNetworkDnsConfigArrayOutput) Index(i pulumi.IntInput) GetNetworkDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkDnsConfig {
		return vs[0].([]GetNetworkDnsConfig)[vs[1].(int)]
	}).(GetNetworkDnsConfigOutput)
}

type GetNetworkEnvironment struct {
	// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetNetworkEnvironmentInput is an input type that accepts GetNetworkEnvironmentArgs and GetNetworkEnvironmentOutput values.
// You can construct a concrete instance of `GetNetworkEnvironmentInput` via:
//
//	GetNetworkEnvironmentArgs{...}
type GetNetworkEnvironmentInput interface {
	pulumi.Input

	ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput
	ToGetNetworkEnvironmentOutputWithContext(context.Context) GetNetworkEnvironmentOutput
}

type GetNetworkEnvironmentArgs struct {
	// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkEnvironment)(nil)).Elem()
}

func (i GetNetworkEnvironmentArgs) ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput {
	return i.ToGetNetworkEnvironmentOutputWithContext(context.Background())
}

func (i GetNetworkEnvironmentArgs) ToGetNetworkEnvironmentOutputWithContext(ctx context.Context) GetNetworkEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkEnvironmentOutput)
}

type GetNetworkEnvironmentOutput struct{ *pulumi.OutputState }

func (GetNetworkEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkEnvironment)(nil)).Elem()
}

func (o GetNetworkEnvironmentOutput) ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput {
	return o
}

func (o GetNetworkEnvironmentOutput) ToGetNetworkEnvironmentOutputWithContext(ctx context.Context) GetNetworkEnvironmentOutput {
	return o
}

// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
func (o GetNetworkEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkGcp struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments map[string]string `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project string `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// GetNetworkGcpInput is an input type that accepts GetNetworkGcpArgs and GetNetworkGcpOutput values.
// You can construct a concrete instance of `GetNetworkGcpInput` via:
//
//	GetNetworkGcpArgs{...}
type GetNetworkGcpInput interface {
	pulumi.Input

	ToGetNetworkGcpOutput() GetNetworkGcpOutput
	ToGetNetworkGcpOutputWithContext(context.Context) GetNetworkGcpOutput
}

type GetNetworkGcpArgs struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments pulumi.StringMapInput `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project pulumi.StringInput `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (GetNetworkGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGcp)(nil)).Elem()
}

func (i GetNetworkGcpArgs) ToGetNetworkGcpOutput() GetNetworkGcpOutput {
	return i.ToGetNetworkGcpOutputWithContext(context.Background())
}

func (i GetNetworkGcpArgs) ToGetNetworkGcpOutputWithContext(ctx context.Context) GetNetworkGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGcpOutput)
}

// GetNetworkGcpArrayInput is an input type that accepts GetNetworkGcpArray and GetNetworkGcpArrayOutput values.
// You can construct a concrete instance of `GetNetworkGcpArrayInput` via:
//
//	GetNetworkGcpArray{ GetNetworkGcpArgs{...} }
type GetNetworkGcpArrayInput interface {
	pulumi.Input

	ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput
	ToGetNetworkGcpArrayOutputWithContext(context.Context) GetNetworkGcpArrayOutput
}

type GetNetworkGcpArray []GetNetworkGcpInput

func (GetNetworkGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGcp)(nil)).Elem()
}

func (i GetNetworkGcpArray) ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput {
	return i.ToGetNetworkGcpArrayOutputWithContext(context.Background())
}

func (i GetNetworkGcpArray) ToGetNetworkGcpArrayOutputWithContext(ctx context.Context) GetNetworkGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGcpArrayOutput)
}

type GetNetworkGcpOutput struct{ *pulumi.OutputState }

func (GetNetworkGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGcp)(nil)).Elem()
}

func (o GetNetworkGcpOutput) ToGetNetworkGcpOutput() GetNetworkGcpOutput {
	return o
}

func (o GetNetworkGcpOutput) ToGetNetworkGcpOutputWithContext(ctx context.Context) GetNetworkGcpOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
func (o GetNetworkGcpOutput) PrivateServiceConnectServiceAttachments() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkGcp) map[string]string { return v.PrivateServiceConnectServiceAttachments }).(pulumi.StringMapOutput)
}

// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
func (o GetNetworkGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGcp) string { return v.Project }).(pulumi.StringOutput)
}

// (Required String) The network name of the Confluent Cloud VPC.
func (o GetNetworkGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type GetNetworkGcpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGcp)(nil)).Elem()
}

func (o GetNetworkGcpArrayOutput) ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput {
	return o
}

func (o GetNetworkGcpArrayOutput) ToGetNetworkGcpArrayOutputWithContext(ctx context.Context) GetNetworkGcpArrayOutput {
	return o
}

func (o GetNetworkGcpArrayOutput) Index(i pulumi.IntInput) GetNetworkGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkGcp {
		return vs[0].([]GetNetworkGcp)[vs[1].(int)]
	}).(GetNetworkGcpOutput)
}

type GetPeeringAw struct {
	// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes []string `pulumi:"routes"`
	// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc string `pulumi:"vpc"`
}

// GetPeeringAwInput is an input type that accepts GetPeeringAwArgs and GetPeeringAwOutput values.
// You can construct a concrete instance of `GetPeeringAwInput` via:
//
//	GetPeeringAwArgs{...}
type GetPeeringAwInput interface {
	pulumi.Input

	ToGetPeeringAwOutput() GetPeeringAwOutput
	ToGetPeeringAwOutputWithContext(context.Context) GetPeeringAwOutput
}

type GetPeeringAwArgs struct {
	// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetPeeringAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAw)(nil)).Elem()
}

func (i GetPeeringAwArgs) ToGetPeeringAwOutput() GetPeeringAwOutput {
	return i.ToGetPeeringAwOutputWithContext(context.Background())
}

func (i GetPeeringAwArgs) ToGetPeeringAwOutputWithContext(ctx context.Context) GetPeeringAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAwOutput)
}

// GetPeeringAwArrayInput is an input type that accepts GetPeeringAwArray and GetPeeringAwArrayOutput values.
// You can construct a concrete instance of `GetPeeringAwArrayInput` via:
//
//	GetPeeringAwArray{ GetPeeringAwArgs{...} }
type GetPeeringAwArrayInput interface {
	pulumi.Input

	ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput
	ToGetPeeringAwArrayOutputWithContext(context.Context) GetPeeringAwArrayOutput
}

type GetPeeringAwArray []GetPeeringAwInput

func (GetPeeringAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAw)(nil)).Elem()
}

func (i GetPeeringAwArray) ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput {
	return i.ToGetPeeringAwArrayOutputWithContext(context.Background())
}

func (i GetPeeringAwArray) ToGetPeeringAwArrayOutputWithContext(ctx context.Context) GetPeeringAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAwArrayOutput)
}

type GetPeeringAwOutput struct{ *pulumi.OutputState }

func (GetPeeringAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAw)(nil)).Elem()
}

func (o GetPeeringAwOutput) ToGetPeeringAwOutput() GetPeeringAwOutput {
	return o
}

func (o GetPeeringAwOutput) ToGetPeeringAwOutputWithContext(ctx context.Context) GetPeeringAwOutput {
	return o
}

// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o GetPeeringAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.Account }).(pulumi.StringOutput)
}

// (Required String) The region of the Azure peer VNet.
func (o GetPeeringAwOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o GetPeeringAwOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringAw) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o GetPeeringAwOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetPeeringAwArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAw)(nil)).Elem()
}

func (o GetPeeringAwArrayOutput) ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput {
	return o
}

func (o GetPeeringAwArrayOutput) ToGetPeeringAwArrayOutputWithContext(ctx context.Context) GetPeeringAwArrayOutput {
	return o
}

func (o GetPeeringAwArrayOutput) Index(i pulumi.IntInput) GetPeeringAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAw {
		return vs[0].([]GetPeeringAw)[vs[1].(int)]
	}).(GetPeeringAwOutput)
}

type GetPeeringAzure struct {
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant string `pulumi:"tenant"`
	// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet string `pulumi:"vnet"`
}

// GetPeeringAzureInput is an input type that accepts GetPeeringAzureArgs and GetPeeringAzureOutput values.
// You can construct a concrete instance of `GetPeeringAzureInput` via:
//
//	GetPeeringAzureArgs{...}
type GetPeeringAzureInput interface {
	pulumi.Input

	ToGetPeeringAzureOutput() GetPeeringAzureOutput
	ToGetPeeringAzureOutputWithContext(context.Context) GetPeeringAzureOutput
}

type GetPeeringAzureArgs struct {
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant pulumi.StringInput `pulumi:"tenant"`
	// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet pulumi.StringInput `pulumi:"vnet"`
}

func (GetPeeringAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAzure)(nil)).Elem()
}

func (i GetPeeringAzureArgs) ToGetPeeringAzureOutput() GetPeeringAzureOutput {
	return i.ToGetPeeringAzureOutputWithContext(context.Background())
}

func (i GetPeeringAzureArgs) ToGetPeeringAzureOutputWithContext(ctx context.Context) GetPeeringAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAzureOutput)
}

// GetPeeringAzureArrayInput is an input type that accepts GetPeeringAzureArray and GetPeeringAzureArrayOutput values.
// You can construct a concrete instance of `GetPeeringAzureArrayInput` via:
//
//	GetPeeringAzureArray{ GetPeeringAzureArgs{...} }
type GetPeeringAzureArrayInput interface {
	pulumi.Input

	ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput
	ToGetPeeringAzureArrayOutputWithContext(context.Context) GetPeeringAzureArrayOutput
}

type GetPeeringAzureArray []GetPeeringAzureInput

func (GetPeeringAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAzure)(nil)).Elem()
}

func (i GetPeeringAzureArray) ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput {
	return i.ToGetPeeringAzureArrayOutputWithContext(context.Background())
}

func (i GetPeeringAzureArray) ToGetPeeringAzureArrayOutputWithContext(ctx context.Context) GetPeeringAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAzureArrayOutput)
}

type GetPeeringAzureOutput struct{ *pulumi.OutputState }

func (GetPeeringAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAzure)(nil)).Elem()
}

func (o GetPeeringAzureOutput) ToGetPeeringAzureOutput() GetPeeringAzureOutput {
	return o
}

func (o GetPeeringAzureOutput) ToGetPeeringAzureOutputWithContext(ctx context.Context) GetPeeringAzureOutput {
	return o
}

// (Required String) The region of the Azure peer VNet.
func (o GetPeeringAzureOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o GetPeeringAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.Tenant }).(pulumi.StringOutput)
}

// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o GetPeeringAzureOutput) Vnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.Vnet }).(pulumi.StringOutput)
}

type GetPeeringAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAzure)(nil)).Elem()
}

func (o GetPeeringAzureArrayOutput) ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput {
	return o
}

func (o GetPeeringAzureArrayOutput) ToGetPeeringAzureArrayOutputWithContext(ctx context.Context) GetPeeringAzureArrayOutput {
	return o
}

func (o GetPeeringAzureArrayOutput) Index(i pulumi.IntInput) GetPeeringAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAzure {
		return vs[0].([]GetPeeringAzure)[vs[1].(int)]
	}).(GetPeeringAzureOutput)
}

type GetPeeringEnvironment struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPeeringEnvironmentInput is an input type that accepts GetPeeringEnvironmentArgs and GetPeeringEnvironmentOutput values.
// You can construct a concrete instance of `GetPeeringEnvironmentInput` via:
//
//	GetPeeringEnvironmentArgs{...}
type GetPeeringEnvironmentInput interface {
	pulumi.Input

	ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput
	ToGetPeeringEnvironmentOutputWithContext(context.Context) GetPeeringEnvironmentOutput
}

type GetPeeringEnvironmentArgs struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPeeringEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringEnvironment)(nil)).Elem()
}

func (i GetPeeringEnvironmentArgs) ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput {
	return i.ToGetPeeringEnvironmentOutputWithContext(context.Background())
}

func (i GetPeeringEnvironmentArgs) ToGetPeeringEnvironmentOutputWithContext(ctx context.Context) GetPeeringEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringEnvironmentOutput)
}

type GetPeeringEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPeeringEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringEnvironment)(nil)).Elem()
}

func (o GetPeeringEnvironmentOutput) ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput {
	return o
}

func (o GetPeeringEnvironmentOutput) ToGetPeeringEnvironmentOutputWithContext(ctx context.Context) GetPeeringEnvironmentOutput {
	return o
}

// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
func (o GetPeeringEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPeeringGcp struct {
	// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes bool `pulumi:"importCustomRoutes"`
	// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
	// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// GetPeeringGcpInput is an input type that accepts GetPeeringGcpArgs and GetPeeringGcpOutput values.
// You can construct a concrete instance of `GetPeeringGcpInput` via:
//
//	GetPeeringGcpArgs{...}
type GetPeeringGcpInput interface {
	pulumi.Input

	ToGetPeeringGcpOutput() GetPeeringGcpOutput
	ToGetPeeringGcpOutputWithContext(context.Context) GetPeeringGcpOutput
}

type GetPeeringGcpArgs struct {
	// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes pulumi.BoolInput `pulumi:"importCustomRoutes"`
	// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
	// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (GetPeeringGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringGcp)(nil)).Elem()
}

func (i GetPeeringGcpArgs) ToGetPeeringGcpOutput() GetPeeringGcpOutput {
	return i.ToGetPeeringGcpOutputWithContext(context.Background())
}

func (i GetPeeringGcpArgs) ToGetPeeringGcpOutputWithContext(ctx context.Context) GetPeeringGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringGcpOutput)
}

// GetPeeringGcpArrayInput is an input type that accepts GetPeeringGcpArray and GetPeeringGcpArrayOutput values.
// You can construct a concrete instance of `GetPeeringGcpArrayInput` via:
//
//	GetPeeringGcpArray{ GetPeeringGcpArgs{...} }
type GetPeeringGcpArrayInput interface {
	pulumi.Input

	ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput
	ToGetPeeringGcpArrayOutputWithContext(context.Context) GetPeeringGcpArrayOutput
}

type GetPeeringGcpArray []GetPeeringGcpInput

func (GetPeeringGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringGcp)(nil)).Elem()
}

func (i GetPeeringGcpArray) ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput {
	return i.ToGetPeeringGcpArrayOutputWithContext(context.Background())
}

func (i GetPeeringGcpArray) ToGetPeeringGcpArrayOutputWithContext(ctx context.Context) GetPeeringGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringGcpArrayOutput)
}

type GetPeeringGcpOutput struct{ *pulumi.OutputState }

func (GetPeeringGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringGcp)(nil)).Elem()
}

func (o GetPeeringGcpOutput) ToGetPeeringGcpOutput() GetPeeringGcpOutput {
	return o
}

func (o GetPeeringGcpOutput) ToGetPeeringGcpOutputWithContext(ctx context.Context) GetPeeringGcpOutput {
	return o
}

// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o GetPeeringGcpOutput) ImportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPeeringGcp) bool { return v.ImportCustomRoutes }).(pulumi.BoolOutput)
}

// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o GetPeeringGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringGcp) string { return v.Project }).(pulumi.StringOutput)
}

// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o GetPeeringGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type GetPeeringGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringGcp)(nil)).Elem()
}

func (o GetPeeringGcpArrayOutput) ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput {
	return o
}

func (o GetPeeringGcpArrayOutput) ToGetPeeringGcpArrayOutputWithContext(ctx context.Context) GetPeeringGcpArrayOutput {
	return o
}

func (o GetPeeringGcpArrayOutput) Index(i pulumi.IntInput) GetPeeringGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringGcp {
		return vs[0].([]GetPeeringGcp)[vs[1].(int)]
	}).(GetPeeringGcpOutput)
}

type GetPeeringNetwork struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPeeringNetworkInput is an input type that accepts GetPeeringNetworkArgs and GetPeeringNetworkOutput values.
// You can construct a concrete instance of `GetPeeringNetworkInput` via:
//
//	GetPeeringNetworkArgs{...}
type GetPeeringNetworkInput interface {
	pulumi.Input

	ToGetPeeringNetworkOutput() GetPeeringNetworkOutput
	ToGetPeeringNetworkOutputWithContext(context.Context) GetPeeringNetworkOutput
}

type GetPeeringNetworkArgs struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringNetwork)(nil)).Elem()
}

func (i GetPeeringNetworkArgs) ToGetPeeringNetworkOutput() GetPeeringNetworkOutput {
	return i.ToGetPeeringNetworkOutputWithContext(context.Background())
}

func (i GetPeeringNetworkArgs) ToGetPeeringNetworkOutputWithContext(ctx context.Context) GetPeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringNetworkOutput)
}

// GetPeeringNetworkArrayInput is an input type that accepts GetPeeringNetworkArray and GetPeeringNetworkArrayOutput values.
// You can construct a concrete instance of `GetPeeringNetworkArrayInput` via:
//
//	GetPeeringNetworkArray{ GetPeeringNetworkArgs{...} }
type GetPeeringNetworkArrayInput interface {
	pulumi.Input

	ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput
	ToGetPeeringNetworkArrayOutputWithContext(context.Context) GetPeeringNetworkArrayOutput
}

type GetPeeringNetworkArray []GetPeeringNetworkInput

func (GetPeeringNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringNetwork)(nil)).Elem()
}

func (i GetPeeringNetworkArray) ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput {
	return i.ToGetPeeringNetworkArrayOutputWithContext(context.Background())
}

func (i GetPeeringNetworkArray) ToGetPeeringNetworkArrayOutputWithContext(ctx context.Context) GetPeeringNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringNetworkArrayOutput)
}

type GetPeeringNetworkOutput struct{ *pulumi.OutputState }

func (GetPeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringNetwork)(nil)).Elem()
}

func (o GetPeeringNetworkOutput) ToGetPeeringNetworkOutput() GetPeeringNetworkOutput {
	return o
}

func (o GetPeeringNetworkOutput) ToGetPeeringNetworkOutputWithContext(ctx context.Context) GetPeeringNetworkOutput {
	return o
}

// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
func (o GetPeeringNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetPeeringNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringNetwork)(nil)).Elem()
}

func (o GetPeeringNetworkArrayOutput) ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput {
	return o
}

func (o GetPeeringNetworkArrayOutput) ToGetPeeringNetworkArrayOutputWithContext(ctx context.Context) GetPeeringNetworkArrayOutput {
	return o
}

func (o GetPeeringNetworkArrayOutput) Index(i pulumi.IntInput) GetPeeringNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringNetwork {
		return vs[0].([]GetPeeringNetwork)[vs[1].(int)]
	}).(GetPeeringNetworkOutput)
}

type GetPrivateLinkAccessAw struct {
	// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
}

// GetPrivateLinkAccessAwInput is an input type that accepts GetPrivateLinkAccessAwArgs and GetPrivateLinkAccessAwOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAwInput` via:
//
//	GetPrivateLinkAccessAwArgs{...}
type GetPrivateLinkAccessAwInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput
	ToGetPrivateLinkAccessAwOutputWithContext(context.Context) GetPrivateLinkAccessAwOutput
}

type GetPrivateLinkAccessAwArgs struct {
	// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
}

func (GetPrivateLinkAccessAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAw)(nil)).Elem()
}

func (i GetPrivateLinkAccessAwArgs) ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput {
	return i.ToGetPrivateLinkAccessAwOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAwArgs) ToGetPrivateLinkAccessAwOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAwOutput)
}

// GetPrivateLinkAccessAwArrayInput is an input type that accepts GetPrivateLinkAccessAwArray and GetPrivateLinkAccessAwArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAwArrayInput` via:
//
//	GetPrivateLinkAccessAwArray{ GetPrivateLinkAccessAwArgs{...} }
type GetPrivateLinkAccessAwArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput
	ToGetPrivateLinkAccessAwArrayOutputWithContext(context.Context) GetPrivateLinkAccessAwArrayOutput
}

type GetPrivateLinkAccessAwArray []GetPrivateLinkAccessAwInput

func (GetPrivateLinkAccessAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAw)(nil)).Elem()
}

func (i GetPrivateLinkAccessAwArray) ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput {
	return i.ToGetPrivateLinkAccessAwArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAwArray) ToGetPrivateLinkAccessAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAwArrayOutput)
}

type GetPrivateLinkAccessAwOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAw)(nil)).Elem()
}

func (o GetPrivateLinkAccessAwOutput) ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput {
	return o
}

func (o GetPrivateLinkAccessAwOutput) ToGetPrivateLinkAccessAwOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwOutput {
	return o
}

// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o GetPrivateLinkAccessAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessAw) string { return v.Account }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessAwArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAw)(nil)).Elem()
}

func (o GetPrivateLinkAccessAwArrayOutput) ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAwArrayOutput) ToGetPrivateLinkAccessAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAwArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessAw {
		return vs[0].([]GetPrivateLinkAccessAw)[vs[1].(int)]
	}).(GetPrivateLinkAccessAwOutput)
}

type GetPrivateLinkAccessAzure struct {
	// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription string `pulumi:"subscription"`
}

// GetPrivateLinkAccessAzureInput is an input type that accepts GetPrivateLinkAccessAzureArgs and GetPrivateLinkAccessAzureOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAzureInput` via:
//
//	GetPrivateLinkAccessAzureArgs{...}
type GetPrivateLinkAccessAzureInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput
	ToGetPrivateLinkAccessAzureOutputWithContext(context.Context) GetPrivateLinkAccessAzureOutput
}

type GetPrivateLinkAccessAzureArgs struct {
	// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (GetPrivateLinkAccessAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (i GetPrivateLinkAccessAzureArgs) ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput {
	return i.ToGetPrivateLinkAccessAzureOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAzureArgs) ToGetPrivateLinkAccessAzureOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAzureOutput)
}

// GetPrivateLinkAccessAzureArrayInput is an input type that accepts GetPrivateLinkAccessAzureArray and GetPrivateLinkAccessAzureArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAzureArrayInput` via:
//
//	GetPrivateLinkAccessAzureArray{ GetPrivateLinkAccessAzureArgs{...} }
type GetPrivateLinkAccessAzureArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput
	ToGetPrivateLinkAccessAzureArrayOutputWithContext(context.Context) GetPrivateLinkAccessAzureArrayOutput
}

type GetPrivateLinkAccessAzureArray []GetPrivateLinkAccessAzureInput

func (GetPrivateLinkAccessAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (i GetPrivateLinkAccessAzureArray) ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput {
	return i.ToGetPrivateLinkAccessAzureArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAzureArray) ToGetPrivateLinkAccessAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAzureArrayOutput)
}

type GetPrivateLinkAccessAzureOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (o GetPrivateLinkAccessAzureOutput) ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput {
	return o
}

func (o GetPrivateLinkAccessAzureOutput) ToGetPrivateLinkAccessAzureOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureOutput {
	return o
}

// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o GetPrivateLinkAccessAzureOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessAzure) string { return v.Subscription }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (o GetPrivateLinkAccessAzureArrayOutput) ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAzureArrayOutput) ToGetPrivateLinkAccessAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAzureArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessAzure {
		return vs[0].([]GetPrivateLinkAccessAzure)[vs[1].(int)]
	}).(GetPrivateLinkAccessAzureOutput)
}

type GetPrivateLinkAccessEnvironment struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAccessEnvironmentInput is an input type that accepts GetPrivateLinkAccessEnvironmentArgs and GetPrivateLinkAccessEnvironmentOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessEnvironmentInput` via:
//
//	GetPrivateLinkAccessEnvironmentArgs{...}
type GetPrivateLinkAccessEnvironmentInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput
	ToGetPrivateLinkAccessEnvironmentOutputWithContext(context.Context) GetPrivateLinkAccessEnvironmentOutput
}

type GetPrivateLinkAccessEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAccessEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i GetPrivateLinkAccessEnvironmentArgs) ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput {
	return i.ToGetPrivateLinkAccessEnvironmentOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessEnvironmentArgs) ToGetPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAccessEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessEnvironmentOutput)
}

type GetPrivateLinkAccessEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o GetPrivateLinkAccessEnvironmentOutput) ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput {
	return o
}

func (o GetPrivateLinkAccessEnvironmentOutput) ToGetPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAccessEnvironmentOutput {
	return o
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
func (o GetPrivateLinkAccessEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessGcp struct {
	// (Required String) The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
}

// GetPrivateLinkAccessGcpInput is an input type that accepts GetPrivateLinkAccessGcpArgs and GetPrivateLinkAccessGcpOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessGcpInput` via:
//
//	GetPrivateLinkAccessGcpArgs{...}
type GetPrivateLinkAccessGcpInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessGcpOutput() GetPrivateLinkAccessGcpOutput
	ToGetPrivateLinkAccessGcpOutputWithContext(context.Context) GetPrivateLinkAccessGcpOutput
}

type GetPrivateLinkAccessGcpArgs struct {
	// (Required String) The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
}

func (GetPrivateLinkAccessGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (i GetPrivateLinkAccessGcpArgs) ToGetPrivateLinkAccessGcpOutput() GetPrivateLinkAccessGcpOutput {
	return i.ToGetPrivateLinkAccessGcpOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessGcpArgs) ToGetPrivateLinkAccessGcpOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessGcpOutput)
}

// GetPrivateLinkAccessGcpArrayInput is an input type that accepts GetPrivateLinkAccessGcpArray and GetPrivateLinkAccessGcpArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessGcpArrayInput` via:
//
//	GetPrivateLinkAccessGcpArray{ GetPrivateLinkAccessGcpArgs{...} }
type GetPrivateLinkAccessGcpArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessGcpArrayOutput() GetPrivateLinkAccessGcpArrayOutput
	ToGetPrivateLinkAccessGcpArrayOutputWithContext(context.Context) GetPrivateLinkAccessGcpArrayOutput
}

type GetPrivateLinkAccessGcpArray []GetPrivateLinkAccessGcpInput

func (GetPrivateLinkAccessGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (i GetPrivateLinkAccessGcpArray) ToGetPrivateLinkAccessGcpArrayOutput() GetPrivateLinkAccessGcpArrayOutput {
	return i.ToGetPrivateLinkAccessGcpArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessGcpArray) ToGetPrivateLinkAccessGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessGcpArrayOutput)
}

type GetPrivateLinkAccessGcpOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (o GetPrivateLinkAccessGcpOutput) ToGetPrivateLinkAccessGcpOutput() GetPrivateLinkAccessGcpOutput {
	return o
}

func (o GetPrivateLinkAccessGcpOutput) ToGetPrivateLinkAccessGcpOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpOutput {
	return o
}

// (Required String) The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o GetPrivateLinkAccessGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessGcp) string { return v.Project }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (o GetPrivateLinkAccessGcpArrayOutput) ToGetPrivateLinkAccessGcpArrayOutput() GetPrivateLinkAccessGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAccessGcpArrayOutput) ToGetPrivateLinkAccessGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAccessGcpArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessGcp {
		return vs[0].([]GetPrivateLinkAccessGcp)[vs[1].(int)]
	}).(GetPrivateLinkAccessGcpOutput)
}

type GetPrivateLinkAccessNetwork struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAccessNetworkInput is an input type that accepts GetPrivateLinkAccessNetworkArgs and GetPrivateLinkAccessNetworkOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessNetworkInput` via:
//
//	GetPrivateLinkAccessNetworkArgs{...}
type GetPrivateLinkAccessNetworkInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput
	ToGetPrivateLinkAccessNetworkOutputWithContext(context.Context) GetPrivateLinkAccessNetworkOutput
}

type GetPrivateLinkAccessNetworkArgs struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAccessNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (i GetPrivateLinkAccessNetworkArgs) ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput {
	return i.ToGetPrivateLinkAccessNetworkOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessNetworkArgs) ToGetPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessNetworkOutput)
}

// GetPrivateLinkAccessNetworkArrayInput is an input type that accepts GetPrivateLinkAccessNetworkArray and GetPrivateLinkAccessNetworkArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessNetworkArrayInput` via:
//
//	GetPrivateLinkAccessNetworkArray{ GetPrivateLinkAccessNetworkArgs{...} }
type GetPrivateLinkAccessNetworkArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput
	ToGetPrivateLinkAccessNetworkArrayOutputWithContext(context.Context) GetPrivateLinkAccessNetworkArrayOutput
}

type GetPrivateLinkAccessNetworkArray []GetPrivateLinkAccessNetworkInput

func (GetPrivateLinkAccessNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (i GetPrivateLinkAccessNetworkArray) ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput {
	return i.ToGetPrivateLinkAccessNetworkArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessNetworkArray) ToGetPrivateLinkAccessNetworkArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessNetworkArrayOutput)
}

type GetPrivateLinkAccessNetworkOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (o GetPrivateLinkAccessNetworkOutput) ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkOutput) ToGetPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkOutput {
	return o
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
func (o GetPrivateLinkAccessNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (o GetPrivateLinkAccessNetworkArrayOutput) ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkArrayOutput) ToGetPrivateLinkAccessNetworkArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkArrayOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessNetwork {
		return vs[0].([]GetPrivateLinkAccessNetwork)[vs[1].(int)]
	}).(GetPrivateLinkAccessNetworkOutput)
}

type GetSchemaCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaCredentialsInput is an input type that accepts GetSchemaCredentialsArgs and GetSchemaCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaCredentialsInput` via:
//
//	GetSchemaCredentialsArgs{...}
type GetSchemaCredentialsInput interface {
	pulumi.Input

	ToGetSchemaCredentialsOutput() GetSchemaCredentialsOutput
	ToGetSchemaCredentialsOutputWithContext(context.Context) GetSchemaCredentialsOutput
}

type GetSchemaCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaCredentials)(nil)).Elem()
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsOutput() GetSchemaCredentialsOutput {
	return i.ToGetSchemaCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsOutputWithContext(ctx context.Context) GetSchemaCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaCredentialsOutput)
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return i.ToGetSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaCredentialsOutput).ToGetSchemaCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaCredentialsPtrInput is an input type that accepts GetSchemaCredentialsArgs, GetSchemaCredentialsPtr and GetSchemaCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaCredentialsPtrInput` via:
//
//	        GetSchemaCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput
	ToGetSchemaCredentialsPtrOutputWithContext(context.Context) GetSchemaCredentialsPtrOutput
}

type getSchemaCredentialsPtrType GetSchemaCredentialsArgs

func GetSchemaCredentialsPtr(v *GetSchemaCredentialsArgs) GetSchemaCredentialsPtrInput {
	return (*getSchemaCredentialsPtrType)(v)
}

func (*getSchemaCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaCredentials)(nil)).Elem()
}

func (i *getSchemaCredentialsPtrType) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return i.ToGetSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaCredentialsPtrType) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaCredentialsPtrOutput)
}

type GetSchemaCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaCredentials)(nil)).Elem()
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsOutput() GetSchemaCredentialsOutput {
	return o
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsOutputWithContext(ctx context.Context) GetSchemaCredentialsOutput {
	return o
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return o.ToGetSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaCredentials) *GetSchemaCredentials {
		return &v
	}).(GetSchemaCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaCredentials)(nil)).Elem()
}

func (o GetSchemaCredentialsPtrOutput) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return o
}

func (o GetSchemaCredentialsPtrOutput) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return o
}

func (o GetSchemaCredentialsPtrOutput) Elem() GetSchemaCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaCredentials) GetSchemaCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaCredentials
		return ret
	}).(GetSchemaCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaRegistryClusterConfigCredentialsInput is an input type that accepts GetSchemaRegistryClusterConfigCredentialsArgs and GetSchemaRegistryClusterConfigCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigCredentialsInput` via:
//
//	GetSchemaRegistryClusterConfigCredentialsArgs{...}
type GetSchemaRegistryClusterConfigCredentialsInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigCredentialsOutput() GetSchemaRegistryClusterConfigCredentialsOutput
	ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Context) GetSchemaRegistryClusterConfigCredentialsOutput
}

type GetSchemaRegistryClusterConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaRegistryClusterConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsOutput() GetSchemaRegistryClusterConfigCredentialsOutput {
	return i.ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigCredentialsOutput)
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigCredentialsOutput).ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterConfigCredentialsPtrInput is an input type that accepts GetSchemaRegistryClusterConfigCredentialsArgs, GetSchemaRegistryClusterConfigCredentialsPtr and GetSchemaRegistryClusterConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigCredentialsPtrInput` via:
//
//	        GetSchemaRegistryClusterConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterConfigCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput
	ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput
}

type getSchemaRegistryClusterConfigCredentialsPtrType GetSchemaRegistryClusterConfigCredentialsArgs

func GetSchemaRegistryClusterConfigCredentialsPtr(v *GetSchemaRegistryClusterConfigCredentialsArgs) GetSchemaRegistryClusterConfigCredentialsPtrInput {
	return (*getSchemaRegistryClusterConfigCredentialsPtrType)(v)
}

func (*getSchemaRegistryClusterConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i *getSchemaRegistryClusterConfigCredentialsPtrType) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterConfigCredentialsPtrType) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigCredentialsPtrOutput)
}

type GetSchemaRegistryClusterConfigCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsOutput() GetSchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterConfigCredentials) *GetSchemaRegistryClusterConfigCredentials {
		return &v
	}).(GetSchemaRegistryClusterConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryClusterConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) Elem() GetSchemaRegistryClusterConfigCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigCredentials) GetSchemaRegistryClusterConfigCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterConfigCredentials
		return ret
	}).(GetSchemaRegistryClusterConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterConfigSchemaRegistryClusterInput is an input type that accepts GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs and GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigSchemaRegistryClusterInput` via:
//
//	GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
type GetSchemaRegistryClusterConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput
	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput
}

type GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return i.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput).ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs, GetSchemaRegistryClusterConfigSchemaRegistryClusterPtr and GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
}

type getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs

func GetSchemaRegistryClusterConfigSchemaRegistryClusterPtr(v *GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput {
	return (*getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

type GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterConfigSchemaRegistryCluster) *GetSchemaRegistryClusterConfigSchemaRegistryCluster {
		return &v
	}).(GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Elem() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigSchemaRegistryCluster) GetSchemaRegistryClusterConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterConfigSchemaRegistryCluster
		return ret
	}).(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterEnvironment struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterEnvironmentInput is an input type that accepts GetSchemaRegistryClusterEnvironmentArgs and GetSchemaRegistryClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterEnvironmentInput` via:
//
//	GetSchemaRegistryClusterEnvironmentArgs{...}
type GetSchemaRegistryClusterEnvironmentInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterEnvironmentOutput() GetSchemaRegistryClusterEnvironmentOutput
	ToGetSchemaRegistryClusterEnvironmentOutputWithContext(context.Context) GetSchemaRegistryClusterEnvironmentOutput
}

type GetSchemaRegistryClusterEnvironmentArgs struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (i GetSchemaRegistryClusterEnvironmentArgs) ToGetSchemaRegistryClusterEnvironmentOutput() GetSchemaRegistryClusterEnvironmentOutput {
	return i.ToGetSchemaRegistryClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterEnvironmentArgs) ToGetSchemaRegistryClusterEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterEnvironmentOutput)
}

type GetSchemaRegistryClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (o GetSchemaRegistryClusterEnvironmentOutput) ToGetSchemaRegistryClusterEnvironmentOutput() GetSchemaRegistryClusterEnvironmentOutput {
	return o
}

func (o GetSchemaRegistryClusterEnvironmentOutput) ToGetSchemaRegistryClusterEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
func (o GetSchemaRegistryClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaRegistryClusterModeCredentialsInput is an input type that accepts GetSchemaRegistryClusterModeCredentialsArgs and GetSchemaRegistryClusterModeCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeCredentialsInput` via:
//
//	GetSchemaRegistryClusterModeCredentialsArgs{...}
type GetSchemaRegistryClusterModeCredentialsInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeCredentialsOutput() GetSchemaRegistryClusterModeCredentialsOutput
	ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(context.Context) GetSchemaRegistryClusterModeCredentialsOutput
}

type GetSchemaRegistryClusterModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaRegistryClusterModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsOutput() GetSchemaRegistryClusterModeCredentialsOutput {
	return i.ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeCredentialsOutput)
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeCredentialsOutput).ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterModeCredentialsPtrInput is an input type that accepts GetSchemaRegistryClusterModeCredentialsArgs, GetSchemaRegistryClusterModeCredentialsPtr and GetSchemaRegistryClusterModeCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeCredentialsPtrInput` via:
//
//	        GetSchemaRegistryClusterModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterModeCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput
	ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput
}

type getSchemaRegistryClusterModeCredentialsPtrType GetSchemaRegistryClusterModeCredentialsArgs

func GetSchemaRegistryClusterModeCredentialsPtr(v *GetSchemaRegistryClusterModeCredentialsArgs) GetSchemaRegistryClusterModeCredentialsPtrInput {
	return (*getSchemaRegistryClusterModeCredentialsPtrType)(v)
}

func (*getSchemaRegistryClusterModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i *getSchemaRegistryClusterModeCredentialsPtrType) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterModeCredentialsPtrType) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeCredentialsPtrOutput)
}

type GetSchemaRegistryClusterModeCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsOutput() GetSchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterModeCredentials) *GetSchemaRegistryClusterModeCredentials {
		return &v
	}).(GetSchemaRegistryClusterModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryClusterModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) Elem() GetSchemaRegistryClusterModeCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeCredentials) GetSchemaRegistryClusterModeCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterModeCredentials
		return ret
	}).(GetSchemaRegistryClusterModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterModeSchemaRegistryClusterInput is an input type that accepts GetSchemaRegistryClusterModeSchemaRegistryClusterArgs and GetSchemaRegistryClusterModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeSchemaRegistryClusterInput` via:
//
//	GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
type GetSchemaRegistryClusterModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput
	ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterOutput
}

type GetSchemaRegistryClusterModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return i.ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput).ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaRegistryClusterModeSchemaRegistryClusterArgs, GetSchemaRegistryClusterModeSchemaRegistryClusterPtr and GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
	ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
}

type getSchemaRegistryClusterModeSchemaRegistryClusterPtrType GetSchemaRegistryClusterModeSchemaRegistryClusterArgs

func GetSchemaRegistryClusterModeSchemaRegistryClusterPtr(v *GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput {
	return (*getSchemaRegistryClusterModeSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaRegistryClusterModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaRegistryClusterModeSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterModeSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

type GetSchemaRegistryClusterModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterModeSchemaRegistryCluster) *GetSchemaRegistryClusterModeSchemaRegistryCluster {
		return &v
	}).(GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Elem() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeSchemaRegistryCluster) GetSchemaRegistryClusterModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterModeSchemaRegistryCluster
		return ret
	}).(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterRegion struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterRegionInput is an input type that accepts GetSchemaRegistryClusterRegionArgs and GetSchemaRegistryClusterRegionOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterRegionInput` via:
//
//	GetSchemaRegistryClusterRegionArgs{...}
type GetSchemaRegistryClusterRegionInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterRegionOutput() GetSchemaRegistryClusterRegionOutput
	ToGetSchemaRegistryClusterRegionOutputWithContext(context.Context) GetSchemaRegistryClusterRegionOutput
}

type GetSchemaRegistryClusterRegionArgs struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterRegion)(nil)).Elem()
}

func (i GetSchemaRegistryClusterRegionArgs) ToGetSchemaRegistryClusterRegionOutput() GetSchemaRegistryClusterRegionOutput {
	return i.ToGetSchemaRegistryClusterRegionOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterRegionArgs) ToGetSchemaRegistryClusterRegionOutputWithContext(ctx context.Context) GetSchemaRegistryClusterRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterRegionOutput)
}

// GetSchemaRegistryClusterRegionArrayInput is an input type that accepts GetSchemaRegistryClusterRegionArray and GetSchemaRegistryClusterRegionArrayOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterRegionArrayInput` via:
//
//	GetSchemaRegistryClusterRegionArray{ GetSchemaRegistryClusterRegionArgs{...} }
type GetSchemaRegistryClusterRegionArrayInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterRegionArrayOutput() GetSchemaRegistryClusterRegionArrayOutput
	ToGetSchemaRegistryClusterRegionArrayOutputWithContext(context.Context) GetSchemaRegistryClusterRegionArrayOutput
}

type GetSchemaRegistryClusterRegionArray []GetSchemaRegistryClusterRegionInput

func (GetSchemaRegistryClusterRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRegistryClusterRegion)(nil)).Elem()
}

func (i GetSchemaRegistryClusterRegionArray) ToGetSchemaRegistryClusterRegionArrayOutput() GetSchemaRegistryClusterRegionArrayOutput {
	return i.ToGetSchemaRegistryClusterRegionArrayOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterRegionArray) ToGetSchemaRegistryClusterRegionArrayOutputWithContext(ctx context.Context) GetSchemaRegistryClusterRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterRegionArrayOutput)
}

type GetSchemaRegistryClusterRegionOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterRegion)(nil)).Elem()
}

func (o GetSchemaRegistryClusterRegionOutput) ToGetSchemaRegistryClusterRegionOutput() GetSchemaRegistryClusterRegionOutput {
	return o
}

func (o GetSchemaRegistryClusterRegionOutput) ToGetSchemaRegistryClusterRegionOutputWithContext(ctx context.Context) GetSchemaRegistryClusterRegionOutput {
	return o
}

// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
func (o GetSchemaRegistryClusterRegionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterRegion) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterRegionArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRegistryClusterRegion)(nil)).Elem()
}

func (o GetSchemaRegistryClusterRegionArrayOutput) ToGetSchemaRegistryClusterRegionArrayOutput() GetSchemaRegistryClusterRegionArrayOutput {
	return o
}

func (o GetSchemaRegistryClusterRegionArrayOutput) ToGetSchemaRegistryClusterRegionArrayOutputWithContext(ctx context.Context) GetSchemaRegistryClusterRegionArrayOutput {
	return o
}

func (o GetSchemaRegistryClusterRegionArrayOutput) Index(i pulumi.IntInput) GetSchemaRegistryClusterRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaRegistryClusterRegion {
		return vs[0].([]GetSchemaRegistryClusterRegion)[vs[1].(int)]
	}).(GetSchemaRegistryClusterRegionOutput)
}

type GetSchemaSchemaReference struct {
	// (Required String) The name of the subject, representing the subject under which the referenced schema is registered.
	Name string `pulumi:"name"`
	// The name of the subject (in other words, the namespace), representing the subject under which the schema will be registered, for example, `test-subject`. Schemas evolve safely, following a compatibility mode defined, under a subject name.
	SubjectName string `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version int `pulumi:"version"`
}

// GetSchemaSchemaReferenceInput is an input type that accepts GetSchemaSchemaReferenceArgs and GetSchemaSchemaReferenceOutput values.
// You can construct a concrete instance of `GetSchemaSchemaReferenceInput` via:
//
//	GetSchemaSchemaReferenceArgs{...}
type GetSchemaSchemaReferenceInput interface {
	pulumi.Input

	ToGetSchemaSchemaReferenceOutput() GetSchemaSchemaReferenceOutput
	ToGetSchemaSchemaReferenceOutputWithContext(context.Context) GetSchemaSchemaReferenceOutput
}

type GetSchemaSchemaReferenceArgs struct {
	// (Required String) The name of the subject, representing the subject under which the referenced schema is registered.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the subject (in other words, the namespace), representing the subject under which the schema will be registered, for example, `test-subject`. Schemas evolve safely, following a compatibility mode defined, under a subject name.
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSchemaSchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaReference)(nil)).Elem()
}

func (i GetSchemaSchemaReferenceArgs) ToGetSchemaSchemaReferenceOutput() GetSchemaSchemaReferenceOutput {
	return i.ToGetSchemaSchemaReferenceOutputWithContext(context.Background())
}

func (i GetSchemaSchemaReferenceArgs) ToGetSchemaSchemaReferenceOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaReferenceOutput)
}

// GetSchemaSchemaReferenceArrayInput is an input type that accepts GetSchemaSchemaReferenceArray and GetSchemaSchemaReferenceArrayOutput values.
// You can construct a concrete instance of `GetSchemaSchemaReferenceArrayInput` via:
//
//	GetSchemaSchemaReferenceArray{ GetSchemaSchemaReferenceArgs{...} }
type GetSchemaSchemaReferenceArrayInput interface {
	pulumi.Input

	ToGetSchemaSchemaReferenceArrayOutput() GetSchemaSchemaReferenceArrayOutput
	ToGetSchemaSchemaReferenceArrayOutputWithContext(context.Context) GetSchemaSchemaReferenceArrayOutput
}

type GetSchemaSchemaReferenceArray []GetSchemaSchemaReferenceInput

func (GetSchemaSchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaSchemaReference)(nil)).Elem()
}

func (i GetSchemaSchemaReferenceArray) ToGetSchemaSchemaReferenceArrayOutput() GetSchemaSchemaReferenceArrayOutput {
	return i.ToGetSchemaSchemaReferenceArrayOutputWithContext(context.Background())
}

func (i GetSchemaSchemaReferenceArray) ToGetSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaReferenceArrayOutput)
}

type GetSchemaSchemaReferenceOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaReference)(nil)).Elem()
}

func (o GetSchemaSchemaReferenceOutput) ToGetSchemaSchemaReferenceOutput() GetSchemaSchemaReferenceOutput {
	return o
}

func (o GetSchemaSchemaReferenceOutput) ToGetSchemaSchemaReferenceOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceOutput {
	return o
}

// (Required String) The name of the subject, representing the subject under which the referenced schema is registered.
func (o GetSchemaSchemaReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaSchemaReference) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the subject (in other words, the namespace), representing the subject under which the schema will be registered, for example, `test-subject`. Schemas evolve safely, following a compatibility mode defined, under a subject name.
func (o GetSchemaSchemaReferenceOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaSchemaReference) string { return v.SubjectName }).(pulumi.StringOutput)
}

// (Required Integer) The version of the Schema, for example, `4`.
func (o GetSchemaSchemaReferenceOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchemaSchemaReference) int { return v.Version }).(pulumi.IntOutput)
}

type GetSchemaSchemaReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaSchemaReference)(nil)).Elem()
}

func (o GetSchemaSchemaReferenceArrayOutput) ToGetSchemaSchemaReferenceArrayOutput() GetSchemaSchemaReferenceArrayOutput {
	return o
}

func (o GetSchemaSchemaReferenceArrayOutput) ToGetSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceArrayOutput {
	return o
}

func (o GetSchemaSchemaReferenceArrayOutput) Index(i pulumi.IntInput) GetSchemaSchemaReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaSchemaReference {
		return vs[0].([]GetSchemaSchemaReference)[vs[1].(int)]
	}).(GetSchemaSchemaReferenceOutput)
}

type GetSchemaSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaSchemaRegistryClusterInput is an input type that accepts GetSchemaSchemaRegistryClusterArgs and GetSchemaSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaSchemaRegistryClusterInput` via:
//
//	GetSchemaSchemaRegistryClusterArgs{...}
type GetSchemaSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaSchemaRegistryClusterOutput() GetSchemaSchemaRegistryClusterOutput
	ToGetSchemaSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaSchemaRegistryClusterOutput
}

type GetSchemaSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterOutput() GetSchemaSchemaRegistryClusterOutput {
	return i.ToGetSchemaSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaRegistryClusterOutput)
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaRegistryClusterOutput).ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaSchemaRegistryClusterArgs, GetSchemaSchemaRegistryClusterPtr and GetSchemaSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput
	ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaSchemaRegistryClusterPtrOutput
}

type getSchemaSchemaRegistryClusterPtrType GetSchemaSchemaRegistryClusterArgs

func GetSchemaSchemaRegistryClusterPtr(v *GetSchemaSchemaRegistryClusterArgs) GetSchemaSchemaRegistryClusterPtrInput {
	return (*getSchemaSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaSchemaRegistryClusterPtrType) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaSchemaRegistryClusterPtrType) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaRegistryClusterPtrOutput)
}

type GetSchemaSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterOutput() GetSchemaSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaSchemaRegistryCluster) *GetSchemaSchemaRegistryCluster {
		return &v
	}).(GetSchemaSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaSchemaRegistryClusterPtrOutput) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterPtrOutput) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterPtrOutput) Elem() GetSchemaSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaSchemaRegistryCluster) GetSchemaSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaSchemaRegistryCluster
		return ret
	}).(GetSchemaSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSubjectConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSubjectConfigCredentialsInput is an input type that accepts GetSubjectConfigCredentialsArgs and GetSubjectConfigCredentialsOutput values.
// You can construct a concrete instance of `GetSubjectConfigCredentialsInput` via:
//
//	GetSubjectConfigCredentialsArgs{...}
type GetSubjectConfigCredentialsInput interface {
	pulumi.Input

	ToGetSubjectConfigCredentialsOutput() GetSubjectConfigCredentialsOutput
	ToGetSubjectConfigCredentialsOutputWithContext(context.Context) GetSubjectConfigCredentialsOutput
}

type GetSubjectConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSubjectConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigCredentials)(nil)).Elem()
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsOutput() GetSubjectConfigCredentialsOutput {
	return i.ToGetSubjectConfigCredentialsOutputWithContext(context.Background())
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigCredentialsOutput)
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return i.ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigCredentialsOutput).ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx)
}

// GetSubjectConfigCredentialsPtrInput is an input type that accepts GetSubjectConfigCredentialsArgs, GetSubjectConfigCredentialsPtr and GetSubjectConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSubjectConfigCredentialsPtrInput` via:
//
//	        GetSubjectConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSubjectConfigCredentialsPtrInput interface {
	pulumi.Input

	ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput
	ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Context) GetSubjectConfigCredentialsPtrOutput
}

type getSubjectConfigCredentialsPtrType GetSubjectConfigCredentialsArgs

func GetSubjectConfigCredentialsPtr(v *GetSubjectConfigCredentialsArgs) GetSubjectConfigCredentialsPtrInput {
	return (*getSubjectConfigCredentialsPtrType)(v)
}

func (*getSubjectConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigCredentials)(nil)).Elem()
}

func (i *getSubjectConfigCredentialsPtrType) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return i.ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSubjectConfigCredentialsPtrType) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigCredentialsPtrOutput)
}

type GetSubjectConfigCredentialsOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigCredentials)(nil)).Elem()
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsOutput() GetSubjectConfigCredentialsOutput {
	return o
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsOutput {
	return o
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return o.ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectConfigCredentials) *GetSubjectConfigCredentials {
		return &v
	}).(GetSubjectConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSubjectConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSubjectConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigCredentials)(nil)).Elem()
}

func (o GetSubjectConfigCredentialsPtrOutput) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return o
}

func (o GetSubjectConfigCredentialsPtrOutput) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return o
}

func (o GetSubjectConfigCredentialsPtrOutput) Elem() GetSubjectConfigCredentialsOutput {
	return o.ApplyT(func(v *GetSubjectConfigCredentials) GetSubjectConfigCredentials {
		if v != nil {
			return *v
		}
		var ret GetSubjectConfigCredentials
		return ret
	}).(GetSubjectConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSubjectConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSubjectConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSubjectConfigSchemaRegistryClusterInput is an input type that accepts GetSubjectConfigSchemaRegistryClusterArgs and GetSubjectConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSubjectConfigSchemaRegistryClusterInput` via:
//
//	GetSubjectConfigSchemaRegistryClusterArgs{...}
type GetSubjectConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSubjectConfigSchemaRegistryClusterOutput() GetSubjectConfigSchemaRegistryClusterOutput
	ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(context.Context) GetSubjectConfigSchemaRegistryClusterOutput
}

type GetSubjectConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSubjectConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterOutput() GetSubjectConfigSchemaRegistryClusterOutput {
	return i.ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigSchemaRegistryClusterOutput)
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigSchemaRegistryClusterOutput).ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSubjectConfigSchemaRegistryClusterPtrInput is an input type that accepts GetSubjectConfigSchemaRegistryClusterArgs, GetSubjectConfigSchemaRegistryClusterPtr and GetSubjectConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSubjectConfigSchemaRegistryClusterPtrInput` via:
//
//	        GetSubjectConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSubjectConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput
	ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput
}

type getSubjectConfigSchemaRegistryClusterPtrType GetSubjectConfigSchemaRegistryClusterArgs

func GetSubjectConfigSchemaRegistryClusterPtr(v *GetSubjectConfigSchemaRegistryClusterArgs) GetSubjectConfigSchemaRegistryClusterPtrInput {
	return (*getSubjectConfigSchemaRegistryClusterPtrType)(v)
}

func (*getSubjectConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSubjectConfigSchemaRegistryClusterPtrType) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSubjectConfigSchemaRegistryClusterPtrType) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigSchemaRegistryClusterPtrOutput)
}

type GetSubjectConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterOutput() GetSubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectConfigSchemaRegistryCluster) *GetSubjectConfigSchemaRegistryCluster {
		return &v
	}).(GetSubjectConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSubjectConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) Elem() GetSubjectConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSubjectConfigSchemaRegistryCluster) GetSubjectConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSubjectConfigSchemaRegistryCluster
		return ret
	}).(GetSubjectConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSubjectModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSubjectModeCredentialsInput is an input type that accepts GetSubjectModeCredentialsArgs and GetSubjectModeCredentialsOutput values.
// You can construct a concrete instance of `GetSubjectModeCredentialsInput` via:
//
//	GetSubjectModeCredentialsArgs{...}
type GetSubjectModeCredentialsInput interface {
	pulumi.Input

	ToGetSubjectModeCredentialsOutput() GetSubjectModeCredentialsOutput
	ToGetSubjectModeCredentialsOutputWithContext(context.Context) GetSubjectModeCredentialsOutput
}

type GetSubjectModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSubjectModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeCredentials)(nil)).Elem()
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsOutput() GetSubjectModeCredentialsOutput {
	return i.ToGetSubjectModeCredentialsOutputWithContext(context.Background())
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsOutputWithContext(ctx context.Context) GetSubjectModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeCredentialsOutput)
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return i.ToGetSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeCredentialsOutput).ToGetSubjectModeCredentialsPtrOutputWithContext(ctx)
}

// GetSubjectModeCredentialsPtrInput is an input type that accepts GetSubjectModeCredentialsArgs, GetSubjectModeCredentialsPtr and GetSubjectModeCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSubjectModeCredentialsPtrInput` via:
//
//	        GetSubjectModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSubjectModeCredentialsPtrInput interface {
	pulumi.Input

	ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput
	ToGetSubjectModeCredentialsPtrOutputWithContext(context.Context) GetSubjectModeCredentialsPtrOutput
}

type getSubjectModeCredentialsPtrType GetSubjectModeCredentialsArgs

func GetSubjectModeCredentialsPtr(v *GetSubjectModeCredentialsArgs) GetSubjectModeCredentialsPtrInput {
	return (*getSubjectModeCredentialsPtrType)(v)
}

func (*getSubjectModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeCredentials)(nil)).Elem()
}

func (i *getSubjectModeCredentialsPtrType) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return i.ToGetSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSubjectModeCredentialsPtrType) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeCredentialsPtrOutput)
}

type GetSubjectModeCredentialsOutput struct{ *pulumi.OutputState }

func (GetSubjectModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeCredentials)(nil)).Elem()
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsOutput() GetSubjectModeCredentialsOutput {
	return o
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsOutputWithContext(ctx context.Context) GetSubjectModeCredentialsOutput {
	return o
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return o.ToGetSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectModeCredentials) *GetSubjectModeCredentials {
		return &v
	}).(GetSubjectModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSubjectModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSubjectModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeCredentials)(nil)).Elem()
}

func (o GetSubjectModeCredentialsPtrOutput) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return o
}

func (o GetSubjectModeCredentialsPtrOutput) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return o
}

func (o GetSubjectModeCredentialsPtrOutput) Elem() GetSubjectModeCredentialsOutput {
	return o.ApplyT(func(v *GetSubjectModeCredentials) GetSubjectModeCredentials {
		if v != nil {
			return *v
		}
		var ret GetSubjectModeCredentials
		return ret
	}).(GetSubjectModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSubjectModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSubjectModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSubjectModeSchemaRegistryClusterInput is an input type that accepts GetSubjectModeSchemaRegistryClusterArgs and GetSubjectModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSubjectModeSchemaRegistryClusterInput` via:
//
//	GetSubjectModeSchemaRegistryClusterArgs{...}
type GetSubjectModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSubjectModeSchemaRegistryClusterOutput() GetSubjectModeSchemaRegistryClusterOutput
	ToGetSubjectModeSchemaRegistryClusterOutputWithContext(context.Context) GetSubjectModeSchemaRegistryClusterOutput
}

type GetSubjectModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSubjectModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterOutput() GetSubjectModeSchemaRegistryClusterOutput {
	return i.ToGetSubjectModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeSchemaRegistryClusterOutput)
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeSchemaRegistryClusterOutput).ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSubjectModeSchemaRegistryClusterPtrInput is an input type that accepts GetSubjectModeSchemaRegistryClusterArgs, GetSubjectModeSchemaRegistryClusterPtr and GetSubjectModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSubjectModeSchemaRegistryClusterPtrInput` via:
//
//	        GetSubjectModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSubjectModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput
	ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput
}

type getSubjectModeSchemaRegistryClusterPtrType GetSubjectModeSchemaRegistryClusterArgs

func GetSubjectModeSchemaRegistryClusterPtr(v *GetSubjectModeSchemaRegistryClusterArgs) GetSubjectModeSchemaRegistryClusterPtrInput {
	return (*getSubjectModeSchemaRegistryClusterPtrType)(v)
}

func (*getSubjectModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSubjectModeSchemaRegistryClusterPtrType) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSubjectModeSchemaRegistryClusterPtrType) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeSchemaRegistryClusterPtrOutput)
}

type GetSubjectModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSubjectModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterOutput() GetSubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o.ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectModeSchemaRegistryCluster) *GetSubjectModeSchemaRegistryCluster {
		return &v
	}).(GetSubjectModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSubjectModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectModeSchemaRegistryClusterPtrOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterPtrOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterPtrOutput) Elem() GetSubjectModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSubjectModeSchemaRegistryCluster) GetSubjectModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSubjectModeSchemaRegistryCluster
		return ret
	}).(GetSubjectModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetTransitGatewayAttachmentAw struct {
	// (Required String) The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn string `pulumi:"ramResourceShareArn"`
	// (Required List of String) List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	Routes []string `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// (Required String) The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// GetTransitGatewayAttachmentAwInput is an input type that accepts GetTransitGatewayAttachmentAwArgs and GetTransitGatewayAttachmentAwOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentAwInput` via:
//
//	GetTransitGatewayAttachmentAwArgs{...}
type GetTransitGatewayAttachmentAwInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentAwOutput() GetTransitGatewayAttachmentAwOutput
	ToGetTransitGatewayAttachmentAwOutputWithContext(context.Context) GetTransitGatewayAttachmentAwOutput
}

type GetTransitGatewayAttachmentAwArgs struct {
	// (Required String) The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn pulumi.StringInput `pulumi:"ramResourceShareArn"`
	// (Required List of String) List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId pulumi.StringInput `pulumi:"transitGatewayAttachmentId"`
	// (Required String) The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
}

func (GetTransitGatewayAttachmentAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentAwArgs) ToGetTransitGatewayAttachmentAwOutput() GetTransitGatewayAttachmentAwOutput {
	return i.ToGetTransitGatewayAttachmentAwOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentAwArgs) ToGetTransitGatewayAttachmentAwOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentAwOutput)
}

// GetTransitGatewayAttachmentAwArrayInput is an input type that accepts GetTransitGatewayAttachmentAwArray and GetTransitGatewayAttachmentAwArrayOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentAwArrayInput` via:
//
//	GetTransitGatewayAttachmentAwArray{ GetTransitGatewayAttachmentAwArgs{...} }
type GetTransitGatewayAttachmentAwArrayInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentAwArrayOutput() GetTransitGatewayAttachmentAwArrayOutput
	ToGetTransitGatewayAttachmentAwArrayOutputWithContext(context.Context) GetTransitGatewayAttachmentAwArrayOutput
}

type GetTransitGatewayAttachmentAwArray []GetTransitGatewayAttachmentAwInput

func (GetTransitGatewayAttachmentAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentAwArray) ToGetTransitGatewayAttachmentAwArrayOutput() GetTransitGatewayAttachmentAwArrayOutput {
	return i.ToGetTransitGatewayAttachmentAwArrayOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentAwArray) ToGetTransitGatewayAttachmentAwArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentAwArrayOutput)
}

type GetTransitGatewayAttachmentAwOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentAwOutput) ToGetTransitGatewayAttachmentAwOutput() GetTransitGatewayAttachmentAwOutput {
	return o
}

func (o GetTransitGatewayAttachmentAwOutput) ToGetTransitGatewayAttachmentAwOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwOutput {
	return o
}

// (Required String) The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
func (o GetTransitGatewayAttachmentAwOutput) RamResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) string { return v.RamResourceShareArn }).(pulumi.StringOutput)
}

// (Required List of String) List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
func (o GetTransitGatewayAttachmentAwOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
func (o GetTransitGatewayAttachmentAwOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) string { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// (Required String) The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
func (o GetTransitGatewayAttachmentAwOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

type GetTransitGatewayAttachmentAwArrayOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentAwArrayOutput) ToGetTransitGatewayAttachmentAwArrayOutput() GetTransitGatewayAttachmentAwArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentAwArrayOutput) ToGetTransitGatewayAttachmentAwArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentAwArrayOutput) Index(i pulumi.IntInput) GetTransitGatewayAttachmentAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitGatewayAttachmentAw {
		return vs[0].([]GetTransitGatewayAttachmentAw)[vs[1].(int)]
	}).(GetTransitGatewayAttachmentAwOutput)
}

type GetTransitGatewayAttachmentEnvironment struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetTransitGatewayAttachmentEnvironmentInput is an input type that accepts GetTransitGatewayAttachmentEnvironmentArgs and GetTransitGatewayAttachmentEnvironmentOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentEnvironmentInput` via:
//
//	GetTransitGatewayAttachmentEnvironmentArgs{...}
type GetTransitGatewayAttachmentEnvironmentInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentEnvironmentOutput() GetTransitGatewayAttachmentEnvironmentOutput
	ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(context.Context) GetTransitGatewayAttachmentEnvironmentOutput
}

type GetTransitGatewayAttachmentEnvironmentArgs struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTransitGatewayAttachmentEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentEnvironmentArgs) ToGetTransitGatewayAttachmentEnvironmentOutput() GetTransitGatewayAttachmentEnvironmentOutput {
	return i.ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentEnvironmentArgs) ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentEnvironmentOutput)
}

type GetTransitGatewayAttachmentEnvironmentOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentEnvironmentOutput) ToGetTransitGatewayAttachmentEnvironmentOutput() GetTransitGatewayAttachmentEnvironmentOutput {
	return o
}

func (o GetTransitGatewayAttachmentEnvironmentOutput) ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentEnvironmentOutput {
	return o
}

// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
func (o GetTransitGatewayAttachmentEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetTransitGatewayAttachmentNetwork struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetTransitGatewayAttachmentNetworkInput is an input type that accepts GetTransitGatewayAttachmentNetworkArgs and GetTransitGatewayAttachmentNetworkOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentNetworkInput` via:
//
//	GetTransitGatewayAttachmentNetworkArgs{...}
type GetTransitGatewayAttachmentNetworkInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentNetworkOutput() GetTransitGatewayAttachmentNetworkOutput
	ToGetTransitGatewayAttachmentNetworkOutputWithContext(context.Context) GetTransitGatewayAttachmentNetworkOutput
}

type GetTransitGatewayAttachmentNetworkArgs struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTransitGatewayAttachmentNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentNetworkArgs) ToGetTransitGatewayAttachmentNetworkOutput() GetTransitGatewayAttachmentNetworkOutput {
	return i.ToGetTransitGatewayAttachmentNetworkOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentNetworkArgs) ToGetTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentNetworkOutput)
}

// GetTransitGatewayAttachmentNetworkArrayInput is an input type that accepts GetTransitGatewayAttachmentNetworkArray and GetTransitGatewayAttachmentNetworkArrayOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentNetworkArrayInput` via:
//
//	GetTransitGatewayAttachmentNetworkArray{ GetTransitGatewayAttachmentNetworkArgs{...} }
type GetTransitGatewayAttachmentNetworkArrayInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentNetworkArrayOutput() GetTransitGatewayAttachmentNetworkArrayOutput
	ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(context.Context) GetTransitGatewayAttachmentNetworkArrayOutput
}

type GetTransitGatewayAttachmentNetworkArray []GetTransitGatewayAttachmentNetworkInput

func (GetTransitGatewayAttachmentNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentNetworkArray) ToGetTransitGatewayAttachmentNetworkArrayOutput() GetTransitGatewayAttachmentNetworkArrayOutput {
	return i.ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentNetworkArray) ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentNetworkArrayOutput)
}

type GetTransitGatewayAttachmentNetworkOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentNetworkOutput) ToGetTransitGatewayAttachmentNetworkOutput() GetTransitGatewayAttachmentNetworkOutput {
	return o
}

func (o GetTransitGatewayAttachmentNetworkOutput) ToGetTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkOutput {
	return o
}

// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
func (o GetTransitGatewayAttachmentNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetTransitGatewayAttachmentNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentNetworkArrayOutput) ToGetTransitGatewayAttachmentNetworkArrayOutput() GetTransitGatewayAttachmentNetworkArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentNetworkArrayOutput) ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentNetworkArrayOutput) Index(i pulumi.IntInput) GetTransitGatewayAttachmentNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitGatewayAttachmentNetwork {
		return vs[0].([]GetTransitGatewayAttachmentNetwork)[vs[1].(int)]
	}).(GetTransitGatewayAttachmentNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceInput)(nil)).Elem(), ApiKeyManagedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourcePtrInput)(nil)).Elem(), ApiKeyManagedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceEnvironmentInput)(nil)).Elem(), ApiKeyManagedResourceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceEnvironmentPtrInput)(nil)).Elem(), ApiKeyManagedResourceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyOwnerInput)(nil)).Elem(), ApiKeyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyOwnerPtrInput)(nil)).Elem(), ApiKeyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterPtrInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentialsInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentialsPtrInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterPtrInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentialsInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentialsPtrInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorEnvironmentInput)(nil)).Elem(), ConnectorEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorEnvironmentPtrInput)(nil)).Elem(), ConnectorEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterPtrInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolIdentityProviderInput)(nil)).Elem(), IdentityPoolIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolIdentityProviderPtrInput)(nil)).Elem(), IdentityPoolIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclCredentialsInput)(nil)).Elem(), KafkaAclCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclCredentialsPtrInput)(nil)).Elem(), KafkaAclCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclKafkaClusterInput)(nil)).Elem(), KafkaAclKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclKafkaClusterPtrInput)(nil)).Elem(), KafkaAclKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaEnvironmentInput)(nil)).Elem(), KafkaClientQuotaEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaEnvironmentPtrInput)(nil)).Elem(), KafkaClientQuotaEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaKafkaClusterInput)(nil)).Elem(), KafkaClientQuotaKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaKafkaClusterPtrInput)(nil)).Elem(), KafkaClientQuotaKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaThroughputInput)(nil)).Elem(), KafkaClientQuotaThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaThroughputPtrInput)(nil)).Elem(), KafkaClientQuotaThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterBasicInput)(nil)).Elem(), KafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterBasicPtrInput)(nil)).Elem(), KafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigCredentialsInput)(nil)).Elem(), KafkaClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigCredentialsPtrInput)(nil)).Elem(), KafkaClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigKafkaClusterInput)(nil)).Elem(), KafkaClusterConfigKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigKafkaClusterPtrInput)(nil)).Elem(), KafkaClusterConfigKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterDedicatedInput)(nil)).Elem(), KafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterDedicatedPtrInput)(nil)).Elem(), KafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnvironmentInput)(nil)).Elem(), KafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnvironmentPtrInput)(nil)).Elem(), KafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterNetworkInput)(nil)).Elem(), KafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterNetworkPtrInput)(nil)).Elem(), KafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterStandardInput)(nil)).Elem(), KafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterStandardPtrInput)(nil)).Elem(), KafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicClusterLinkInput)(nil)).Elem(), KafkaMirrorTopicClusterLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicClusterLinkPtrInput)(nil)).Elem(), KafkaMirrorTopicClusterLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterPtrInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentialsInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentialsPtrInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopicInput)(nil)).Elem(), KafkaMirrorTopicSourceKafkaTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopicPtrInput)(nil)).Elem(), KafkaMirrorTopicSourceKafkaTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicCredentialsInput)(nil)).Elem(), KafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicCredentialsPtrInput)(nil)).Elem(), KafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicKafkaClusterInput)(nil)).Elem(), KafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicKafkaClusterPtrInput)(nil)).Elem(), KafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterCredentialIdentityInput)(nil)).Elem(), KsqlClusterCredentialIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterCredentialIdentityPtrInput)(nil)).Elem(), KsqlClusterCredentialIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterEnvironmentInput)(nil)).Elem(), KsqlClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterEnvironmentPtrInput)(nil)).Elem(), KsqlClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterKafkaClusterInput)(nil)).Elem(), KsqlClusterKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterKafkaClusterPtrInput)(nil)).Elem(), KsqlClusterKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAwInput)(nil)).Elem(), NetworkAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAwArrayInput)(nil)).Elem(), NetworkAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAzureInput)(nil)).Elem(), NetworkAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAzureArrayInput)(nil)).Elem(), NetworkAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDnsConfigInput)(nil)).Elem(), NetworkDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDnsConfigPtrInput)(nil)).Elem(), NetworkDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEnvironmentInput)(nil)).Elem(), NetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEnvironmentPtrInput)(nil)).Elem(), NetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGcpInput)(nil)).Elem(), NetworkGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGcpArrayInput)(nil)).Elem(), NetworkGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAwsInput)(nil)).Elem(), PeeringAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAwsPtrInput)(nil)).Elem(), PeeringAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAzureInput)(nil)).Elem(), PeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAzurePtrInput)(nil)).Elem(), PeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringEnvironmentInput)(nil)).Elem(), PeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringEnvironmentPtrInput)(nil)).Elem(), PeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringGcpInput)(nil)).Elem(), PeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringGcpPtrInput)(nil)).Elem(), PeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringNetworkInput)(nil)).Elem(), PeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringNetworkPtrInput)(nil)).Elem(), PeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAwsInput)(nil)).Elem(), PrivateLinkAccessAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAwsPtrInput)(nil)).Elem(), PrivateLinkAccessAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAzureInput)(nil)).Elem(), PrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAzurePtrInput)(nil)).Elem(), PrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessEnvironmentInput)(nil)).Elem(), PrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessEnvironmentPtrInput)(nil)).Elem(), PrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessGcpInput)(nil)).Elem(), PrivateLinkAccessGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessGcpPtrInput)(nil)).Elem(), PrivateLinkAccessGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessNetworkInput)(nil)).Elem(), PrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessNetworkPtrInput)(nil)).Elem(), PrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaCredentialsInput)(nil)).Elem(), SchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaCredentialsPtrInput)(nil)).Elem(), SchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigCredentialsInput)(nil)).Elem(), SchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigCredentialsPtrInput)(nil)).Elem(), SchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryClusterInput)(nil)).Elem(), SchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterEnvironmentInput)(nil)).Elem(), SchemaRegistryClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterEnvironmentPtrInput)(nil)).Elem(), SchemaRegistryClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeCredentialsInput)(nil)).Elem(), SchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeCredentialsPtrInput)(nil)).Elem(), SchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryClusterInput)(nil)).Elem(), SchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterRegionInput)(nil)).Elem(), SchemaRegistryClusterRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterRegionPtrInput)(nil)).Elem(), SchemaRegistryClusterRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaReferenceInput)(nil)).Elem(), SchemaSchemaReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaReferenceArrayInput)(nil)).Elem(), SchemaSchemaReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaRegistryClusterInput)(nil)).Elem(), SchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigCredentialsInput)(nil)).Elem(), SubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigCredentialsPtrInput)(nil)).Elem(), SubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigSchemaRegistryClusterInput)(nil)).Elem(), SubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), SubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeCredentialsInput)(nil)).Elem(), SubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeCredentialsPtrInput)(nil)).Elem(), SubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeSchemaRegistryClusterInput)(nil)).Elem(), SubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeSchemaRegistryClusterPtrInput)(nil)).Elem(), SubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentAwsInput)(nil)).Elem(), TransitGatewayAttachmentAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentAwsPtrInput)(nil)).Elem(), TransitGatewayAttachmentAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentEnvironmentInput)(nil)).Elem(), TransitGatewayAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentEnvironmentPtrInput)(nil)).Elem(), TransitGatewayAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentNetworkInput)(nil)).Elem(), TransitGatewayAttachmentNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentNetworkPtrInput)(nil)).Elem(), TransitGatewayAttachmentNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityPoolIdentityProviderInput)(nil)).Elem(), GetIdentityPoolIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaEnvironmentInput)(nil)).Elem(), GetKafkaClientQuotaEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaEnvironmentArrayInput)(nil)).Elem(), GetKafkaClientQuotaEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaKafkaClusterInput)(nil)).Elem(), GetKafkaClientQuotaKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaKafkaClusterArrayInput)(nil)).Elem(), GetKafkaClientQuotaKafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaThroughputInput)(nil)).Elem(), GetKafkaClientQuotaThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaThroughputArrayInput)(nil)).Elem(), GetKafkaClientQuotaThroughputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterBasicInput)(nil)).Elem(), GetKafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterBasicArrayInput)(nil)).Elem(), GetKafkaClusterBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterDedicatedInput)(nil)).Elem(), GetKafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterDedicatedPtrInput)(nil)).Elem(), GetKafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterEnvironmentInput)(nil)).Elem(), GetKafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterNetworkInput)(nil)).Elem(), GetKafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterNetworkArrayInput)(nil)).Elem(), GetKafkaClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterStandardInput)(nil)).Elem(), GetKafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterStandardArrayInput)(nil)).Elem(), GetKafkaClusterStandardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicCredentialsInput)(nil)).Elem(), GetKafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicCredentialsPtrInput)(nil)).Elem(), GetKafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicKafkaClusterInput)(nil)).Elem(), GetKafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicKafkaClusterPtrInput)(nil)).Elem(), GetKafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterCredentialIdentityInput)(nil)).Elem(), GetKsqlClusterCredentialIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterCredentialIdentityArrayInput)(nil)).Elem(), GetKsqlClusterCredentialIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterEnvironmentInput)(nil)).Elem(), GetKsqlClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterKafkaClusterInput)(nil)).Elem(), GetKsqlClusterKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterKafkaClusterArrayInput)(nil)).Elem(), GetKsqlClusterKafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAwInput)(nil)).Elem(), GetNetworkAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAwArrayInput)(nil)).Elem(), GetNetworkAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAzureInput)(nil)).Elem(), GetNetworkAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAzureArrayInput)(nil)).Elem(), GetNetworkAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDnsConfigInput)(nil)).Elem(), GetNetworkDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDnsConfigArrayInput)(nil)).Elem(), GetNetworkDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkEnvironmentInput)(nil)).Elem(), GetNetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGcpInput)(nil)).Elem(), GetNetworkGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGcpArrayInput)(nil)).Elem(), GetNetworkGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAwInput)(nil)).Elem(), GetPeeringAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAwArrayInput)(nil)).Elem(), GetPeeringAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAzureInput)(nil)).Elem(), GetPeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAzureArrayInput)(nil)).Elem(), GetPeeringAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringEnvironmentInput)(nil)).Elem(), GetPeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringGcpInput)(nil)).Elem(), GetPeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringGcpArrayInput)(nil)).Elem(), GetPeeringGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringNetworkInput)(nil)).Elem(), GetPeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringNetworkArrayInput)(nil)).Elem(), GetPeeringNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAwInput)(nil)).Elem(), GetPrivateLinkAccessAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAwArrayInput)(nil)).Elem(), GetPrivateLinkAccessAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAzureInput)(nil)).Elem(), GetPrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAzureArrayInput)(nil)).Elem(), GetPrivateLinkAccessAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessEnvironmentInput)(nil)).Elem(), GetPrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessGcpInput)(nil)).Elem(), GetPrivateLinkAccessGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessGcpArrayInput)(nil)).Elem(), GetPrivateLinkAccessGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessNetworkInput)(nil)).Elem(), GetPrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessNetworkArrayInput)(nil)).Elem(), GetPrivateLinkAccessNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaCredentialsInput)(nil)).Elem(), GetSchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaCredentialsPtrInput)(nil)).Elem(), GetSchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentialsInput)(nil)).Elem(), GetSchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentialsPtrInput)(nil)).Elem(), GetSchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterEnvironmentInput)(nil)).Elem(), GetSchemaRegistryClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeCredentialsInput)(nil)).Elem(), GetSchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeCredentialsPtrInput)(nil)).Elem(), GetSchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterRegionInput)(nil)).Elem(), GetSchemaRegistryClusterRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterRegionArrayInput)(nil)).Elem(), GetSchemaRegistryClusterRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaReferenceInput)(nil)).Elem(), GetSchemaSchemaReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaReferenceArrayInput)(nil)).Elem(), GetSchemaSchemaReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigCredentialsInput)(nil)).Elem(), GetSubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigCredentialsPtrInput)(nil)).Elem(), GetSubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigSchemaRegistryClusterInput)(nil)).Elem(), GetSubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeCredentialsInput)(nil)).Elem(), GetSubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeCredentialsPtrInput)(nil)).Elem(), GetSubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeSchemaRegistryClusterInput)(nil)).Elem(), GetSubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentAwInput)(nil)).Elem(), GetTransitGatewayAttachmentAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentAwArrayInput)(nil)).Elem(), GetTransitGatewayAttachmentAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentEnvironmentInput)(nil)).Elem(), GetTransitGatewayAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentNetworkInput)(nil)).Elem(), GetTransitGatewayAttachmentNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentNetworkArrayInput)(nil)).Elem(), GetTransitGatewayAttachmentNetworkArray{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourcePtrOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceEnvironmentOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyOwnerOutput{})
	pulumi.RegisterOutputType(ApiKeyOwnerPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorEnvironmentOutput{})
	pulumi.RegisterOutputType(ConnectorEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(IdentityPoolIdentityProviderOutput{})
	pulumi.RegisterOutputType(IdentityPoolIdentityProviderPtrOutput{})
	pulumi.RegisterOutputType(KafkaAclCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaAclCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaAclKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaAclKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaEnvironmentOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaThroughputOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaThroughputPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterBasicOutput{})
	pulumi.RegisterOutputType(KafkaClusterBasicPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterDedicatedOutput{})
	pulumi.RegisterOutputType(KafkaClusterDedicatedPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterNetworkOutput{})
	pulumi.RegisterOutputType(KafkaClusterNetworkPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterStandardOutput{})
	pulumi.RegisterOutputType(KafkaClusterStandardPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicClusterLinkOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicClusterLinkPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicSourceKafkaTopicOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicSourceKafkaTopicPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaTopicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KsqlClusterCredentialIdentityOutput{})
	pulumi.RegisterOutputType(KsqlClusterCredentialIdentityPtrOutput{})
	pulumi.RegisterOutputType(KsqlClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(KsqlClusterEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KsqlClusterKafkaClusterOutput{})
	pulumi.RegisterOutputType(KsqlClusterKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(NetworkAwOutput{})
	pulumi.RegisterOutputType(NetworkAwArrayOutput{})
	pulumi.RegisterOutputType(NetworkAzureOutput{})
	pulumi.RegisterOutputType(NetworkAzureArrayOutput{})
	pulumi.RegisterOutputType(NetworkDnsConfigOutput{})
	pulumi.RegisterOutputType(NetworkDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(NetworkEnvironmentOutput{})
	pulumi.RegisterOutputType(NetworkEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(NetworkGcpOutput{})
	pulumi.RegisterOutputType(NetworkGcpArrayOutput{})
	pulumi.RegisterOutputType(PeeringAwsOutput{})
	pulumi.RegisterOutputType(PeeringAwsPtrOutput{})
	pulumi.RegisterOutputType(PeeringAzureOutput{})
	pulumi.RegisterOutputType(PeeringAzurePtrOutput{})
	pulumi.RegisterOutputType(PeeringEnvironmentOutput{})
	pulumi.RegisterOutputType(PeeringEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PeeringGcpOutput{})
	pulumi.RegisterOutputType(PeeringGcpPtrOutput{})
	pulumi.RegisterOutputType(PeeringNetworkOutput{})
	pulumi.RegisterOutputType(PeeringNetworkPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAwsOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAwsPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAzureOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAzurePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessEnvironmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessGcpOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessGcpPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessNetworkOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessNetworkPtrOutput{})
	pulumi.RegisterOutputType(SchemaCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterRegionOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterRegionPtrOutput{})
	pulumi.RegisterOutputType(SchemaSchemaReferenceOutput{})
	pulumi.RegisterOutputType(SchemaSchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(SchemaSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SubjectConfigCredentialsOutput{})
	pulumi.RegisterOutputType(SubjectConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SubjectConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SubjectConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SubjectModeCredentialsOutput{})
	pulumi.RegisterOutputType(SubjectModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SubjectModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SubjectModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentAwsOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentAwsPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentEnvironmentOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentNetworkOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentNetworkPtrOutput{})
	pulumi.RegisterOutputType(GetIdentityPoolIdentityProviderOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaKafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaThroughputOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaThroughputArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterBasicOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterBasicArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterDedicatedOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterDedicatedPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterNetworkOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterStandardOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterStandardArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicCredentialsOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterCredentialIdentityOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterCredentialIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterKafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAwOutput{})
	pulumi.RegisterOutputType(GetNetworkAwArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAzureOutput{})
	pulumi.RegisterOutputType(GetNetworkAzureArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkDnsConfigOutput{})
	pulumi.RegisterOutputType(GetNetworkDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkEnvironmentOutput{})
	pulumi.RegisterOutputType(GetNetworkGcpOutput{})
	pulumi.RegisterOutputType(GetNetworkGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAwOutput{})
	pulumi.RegisterOutputType(GetPeeringAwArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAzureOutput{})
	pulumi.RegisterOutputType(GetPeeringAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPeeringGcpOutput{})
	pulumi.RegisterOutputType(GetPeeringGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringNetworkOutput{})
	pulumi.RegisterOutputType(GetPeeringNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAwOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAwArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAzureOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessGcpOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessNetworkOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterRegionOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterRegionArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaReferenceOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigCredentialsOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectModeCredentialsOutput{})
	pulumi.RegisterOutputType(GetSubjectModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSubjectModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentAwOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentAwArrayOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentEnvironmentOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentNetworkOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentNetworkArrayOutput{})
}
