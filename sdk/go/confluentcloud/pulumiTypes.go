// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiKeyManagedResource struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion  string                           `pulumi:"apiVersion"`
	Environment ApiKeyManagedResourceEnvironment `pulumi:"environment"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind string `pulumi:"kind"`
}

// ApiKeyManagedResourceInput is an input type that accepts ApiKeyManagedResourceArgs and ApiKeyManagedResourceOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceInput` via:
//
//	ApiKeyManagedResourceArgs{...}
type ApiKeyManagedResourceInput interface {
	pulumi.Input

	ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput
	ToApiKeyManagedResourceOutputWithContext(context.Context) ApiKeyManagedResourceOutput
}

type ApiKeyManagedResourceArgs struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion  pulumi.StringInput                    `pulumi:"apiVersion"`
	Environment ApiKeyManagedResourceEnvironmentInput `pulumi:"environment"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ApiKeyManagedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResource)(nil)).Elem()
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput {
	return i.ToApiKeyManagedResourceOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourceOutputWithContext(ctx context.Context) ApiKeyManagedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceOutput)
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return i.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceOutput).ToApiKeyManagedResourcePtrOutputWithContext(ctx)
}

// ApiKeyManagedResourcePtrInput is an input type that accepts ApiKeyManagedResourceArgs, ApiKeyManagedResourcePtr and ApiKeyManagedResourcePtrOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourcePtrInput` via:
//
//	        ApiKeyManagedResourceArgs{...}
//
//	or:
//
//	        nil
type ApiKeyManagedResourcePtrInput interface {
	pulumi.Input

	ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput
	ToApiKeyManagedResourcePtrOutputWithContext(context.Context) ApiKeyManagedResourcePtrOutput
}

type apiKeyManagedResourcePtrType ApiKeyManagedResourceArgs

func ApiKeyManagedResourcePtr(v *ApiKeyManagedResourceArgs) ApiKeyManagedResourcePtrInput {
	return (*apiKeyManagedResourcePtrType)(v)
}

func (*apiKeyManagedResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResource)(nil)).Elem()
}

func (i *apiKeyManagedResourcePtrType) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return i.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (i *apiKeyManagedResourcePtrType) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourcePtrOutput)
}

type ApiKeyManagedResourceOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResource)(nil)).Elem()
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput {
	return o
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourceOutputWithContext(ctx context.Context) ApiKeyManagedResourceOutput {
	return o
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return o.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyManagedResource) *ApiKeyManagedResource {
		return &v
	}).(ApiKeyManagedResourcePtrOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyManagedResourceOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o ApiKeyManagedResourceOutput) Environment() ApiKeyManagedResourceEnvironmentOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) ApiKeyManagedResourceEnvironment { return v.Environment }).(ApiKeyManagedResourceEnvironmentOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyManagedResourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.Kind }).(pulumi.StringOutput)
}

type ApiKeyManagedResourcePtrOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResource)(nil)).Elem()
}

func (o ApiKeyManagedResourcePtrOutput) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return o
}

func (o ApiKeyManagedResourcePtrOutput) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return o
}

func (o ApiKeyManagedResourcePtrOutput) Elem() ApiKeyManagedResourceOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) ApiKeyManagedResource {
		if v != nil {
			return *v
		}
		var ret ApiKeyManagedResource
		return ret
	}).(ApiKeyManagedResourceOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyManagedResourcePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o ApiKeyManagedResourcePtrOutput) Environment() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *ApiKeyManagedResourceEnvironment {
		if v == nil {
			return nil
		}
		return &v.Environment
	}).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyManagedResourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

type ApiKeyManagedResourceEnvironment struct {
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// ApiKeyManagedResourceEnvironmentInput is an input type that accepts ApiKeyManagedResourceEnvironmentArgs and ApiKeyManagedResourceEnvironmentOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceEnvironmentInput` via:
//
//	ApiKeyManagedResourceEnvironmentArgs{...}
type ApiKeyManagedResourceEnvironmentInput interface {
	pulumi.Input

	ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput
	ToApiKeyManagedResourceEnvironmentOutputWithContext(context.Context) ApiKeyManagedResourceEnvironmentOutput
}

type ApiKeyManagedResourceEnvironmentArgs struct {
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ApiKeyManagedResourceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput {
	return i.ToApiKeyManagedResourceEnvironmentOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentOutput)
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return i.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentOutput).ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx)
}

// ApiKeyManagedResourceEnvironmentPtrInput is an input type that accepts ApiKeyManagedResourceEnvironmentArgs, ApiKeyManagedResourceEnvironmentPtr and ApiKeyManagedResourceEnvironmentPtrOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceEnvironmentPtrInput` via:
//
//	        ApiKeyManagedResourceEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ApiKeyManagedResourceEnvironmentPtrInput interface {
	pulumi.Input

	ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput
	ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Context) ApiKeyManagedResourceEnvironmentPtrOutput
}

type apiKeyManagedResourceEnvironmentPtrType ApiKeyManagedResourceEnvironmentArgs

func ApiKeyManagedResourceEnvironmentPtr(v *ApiKeyManagedResourceEnvironmentArgs) ApiKeyManagedResourceEnvironmentPtrInput {
	return (*apiKeyManagedResourceEnvironmentPtrType)(v)
}

func (*apiKeyManagedResourceEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (i *apiKeyManagedResourceEnvironmentPtrType) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return i.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (i *apiKeyManagedResourceEnvironmentPtrType) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

type ApiKeyManagedResourceEnvironmentOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyManagedResourceEnvironment) *ApiKeyManagedResourceEnvironment {
		return &v
	}).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResourceEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type ApiKeyManagedResourceEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) Elem() ApiKeyManagedResourceEnvironmentOutput {
	return o.ApplyT(func(v *ApiKeyManagedResourceEnvironment) ApiKeyManagedResourceEnvironment {
		if v != nil {
			return *v
		}
		var ret ApiKeyManagedResourceEnvironment
		return ret
	}).(ApiKeyManagedResourceEnvironmentOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResourceEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ApiKeyOwner struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion string `pulumi:"apiVersion"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind string `pulumi:"kind"`
}

// ApiKeyOwnerInput is an input type that accepts ApiKeyOwnerArgs and ApiKeyOwnerOutput values.
// You can construct a concrete instance of `ApiKeyOwnerInput` via:
//
//	ApiKeyOwnerArgs{...}
type ApiKeyOwnerInput interface {
	pulumi.Input

	ToApiKeyOwnerOutput() ApiKeyOwnerOutput
	ToApiKeyOwnerOutputWithContext(context.Context) ApiKeyOwnerOutput
}

type ApiKeyOwnerArgs struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ApiKeyOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyOwner)(nil)).Elem()
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerOutput() ApiKeyOwnerOutput {
	return i.ToApiKeyOwnerOutputWithContext(context.Background())
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerOutputWithContext(ctx context.Context) ApiKeyOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerOutput)
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return i.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerOutput).ToApiKeyOwnerPtrOutputWithContext(ctx)
}

// ApiKeyOwnerPtrInput is an input type that accepts ApiKeyOwnerArgs, ApiKeyOwnerPtr and ApiKeyOwnerPtrOutput values.
// You can construct a concrete instance of `ApiKeyOwnerPtrInput` via:
//
//	        ApiKeyOwnerArgs{...}
//
//	or:
//
//	        nil
type ApiKeyOwnerPtrInput interface {
	pulumi.Input

	ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput
	ToApiKeyOwnerPtrOutputWithContext(context.Context) ApiKeyOwnerPtrOutput
}

type apiKeyOwnerPtrType ApiKeyOwnerArgs

func ApiKeyOwnerPtr(v *ApiKeyOwnerArgs) ApiKeyOwnerPtrInput {
	return (*apiKeyOwnerPtrType)(v)
}

func (*apiKeyOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyOwner)(nil)).Elem()
}

func (i *apiKeyOwnerPtrType) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return i.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (i *apiKeyOwnerPtrType) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerPtrOutput)
}

type ApiKeyOwnerOutput struct{ *pulumi.OutputState }

func (ApiKeyOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyOwner)(nil)).Elem()
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerOutput() ApiKeyOwnerOutput {
	return o
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerOutputWithContext(ctx context.Context) ApiKeyOwnerOutput {
	return o
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return o.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyOwner) *ApiKeyOwner {
		return &v
	}).(ApiKeyOwnerPtrOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyOwnerOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyOwnerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyOwnerOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.Kind }).(pulumi.StringOutput)
}

type ApiKeyOwnerPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyOwner)(nil)).Elem()
}

func (o ApiKeyOwnerPtrOutput) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return o
}

func (o ApiKeyOwnerPtrOutput) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return o
}

func (o ApiKeyOwnerPtrOutput) Elem() ApiKeyOwnerOutput {
	return o.ApplyT(func(v *ApiKeyOwner) ApiKeyOwner {
		if v != nil {
			return *v
		}
		var ret ApiKeyOwner
		return ret
	}).(ApiKeyOwnerOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyOwnerPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyOwnerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyOwnerPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

type ConnectorEnvironment struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// ConnectorEnvironmentInput is an input type that accepts ConnectorEnvironmentArgs and ConnectorEnvironmentOutput values.
// You can construct a concrete instance of `ConnectorEnvironmentInput` via:
//
//	ConnectorEnvironmentArgs{...}
type ConnectorEnvironmentInput interface {
	pulumi.Input

	ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput
	ToConnectorEnvironmentOutputWithContext(context.Context) ConnectorEnvironmentOutput
}

type ConnectorEnvironmentArgs struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ConnectorEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorEnvironment)(nil)).Elem()
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput {
	return i.ToConnectorEnvironmentOutputWithContext(context.Background())
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentOutputWithContext(ctx context.Context) ConnectorEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentOutput)
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return i.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentOutput).ToConnectorEnvironmentPtrOutputWithContext(ctx)
}

// ConnectorEnvironmentPtrInput is an input type that accepts ConnectorEnvironmentArgs, ConnectorEnvironmentPtr and ConnectorEnvironmentPtrOutput values.
// You can construct a concrete instance of `ConnectorEnvironmentPtrInput` via:
//
//	        ConnectorEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ConnectorEnvironmentPtrInput interface {
	pulumi.Input

	ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput
	ToConnectorEnvironmentPtrOutputWithContext(context.Context) ConnectorEnvironmentPtrOutput
}

type connectorEnvironmentPtrType ConnectorEnvironmentArgs

func ConnectorEnvironmentPtr(v *ConnectorEnvironmentArgs) ConnectorEnvironmentPtrInput {
	return (*connectorEnvironmentPtrType)(v)
}

func (*connectorEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorEnvironment)(nil)).Elem()
}

func (i *connectorEnvironmentPtrType) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return i.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (i *connectorEnvironmentPtrType) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentPtrOutput)
}

type ConnectorEnvironmentOutput struct{ *pulumi.OutputState }

func (ConnectorEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorEnvironment)(nil)).Elem()
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput {
	return o
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentOutputWithContext(ctx context.Context) ConnectorEnvironmentOutput {
	return o
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return o.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorEnvironment) *ConnectorEnvironment {
		return &v
	}).(ConnectorEnvironmentPtrOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type ConnectorEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ConnectorEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorEnvironment)(nil)).Elem()
}

func (o ConnectorEnvironmentPtrOutput) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return o
}

func (o ConnectorEnvironmentPtrOutput) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return o
}

func (o ConnectorEnvironmentPtrOutput) Elem() ConnectorEnvironmentOutput {
	return o.ApplyT(func(v *ConnectorEnvironment) ConnectorEnvironment {
		if v != nil {
			return *v
		}
		var ret ConnectorEnvironment
		return ret
	}).(ConnectorEnvironmentOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ConnectorKafkaCluster struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// ConnectorKafkaClusterInput is an input type that accepts ConnectorKafkaClusterArgs and ConnectorKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterInput` via:
//
//	ConnectorKafkaClusterArgs{...}
type ConnectorKafkaClusterInput interface {
	pulumi.Input

	ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput
	ToConnectorKafkaClusterOutputWithContext(context.Context) ConnectorKafkaClusterOutput
}

type ConnectorKafkaClusterArgs struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ConnectorKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return i.ToConnectorKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput)
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput).ToConnectorKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterPtrInput is an input type that accepts ConnectorKafkaClusterArgs, ConnectorKafkaClusterPtr and ConnectorKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterPtrInput` via:
//
//	        ConnectorKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ConnectorKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput
	ToConnectorKafkaClusterPtrOutputWithContext(context.Context) ConnectorKafkaClusterPtrOutput
}

type connectorKafkaClusterPtrType ConnectorKafkaClusterArgs

func ConnectorKafkaClusterPtr(v *ConnectorKafkaClusterArgs) ConnectorKafkaClusterPtrInput {
	return (*connectorKafkaClusterPtrType)(v)
}

func (*connectorKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterPtrOutput)
}

type ConnectorKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaCluster) *ConnectorKafkaCluster {
		return &v
	}).(ConnectorKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type ConnectorKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) Elem() ConnectorKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) ConnectorKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaCluster
		return ret
	}).(ConnectorKafkaClusterOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaAclCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaAclCredentialsInput is an input type that accepts KafkaAclCredentialsArgs and KafkaAclCredentialsOutput values.
// You can construct a concrete instance of `KafkaAclCredentialsInput` via:
//
//	KafkaAclCredentialsArgs{...}
type KafkaAclCredentialsInput interface {
	pulumi.Input

	ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput
	ToKafkaAclCredentialsOutputWithContext(context.Context) KafkaAclCredentialsOutput
}

type KafkaAclCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaAclCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclCredentials)(nil)).Elem()
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput {
	return i.ToKafkaAclCredentialsOutputWithContext(context.Background())
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsOutputWithContext(ctx context.Context) KafkaAclCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsOutput)
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return i.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsOutput).ToKafkaAclCredentialsPtrOutputWithContext(ctx)
}

// KafkaAclCredentialsPtrInput is an input type that accepts KafkaAclCredentialsArgs, KafkaAclCredentialsPtr and KafkaAclCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaAclCredentialsPtrInput` via:
//
//	        KafkaAclCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaAclCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput
	ToKafkaAclCredentialsPtrOutputWithContext(context.Context) KafkaAclCredentialsPtrOutput
}

type kafkaAclCredentialsPtrType KafkaAclCredentialsArgs

func KafkaAclCredentialsPtr(v *KafkaAclCredentialsArgs) KafkaAclCredentialsPtrInput {
	return (*kafkaAclCredentialsPtrType)(v)
}

func (*kafkaAclCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclCredentials)(nil)).Elem()
}

func (i *kafkaAclCredentialsPtrType) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return i.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaAclCredentialsPtrType) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsPtrOutput)
}

type KafkaAclCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaAclCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclCredentials)(nil)).Elem()
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput {
	return o
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsOutputWithContext(ctx context.Context) KafkaAclCredentialsOutput {
	return o
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return o.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaAclCredentials) *KafkaAclCredentials {
		return &v
	}).(KafkaAclCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaAclCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaAclCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaAclCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaAclCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclCredentials)(nil)).Elem()
}

func (o KafkaAclCredentialsPtrOutput) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return o
}

func (o KafkaAclCredentialsPtrOutput) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return o
}

func (o KafkaAclCredentialsPtrOutput) Elem() KafkaAclCredentialsOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) KafkaAclCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaAclCredentials
		return ret
	}).(KafkaAclCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaAclCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaAclCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaAclKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaAclKafkaClusterInput is an input type that accepts KafkaAclKafkaClusterArgs and KafkaAclKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaAclKafkaClusterInput` via:
//
//	KafkaAclKafkaClusterArgs{...}
type KafkaAclKafkaClusterInput interface {
	pulumi.Input

	ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput
	ToKafkaAclKafkaClusterOutputWithContext(context.Context) KafkaAclKafkaClusterOutput
}

type KafkaAclKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaAclKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclKafkaCluster)(nil)).Elem()
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput {
	return i.ToKafkaAclKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterOutputWithContext(ctx context.Context) KafkaAclKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterOutput)
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return i.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterOutput).ToKafkaAclKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaAclKafkaClusterPtrInput is an input type that accepts KafkaAclKafkaClusterArgs, KafkaAclKafkaClusterPtr and KafkaAclKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaAclKafkaClusterPtrInput` via:
//
//	        KafkaAclKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaAclKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput
	ToKafkaAclKafkaClusterPtrOutputWithContext(context.Context) KafkaAclKafkaClusterPtrOutput
}

type kafkaAclKafkaClusterPtrType KafkaAclKafkaClusterArgs

func KafkaAclKafkaClusterPtr(v *KafkaAclKafkaClusterArgs) KafkaAclKafkaClusterPtrInput {
	return (*kafkaAclKafkaClusterPtrType)(v)
}

func (*kafkaAclKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclKafkaCluster)(nil)).Elem()
}

func (i *kafkaAclKafkaClusterPtrType) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return i.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaAclKafkaClusterPtrType) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterPtrOutput)
}

type KafkaAclKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaAclKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclKafkaCluster)(nil)).Elem()
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput {
	return o
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterOutputWithContext(ctx context.Context) KafkaAclKafkaClusterOutput {
	return o
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return o.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaAclKafkaCluster) *KafkaAclKafkaCluster {
		return &v
	}).(KafkaAclKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaAclKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaAclKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaAclKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclKafkaCluster)(nil)).Elem()
}

func (o KafkaAclKafkaClusterPtrOutput) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return o
}

func (o KafkaAclKafkaClusterPtrOutput) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return o
}

func (o KafkaAclKafkaClusterPtrOutput) Elem() KafkaAclKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaAclKafkaCluster) KafkaAclKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaAclKafkaCluster
		return ret
	}).(KafkaAclKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaAclKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterBasic struct {
}

// KafkaClusterBasicInput is an input type that accepts KafkaClusterBasicArgs and KafkaClusterBasicOutput values.
// You can construct a concrete instance of `KafkaClusterBasicInput` via:
//
//	KafkaClusterBasicArgs{...}
type KafkaClusterBasicInput interface {
	pulumi.Input

	ToKafkaClusterBasicOutput() KafkaClusterBasicOutput
	ToKafkaClusterBasicOutputWithContext(context.Context) KafkaClusterBasicOutput
}

type KafkaClusterBasicArgs struct {
}

func (KafkaClusterBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterBasic)(nil)).Elem()
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicOutput() KafkaClusterBasicOutput {
	return i.ToKafkaClusterBasicOutputWithContext(context.Background())
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicOutputWithContext(ctx context.Context) KafkaClusterBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicOutput)
}

// KafkaClusterBasicArrayInput is an input type that accepts KafkaClusterBasicArray and KafkaClusterBasicArrayOutput values.
// You can construct a concrete instance of `KafkaClusterBasicArrayInput` via:
//
//	KafkaClusterBasicArray{ KafkaClusterBasicArgs{...} }
type KafkaClusterBasicArrayInput interface {
	pulumi.Input

	ToKafkaClusterBasicArrayOutput() KafkaClusterBasicArrayOutput
	ToKafkaClusterBasicArrayOutputWithContext(context.Context) KafkaClusterBasicArrayOutput
}

type KafkaClusterBasicArray []KafkaClusterBasicInput

func (KafkaClusterBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterBasic)(nil)).Elem()
}

func (i KafkaClusterBasicArray) ToKafkaClusterBasicArrayOutput() KafkaClusterBasicArrayOutput {
	return i.ToKafkaClusterBasicArrayOutputWithContext(context.Background())
}

func (i KafkaClusterBasicArray) ToKafkaClusterBasicArrayOutputWithContext(ctx context.Context) KafkaClusterBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicArrayOutput)
}

type KafkaClusterBasicOutput struct{ *pulumi.OutputState }

func (KafkaClusterBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterBasic)(nil)).Elem()
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicOutput() KafkaClusterBasicOutput {
	return o
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicOutputWithContext(ctx context.Context) KafkaClusterBasicOutput {
	return o
}

type KafkaClusterBasicArrayOutput struct{ *pulumi.OutputState }

func (KafkaClusterBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterBasic)(nil)).Elem()
}

func (o KafkaClusterBasicArrayOutput) ToKafkaClusterBasicArrayOutput() KafkaClusterBasicArrayOutput {
	return o
}

func (o KafkaClusterBasicArrayOutput) ToKafkaClusterBasicArrayOutputWithContext(ctx context.Context) KafkaClusterBasicArrayOutput {
	return o
}

func (o KafkaClusterBasicArrayOutput) Index(i pulumi.IntInput) KafkaClusterBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaClusterBasic {
		return vs[0].([]KafkaClusterBasic)[vs[1].(int)]
	}).(KafkaClusterBasicOutput)
}

type KafkaClusterDedicated struct {
	// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku int `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey *string `pulumi:"encryptionKey"`
}

// KafkaClusterDedicatedInput is an input type that accepts KafkaClusterDedicatedArgs and KafkaClusterDedicatedOutput values.
// You can construct a concrete instance of `KafkaClusterDedicatedInput` via:
//
//	KafkaClusterDedicatedArgs{...}
type KafkaClusterDedicatedInput interface {
	pulumi.Input

	ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput
	ToKafkaClusterDedicatedOutputWithContext(context.Context) KafkaClusterDedicatedOutput
}

type KafkaClusterDedicatedArgs struct {
	// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku pulumi.IntInput `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
}

func (KafkaClusterDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterDedicated)(nil)).Elem()
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput {
	return i.ToKafkaClusterDedicatedOutputWithContext(context.Background())
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedOutputWithContext(ctx context.Context) KafkaClusterDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedOutput)
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return i.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedOutput).ToKafkaClusterDedicatedPtrOutputWithContext(ctx)
}

// KafkaClusterDedicatedPtrInput is an input type that accepts KafkaClusterDedicatedArgs, KafkaClusterDedicatedPtr and KafkaClusterDedicatedPtrOutput values.
// You can construct a concrete instance of `KafkaClusterDedicatedPtrInput` via:
//
//	        KafkaClusterDedicatedArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterDedicatedPtrInput interface {
	pulumi.Input

	ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput
	ToKafkaClusterDedicatedPtrOutputWithContext(context.Context) KafkaClusterDedicatedPtrOutput
}

type kafkaClusterDedicatedPtrType KafkaClusterDedicatedArgs

func KafkaClusterDedicatedPtr(v *KafkaClusterDedicatedArgs) KafkaClusterDedicatedPtrInput {
	return (*kafkaClusterDedicatedPtrType)(v)
}

func (*kafkaClusterDedicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterDedicated)(nil)).Elem()
}

func (i *kafkaClusterDedicatedPtrType) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return i.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterDedicatedPtrType) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedPtrOutput)
}

type KafkaClusterDedicatedOutput struct{ *pulumi.OutputState }

func (KafkaClusterDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterDedicated)(nil)).Elem()
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput {
	return o
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedOutputWithContext(ctx context.Context) KafkaClusterDedicatedOutput {
	return o
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return o.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterDedicated) *KafkaClusterDedicated {
		return &v
	}).(KafkaClusterDedicatedPtrOutput)
}

// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o KafkaClusterDedicatedOutput) Cku() pulumi.IntOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) int { return v.Cku }).(pulumi.IntOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o KafkaClusterDedicatedOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

type KafkaClusterDedicatedPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterDedicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterDedicated)(nil)).Elem()
}

func (o KafkaClusterDedicatedPtrOutput) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return o
}

func (o KafkaClusterDedicatedPtrOutput) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return o
}

func (o KafkaClusterDedicatedPtrOutput) Elem() KafkaClusterDedicatedOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) KafkaClusterDedicated {
		if v != nil {
			return *v
		}
		var ret KafkaClusterDedicated
		return ret
	}).(KafkaClusterDedicatedOutput)
}

// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o KafkaClusterDedicatedPtrOutput) Cku() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) *int {
		if v == nil {
			return nil
		}
		return &v.Cku
	}).(pulumi.IntPtrOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o KafkaClusterDedicatedPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterEnvironment struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterEnvironmentInput is an input type that accepts KafkaClusterEnvironmentArgs and KafkaClusterEnvironmentOutput values.
// You can construct a concrete instance of `KafkaClusterEnvironmentInput` via:
//
//	KafkaClusterEnvironmentArgs{...}
type KafkaClusterEnvironmentInput interface {
	pulumi.Input

	ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput
	ToKafkaClusterEnvironmentOutputWithContext(context.Context) KafkaClusterEnvironmentOutput
}

type KafkaClusterEnvironmentArgs struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnvironment)(nil)).Elem()
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput {
	return i.ToKafkaClusterEnvironmentOutputWithContext(context.Background())
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentOutputWithContext(ctx context.Context) KafkaClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentOutput)
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return i.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentOutput).ToKafkaClusterEnvironmentPtrOutputWithContext(ctx)
}

// KafkaClusterEnvironmentPtrInput is an input type that accepts KafkaClusterEnvironmentArgs, KafkaClusterEnvironmentPtr and KafkaClusterEnvironmentPtrOutput values.
// You can construct a concrete instance of `KafkaClusterEnvironmentPtrInput` via:
//
//	        KafkaClusterEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterEnvironmentPtrInput interface {
	pulumi.Input

	ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput
	ToKafkaClusterEnvironmentPtrOutputWithContext(context.Context) KafkaClusterEnvironmentPtrOutput
}

type kafkaClusterEnvironmentPtrType KafkaClusterEnvironmentArgs

func KafkaClusterEnvironmentPtr(v *KafkaClusterEnvironmentArgs) KafkaClusterEnvironmentPtrInput {
	return (*kafkaClusterEnvironmentPtrType)(v)
}

func (*kafkaClusterEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterEnvironment)(nil)).Elem()
}

func (i *kafkaClusterEnvironmentPtrType) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return i.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterEnvironmentPtrType) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentPtrOutput)
}

type KafkaClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnvironment)(nil)).Elem()
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput {
	return o
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentOutputWithContext(ctx context.Context) KafkaClusterEnvironmentOutput {
	return o
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return o.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterEnvironment) *KafkaClusterEnvironment {
		return &v
	}).(KafkaClusterEnvironmentPtrOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterEnvironment)(nil)).Elem()
}

func (o KafkaClusterEnvironmentPtrOutput) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return o
}

func (o KafkaClusterEnvironmentPtrOutput) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return o
}

func (o KafkaClusterEnvironmentPtrOutput) Elem() KafkaClusterEnvironmentOutput {
	return o.ApplyT(func(v *KafkaClusterEnvironment) KafkaClusterEnvironment {
		if v != nil {
			return *v
		}
		var ret KafkaClusterEnvironment
		return ret
	}).(KafkaClusterEnvironmentOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterNetwork struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterNetworkInput is an input type that accepts KafkaClusterNetworkArgs and KafkaClusterNetworkOutput values.
// You can construct a concrete instance of `KafkaClusterNetworkInput` via:
//
//	KafkaClusterNetworkArgs{...}
type KafkaClusterNetworkInput interface {
	pulumi.Input

	ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput
	ToKafkaClusterNetworkOutputWithContext(context.Context) KafkaClusterNetworkOutput
}

type KafkaClusterNetworkArgs struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterNetwork)(nil)).Elem()
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput {
	return i.ToKafkaClusterNetworkOutputWithContext(context.Background())
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkOutputWithContext(ctx context.Context) KafkaClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkOutput)
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return i.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkOutput).ToKafkaClusterNetworkPtrOutputWithContext(ctx)
}

// KafkaClusterNetworkPtrInput is an input type that accepts KafkaClusterNetworkArgs, KafkaClusterNetworkPtr and KafkaClusterNetworkPtrOutput values.
// You can construct a concrete instance of `KafkaClusterNetworkPtrInput` via:
//
//	        KafkaClusterNetworkArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterNetworkPtrInput interface {
	pulumi.Input

	ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput
	ToKafkaClusterNetworkPtrOutputWithContext(context.Context) KafkaClusterNetworkPtrOutput
}

type kafkaClusterNetworkPtrType KafkaClusterNetworkArgs

func KafkaClusterNetworkPtr(v *KafkaClusterNetworkArgs) KafkaClusterNetworkPtrInput {
	return (*kafkaClusterNetworkPtrType)(v)
}

func (*kafkaClusterNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterNetwork)(nil)).Elem()
}

func (i *kafkaClusterNetworkPtrType) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return i.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterNetworkPtrType) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkPtrOutput)
}

type KafkaClusterNetworkOutput struct{ *pulumi.OutputState }

func (KafkaClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterNetwork)(nil)).Elem()
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput {
	return o
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkOutputWithContext(ctx context.Context) KafkaClusterNetworkOutput {
	return o
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return o.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterNetwork) *KafkaClusterNetwork {
		return &v
	}).(KafkaClusterNetworkPtrOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterNetworkPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterNetwork)(nil)).Elem()
}

func (o KafkaClusterNetworkPtrOutput) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return o
}

func (o KafkaClusterNetworkPtrOutput) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return o
}

func (o KafkaClusterNetworkPtrOutput) Elem() KafkaClusterNetworkOutput {
	return o.ApplyT(func(v *KafkaClusterNetwork) KafkaClusterNetwork {
		if v != nil {
			return *v
		}
		var ret KafkaClusterNetwork
		return ret
	}).(KafkaClusterNetworkOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterStandard struct {
}

// KafkaClusterStandardInput is an input type that accepts KafkaClusterStandardArgs and KafkaClusterStandardOutput values.
// You can construct a concrete instance of `KafkaClusterStandardInput` via:
//
//	KafkaClusterStandardArgs{...}
type KafkaClusterStandardInput interface {
	pulumi.Input

	ToKafkaClusterStandardOutput() KafkaClusterStandardOutput
	ToKafkaClusterStandardOutputWithContext(context.Context) KafkaClusterStandardOutput
}

type KafkaClusterStandardArgs struct {
}

func (KafkaClusterStandardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterStandard)(nil)).Elem()
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardOutput() KafkaClusterStandardOutput {
	return i.ToKafkaClusterStandardOutputWithContext(context.Background())
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardOutputWithContext(ctx context.Context) KafkaClusterStandardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardOutput)
}

// KafkaClusterStandardArrayInput is an input type that accepts KafkaClusterStandardArray and KafkaClusterStandardArrayOutput values.
// You can construct a concrete instance of `KafkaClusterStandardArrayInput` via:
//
//	KafkaClusterStandardArray{ KafkaClusterStandardArgs{...} }
type KafkaClusterStandardArrayInput interface {
	pulumi.Input

	ToKafkaClusterStandardArrayOutput() KafkaClusterStandardArrayOutput
	ToKafkaClusterStandardArrayOutputWithContext(context.Context) KafkaClusterStandardArrayOutput
}

type KafkaClusterStandardArray []KafkaClusterStandardInput

func (KafkaClusterStandardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterStandard)(nil)).Elem()
}

func (i KafkaClusterStandardArray) ToKafkaClusterStandardArrayOutput() KafkaClusterStandardArrayOutput {
	return i.ToKafkaClusterStandardArrayOutputWithContext(context.Background())
}

func (i KafkaClusterStandardArray) ToKafkaClusterStandardArrayOutputWithContext(ctx context.Context) KafkaClusterStandardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardArrayOutput)
}

type KafkaClusterStandardOutput struct{ *pulumi.OutputState }

func (KafkaClusterStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterStandard)(nil)).Elem()
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardOutput() KafkaClusterStandardOutput {
	return o
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardOutputWithContext(ctx context.Context) KafkaClusterStandardOutput {
	return o
}

type KafkaClusterStandardArrayOutput struct{ *pulumi.OutputState }

func (KafkaClusterStandardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterStandard)(nil)).Elem()
}

func (o KafkaClusterStandardArrayOutput) ToKafkaClusterStandardArrayOutput() KafkaClusterStandardArrayOutput {
	return o
}

func (o KafkaClusterStandardArrayOutput) ToKafkaClusterStandardArrayOutputWithContext(ctx context.Context) KafkaClusterStandardArrayOutput {
	return o
}

func (o KafkaClusterStandardArrayOutput) Index(i pulumi.IntInput) KafkaClusterStandardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaClusterStandard {
		return vs[0].([]KafkaClusterStandard)[vs[1].(int)]
	}).(KafkaClusterStandardOutput)
}

type KafkaTopicCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaTopicCredentialsInput is an input type that accepts KafkaTopicCredentialsArgs and KafkaTopicCredentialsOutput values.
// You can construct a concrete instance of `KafkaTopicCredentialsInput` via:
//
//	KafkaTopicCredentialsArgs{...}
type KafkaTopicCredentialsInput interface {
	pulumi.Input

	ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput
	ToKafkaTopicCredentialsOutputWithContext(context.Context) KafkaTopicCredentialsOutput
}

type KafkaTopicCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaTopicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicCredentials)(nil)).Elem()
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput {
	return i.ToKafkaTopicCredentialsOutputWithContext(context.Background())
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsOutputWithContext(ctx context.Context) KafkaTopicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsOutput)
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return i.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsOutput).ToKafkaTopicCredentialsPtrOutputWithContext(ctx)
}

// KafkaTopicCredentialsPtrInput is an input type that accepts KafkaTopicCredentialsArgs, KafkaTopicCredentialsPtr and KafkaTopicCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaTopicCredentialsPtrInput` via:
//
//	        KafkaTopicCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput
	ToKafkaTopicCredentialsPtrOutputWithContext(context.Context) KafkaTopicCredentialsPtrOutput
}

type kafkaTopicCredentialsPtrType KafkaTopicCredentialsArgs

func KafkaTopicCredentialsPtr(v *KafkaTopicCredentialsArgs) KafkaTopicCredentialsPtrInput {
	return (*kafkaTopicCredentialsPtrType)(v)
}

func (*kafkaTopicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicCredentials)(nil)).Elem()
}

func (i *kafkaTopicCredentialsPtrType) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return i.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicCredentialsPtrType) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsPtrOutput)
}

type KafkaTopicCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaTopicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicCredentials)(nil)).Elem()
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput {
	return o
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsOutputWithContext(ctx context.Context) KafkaTopicCredentialsOutput {
	return o
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return o.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicCredentials) *KafkaTopicCredentials {
		return &v
	}).(KafkaTopicCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaTopicCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaTopicCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaTopicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicCredentials)(nil)).Elem()
}

func (o KafkaTopicCredentialsPtrOutput) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return o
}

func (o KafkaTopicCredentialsPtrOutput) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return o
}

func (o KafkaTopicCredentialsPtrOutput) Elem() KafkaTopicCredentialsOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) KafkaTopicCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaTopicCredentials
		return ret
	}).(KafkaTopicCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaTopicCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaTopicCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaTopicKafkaClusterInput is an input type that accepts KafkaTopicKafkaClusterArgs and KafkaTopicKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaTopicKafkaClusterInput` via:
//
//	KafkaTopicKafkaClusterArgs{...}
type KafkaTopicKafkaClusterInput interface {
	pulumi.Input

	ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput
	ToKafkaTopicKafkaClusterOutputWithContext(context.Context) KafkaTopicKafkaClusterOutput
}

type KafkaTopicKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicKafkaCluster)(nil)).Elem()
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput {
	return i.ToKafkaTopicKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterOutput)
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return i.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterOutput).ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaTopicKafkaClusterPtrInput is an input type that accepts KafkaTopicKafkaClusterArgs, KafkaTopicKafkaClusterPtr and KafkaTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaTopicKafkaClusterPtrInput` via:
//
//	        KafkaTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput
	ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Context) KafkaTopicKafkaClusterPtrOutput
}

type kafkaTopicKafkaClusterPtrType KafkaTopicKafkaClusterArgs

func KafkaTopicKafkaClusterPtr(v *KafkaTopicKafkaClusterArgs) KafkaTopicKafkaClusterPtrInput {
	return (*kafkaTopicKafkaClusterPtrType)(v)
}

func (*kafkaTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicKafkaCluster)(nil)).Elem()
}

func (i *kafkaTopicKafkaClusterPtrType) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return i.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicKafkaClusterPtrType) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterPtrOutput)
}

type KafkaTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput {
	return o
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterOutput {
	return o
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return o.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicKafkaCluster) *KafkaTopicKafkaCluster {
		return &v
	}).(KafkaTopicKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaTopicKafkaClusterPtrOutput) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaTopicKafkaClusterPtrOutput) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaTopicKafkaClusterPtrOutput) Elem() KafkaTopicKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaTopicKafkaCluster) KafkaTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaTopicKafkaCluster
		return ret
	}).(KafkaTopicKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkAw struct {
	// (Optional String) The AWS VPC endpoint service for the network (used for Private Link) if available.
	PrivateLinkEndpointService *string `pulumi:"privateLinkEndpointService"`
	// (Required String) The AWS VPC ID for the network.
	Vpc *string `pulumi:"vpc"`
}

// NetworkAwInput is an input type that accepts NetworkAwArgs and NetworkAwOutput values.
// You can construct a concrete instance of `NetworkAwInput` via:
//
//	NetworkAwArgs{...}
type NetworkAwInput interface {
	pulumi.Input

	ToNetworkAwOutput() NetworkAwOutput
	ToNetworkAwOutputWithContext(context.Context) NetworkAwOutput
}

type NetworkAwArgs struct {
	// (Optional String) The AWS VPC endpoint service for the network (used for Private Link) if available.
	PrivateLinkEndpointService pulumi.StringPtrInput `pulumi:"privateLinkEndpointService"`
	// (Required String) The AWS VPC ID for the network.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (NetworkAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAw)(nil)).Elem()
}

func (i NetworkAwArgs) ToNetworkAwOutput() NetworkAwOutput {
	return i.ToNetworkAwOutputWithContext(context.Background())
}

func (i NetworkAwArgs) ToNetworkAwOutputWithContext(ctx context.Context) NetworkAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAwOutput)
}

// NetworkAwArrayInput is an input type that accepts NetworkAwArray and NetworkAwArrayOutput values.
// You can construct a concrete instance of `NetworkAwArrayInput` via:
//
//	NetworkAwArray{ NetworkAwArgs{...} }
type NetworkAwArrayInput interface {
	pulumi.Input

	ToNetworkAwArrayOutput() NetworkAwArrayOutput
	ToNetworkAwArrayOutputWithContext(context.Context) NetworkAwArrayOutput
}

type NetworkAwArray []NetworkAwInput

func (NetworkAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAw)(nil)).Elem()
}

func (i NetworkAwArray) ToNetworkAwArrayOutput() NetworkAwArrayOutput {
	return i.ToNetworkAwArrayOutputWithContext(context.Background())
}

func (i NetworkAwArray) ToNetworkAwArrayOutputWithContext(ctx context.Context) NetworkAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAwArrayOutput)
}

type NetworkAwOutput struct{ *pulumi.OutputState }

func (NetworkAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAw)(nil)).Elem()
}

func (o NetworkAwOutput) ToNetworkAwOutput() NetworkAwOutput {
	return o
}

func (o NetworkAwOutput) ToNetworkAwOutputWithContext(ctx context.Context) NetworkAwOutput {
	return o
}

// (Optional String) The AWS VPC endpoint service for the network (used for Private Link) if available.
func (o NetworkAwOutput) PrivateLinkEndpointService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.PrivateLinkEndpointService }).(pulumi.StringPtrOutput)
}

// (Required String) The AWS VPC ID for the network.
func (o NetworkAwOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type NetworkAwArrayOutput struct{ *pulumi.OutputState }

func (NetworkAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAw)(nil)).Elem()
}

func (o NetworkAwArrayOutput) ToNetworkAwArrayOutput() NetworkAwArrayOutput {
	return o
}

func (o NetworkAwArrayOutput) ToNetworkAwArrayOutputWithContext(ctx context.Context) NetworkAwArrayOutput {
	return o
}

func (o NetworkAwArrayOutput) Index(i pulumi.IntInput) NetworkAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAw {
		return vs[0].([]NetworkAw)[vs[1].(int)]
	}).(NetworkAwOutput)
}

type NetworkAzure struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
	PrivateLinkServiceAliases map[string]string `pulumi:"privateLinkServiceAliases"`
}

// NetworkAzureInput is an input type that accepts NetworkAzureArgs and NetworkAzureOutput values.
// You can construct a concrete instance of `NetworkAzureInput` via:
//
//	NetworkAzureArgs{...}
type NetworkAzureInput interface {
	pulumi.Input

	ToNetworkAzureOutput() NetworkAzureOutput
	ToNetworkAzureOutputWithContext(context.Context) NetworkAzureOutput
}

type NetworkAzureArgs struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
	PrivateLinkServiceAliases pulumi.StringMapInput `pulumi:"privateLinkServiceAliases"`
}

func (NetworkAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAzure)(nil)).Elem()
}

func (i NetworkAzureArgs) ToNetworkAzureOutput() NetworkAzureOutput {
	return i.ToNetworkAzureOutputWithContext(context.Background())
}

func (i NetworkAzureArgs) ToNetworkAzureOutputWithContext(ctx context.Context) NetworkAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAzureOutput)
}

// NetworkAzureArrayInput is an input type that accepts NetworkAzureArray and NetworkAzureArrayOutput values.
// You can construct a concrete instance of `NetworkAzureArrayInput` via:
//
//	NetworkAzureArray{ NetworkAzureArgs{...} }
type NetworkAzureArrayInput interface {
	pulumi.Input

	ToNetworkAzureArrayOutput() NetworkAzureArrayOutput
	ToNetworkAzureArrayOutputWithContext(context.Context) NetworkAzureArrayOutput
}

type NetworkAzureArray []NetworkAzureInput

func (NetworkAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAzure)(nil)).Elem()
}

func (i NetworkAzureArray) ToNetworkAzureArrayOutput() NetworkAzureArrayOutput {
	return i.ToNetworkAzureArrayOutputWithContext(context.Background())
}

func (i NetworkAzureArray) ToNetworkAzureArrayOutputWithContext(ctx context.Context) NetworkAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAzureArrayOutput)
}

type NetworkAzureOutput struct{ *pulumi.OutputState }

func (NetworkAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAzure)(nil)).Elem()
}

func (o NetworkAzureOutput) ToNetworkAzureOutput() NetworkAzureOutput {
	return o
}

func (o NetworkAzureOutput) ToNetworkAzureOutputWithContext(ctx context.Context) NetworkAzureOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
func (o NetworkAzureOutput) PrivateLinkServiceAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkAzure) map[string]string { return v.PrivateLinkServiceAliases }).(pulumi.StringMapOutput)
}

type NetworkAzureArrayOutput struct{ *pulumi.OutputState }

func (NetworkAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAzure)(nil)).Elem()
}

func (o NetworkAzureArrayOutput) ToNetworkAzureArrayOutput() NetworkAzureArrayOutput {
	return o
}

func (o NetworkAzureArrayOutput) ToNetworkAzureArrayOutputWithContext(ctx context.Context) NetworkAzureArrayOutput {
	return o
}

func (o NetworkAzureArrayOutput) Index(i pulumi.IntInput) NetworkAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAzure {
		return vs[0].([]NetworkAzure)[vs[1].(int)]
	}).(NetworkAzureOutput)
}

type NetworkEnvironment struct {
	// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// NetworkEnvironmentInput is an input type that accepts NetworkEnvironmentArgs and NetworkEnvironmentOutput values.
// You can construct a concrete instance of `NetworkEnvironmentInput` via:
//
//	NetworkEnvironmentArgs{...}
type NetworkEnvironmentInput interface {
	pulumi.Input

	ToNetworkEnvironmentOutput() NetworkEnvironmentOutput
	ToNetworkEnvironmentOutputWithContext(context.Context) NetworkEnvironmentOutput
}

type NetworkEnvironmentArgs struct {
	// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEnvironment)(nil)).Elem()
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentOutput() NetworkEnvironmentOutput {
	return i.ToNetworkEnvironmentOutputWithContext(context.Background())
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentOutputWithContext(ctx context.Context) NetworkEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentOutput)
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return i.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentOutput).ToNetworkEnvironmentPtrOutputWithContext(ctx)
}

// NetworkEnvironmentPtrInput is an input type that accepts NetworkEnvironmentArgs, NetworkEnvironmentPtr and NetworkEnvironmentPtrOutput values.
// You can construct a concrete instance of `NetworkEnvironmentPtrInput` via:
//
//	        NetworkEnvironmentArgs{...}
//
//	or:
//
//	        nil
type NetworkEnvironmentPtrInput interface {
	pulumi.Input

	ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput
	ToNetworkEnvironmentPtrOutputWithContext(context.Context) NetworkEnvironmentPtrOutput
}

type networkEnvironmentPtrType NetworkEnvironmentArgs

func NetworkEnvironmentPtr(v *NetworkEnvironmentArgs) NetworkEnvironmentPtrInput {
	return (*networkEnvironmentPtrType)(v)
}

func (*networkEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEnvironment)(nil)).Elem()
}

func (i *networkEnvironmentPtrType) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return i.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (i *networkEnvironmentPtrType) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentPtrOutput)
}

type NetworkEnvironmentOutput struct{ *pulumi.OutputState }

func (NetworkEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEnvironment)(nil)).Elem()
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentOutput() NetworkEnvironmentOutput {
	return o
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentOutputWithContext(ctx context.Context) NetworkEnvironmentOutput {
	return o
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return o.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkEnvironment) *NetworkEnvironment {
		return &v
	}).(NetworkEnvironmentPtrOutput)
}

// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
func (o NetworkEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (NetworkEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEnvironment)(nil)).Elem()
}

func (o NetworkEnvironmentPtrOutput) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return o
}

func (o NetworkEnvironmentPtrOutput) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return o
}

func (o NetworkEnvironmentPtrOutput) Elem() NetworkEnvironmentOutput {
	return o.ApplyT(func(v *NetworkEnvironment) NetworkEnvironment {
		if v != nil {
			return *v
		}
		var ret NetworkEnvironment
		return ret
	}).(NetworkEnvironmentOutput)
}

// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
func (o NetworkEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkGcp struct {
	// (Required String) The GCP project.
	Project *string `pulumi:"project"`
	// (Required String) The GCP VPC network name.
	VpcNetwork *string `pulumi:"vpcNetwork"`
}

// NetworkGcpInput is an input type that accepts NetworkGcpArgs and NetworkGcpOutput values.
// You can construct a concrete instance of `NetworkGcpInput` via:
//
//	NetworkGcpArgs{...}
type NetworkGcpInput interface {
	pulumi.Input

	ToNetworkGcpOutput() NetworkGcpOutput
	ToNetworkGcpOutputWithContext(context.Context) NetworkGcpOutput
}

type NetworkGcpArgs struct {
	// (Required String) The GCP project.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// (Required String) The GCP VPC network name.
	VpcNetwork pulumi.StringPtrInput `pulumi:"vpcNetwork"`
}

func (NetworkGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGcp)(nil)).Elem()
}

func (i NetworkGcpArgs) ToNetworkGcpOutput() NetworkGcpOutput {
	return i.ToNetworkGcpOutputWithContext(context.Background())
}

func (i NetworkGcpArgs) ToNetworkGcpOutputWithContext(ctx context.Context) NetworkGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGcpOutput)
}

// NetworkGcpArrayInput is an input type that accepts NetworkGcpArray and NetworkGcpArrayOutput values.
// You can construct a concrete instance of `NetworkGcpArrayInput` via:
//
//	NetworkGcpArray{ NetworkGcpArgs{...} }
type NetworkGcpArrayInput interface {
	pulumi.Input

	ToNetworkGcpArrayOutput() NetworkGcpArrayOutput
	ToNetworkGcpArrayOutputWithContext(context.Context) NetworkGcpArrayOutput
}

type NetworkGcpArray []NetworkGcpInput

func (NetworkGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGcp)(nil)).Elem()
}

func (i NetworkGcpArray) ToNetworkGcpArrayOutput() NetworkGcpArrayOutput {
	return i.ToNetworkGcpArrayOutputWithContext(context.Background())
}

func (i NetworkGcpArray) ToNetworkGcpArrayOutputWithContext(ctx context.Context) NetworkGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGcpArrayOutput)
}

type NetworkGcpOutput struct{ *pulumi.OutputState }

func (NetworkGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGcp)(nil)).Elem()
}

func (o NetworkGcpOutput) ToNetworkGcpOutput() NetworkGcpOutput {
	return o
}

func (o NetworkGcpOutput) ToNetworkGcpOutputWithContext(ctx context.Context) NetworkGcpOutput {
	return o
}

// (Required String) The GCP project.
func (o NetworkGcpOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGcp) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// (Required String) The GCP VPC network name.
func (o NetworkGcpOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGcp) *string { return v.VpcNetwork }).(pulumi.StringPtrOutput)
}

type NetworkGcpArrayOutput struct{ *pulumi.OutputState }

func (NetworkGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGcp)(nil)).Elem()
}

func (o NetworkGcpArrayOutput) ToNetworkGcpArrayOutput() NetworkGcpArrayOutput {
	return o
}

func (o NetworkGcpArrayOutput) ToNetworkGcpArrayOutputWithContext(ctx context.Context) NetworkGcpArrayOutput {
	return o
}

func (o NetworkGcpArrayOutput) Index(i pulumi.IntInput) NetworkGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkGcp {
		return vs[0].([]NetworkGcp)[vs[1].(int)]
	}).(NetworkGcpOutput)
}

type PeeringAws struct {
	// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
	// The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes []string `pulumi:"routes"`
	// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc string `pulumi:"vpc"`
}

// PeeringAwsInput is an input type that accepts PeeringAwsArgs and PeeringAwsOutput values.
// You can construct a concrete instance of `PeeringAwsInput` via:
//
//	PeeringAwsArgs{...}
type PeeringAwsInput interface {
	pulumi.Input

	ToPeeringAwsOutput() PeeringAwsOutput
	ToPeeringAwsOutputWithContext(context.Context) PeeringAwsOutput
}

type PeeringAwsArgs struct {
	// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
	// The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (PeeringAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAws)(nil)).Elem()
}

func (i PeeringAwsArgs) ToPeeringAwsOutput() PeeringAwsOutput {
	return i.ToPeeringAwsOutputWithContext(context.Background())
}

func (i PeeringAwsArgs) ToPeeringAwsOutputWithContext(ctx context.Context) PeeringAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsOutput)
}

func (i PeeringAwsArgs) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return i.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (i PeeringAwsArgs) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsOutput).ToPeeringAwsPtrOutputWithContext(ctx)
}

// PeeringAwsPtrInput is an input type that accepts PeeringAwsArgs, PeeringAwsPtr and PeeringAwsPtrOutput values.
// You can construct a concrete instance of `PeeringAwsPtrInput` via:
//
//	        PeeringAwsArgs{...}
//
//	or:
//
//	        nil
type PeeringAwsPtrInput interface {
	pulumi.Input

	ToPeeringAwsPtrOutput() PeeringAwsPtrOutput
	ToPeeringAwsPtrOutputWithContext(context.Context) PeeringAwsPtrOutput
}

type peeringAwsPtrType PeeringAwsArgs

func PeeringAwsPtr(v *PeeringAwsArgs) PeeringAwsPtrInput {
	return (*peeringAwsPtrType)(v)
}

func (*peeringAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAws)(nil)).Elem()
}

func (i *peeringAwsPtrType) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return i.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (i *peeringAwsPtrType) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsPtrOutput)
}

type PeeringAwsOutput struct{ *pulumi.OutputState }

func (PeeringAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAws)(nil)).Elem()
}

func (o PeeringAwsOutput) ToPeeringAwsOutput() PeeringAwsOutput {
	return o
}

func (o PeeringAwsOutput) ToPeeringAwsOutputWithContext(ctx context.Context) PeeringAwsOutput {
	return o
}

func (o PeeringAwsOutput) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return o.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (o PeeringAwsOutput) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringAws) *PeeringAws {
		return &v
	}).(PeeringAwsPtrOutput)
}

// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o PeeringAwsOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.Account }).(pulumi.StringOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAwsOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o PeeringAwsOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PeeringAws) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o PeeringAwsOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.Vpc }).(pulumi.StringOutput)
}

type PeeringAwsPtrOutput struct{ *pulumi.OutputState }

func (PeeringAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAws)(nil)).Elem()
}

func (o PeeringAwsPtrOutput) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return o
}

func (o PeeringAwsPtrOutput) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return o
}

func (o PeeringAwsPtrOutput) Elem() PeeringAwsOutput {
	return o.ApplyT(func(v *PeeringAws) PeeringAws {
		if v != nil {
			return *v
		}
		var ret PeeringAws
		return ret
	}).(PeeringAwsOutput)
}

// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o PeeringAwsPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAwsPtrOutput) CustomerRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerRegion
	}).(pulumi.StringPtrOutput)
}

// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o PeeringAwsPtrOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PeeringAws) []string {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(pulumi.StringArrayOutput)
}

// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o PeeringAwsPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.Vpc
	}).(pulumi.StringPtrOutput)
}

type PeeringAzure struct {
	// The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant string `pulumi:"tenant"`
	// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet string `pulumi:"vnet"`
}

// PeeringAzureInput is an input type that accepts PeeringAzureArgs and PeeringAzureOutput values.
// You can construct a concrete instance of `PeeringAzureInput` via:
//
//	PeeringAzureArgs{...}
type PeeringAzureInput interface {
	pulumi.Input

	ToPeeringAzureOutput() PeeringAzureOutput
	ToPeeringAzureOutputWithContext(context.Context) PeeringAzureOutput
}

type PeeringAzureArgs struct {
	// The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant pulumi.StringInput `pulumi:"tenant"`
	// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet pulumi.StringInput `pulumi:"vnet"`
}

func (PeeringAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAzure)(nil)).Elem()
}

func (i PeeringAzureArgs) ToPeeringAzureOutput() PeeringAzureOutput {
	return i.ToPeeringAzureOutputWithContext(context.Background())
}

func (i PeeringAzureArgs) ToPeeringAzureOutputWithContext(ctx context.Context) PeeringAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzureOutput)
}

func (i PeeringAzureArgs) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return i.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (i PeeringAzureArgs) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzureOutput).ToPeeringAzurePtrOutputWithContext(ctx)
}

// PeeringAzurePtrInput is an input type that accepts PeeringAzureArgs, PeeringAzurePtr and PeeringAzurePtrOutput values.
// You can construct a concrete instance of `PeeringAzurePtrInput` via:
//
//	        PeeringAzureArgs{...}
//
//	or:
//
//	        nil
type PeeringAzurePtrInput interface {
	pulumi.Input

	ToPeeringAzurePtrOutput() PeeringAzurePtrOutput
	ToPeeringAzurePtrOutputWithContext(context.Context) PeeringAzurePtrOutput
}

type peeringAzurePtrType PeeringAzureArgs

func PeeringAzurePtr(v *PeeringAzureArgs) PeeringAzurePtrInput {
	return (*peeringAzurePtrType)(v)
}

func (*peeringAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAzure)(nil)).Elem()
}

func (i *peeringAzurePtrType) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return i.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (i *peeringAzurePtrType) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzurePtrOutput)
}

type PeeringAzureOutput struct{ *pulumi.OutputState }

func (PeeringAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAzure)(nil)).Elem()
}

func (o PeeringAzureOutput) ToPeeringAzureOutput() PeeringAzureOutput {
	return o
}

func (o PeeringAzureOutput) ToPeeringAzureOutputWithContext(ctx context.Context) PeeringAzureOutput {
	return o
}

func (o PeeringAzureOutput) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return o.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (o PeeringAzureOutput) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringAzure) *PeeringAzure {
		return &v
	}).(PeeringAzurePtrOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAzureOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o PeeringAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.Tenant }).(pulumi.StringOutput)
}

// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o PeeringAzureOutput) Vnet() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.Vnet }).(pulumi.StringOutput)
}

type PeeringAzurePtrOutput struct{ *pulumi.OutputState }

func (PeeringAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAzure)(nil)).Elem()
}

func (o PeeringAzurePtrOutput) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return o
}

func (o PeeringAzurePtrOutput) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return o
}

func (o PeeringAzurePtrOutput) Elem() PeeringAzureOutput {
	return o.ApplyT(func(v *PeeringAzure) PeeringAzure {
		if v != nil {
			return *v
		}
		var ret PeeringAzure
		return ret
	}).(PeeringAzureOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAzurePtrOutput) CustomerRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerRegion
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o PeeringAzurePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Tenant
	}).(pulumi.StringPtrOutput)
}

// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o PeeringAzurePtrOutput) Vnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Vnet
	}).(pulumi.StringPtrOutput)
}

type PeeringEnvironment struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PeeringEnvironmentInput is an input type that accepts PeeringEnvironmentArgs and PeeringEnvironmentOutput values.
// You can construct a concrete instance of `PeeringEnvironmentInput` via:
//
//	PeeringEnvironmentArgs{...}
type PeeringEnvironmentInput interface {
	pulumi.Input

	ToPeeringEnvironmentOutput() PeeringEnvironmentOutput
	ToPeeringEnvironmentOutputWithContext(context.Context) PeeringEnvironmentOutput
}

type PeeringEnvironmentArgs struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PeeringEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringEnvironment)(nil)).Elem()
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentOutput() PeeringEnvironmentOutput {
	return i.ToPeeringEnvironmentOutputWithContext(context.Background())
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentOutputWithContext(ctx context.Context) PeeringEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentOutput)
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return i.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentOutput).ToPeeringEnvironmentPtrOutputWithContext(ctx)
}

// PeeringEnvironmentPtrInput is an input type that accepts PeeringEnvironmentArgs, PeeringEnvironmentPtr and PeeringEnvironmentPtrOutput values.
// You can construct a concrete instance of `PeeringEnvironmentPtrInput` via:
//
//	        PeeringEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PeeringEnvironmentPtrInput interface {
	pulumi.Input

	ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput
	ToPeeringEnvironmentPtrOutputWithContext(context.Context) PeeringEnvironmentPtrOutput
}

type peeringEnvironmentPtrType PeeringEnvironmentArgs

func PeeringEnvironmentPtr(v *PeeringEnvironmentArgs) PeeringEnvironmentPtrInput {
	return (*peeringEnvironmentPtrType)(v)
}

func (*peeringEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringEnvironment)(nil)).Elem()
}

func (i *peeringEnvironmentPtrType) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return i.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (i *peeringEnvironmentPtrType) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentPtrOutput)
}

type PeeringEnvironmentOutput struct{ *pulumi.OutputState }

func (PeeringEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringEnvironment)(nil)).Elem()
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentOutput() PeeringEnvironmentOutput {
	return o
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentOutputWithContext(ctx context.Context) PeeringEnvironmentOutput {
	return o
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return o.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringEnvironment) *PeeringEnvironment {
		return &v
	}).(PeeringEnvironmentPtrOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PeeringEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PeeringEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringEnvironment)(nil)).Elem()
}

func (o PeeringEnvironmentPtrOutput) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return o
}

func (o PeeringEnvironmentPtrOutput) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return o
}

func (o PeeringEnvironmentPtrOutput) Elem() PeeringEnvironmentOutput {
	return o.ApplyT(func(v *PeeringEnvironment) PeeringEnvironment {
		if v != nil {
			return *v
		}
		var ret PeeringEnvironment
		return ret
	}).(PeeringEnvironmentOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PeeringGcp struct {
	// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes *bool `pulumi:"importCustomRoutes"`
	// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
	// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// PeeringGcpInput is an input type that accepts PeeringGcpArgs and PeeringGcpOutput values.
// You can construct a concrete instance of `PeeringGcpInput` via:
//
//	PeeringGcpArgs{...}
type PeeringGcpInput interface {
	pulumi.Input

	ToPeeringGcpOutput() PeeringGcpOutput
	ToPeeringGcpOutputWithContext(context.Context) PeeringGcpOutput
}

type PeeringGcpArgs struct {
	// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes pulumi.BoolPtrInput `pulumi:"importCustomRoutes"`
	// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
	// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (PeeringGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringGcp)(nil)).Elem()
}

func (i PeeringGcpArgs) ToPeeringGcpOutput() PeeringGcpOutput {
	return i.ToPeeringGcpOutputWithContext(context.Background())
}

func (i PeeringGcpArgs) ToPeeringGcpOutputWithContext(ctx context.Context) PeeringGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpOutput)
}

func (i PeeringGcpArgs) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return i.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (i PeeringGcpArgs) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpOutput).ToPeeringGcpPtrOutputWithContext(ctx)
}

// PeeringGcpPtrInput is an input type that accepts PeeringGcpArgs, PeeringGcpPtr and PeeringGcpPtrOutput values.
// You can construct a concrete instance of `PeeringGcpPtrInput` via:
//
//	        PeeringGcpArgs{...}
//
//	or:
//
//	        nil
type PeeringGcpPtrInput interface {
	pulumi.Input

	ToPeeringGcpPtrOutput() PeeringGcpPtrOutput
	ToPeeringGcpPtrOutputWithContext(context.Context) PeeringGcpPtrOutput
}

type peeringGcpPtrType PeeringGcpArgs

func PeeringGcpPtr(v *PeeringGcpArgs) PeeringGcpPtrInput {
	return (*peeringGcpPtrType)(v)
}

func (*peeringGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringGcp)(nil)).Elem()
}

func (i *peeringGcpPtrType) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return i.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (i *peeringGcpPtrType) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpPtrOutput)
}

type PeeringGcpOutput struct{ *pulumi.OutputState }

func (PeeringGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringGcp)(nil)).Elem()
}

func (o PeeringGcpOutput) ToPeeringGcpOutput() PeeringGcpOutput {
	return o
}

func (o PeeringGcpOutput) ToPeeringGcpOutputWithContext(ctx context.Context) PeeringGcpOutput {
	return o
}

func (o PeeringGcpOutput) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return o.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (o PeeringGcpOutput) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringGcp) *PeeringGcp {
		return &v
	}).(PeeringGcpPtrOutput)
}

// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o PeeringGcpOutput) ImportCustomRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringGcp) *bool { return v.ImportCustomRoutes }).(pulumi.BoolPtrOutput)
}

// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PeeringGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringGcp) string { return v.Project }).(pulumi.StringOutput)
}

// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o PeeringGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type PeeringGcpPtrOutput struct{ *pulumi.OutputState }

func (PeeringGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringGcp)(nil)).Elem()
}

func (o PeeringGcpPtrOutput) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return o
}

func (o PeeringGcpPtrOutput) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return o
}

func (o PeeringGcpPtrOutput) Elem() PeeringGcpOutput {
	return o.ApplyT(func(v *PeeringGcp) PeeringGcp {
		if v != nil {
			return *v
		}
		var ret PeeringGcp
		return ret
	}).(PeeringGcpOutput)
}

// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o PeeringGcpPtrOutput) ImportCustomRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *bool {
		if v == nil {
			return nil
		}
		return v.ImportCustomRoutes
	}).(pulumi.BoolPtrOutput)
}

// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PeeringGcpPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o PeeringGcpPtrOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *string {
		if v == nil {
			return nil
		}
		return &v.VpcNetwork
	}).(pulumi.StringPtrOutput)
}

type PeeringNetwork struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PeeringNetworkInput is an input type that accepts PeeringNetworkArgs and PeeringNetworkOutput values.
// You can construct a concrete instance of `PeeringNetworkInput` via:
//
//	PeeringNetworkArgs{...}
type PeeringNetworkInput interface {
	pulumi.Input

	ToPeeringNetworkOutput() PeeringNetworkOutput
	ToPeeringNetworkOutputWithContext(context.Context) PeeringNetworkOutput
}

type PeeringNetworkArgs struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringNetwork)(nil)).Elem()
}

func (i PeeringNetworkArgs) ToPeeringNetworkOutput() PeeringNetworkOutput {
	return i.ToPeeringNetworkOutputWithContext(context.Background())
}

func (i PeeringNetworkArgs) ToPeeringNetworkOutputWithContext(ctx context.Context) PeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkOutput)
}

func (i PeeringNetworkArgs) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return i.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i PeeringNetworkArgs) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkOutput).ToPeeringNetworkPtrOutputWithContext(ctx)
}

// PeeringNetworkPtrInput is an input type that accepts PeeringNetworkArgs, PeeringNetworkPtr and PeeringNetworkPtrOutput values.
// You can construct a concrete instance of `PeeringNetworkPtrInput` via:
//
//	        PeeringNetworkArgs{...}
//
//	or:
//
//	        nil
type PeeringNetworkPtrInput interface {
	pulumi.Input

	ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput
	ToPeeringNetworkPtrOutputWithContext(context.Context) PeeringNetworkPtrOutput
}

type peeringNetworkPtrType PeeringNetworkArgs

func PeeringNetworkPtr(v *PeeringNetworkArgs) PeeringNetworkPtrInput {
	return (*peeringNetworkPtrType)(v)
}

func (*peeringNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringNetwork)(nil)).Elem()
}

func (i *peeringNetworkPtrType) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return i.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i *peeringNetworkPtrType) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkPtrOutput)
}

type PeeringNetworkOutput struct{ *pulumi.OutputState }

func (PeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringNetwork)(nil)).Elem()
}

func (o PeeringNetworkOutput) ToPeeringNetworkOutput() PeeringNetworkOutput {
	return o
}

func (o PeeringNetworkOutput) ToPeeringNetworkOutputWithContext(ctx context.Context) PeeringNetworkOutput {
	return o
}

func (o PeeringNetworkOutput) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return o.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (o PeeringNetworkOutput) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringNetwork) *PeeringNetwork {
		return &v
	}).(PeeringNetworkPtrOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type PeeringNetworkPtrOutput struct{ *pulumi.OutputState }

func (PeeringNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringNetwork)(nil)).Elem()
}

func (o PeeringNetworkPtrOutput) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return o
}

func (o PeeringNetworkPtrOutput) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return o
}

func (o PeeringNetworkPtrOutput) Elem() PeeringNetworkOutput {
	return o.ApplyT(func(v *PeeringNetwork) PeeringNetwork {
		if v != nil {
			return *v
		}
		var ret PeeringNetwork
		return ret
	}).(PeeringNetworkOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessAws struct {
	// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
}

// PrivateLinkAccessAwsInput is an input type that accepts PrivateLinkAccessAwsArgs and PrivateLinkAccessAwsOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAwsInput` via:
//
//	PrivateLinkAccessAwsArgs{...}
type PrivateLinkAccessAwsInput interface {
	pulumi.Input

	ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput
	ToPrivateLinkAccessAwsOutputWithContext(context.Context) PrivateLinkAccessAwsOutput
}

type PrivateLinkAccessAwsArgs struct {
	// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
}

func (PrivateLinkAccessAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAws)(nil)).Elem()
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput {
	return i.ToPrivateLinkAccessAwsOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsOutputWithContext(ctx context.Context) PrivateLinkAccessAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsOutput)
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return i.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsOutput).ToPrivateLinkAccessAwsPtrOutputWithContext(ctx)
}

// PrivateLinkAccessAwsPtrInput is an input type that accepts PrivateLinkAccessAwsArgs, PrivateLinkAccessAwsPtr and PrivateLinkAccessAwsPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAwsPtrInput` via:
//
//	        PrivateLinkAccessAwsArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessAwsPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput
	ToPrivateLinkAccessAwsPtrOutputWithContext(context.Context) PrivateLinkAccessAwsPtrOutput
}

type privateLinkAccessAwsPtrType PrivateLinkAccessAwsArgs

func PrivateLinkAccessAwsPtr(v *PrivateLinkAccessAwsArgs) PrivateLinkAccessAwsPtrInput {
	return (*privateLinkAccessAwsPtrType)(v)
}

func (*privateLinkAccessAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAws)(nil)).Elem()
}

func (i *privateLinkAccessAwsPtrType) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return i.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessAwsPtrType) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsPtrOutput)
}

type PrivateLinkAccessAwsOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAws)(nil)).Elem()
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput {
	return o
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsOutputWithContext(ctx context.Context) PrivateLinkAccessAwsOutput {
	return o
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return o.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessAws) *PrivateLinkAccessAws {
		return &v
	}).(PrivateLinkAccessAwsPtrOutput)
}

// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o PrivateLinkAccessAwsOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessAws) string { return v.Account }).(pulumi.StringOutput)
}

type PrivateLinkAccessAwsPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAws)(nil)).Elem()
}

func (o PrivateLinkAccessAwsPtrOutput) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return o
}

func (o PrivateLinkAccessAwsPtrOutput) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return o
}

func (o PrivateLinkAccessAwsPtrOutput) Elem() PrivateLinkAccessAwsOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAws) PrivateLinkAccessAws {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessAws
		return ret
	}).(PrivateLinkAccessAwsOutput)
}

// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o PrivateLinkAccessAwsPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAws) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessAzure struct {
	// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription string `pulumi:"subscription"`
}

// PrivateLinkAccessAzureInput is an input type that accepts PrivateLinkAccessAzureArgs and PrivateLinkAccessAzureOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAzureInput` via:
//
//	PrivateLinkAccessAzureArgs{...}
type PrivateLinkAccessAzureInput interface {
	pulumi.Input

	ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput
	ToPrivateLinkAccessAzureOutputWithContext(context.Context) PrivateLinkAccessAzureOutput
}

type PrivateLinkAccessAzureArgs struct {
	// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (PrivateLinkAccessAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAzure)(nil)).Elem()
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput {
	return i.ToPrivateLinkAccessAzureOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzureOutputWithContext(ctx context.Context) PrivateLinkAccessAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzureOutput)
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return i.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzureOutput).ToPrivateLinkAccessAzurePtrOutputWithContext(ctx)
}

// PrivateLinkAccessAzurePtrInput is an input type that accepts PrivateLinkAccessAzureArgs, PrivateLinkAccessAzurePtr and PrivateLinkAccessAzurePtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAzurePtrInput` via:
//
//	        PrivateLinkAccessAzureArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessAzurePtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput
	ToPrivateLinkAccessAzurePtrOutputWithContext(context.Context) PrivateLinkAccessAzurePtrOutput
}

type privateLinkAccessAzurePtrType PrivateLinkAccessAzureArgs

func PrivateLinkAccessAzurePtr(v *PrivateLinkAccessAzureArgs) PrivateLinkAccessAzurePtrInput {
	return (*privateLinkAccessAzurePtrType)(v)
}

func (*privateLinkAccessAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAzure)(nil)).Elem()
}

func (i *privateLinkAccessAzurePtrType) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return i.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessAzurePtrType) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzurePtrOutput)
}

type PrivateLinkAccessAzureOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAzure)(nil)).Elem()
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput {
	return o
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzureOutputWithContext(ctx context.Context) PrivateLinkAccessAzureOutput {
	return o
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return o.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessAzure) *PrivateLinkAccessAzure {
		return &v
	}).(PrivateLinkAccessAzurePtrOutput)
}

// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o PrivateLinkAccessAzureOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessAzure) string { return v.Subscription }).(pulumi.StringOutput)
}

type PrivateLinkAccessAzurePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAzure)(nil)).Elem()
}

func (o PrivateLinkAccessAzurePtrOutput) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return o
}

func (o PrivateLinkAccessAzurePtrOutput) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return o
}

func (o PrivateLinkAccessAzurePtrOutput) Elem() PrivateLinkAccessAzureOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAzure) PrivateLinkAccessAzure {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessAzure
		return ret
	}).(PrivateLinkAccessAzureOutput)
}

// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o PrivateLinkAccessAzurePtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Subscription
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessEnvironment struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PrivateLinkAccessEnvironmentInput is an input type that accepts PrivateLinkAccessEnvironmentArgs and PrivateLinkAccessEnvironmentOutput values.
// You can construct a concrete instance of `PrivateLinkAccessEnvironmentInput` via:
//
//	PrivateLinkAccessEnvironmentArgs{...}
type PrivateLinkAccessEnvironmentInput interface {
	pulumi.Input

	ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput
	ToPrivateLinkAccessEnvironmentOutputWithContext(context.Context) PrivateLinkAccessEnvironmentOutput
}

type PrivateLinkAccessEnvironmentArgs struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAccessEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput {
	return i.ToPrivateLinkAccessEnvironmentOutputWithContext(context.Background())
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentOutput)
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return i.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentOutput).ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx)
}

// PrivateLinkAccessEnvironmentPtrInput is an input type that accepts PrivateLinkAccessEnvironmentArgs, PrivateLinkAccessEnvironmentPtr and PrivateLinkAccessEnvironmentPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessEnvironmentPtrInput` via:
//
//	        PrivateLinkAccessEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessEnvironmentPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput
	ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Context) PrivateLinkAccessEnvironmentPtrOutput
}

type privateLinkAccessEnvironmentPtrType PrivateLinkAccessEnvironmentArgs

func PrivateLinkAccessEnvironmentPtr(v *PrivateLinkAccessEnvironmentArgs) PrivateLinkAccessEnvironmentPtrInput {
	return (*privateLinkAccessEnvironmentPtrType)(v)
}

func (*privateLinkAccessEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i *privateLinkAccessEnvironmentPtrType) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return i.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessEnvironmentPtrType) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentPtrOutput)
}

type PrivateLinkAccessEnvironmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return o.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessEnvironment) *PrivateLinkAccessEnvironment {
		return &v
	}).(PrivateLinkAccessEnvironmentPtrOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAccessEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o PrivateLinkAccessEnvironmentPtrOutput) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentPtrOutput) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentPtrOutput) Elem() PrivateLinkAccessEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAccessEnvironment) PrivateLinkAccessEnvironment {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessEnvironment
		return ret
	}).(PrivateLinkAccessEnvironmentOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessNetwork struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PrivateLinkAccessNetworkInput is an input type that accepts PrivateLinkAccessNetworkArgs and PrivateLinkAccessNetworkOutput values.
// You can construct a concrete instance of `PrivateLinkAccessNetworkInput` via:
//
//	PrivateLinkAccessNetworkArgs{...}
type PrivateLinkAccessNetworkInput interface {
	pulumi.Input

	ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput
	ToPrivateLinkAccessNetworkOutputWithContext(context.Context) PrivateLinkAccessNetworkOutput
}

type PrivateLinkAccessNetworkArgs struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAccessNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessNetwork)(nil)).Elem()
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput {
	return i.ToPrivateLinkAccessNetworkOutputWithContext(context.Background())
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkOutput)
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return i.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkOutput).ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx)
}

// PrivateLinkAccessNetworkPtrInput is an input type that accepts PrivateLinkAccessNetworkArgs, PrivateLinkAccessNetworkPtr and PrivateLinkAccessNetworkPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessNetworkPtrInput` via:
//
//	        PrivateLinkAccessNetworkArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessNetworkPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput
	ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Context) PrivateLinkAccessNetworkPtrOutput
}

type privateLinkAccessNetworkPtrType PrivateLinkAccessNetworkArgs

func PrivateLinkAccessNetworkPtr(v *PrivateLinkAccessNetworkArgs) PrivateLinkAccessNetworkPtrInput {
	return (*privateLinkAccessNetworkPtrType)(v)
}

func (*privateLinkAccessNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessNetwork)(nil)).Elem()
}

func (i *privateLinkAccessNetworkPtrType) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return i.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessNetworkPtrType) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkPtrOutput)
}

type PrivateLinkAccessNetworkOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessNetwork)(nil)).Elem()
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput {
	return o
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkOutput {
	return o
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return o.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessNetwork) *PrivateLinkAccessNetwork {
		return &v
	}).(PrivateLinkAccessNetworkPtrOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAccessNetworkPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessNetwork)(nil)).Elem()
}

func (o PrivateLinkAccessNetworkPtrOutput) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return o
}

func (o PrivateLinkAccessNetworkPtrOutput) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return o
}

func (o PrivateLinkAccessNetworkPtrOutput) Elem() PrivateLinkAccessNetworkOutput {
	return o.ApplyT(func(v *PrivateLinkAccessNetwork) PrivateLinkAccessNetwork {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessNetwork
		return ret
	}).(PrivateLinkAccessNetworkOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetKafkaClusterBasic struct {
}

// GetKafkaClusterBasicInput is an input type that accepts GetKafkaClusterBasicArgs and GetKafkaClusterBasicOutput values.
// You can construct a concrete instance of `GetKafkaClusterBasicInput` via:
//
//	GetKafkaClusterBasicArgs{...}
type GetKafkaClusterBasicInput interface {
	pulumi.Input

	ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput
	ToGetKafkaClusterBasicOutputWithContext(context.Context) GetKafkaClusterBasicOutput
}

type GetKafkaClusterBasicArgs struct {
}

func (GetKafkaClusterBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterBasic)(nil)).Elem()
}

func (i GetKafkaClusterBasicArgs) ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput {
	return i.ToGetKafkaClusterBasicOutputWithContext(context.Background())
}

func (i GetKafkaClusterBasicArgs) ToGetKafkaClusterBasicOutputWithContext(ctx context.Context) GetKafkaClusterBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterBasicOutput)
}

// GetKafkaClusterBasicArrayInput is an input type that accepts GetKafkaClusterBasicArray and GetKafkaClusterBasicArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterBasicArrayInput` via:
//
//	GetKafkaClusterBasicArray{ GetKafkaClusterBasicArgs{...} }
type GetKafkaClusterBasicArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput
	ToGetKafkaClusterBasicArrayOutputWithContext(context.Context) GetKafkaClusterBasicArrayOutput
}

type GetKafkaClusterBasicArray []GetKafkaClusterBasicInput

func (GetKafkaClusterBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterBasic)(nil)).Elem()
}

func (i GetKafkaClusterBasicArray) ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput {
	return i.ToGetKafkaClusterBasicArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterBasicArray) ToGetKafkaClusterBasicArrayOutputWithContext(ctx context.Context) GetKafkaClusterBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterBasicArrayOutput)
}

type GetKafkaClusterBasicOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterBasic)(nil)).Elem()
}

func (o GetKafkaClusterBasicOutput) ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput {
	return o
}

func (o GetKafkaClusterBasicOutput) ToGetKafkaClusterBasicOutputWithContext(ctx context.Context) GetKafkaClusterBasicOutput {
	return o
}

type GetKafkaClusterBasicArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterBasic)(nil)).Elem()
}

func (o GetKafkaClusterBasicArrayOutput) ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput {
	return o
}

func (o GetKafkaClusterBasicArrayOutput) ToGetKafkaClusterBasicArrayOutputWithContext(ctx context.Context) GetKafkaClusterBasicArrayOutput {
	return o
}

func (o GetKafkaClusterBasicArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterBasic {
		return vs[0].([]GetKafkaClusterBasic)[vs[1].(int)]
	}).(GetKafkaClusterBasicOutput)
}

type GetKafkaClusterDedicated struct {
	// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku int `pulumi:"cku"`
	// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey string `pulumi:"encryptionKey"`
}

// GetKafkaClusterDedicatedInput is an input type that accepts GetKafkaClusterDedicatedArgs and GetKafkaClusterDedicatedOutput values.
// You can construct a concrete instance of `GetKafkaClusterDedicatedInput` via:
//
//	GetKafkaClusterDedicatedArgs{...}
type GetKafkaClusterDedicatedInput interface {
	pulumi.Input

	ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput
	ToGetKafkaClusterDedicatedOutputWithContext(context.Context) GetKafkaClusterDedicatedOutput
}

type GetKafkaClusterDedicatedArgs struct {
	// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
	Cku pulumi.IntInput `pulumi:"cku"`
	// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
	EncryptionKey pulumi.StringInput `pulumi:"encryptionKey"`
}

func (GetKafkaClusterDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterDedicated)(nil)).Elem()
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput {
	return i.ToGetKafkaClusterDedicatedOutputWithContext(context.Background())
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedOutput)
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return i.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedOutput).ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx)
}

// GetKafkaClusterDedicatedPtrInput is an input type that accepts GetKafkaClusterDedicatedArgs, GetKafkaClusterDedicatedPtr and GetKafkaClusterDedicatedPtrOutput values.
// You can construct a concrete instance of `GetKafkaClusterDedicatedPtrInput` via:
//
//	        GetKafkaClusterDedicatedArgs{...}
//
//	or:
//
//	        nil
type GetKafkaClusterDedicatedPtrInput interface {
	pulumi.Input

	ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput
	ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Context) GetKafkaClusterDedicatedPtrOutput
}

type getKafkaClusterDedicatedPtrType GetKafkaClusterDedicatedArgs

func GetKafkaClusterDedicatedPtr(v *GetKafkaClusterDedicatedArgs) GetKafkaClusterDedicatedPtrInput {
	return (*getKafkaClusterDedicatedPtrType)(v)
}

func (*getKafkaClusterDedicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaClusterDedicated)(nil)).Elem()
}

func (i *getKafkaClusterDedicatedPtrType) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return i.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i *getKafkaClusterDedicatedPtrType) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedPtrOutput)
}

type GetKafkaClusterDedicatedOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterDedicated)(nil)).Elem()
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput {
	return o
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedOutput {
	return o
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return o.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaClusterDedicated) *GetKafkaClusterDedicated {
		return &v
	}).(GetKafkaClusterDedicatedPtrOutput)
}

// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o GetKafkaClusterDedicatedOutput) Cku() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) int { return v.Cku }).(pulumi.IntOutput)
}

// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o GetKafkaClusterDedicatedOutput) EncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) string { return v.EncryptionKey }).(pulumi.StringOutput)
}

type GetKafkaClusterDedicatedPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterDedicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaClusterDedicated)(nil)).Elem()
}

func (o GetKafkaClusterDedicatedPtrOutput) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return o
}

func (o GetKafkaClusterDedicatedPtrOutput) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return o
}

func (o GetKafkaClusterDedicatedPtrOutput) Elem() GetKafkaClusterDedicatedOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) GetKafkaClusterDedicated {
		if v != nil {
			return *v
		}
		var ret GetKafkaClusterDedicated
		return ret
	}).(GetKafkaClusterDedicatedOutput)
}

// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have more than `2` CKUs.
func (o GetKafkaClusterDedicatedPtrOutput) Cku() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) *int {
		if v == nil {
			return nil
		}
		return &v.Cku
	}).(pulumi.IntPtrOutput)
}

// (Optional String) The ID of the encryption key that is used to encrypt the data in the Kafka cluster, for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab` (key Amazon Resource Name) for AWS or `projects/my-test-project/locations/global/keyRings/test-byok/cryptoKeys/test` for GCP. Append required permissions to the key policy before creating a Kafka cluster, see [Encrypt Confluent Cloud Clusters using Self-Managed Keys](https://docs.confluent.io/cloud/current/clusters/byok/index.html) for more details. At the moment, self-managed encryption keys are only available for the Dedicated clusters on AWS or GCP.
func (o GetKafkaClusterDedicatedPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

type GetKafkaClusterEnvironment struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKafkaClusterEnvironmentInput is an input type that accepts GetKafkaClusterEnvironmentArgs and GetKafkaClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetKafkaClusterEnvironmentInput` via:
//
//	GetKafkaClusterEnvironmentArgs{...}
type GetKafkaClusterEnvironmentInput interface {
	pulumi.Input

	ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput
	ToGetKafkaClusterEnvironmentOutputWithContext(context.Context) GetKafkaClusterEnvironmentOutput
}

type GetKafkaClusterEnvironmentArgs struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnvironment)(nil)).Elem()
}

func (i GetKafkaClusterEnvironmentArgs) ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput {
	return i.ToGetKafkaClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetKafkaClusterEnvironmentArgs) ToGetKafkaClusterEnvironmentOutputWithContext(ctx context.Context) GetKafkaClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterEnvironmentOutput)
}

type GetKafkaClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnvironment)(nil)).Elem()
}

func (o GetKafkaClusterEnvironmentOutput) ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput {
	return o
}

func (o GetKafkaClusterEnvironmentOutput) ToGetKafkaClusterEnvironmentOutputWithContext(ctx context.Context) GetKafkaClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
func (o GetKafkaClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterNetwork struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetKafkaClusterNetworkInput is an input type that accepts GetKafkaClusterNetworkArgs and GetKafkaClusterNetworkOutput values.
// You can construct a concrete instance of `GetKafkaClusterNetworkInput` via:
//
//	GetKafkaClusterNetworkArgs{...}
type GetKafkaClusterNetworkInput interface {
	pulumi.Input

	ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput
	ToGetKafkaClusterNetworkOutputWithContext(context.Context) GetKafkaClusterNetworkOutput
}

type GetKafkaClusterNetworkArgs struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterNetwork)(nil)).Elem()
}

func (i GetKafkaClusterNetworkArgs) ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput {
	return i.ToGetKafkaClusterNetworkOutputWithContext(context.Background())
}

func (i GetKafkaClusterNetworkArgs) ToGetKafkaClusterNetworkOutputWithContext(ctx context.Context) GetKafkaClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterNetworkOutput)
}

// GetKafkaClusterNetworkArrayInput is an input type that accepts GetKafkaClusterNetworkArray and GetKafkaClusterNetworkArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterNetworkArrayInput` via:
//
//	GetKafkaClusterNetworkArray{ GetKafkaClusterNetworkArgs{...} }
type GetKafkaClusterNetworkArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput
	ToGetKafkaClusterNetworkArrayOutputWithContext(context.Context) GetKafkaClusterNetworkArrayOutput
}

type GetKafkaClusterNetworkArray []GetKafkaClusterNetworkInput

func (GetKafkaClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterNetwork)(nil)).Elem()
}

func (i GetKafkaClusterNetworkArray) ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput {
	return i.ToGetKafkaClusterNetworkArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterNetworkArray) ToGetKafkaClusterNetworkArrayOutputWithContext(ctx context.Context) GetKafkaClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterNetworkArrayOutput)
}

type GetKafkaClusterNetworkOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterNetwork)(nil)).Elem()
}

func (o GetKafkaClusterNetworkOutput) ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput {
	return o
}

func (o GetKafkaClusterNetworkOutput) ToGetKafkaClusterNetworkOutputWithContext(ctx context.Context) GetKafkaClusterNetworkOutput {
	return o
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
func (o GetKafkaClusterNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterNetwork)(nil)).Elem()
}

func (o GetKafkaClusterNetworkArrayOutput) ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput {
	return o
}

func (o GetKafkaClusterNetworkArrayOutput) ToGetKafkaClusterNetworkArrayOutputWithContext(ctx context.Context) GetKafkaClusterNetworkArrayOutput {
	return o
}

func (o GetKafkaClusterNetworkArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterNetwork {
		return vs[0].([]GetKafkaClusterNetwork)[vs[1].(int)]
	}).(GetKafkaClusterNetworkOutput)
}

type GetKafkaClusterStandard struct {
}

// GetKafkaClusterStandardInput is an input type that accepts GetKafkaClusterStandardArgs and GetKafkaClusterStandardOutput values.
// You can construct a concrete instance of `GetKafkaClusterStandardInput` via:
//
//	GetKafkaClusterStandardArgs{...}
type GetKafkaClusterStandardInput interface {
	pulumi.Input

	ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput
	ToGetKafkaClusterStandardOutputWithContext(context.Context) GetKafkaClusterStandardOutput
}

type GetKafkaClusterStandardArgs struct {
}

func (GetKafkaClusterStandardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterStandard)(nil)).Elem()
}

func (i GetKafkaClusterStandardArgs) ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput {
	return i.ToGetKafkaClusterStandardOutputWithContext(context.Background())
}

func (i GetKafkaClusterStandardArgs) ToGetKafkaClusterStandardOutputWithContext(ctx context.Context) GetKafkaClusterStandardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterStandardOutput)
}

// GetKafkaClusterStandardArrayInput is an input type that accepts GetKafkaClusterStandardArray and GetKafkaClusterStandardArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterStandardArrayInput` via:
//
//	GetKafkaClusterStandardArray{ GetKafkaClusterStandardArgs{...} }
type GetKafkaClusterStandardArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput
	ToGetKafkaClusterStandardArrayOutputWithContext(context.Context) GetKafkaClusterStandardArrayOutput
}

type GetKafkaClusterStandardArray []GetKafkaClusterStandardInput

func (GetKafkaClusterStandardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterStandard)(nil)).Elem()
}

func (i GetKafkaClusterStandardArray) ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput {
	return i.ToGetKafkaClusterStandardArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterStandardArray) ToGetKafkaClusterStandardArrayOutputWithContext(ctx context.Context) GetKafkaClusterStandardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterStandardArrayOutput)
}

type GetKafkaClusterStandardOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterStandard)(nil)).Elem()
}

func (o GetKafkaClusterStandardOutput) ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput {
	return o
}

func (o GetKafkaClusterStandardOutput) ToGetKafkaClusterStandardOutputWithContext(ctx context.Context) GetKafkaClusterStandardOutput {
	return o
}

type GetKafkaClusterStandardArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterStandardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterStandard)(nil)).Elem()
}

func (o GetKafkaClusterStandardArrayOutput) ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput {
	return o
}

func (o GetKafkaClusterStandardArrayOutput) ToGetKafkaClusterStandardArrayOutputWithContext(ctx context.Context) GetKafkaClusterStandardArrayOutput {
	return o
}

func (o GetKafkaClusterStandardArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterStandardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterStandard {
		return vs[0].([]GetKafkaClusterStandard)[vs[1].(int)]
	}).(GetKafkaClusterStandardOutput)
}

type GetKafkaTopicCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// GetKafkaTopicCredentialsInput is an input type that accepts GetKafkaTopicCredentialsArgs and GetKafkaTopicCredentialsOutput values.
// You can construct a concrete instance of `GetKafkaTopicCredentialsInput` via:
//
//	GetKafkaTopicCredentialsArgs{...}
type GetKafkaTopicCredentialsInput interface {
	pulumi.Input

	ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput
	ToGetKafkaTopicCredentialsOutputWithContext(context.Context) GetKafkaTopicCredentialsOutput
}

type GetKafkaTopicCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetKafkaTopicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicCredentials)(nil)).Elem()
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput {
	return i.ToGetKafkaTopicCredentialsOutputWithContext(context.Background())
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsOutput)
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return i.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsOutput).ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx)
}

// GetKafkaTopicCredentialsPtrInput is an input type that accepts GetKafkaTopicCredentialsArgs, GetKafkaTopicCredentialsPtr and GetKafkaTopicCredentialsPtrOutput values.
// You can construct a concrete instance of `GetKafkaTopicCredentialsPtrInput` via:
//
//	        GetKafkaTopicCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetKafkaTopicCredentialsPtrInput interface {
	pulumi.Input

	ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput
	ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Context) GetKafkaTopicCredentialsPtrOutput
}

type getKafkaTopicCredentialsPtrType GetKafkaTopicCredentialsArgs

func GetKafkaTopicCredentialsPtr(v *GetKafkaTopicCredentialsArgs) GetKafkaTopicCredentialsPtrInput {
	return (*getKafkaTopicCredentialsPtrType)(v)
}

func (*getKafkaTopicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicCredentials)(nil)).Elem()
}

func (i *getKafkaTopicCredentialsPtrType) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return i.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i *getKafkaTopicCredentialsPtrType) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsPtrOutput)
}

type GetKafkaTopicCredentialsOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicCredentials)(nil)).Elem()
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput {
	return o
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsOutput {
	return o
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return o.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaTopicCredentials) *GetKafkaTopicCredentials {
		return &v
	}).(GetKafkaTopicCredentialsPtrOutput)
}

// The Kafka API Key.
func (o GetKafkaTopicCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o GetKafkaTopicCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetKafkaTopicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicCredentials)(nil)).Elem()
}

func (o GetKafkaTopicCredentialsPtrOutput) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return o
}

func (o GetKafkaTopicCredentialsPtrOutput) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return o
}

func (o GetKafkaTopicCredentialsPtrOutput) Elem() GetKafkaTopicCredentialsOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) GetKafkaTopicCredentials {
		if v != nil {
			return *v
		}
		var ret GetKafkaTopicCredentials
		return ret
	}).(GetKafkaTopicCredentialsOutput)
}

// The Kafka API Key.
func (o GetKafkaTopicCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o GetKafkaTopicCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetKafkaTopicKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// GetKafkaTopicKafkaClusterInput is an input type that accepts GetKafkaTopicKafkaClusterArgs and GetKafkaTopicKafkaClusterOutput values.
// You can construct a concrete instance of `GetKafkaTopicKafkaClusterInput` via:
//
//	GetKafkaTopicKafkaClusterArgs{...}
type GetKafkaTopicKafkaClusterInput interface {
	pulumi.Input

	ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput
	ToGetKafkaTopicKafkaClusterOutputWithContext(context.Context) GetKafkaTopicKafkaClusterOutput
}

type GetKafkaTopicKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput {
	return i.ToGetKafkaTopicKafkaClusterOutputWithContext(context.Background())
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterOutput)
}

type GetKafkaTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterOutput {
	return o
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkAw struct {
	// (Optional String) The AWS VPC endpoint service for the network (used for Private Link) if available.
	PrivateLinkEndpointService string `pulumi:"privateLinkEndpointService"`
	// (Required String) The AWS VPC ID for the network.
	Vpc string `pulumi:"vpc"`
}

// GetNetworkAwInput is an input type that accepts GetNetworkAwArgs and GetNetworkAwOutput values.
// You can construct a concrete instance of `GetNetworkAwInput` via:
//
//	GetNetworkAwArgs{...}
type GetNetworkAwInput interface {
	pulumi.Input

	ToGetNetworkAwOutput() GetNetworkAwOutput
	ToGetNetworkAwOutputWithContext(context.Context) GetNetworkAwOutput
}

type GetNetworkAwArgs struct {
	// (Optional String) The AWS VPC endpoint service for the network (used for Private Link) if available.
	PrivateLinkEndpointService pulumi.StringInput `pulumi:"privateLinkEndpointService"`
	// (Required String) The AWS VPC ID for the network.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetNetworkAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAw)(nil)).Elem()
}

func (i GetNetworkAwArgs) ToGetNetworkAwOutput() GetNetworkAwOutput {
	return i.ToGetNetworkAwOutputWithContext(context.Background())
}

func (i GetNetworkAwArgs) ToGetNetworkAwOutputWithContext(ctx context.Context) GetNetworkAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAwOutput)
}

// GetNetworkAwArrayInput is an input type that accepts GetNetworkAwArray and GetNetworkAwArrayOutput values.
// You can construct a concrete instance of `GetNetworkAwArrayInput` via:
//
//	GetNetworkAwArray{ GetNetworkAwArgs{...} }
type GetNetworkAwArrayInput interface {
	pulumi.Input

	ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput
	ToGetNetworkAwArrayOutputWithContext(context.Context) GetNetworkAwArrayOutput
}

type GetNetworkAwArray []GetNetworkAwInput

func (GetNetworkAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAw)(nil)).Elem()
}

func (i GetNetworkAwArray) ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput {
	return i.ToGetNetworkAwArrayOutputWithContext(context.Background())
}

func (i GetNetworkAwArray) ToGetNetworkAwArrayOutputWithContext(ctx context.Context) GetNetworkAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAwArrayOutput)
}

type GetNetworkAwOutput struct{ *pulumi.OutputState }

func (GetNetworkAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAw)(nil)).Elem()
}

func (o GetNetworkAwOutput) ToGetNetworkAwOutput() GetNetworkAwOutput {
	return o
}

func (o GetNetworkAwOutput) ToGetNetworkAwOutputWithContext(ctx context.Context) GetNetworkAwOutput {
	return o
}

// (Optional String) The AWS VPC endpoint service for the network (used for Private Link) if available.
func (o GetNetworkAwOutput) PrivateLinkEndpointService() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.PrivateLinkEndpointService }).(pulumi.StringOutput)
}

// (Required String) The AWS VPC ID for the network.
func (o GetNetworkAwOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetNetworkAwArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAw)(nil)).Elem()
}

func (o GetNetworkAwArrayOutput) ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput {
	return o
}

func (o GetNetworkAwArrayOutput) ToGetNetworkAwArrayOutputWithContext(ctx context.Context) GetNetworkAwArrayOutput {
	return o
}

func (o GetNetworkAwArrayOutput) Index(i pulumi.IntInput) GetNetworkAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAw {
		return vs[0].([]GetNetworkAw)[vs[1].(int)]
	}).(GetNetworkAwOutput)
}

type GetNetworkAzure struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases map[string]string `pulumi:"privateLinkServiceAliases"`
}

// GetNetworkAzureInput is an input type that accepts GetNetworkAzureArgs and GetNetworkAzureOutput values.
// You can construct a concrete instance of `GetNetworkAzureInput` via:
//
//	GetNetworkAzureArgs{...}
type GetNetworkAzureInput interface {
	pulumi.Input

	ToGetNetworkAzureOutput() GetNetworkAzureOutput
	ToGetNetworkAzureOutputWithContext(context.Context) GetNetworkAzureOutput
}

type GetNetworkAzureArgs struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases pulumi.StringMapInput `pulumi:"privateLinkServiceAliases"`
}

func (GetNetworkAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAzure)(nil)).Elem()
}

func (i GetNetworkAzureArgs) ToGetNetworkAzureOutput() GetNetworkAzureOutput {
	return i.ToGetNetworkAzureOutputWithContext(context.Background())
}

func (i GetNetworkAzureArgs) ToGetNetworkAzureOutputWithContext(ctx context.Context) GetNetworkAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAzureOutput)
}

// GetNetworkAzureArrayInput is an input type that accepts GetNetworkAzureArray and GetNetworkAzureArrayOutput values.
// You can construct a concrete instance of `GetNetworkAzureArrayInput` via:
//
//	GetNetworkAzureArray{ GetNetworkAzureArgs{...} }
type GetNetworkAzureArrayInput interface {
	pulumi.Input

	ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput
	ToGetNetworkAzureArrayOutputWithContext(context.Context) GetNetworkAzureArrayOutput
}

type GetNetworkAzureArray []GetNetworkAzureInput

func (GetNetworkAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAzure)(nil)).Elem()
}

func (i GetNetworkAzureArray) ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput {
	return i.ToGetNetworkAzureArrayOutputWithContext(context.Background())
}

func (i GetNetworkAzureArray) ToGetNetworkAzureArrayOutputWithContext(ctx context.Context) GetNetworkAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAzureArrayOutput)
}

type GetNetworkAzureOutput struct{ *pulumi.OutputState }

func (GetNetworkAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAzure)(nil)).Elem()
}

func (o GetNetworkAzureOutput) ToGetNetworkAzureOutput() GetNetworkAzureOutput {
	return o
}

func (o GetNetworkAzureOutput) ToGetNetworkAzureOutputWithContext(ctx context.Context) GetNetworkAzureOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
func (o GetNetworkAzureOutput) PrivateLinkServiceAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkAzure) map[string]string { return v.PrivateLinkServiceAliases }).(pulumi.StringMapOutput)
}

type GetNetworkAzureArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAzure)(nil)).Elem()
}

func (o GetNetworkAzureArrayOutput) ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput {
	return o
}

func (o GetNetworkAzureArrayOutput) ToGetNetworkAzureArrayOutputWithContext(ctx context.Context) GetNetworkAzureArrayOutput {
	return o
}

func (o GetNetworkAzureArrayOutput) Index(i pulumi.IntInput) GetNetworkAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAzure {
		return vs[0].([]GetNetworkAzure)[vs[1].(int)]
	}).(GetNetworkAzureOutput)
}

type GetNetworkEnvironment struct {
	// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetNetworkEnvironmentInput is an input type that accepts GetNetworkEnvironmentArgs and GetNetworkEnvironmentOutput values.
// You can construct a concrete instance of `GetNetworkEnvironmentInput` via:
//
//	GetNetworkEnvironmentArgs{...}
type GetNetworkEnvironmentInput interface {
	pulumi.Input

	ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput
	ToGetNetworkEnvironmentOutputWithContext(context.Context) GetNetworkEnvironmentOutput
}

type GetNetworkEnvironmentArgs struct {
	// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkEnvironment)(nil)).Elem()
}

func (i GetNetworkEnvironmentArgs) ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput {
	return i.ToGetNetworkEnvironmentOutputWithContext(context.Background())
}

func (i GetNetworkEnvironmentArgs) ToGetNetworkEnvironmentOutputWithContext(ctx context.Context) GetNetworkEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkEnvironmentOutput)
}

type GetNetworkEnvironmentOutput struct{ *pulumi.OutputState }

func (GetNetworkEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkEnvironment)(nil)).Elem()
}

func (o GetNetworkEnvironmentOutput) ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput {
	return o
}

func (o GetNetworkEnvironmentOutput) ToGetNetworkEnvironmentOutputWithContext(ctx context.Context) GetNetworkEnvironmentOutput {
	return o
}

// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
func (o GetNetworkEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkGcp struct {
	// (Required String) The GCP project.
	Project string `pulumi:"project"`
	// (Required String) The GCP VPC network name.
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// GetNetworkGcpInput is an input type that accepts GetNetworkGcpArgs and GetNetworkGcpOutput values.
// You can construct a concrete instance of `GetNetworkGcpInput` via:
//
//	GetNetworkGcpArgs{...}
type GetNetworkGcpInput interface {
	pulumi.Input

	ToGetNetworkGcpOutput() GetNetworkGcpOutput
	ToGetNetworkGcpOutputWithContext(context.Context) GetNetworkGcpOutput
}

type GetNetworkGcpArgs struct {
	// (Required String) The GCP project.
	Project pulumi.StringInput `pulumi:"project"`
	// (Required String) The GCP VPC network name.
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (GetNetworkGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGcp)(nil)).Elem()
}

func (i GetNetworkGcpArgs) ToGetNetworkGcpOutput() GetNetworkGcpOutput {
	return i.ToGetNetworkGcpOutputWithContext(context.Background())
}

func (i GetNetworkGcpArgs) ToGetNetworkGcpOutputWithContext(ctx context.Context) GetNetworkGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGcpOutput)
}

// GetNetworkGcpArrayInput is an input type that accepts GetNetworkGcpArray and GetNetworkGcpArrayOutput values.
// You can construct a concrete instance of `GetNetworkGcpArrayInput` via:
//
//	GetNetworkGcpArray{ GetNetworkGcpArgs{...} }
type GetNetworkGcpArrayInput interface {
	pulumi.Input

	ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput
	ToGetNetworkGcpArrayOutputWithContext(context.Context) GetNetworkGcpArrayOutput
}

type GetNetworkGcpArray []GetNetworkGcpInput

func (GetNetworkGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGcp)(nil)).Elem()
}

func (i GetNetworkGcpArray) ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput {
	return i.ToGetNetworkGcpArrayOutputWithContext(context.Background())
}

func (i GetNetworkGcpArray) ToGetNetworkGcpArrayOutputWithContext(ctx context.Context) GetNetworkGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGcpArrayOutput)
}

type GetNetworkGcpOutput struct{ *pulumi.OutputState }

func (GetNetworkGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGcp)(nil)).Elem()
}

func (o GetNetworkGcpOutput) ToGetNetworkGcpOutput() GetNetworkGcpOutput {
	return o
}

func (o GetNetworkGcpOutput) ToGetNetworkGcpOutputWithContext(ctx context.Context) GetNetworkGcpOutput {
	return o
}

// (Required String) The GCP project.
func (o GetNetworkGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGcp) string { return v.Project }).(pulumi.StringOutput)
}

// (Required String) The GCP VPC network name.
func (o GetNetworkGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type GetNetworkGcpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGcp)(nil)).Elem()
}

func (o GetNetworkGcpArrayOutput) ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput {
	return o
}

func (o GetNetworkGcpArrayOutput) ToGetNetworkGcpArrayOutputWithContext(ctx context.Context) GetNetworkGcpArrayOutput {
	return o
}

func (o GetNetworkGcpArrayOutput) Index(i pulumi.IntInput) GetNetworkGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkGcp {
		return vs[0].([]GetNetworkGcp)[vs[1].(int)]
	}).(GetNetworkGcpOutput)
}

type GetPeeringAw struct {
	// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes []string `pulumi:"routes"`
	// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc string `pulumi:"vpc"`
}

// GetPeeringAwInput is an input type that accepts GetPeeringAwArgs and GetPeeringAwOutput values.
// You can construct a concrete instance of `GetPeeringAwInput` via:
//
//	GetPeeringAwArgs{...}
type GetPeeringAwInput interface {
	pulumi.Input

	ToGetPeeringAwOutput() GetPeeringAwOutput
	ToGetPeeringAwOutputWithContext(context.Context) GetPeeringAwOutput
}

type GetPeeringAwArgs struct {
	// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetPeeringAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAw)(nil)).Elem()
}

func (i GetPeeringAwArgs) ToGetPeeringAwOutput() GetPeeringAwOutput {
	return i.ToGetPeeringAwOutputWithContext(context.Background())
}

func (i GetPeeringAwArgs) ToGetPeeringAwOutputWithContext(ctx context.Context) GetPeeringAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAwOutput)
}

// GetPeeringAwArrayInput is an input type that accepts GetPeeringAwArray and GetPeeringAwArrayOutput values.
// You can construct a concrete instance of `GetPeeringAwArrayInput` via:
//
//	GetPeeringAwArray{ GetPeeringAwArgs{...} }
type GetPeeringAwArrayInput interface {
	pulumi.Input

	ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput
	ToGetPeeringAwArrayOutputWithContext(context.Context) GetPeeringAwArrayOutput
}

type GetPeeringAwArray []GetPeeringAwInput

func (GetPeeringAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAw)(nil)).Elem()
}

func (i GetPeeringAwArray) ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput {
	return i.ToGetPeeringAwArrayOutputWithContext(context.Background())
}

func (i GetPeeringAwArray) ToGetPeeringAwArrayOutputWithContext(ctx context.Context) GetPeeringAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAwArrayOutput)
}

type GetPeeringAwOutput struct{ *pulumi.OutputState }

func (GetPeeringAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAw)(nil)).Elem()
}

func (o GetPeeringAwOutput) ToGetPeeringAwOutput() GetPeeringAwOutput {
	return o
}

func (o GetPeeringAwOutput) ToGetPeeringAwOutputWithContext(ctx context.Context) GetPeeringAwOutput {
	return o
}

// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o GetPeeringAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.Account }).(pulumi.StringOutput)
}

// (Required String) The region of the Azure peer VNet.
func (o GetPeeringAwOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o GetPeeringAwOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringAw) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o GetPeeringAwOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetPeeringAwArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAw)(nil)).Elem()
}

func (o GetPeeringAwArrayOutput) ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput {
	return o
}

func (o GetPeeringAwArrayOutput) ToGetPeeringAwArrayOutputWithContext(ctx context.Context) GetPeeringAwArrayOutput {
	return o
}

func (o GetPeeringAwArrayOutput) Index(i pulumi.IntInput) GetPeeringAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAw {
		return vs[0].([]GetPeeringAw)[vs[1].(int)]
	}).(GetPeeringAwOutput)
}

type GetPeeringAzure struct {
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant string `pulumi:"tenant"`
	// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet string `pulumi:"vnet"`
}

// GetPeeringAzureInput is an input type that accepts GetPeeringAzureArgs and GetPeeringAzureOutput values.
// You can construct a concrete instance of `GetPeeringAzureInput` via:
//
//	GetPeeringAzureArgs{...}
type GetPeeringAzureInput interface {
	pulumi.Input

	ToGetPeeringAzureOutput() GetPeeringAzureOutput
	ToGetPeeringAzureOutputWithContext(context.Context) GetPeeringAzureOutput
}

type GetPeeringAzureArgs struct {
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant pulumi.StringInput `pulumi:"tenant"`
	// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet pulumi.StringInput `pulumi:"vnet"`
}

func (GetPeeringAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAzure)(nil)).Elem()
}

func (i GetPeeringAzureArgs) ToGetPeeringAzureOutput() GetPeeringAzureOutput {
	return i.ToGetPeeringAzureOutputWithContext(context.Background())
}

func (i GetPeeringAzureArgs) ToGetPeeringAzureOutputWithContext(ctx context.Context) GetPeeringAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAzureOutput)
}

// GetPeeringAzureArrayInput is an input type that accepts GetPeeringAzureArray and GetPeeringAzureArrayOutput values.
// You can construct a concrete instance of `GetPeeringAzureArrayInput` via:
//
//	GetPeeringAzureArray{ GetPeeringAzureArgs{...} }
type GetPeeringAzureArrayInput interface {
	pulumi.Input

	ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput
	ToGetPeeringAzureArrayOutputWithContext(context.Context) GetPeeringAzureArrayOutput
}

type GetPeeringAzureArray []GetPeeringAzureInput

func (GetPeeringAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAzure)(nil)).Elem()
}

func (i GetPeeringAzureArray) ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput {
	return i.ToGetPeeringAzureArrayOutputWithContext(context.Background())
}

func (i GetPeeringAzureArray) ToGetPeeringAzureArrayOutputWithContext(ctx context.Context) GetPeeringAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAzureArrayOutput)
}

type GetPeeringAzureOutput struct{ *pulumi.OutputState }

func (GetPeeringAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAzure)(nil)).Elem()
}

func (o GetPeeringAzureOutput) ToGetPeeringAzureOutput() GetPeeringAzureOutput {
	return o
}

func (o GetPeeringAzureOutput) ToGetPeeringAzureOutputWithContext(ctx context.Context) GetPeeringAzureOutput {
	return o
}

// (Required String) The region of the Azure peer VNet.
func (o GetPeeringAzureOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o GetPeeringAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.Tenant }).(pulumi.StringOutput)
}

// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o GetPeeringAzureOutput) Vnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.Vnet }).(pulumi.StringOutput)
}

type GetPeeringAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAzure)(nil)).Elem()
}

func (o GetPeeringAzureArrayOutput) ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput {
	return o
}

func (o GetPeeringAzureArrayOutput) ToGetPeeringAzureArrayOutputWithContext(ctx context.Context) GetPeeringAzureArrayOutput {
	return o
}

func (o GetPeeringAzureArrayOutput) Index(i pulumi.IntInput) GetPeeringAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAzure {
		return vs[0].([]GetPeeringAzure)[vs[1].(int)]
	}).(GetPeeringAzureOutput)
}

type GetPeeringEnvironment struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPeeringEnvironmentInput is an input type that accepts GetPeeringEnvironmentArgs and GetPeeringEnvironmentOutput values.
// You can construct a concrete instance of `GetPeeringEnvironmentInput` via:
//
//	GetPeeringEnvironmentArgs{...}
type GetPeeringEnvironmentInput interface {
	pulumi.Input

	ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput
	ToGetPeeringEnvironmentOutputWithContext(context.Context) GetPeeringEnvironmentOutput
}

type GetPeeringEnvironmentArgs struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPeeringEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringEnvironment)(nil)).Elem()
}

func (i GetPeeringEnvironmentArgs) ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput {
	return i.ToGetPeeringEnvironmentOutputWithContext(context.Background())
}

func (i GetPeeringEnvironmentArgs) ToGetPeeringEnvironmentOutputWithContext(ctx context.Context) GetPeeringEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringEnvironmentOutput)
}

type GetPeeringEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPeeringEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringEnvironment)(nil)).Elem()
}

func (o GetPeeringEnvironmentOutput) ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput {
	return o
}

func (o GetPeeringEnvironmentOutput) ToGetPeeringEnvironmentOutputWithContext(ctx context.Context) GetPeeringEnvironmentOutput {
	return o
}

// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
func (o GetPeeringEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPeeringGcp struct {
	// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes bool `pulumi:"importCustomRoutes"`
	// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
	// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// GetPeeringGcpInput is an input type that accepts GetPeeringGcpArgs and GetPeeringGcpOutput values.
// You can construct a concrete instance of `GetPeeringGcpInput` via:
//
//	GetPeeringGcpArgs{...}
type GetPeeringGcpInput interface {
	pulumi.Input

	ToGetPeeringGcpOutput() GetPeeringGcpOutput
	ToGetPeeringGcpOutputWithContext(context.Context) GetPeeringGcpOutput
}

type GetPeeringGcpArgs struct {
	// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes pulumi.BoolInput `pulumi:"importCustomRoutes"`
	// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
	// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (GetPeeringGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringGcp)(nil)).Elem()
}

func (i GetPeeringGcpArgs) ToGetPeeringGcpOutput() GetPeeringGcpOutput {
	return i.ToGetPeeringGcpOutputWithContext(context.Background())
}

func (i GetPeeringGcpArgs) ToGetPeeringGcpOutputWithContext(ctx context.Context) GetPeeringGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringGcpOutput)
}

// GetPeeringGcpArrayInput is an input type that accepts GetPeeringGcpArray and GetPeeringGcpArrayOutput values.
// You can construct a concrete instance of `GetPeeringGcpArrayInput` via:
//
//	GetPeeringGcpArray{ GetPeeringGcpArgs{...} }
type GetPeeringGcpArrayInput interface {
	pulumi.Input

	ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput
	ToGetPeeringGcpArrayOutputWithContext(context.Context) GetPeeringGcpArrayOutput
}

type GetPeeringGcpArray []GetPeeringGcpInput

func (GetPeeringGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringGcp)(nil)).Elem()
}

func (i GetPeeringGcpArray) ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput {
	return i.ToGetPeeringGcpArrayOutputWithContext(context.Background())
}

func (i GetPeeringGcpArray) ToGetPeeringGcpArrayOutputWithContext(ctx context.Context) GetPeeringGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringGcpArrayOutput)
}

type GetPeeringGcpOutput struct{ *pulumi.OutputState }

func (GetPeeringGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringGcp)(nil)).Elem()
}

func (o GetPeeringGcpOutput) ToGetPeeringGcpOutput() GetPeeringGcpOutput {
	return o
}

func (o GetPeeringGcpOutput) ToGetPeeringGcpOutputWithContext(ctx context.Context) GetPeeringGcpOutput {
	return o
}

// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o GetPeeringGcpOutput) ImportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPeeringGcp) bool { return v.ImportCustomRoutes }).(pulumi.BoolOutput)
}

// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o GetPeeringGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringGcp) string { return v.Project }).(pulumi.StringOutput)
}

// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o GetPeeringGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type GetPeeringGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringGcp)(nil)).Elem()
}

func (o GetPeeringGcpArrayOutput) ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput {
	return o
}

func (o GetPeeringGcpArrayOutput) ToGetPeeringGcpArrayOutputWithContext(ctx context.Context) GetPeeringGcpArrayOutput {
	return o
}

func (o GetPeeringGcpArrayOutput) Index(i pulumi.IntInput) GetPeeringGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringGcp {
		return vs[0].([]GetPeeringGcp)[vs[1].(int)]
	}).(GetPeeringGcpOutput)
}

type GetPeeringNetwork struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPeeringNetworkInput is an input type that accepts GetPeeringNetworkArgs and GetPeeringNetworkOutput values.
// You can construct a concrete instance of `GetPeeringNetworkInput` via:
//
//	GetPeeringNetworkArgs{...}
type GetPeeringNetworkInput interface {
	pulumi.Input

	ToGetPeeringNetworkOutput() GetPeeringNetworkOutput
	ToGetPeeringNetworkOutputWithContext(context.Context) GetPeeringNetworkOutput
}

type GetPeeringNetworkArgs struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringNetwork)(nil)).Elem()
}

func (i GetPeeringNetworkArgs) ToGetPeeringNetworkOutput() GetPeeringNetworkOutput {
	return i.ToGetPeeringNetworkOutputWithContext(context.Background())
}

func (i GetPeeringNetworkArgs) ToGetPeeringNetworkOutputWithContext(ctx context.Context) GetPeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringNetworkOutput)
}

// GetPeeringNetworkArrayInput is an input type that accepts GetPeeringNetworkArray and GetPeeringNetworkArrayOutput values.
// You can construct a concrete instance of `GetPeeringNetworkArrayInput` via:
//
//	GetPeeringNetworkArray{ GetPeeringNetworkArgs{...} }
type GetPeeringNetworkArrayInput interface {
	pulumi.Input

	ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput
	ToGetPeeringNetworkArrayOutputWithContext(context.Context) GetPeeringNetworkArrayOutput
}

type GetPeeringNetworkArray []GetPeeringNetworkInput

func (GetPeeringNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringNetwork)(nil)).Elem()
}

func (i GetPeeringNetworkArray) ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput {
	return i.ToGetPeeringNetworkArrayOutputWithContext(context.Background())
}

func (i GetPeeringNetworkArray) ToGetPeeringNetworkArrayOutputWithContext(ctx context.Context) GetPeeringNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringNetworkArrayOutput)
}

type GetPeeringNetworkOutput struct{ *pulumi.OutputState }

func (GetPeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringNetwork)(nil)).Elem()
}

func (o GetPeeringNetworkOutput) ToGetPeeringNetworkOutput() GetPeeringNetworkOutput {
	return o
}

func (o GetPeeringNetworkOutput) ToGetPeeringNetworkOutputWithContext(ctx context.Context) GetPeeringNetworkOutput {
	return o
}

// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
func (o GetPeeringNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetPeeringNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringNetwork)(nil)).Elem()
}

func (o GetPeeringNetworkArrayOutput) ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput {
	return o
}

func (o GetPeeringNetworkArrayOutput) ToGetPeeringNetworkArrayOutputWithContext(ctx context.Context) GetPeeringNetworkArrayOutput {
	return o
}

func (o GetPeeringNetworkArrayOutput) Index(i pulumi.IntInput) GetPeeringNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringNetwork {
		return vs[0].([]GetPeeringNetwork)[vs[1].(int)]
	}).(GetPeeringNetworkOutput)
}

type GetPrivateLinkAccessAw struct {
	// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
}

// GetPrivateLinkAccessAwInput is an input type that accepts GetPrivateLinkAccessAwArgs and GetPrivateLinkAccessAwOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAwInput` via:
//
//	GetPrivateLinkAccessAwArgs{...}
type GetPrivateLinkAccessAwInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput
	ToGetPrivateLinkAccessAwOutputWithContext(context.Context) GetPrivateLinkAccessAwOutput
}

type GetPrivateLinkAccessAwArgs struct {
	// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
}

func (GetPrivateLinkAccessAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAw)(nil)).Elem()
}

func (i GetPrivateLinkAccessAwArgs) ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput {
	return i.ToGetPrivateLinkAccessAwOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAwArgs) ToGetPrivateLinkAccessAwOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAwOutput)
}

// GetPrivateLinkAccessAwArrayInput is an input type that accepts GetPrivateLinkAccessAwArray and GetPrivateLinkAccessAwArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAwArrayInput` via:
//
//	GetPrivateLinkAccessAwArray{ GetPrivateLinkAccessAwArgs{...} }
type GetPrivateLinkAccessAwArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput
	ToGetPrivateLinkAccessAwArrayOutputWithContext(context.Context) GetPrivateLinkAccessAwArrayOutput
}

type GetPrivateLinkAccessAwArray []GetPrivateLinkAccessAwInput

func (GetPrivateLinkAccessAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAw)(nil)).Elem()
}

func (i GetPrivateLinkAccessAwArray) ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput {
	return i.ToGetPrivateLinkAccessAwArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAwArray) ToGetPrivateLinkAccessAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAwArrayOutput)
}

type GetPrivateLinkAccessAwOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAw)(nil)).Elem()
}

func (o GetPrivateLinkAccessAwOutput) ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput {
	return o
}

func (o GetPrivateLinkAccessAwOutput) ToGetPrivateLinkAccessAwOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwOutput {
	return o
}

// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o GetPrivateLinkAccessAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessAw) string { return v.Account }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessAwArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAw)(nil)).Elem()
}

func (o GetPrivateLinkAccessAwArrayOutput) ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAwArrayOutput) ToGetPrivateLinkAccessAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAwArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessAw {
		return vs[0].([]GetPrivateLinkAccessAw)[vs[1].(int)]
	}).(GetPrivateLinkAccessAwOutput)
}

type GetPrivateLinkAccessAzure struct {
	// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription string `pulumi:"subscription"`
}

// GetPrivateLinkAccessAzureInput is an input type that accepts GetPrivateLinkAccessAzureArgs and GetPrivateLinkAccessAzureOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAzureInput` via:
//
//	GetPrivateLinkAccessAzureArgs{...}
type GetPrivateLinkAccessAzureInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput
	ToGetPrivateLinkAccessAzureOutputWithContext(context.Context) GetPrivateLinkAccessAzureOutput
}

type GetPrivateLinkAccessAzureArgs struct {
	// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (GetPrivateLinkAccessAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (i GetPrivateLinkAccessAzureArgs) ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput {
	return i.ToGetPrivateLinkAccessAzureOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAzureArgs) ToGetPrivateLinkAccessAzureOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAzureOutput)
}

// GetPrivateLinkAccessAzureArrayInput is an input type that accepts GetPrivateLinkAccessAzureArray and GetPrivateLinkAccessAzureArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAzureArrayInput` via:
//
//	GetPrivateLinkAccessAzureArray{ GetPrivateLinkAccessAzureArgs{...} }
type GetPrivateLinkAccessAzureArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput
	ToGetPrivateLinkAccessAzureArrayOutputWithContext(context.Context) GetPrivateLinkAccessAzureArrayOutput
}

type GetPrivateLinkAccessAzureArray []GetPrivateLinkAccessAzureInput

func (GetPrivateLinkAccessAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (i GetPrivateLinkAccessAzureArray) ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput {
	return i.ToGetPrivateLinkAccessAzureArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAzureArray) ToGetPrivateLinkAccessAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAzureArrayOutput)
}

type GetPrivateLinkAccessAzureOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (o GetPrivateLinkAccessAzureOutput) ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput {
	return o
}

func (o GetPrivateLinkAccessAzureOutput) ToGetPrivateLinkAccessAzureOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureOutput {
	return o
}

// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o GetPrivateLinkAccessAzureOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessAzure) string { return v.Subscription }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (o GetPrivateLinkAccessAzureArrayOutput) ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAzureArrayOutput) ToGetPrivateLinkAccessAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAzureArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessAzure {
		return vs[0].([]GetPrivateLinkAccessAzure)[vs[1].(int)]
	}).(GetPrivateLinkAccessAzureOutput)
}

type GetPrivateLinkAccessEnvironment struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAccessEnvironmentInput is an input type that accepts GetPrivateLinkAccessEnvironmentArgs and GetPrivateLinkAccessEnvironmentOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessEnvironmentInput` via:
//
//	GetPrivateLinkAccessEnvironmentArgs{...}
type GetPrivateLinkAccessEnvironmentInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput
	ToGetPrivateLinkAccessEnvironmentOutputWithContext(context.Context) GetPrivateLinkAccessEnvironmentOutput
}

type GetPrivateLinkAccessEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAccessEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i GetPrivateLinkAccessEnvironmentArgs) ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput {
	return i.ToGetPrivateLinkAccessEnvironmentOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessEnvironmentArgs) ToGetPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAccessEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessEnvironmentOutput)
}

type GetPrivateLinkAccessEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o GetPrivateLinkAccessEnvironmentOutput) ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput {
	return o
}

func (o GetPrivateLinkAccessEnvironmentOutput) ToGetPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAccessEnvironmentOutput {
	return o
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
func (o GetPrivateLinkAccessEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessNetwork struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAccessNetworkInput is an input type that accepts GetPrivateLinkAccessNetworkArgs and GetPrivateLinkAccessNetworkOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessNetworkInput` via:
//
//	GetPrivateLinkAccessNetworkArgs{...}
type GetPrivateLinkAccessNetworkInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput
	ToGetPrivateLinkAccessNetworkOutputWithContext(context.Context) GetPrivateLinkAccessNetworkOutput
}

type GetPrivateLinkAccessNetworkArgs struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAccessNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (i GetPrivateLinkAccessNetworkArgs) ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput {
	return i.ToGetPrivateLinkAccessNetworkOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessNetworkArgs) ToGetPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessNetworkOutput)
}

// GetPrivateLinkAccessNetworkArrayInput is an input type that accepts GetPrivateLinkAccessNetworkArray and GetPrivateLinkAccessNetworkArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessNetworkArrayInput` via:
//
//	GetPrivateLinkAccessNetworkArray{ GetPrivateLinkAccessNetworkArgs{...} }
type GetPrivateLinkAccessNetworkArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput
	ToGetPrivateLinkAccessNetworkArrayOutputWithContext(context.Context) GetPrivateLinkAccessNetworkArrayOutput
}

type GetPrivateLinkAccessNetworkArray []GetPrivateLinkAccessNetworkInput

func (GetPrivateLinkAccessNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (i GetPrivateLinkAccessNetworkArray) ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput {
	return i.ToGetPrivateLinkAccessNetworkArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessNetworkArray) ToGetPrivateLinkAccessNetworkArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessNetworkArrayOutput)
}

type GetPrivateLinkAccessNetworkOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (o GetPrivateLinkAccessNetworkOutput) ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkOutput) ToGetPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkOutput {
	return o
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
func (o GetPrivateLinkAccessNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (o GetPrivateLinkAccessNetworkArrayOutput) ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkArrayOutput) ToGetPrivateLinkAccessNetworkArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkArrayOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessNetwork {
		return vs[0].([]GetPrivateLinkAccessNetwork)[vs[1].(int)]
	}).(GetPrivateLinkAccessNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceInput)(nil)).Elem(), ApiKeyManagedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourcePtrInput)(nil)).Elem(), ApiKeyManagedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceEnvironmentInput)(nil)).Elem(), ApiKeyManagedResourceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceEnvironmentPtrInput)(nil)).Elem(), ApiKeyManagedResourceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyOwnerInput)(nil)).Elem(), ApiKeyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyOwnerPtrInput)(nil)).Elem(), ApiKeyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorEnvironmentInput)(nil)).Elem(), ConnectorEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorEnvironmentPtrInput)(nil)).Elem(), ConnectorEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterPtrInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclCredentialsInput)(nil)).Elem(), KafkaAclCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclCredentialsPtrInput)(nil)).Elem(), KafkaAclCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclKafkaClusterInput)(nil)).Elem(), KafkaAclKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclKafkaClusterPtrInput)(nil)).Elem(), KafkaAclKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterBasicInput)(nil)).Elem(), KafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterBasicArrayInput)(nil)).Elem(), KafkaClusterBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterDedicatedInput)(nil)).Elem(), KafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterDedicatedPtrInput)(nil)).Elem(), KafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnvironmentInput)(nil)).Elem(), KafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnvironmentPtrInput)(nil)).Elem(), KafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterNetworkInput)(nil)).Elem(), KafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterNetworkPtrInput)(nil)).Elem(), KafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterStandardInput)(nil)).Elem(), KafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterStandardArrayInput)(nil)).Elem(), KafkaClusterStandardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicCredentialsInput)(nil)).Elem(), KafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicCredentialsPtrInput)(nil)).Elem(), KafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicKafkaClusterInput)(nil)).Elem(), KafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicKafkaClusterPtrInput)(nil)).Elem(), KafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAwInput)(nil)).Elem(), NetworkAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAwArrayInput)(nil)).Elem(), NetworkAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAzureInput)(nil)).Elem(), NetworkAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAzureArrayInput)(nil)).Elem(), NetworkAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEnvironmentInput)(nil)).Elem(), NetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEnvironmentPtrInput)(nil)).Elem(), NetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGcpInput)(nil)).Elem(), NetworkGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGcpArrayInput)(nil)).Elem(), NetworkGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAwsInput)(nil)).Elem(), PeeringAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAwsPtrInput)(nil)).Elem(), PeeringAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAzureInput)(nil)).Elem(), PeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAzurePtrInput)(nil)).Elem(), PeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringEnvironmentInput)(nil)).Elem(), PeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringEnvironmentPtrInput)(nil)).Elem(), PeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringGcpInput)(nil)).Elem(), PeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringGcpPtrInput)(nil)).Elem(), PeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringNetworkInput)(nil)).Elem(), PeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringNetworkPtrInput)(nil)).Elem(), PeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAwsInput)(nil)).Elem(), PrivateLinkAccessAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAwsPtrInput)(nil)).Elem(), PrivateLinkAccessAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAzureInput)(nil)).Elem(), PrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAzurePtrInput)(nil)).Elem(), PrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessEnvironmentInput)(nil)).Elem(), PrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessEnvironmentPtrInput)(nil)).Elem(), PrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessNetworkInput)(nil)).Elem(), PrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessNetworkPtrInput)(nil)).Elem(), PrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterBasicInput)(nil)).Elem(), GetKafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterBasicArrayInput)(nil)).Elem(), GetKafkaClusterBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterDedicatedInput)(nil)).Elem(), GetKafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterDedicatedPtrInput)(nil)).Elem(), GetKafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterEnvironmentInput)(nil)).Elem(), GetKafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterNetworkInput)(nil)).Elem(), GetKafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterNetworkArrayInput)(nil)).Elem(), GetKafkaClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterStandardInput)(nil)).Elem(), GetKafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterStandardArrayInput)(nil)).Elem(), GetKafkaClusterStandardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicCredentialsInput)(nil)).Elem(), GetKafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicCredentialsPtrInput)(nil)).Elem(), GetKafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicKafkaClusterInput)(nil)).Elem(), GetKafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAwInput)(nil)).Elem(), GetNetworkAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAwArrayInput)(nil)).Elem(), GetNetworkAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAzureInput)(nil)).Elem(), GetNetworkAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAzureArrayInput)(nil)).Elem(), GetNetworkAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkEnvironmentInput)(nil)).Elem(), GetNetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGcpInput)(nil)).Elem(), GetNetworkGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGcpArrayInput)(nil)).Elem(), GetNetworkGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAwInput)(nil)).Elem(), GetPeeringAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAwArrayInput)(nil)).Elem(), GetPeeringAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAzureInput)(nil)).Elem(), GetPeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAzureArrayInput)(nil)).Elem(), GetPeeringAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringEnvironmentInput)(nil)).Elem(), GetPeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringGcpInput)(nil)).Elem(), GetPeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringGcpArrayInput)(nil)).Elem(), GetPeeringGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringNetworkInput)(nil)).Elem(), GetPeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringNetworkArrayInput)(nil)).Elem(), GetPeeringNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAwInput)(nil)).Elem(), GetPrivateLinkAccessAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAwArrayInput)(nil)).Elem(), GetPrivateLinkAccessAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAzureInput)(nil)).Elem(), GetPrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAzureArrayInput)(nil)).Elem(), GetPrivateLinkAccessAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessEnvironmentInput)(nil)).Elem(), GetPrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessNetworkInput)(nil)).Elem(), GetPrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessNetworkArrayInput)(nil)).Elem(), GetPrivateLinkAccessNetworkArray{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourcePtrOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceEnvironmentOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyOwnerOutput{})
	pulumi.RegisterOutputType(ApiKeyOwnerPtrOutput{})
	pulumi.RegisterOutputType(ConnectorEnvironmentOutput{})
	pulumi.RegisterOutputType(ConnectorEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaAclCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaAclCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaAclKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaAclKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterBasicOutput{})
	pulumi.RegisterOutputType(KafkaClusterBasicArrayOutput{})
	pulumi.RegisterOutputType(KafkaClusterDedicatedOutput{})
	pulumi.RegisterOutputType(KafkaClusterDedicatedPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterNetworkOutput{})
	pulumi.RegisterOutputType(KafkaClusterNetworkPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterStandardOutput{})
	pulumi.RegisterOutputType(KafkaClusterStandardArrayOutput{})
	pulumi.RegisterOutputType(KafkaTopicCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaTopicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(NetworkAwOutput{})
	pulumi.RegisterOutputType(NetworkAwArrayOutput{})
	pulumi.RegisterOutputType(NetworkAzureOutput{})
	pulumi.RegisterOutputType(NetworkAzureArrayOutput{})
	pulumi.RegisterOutputType(NetworkEnvironmentOutput{})
	pulumi.RegisterOutputType(NetworkEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(NetworkGcpOutput{})
	pulumi.RegisterOutputType(NetworkGcpArrayOutput{})
	pulumi.RegisterOutputType(PeeringAwsOutput{})
	pulumi.RegisterOutputType(PeeringAwsPtrOutput{})
	pulumi.RegisterOutputType(PeeringAzureOutput{})
	pulumi.RegisterOutputType(PeeringAzurePtrOutput{})
	pulumi.RegisterOutputType(PeeringEnvironmentOutput{})
	pulumi.RegisterOutputType(PeeringEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PeeringGcpOutput{})
	pulumi.RegisterOutputType(PeeringGcpPtrOutput{})
	pulumi.RegisterOutputType(PeeringNetworkOutput{})
	pulumi.RegisterOutputType(PeeringNetworkPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAwsOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAwsPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAzureOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAzurePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessEnvironmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessNetworkOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessNetworkPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterBasicOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterBasicArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterDedicatedOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterDedicatedPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterNetworkOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterStandardOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterStandardArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicCredentialsOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetNetworkAwOutput{})
	pulumi.RegisterOutputType(GetNetworkAwArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAzureOutput{})
	pulumi.RegisterOutputType(GetNetworkAzureArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkEnvironmentOutput{})
	pulumi.RegisterOutputType(GetNetworkGcpOutput{})
	pulumi.RegisterOutputType(GetNetworkGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAwOutput{})
	pulumi.RegisterOutputType(GetPeeringAwArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAzureOutput{})
	pulumi.RegisterOutputType(GetPeeringAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPeeringGcpOutput{})
	pulumi.RegisterOutputType(GetPeeringGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringNetworkOutput{})
	pulumi.RegisterOutputType(GetPeeringNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAwOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAwArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAzureOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessNetworkOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessNetworkArrayOutput{})
}
