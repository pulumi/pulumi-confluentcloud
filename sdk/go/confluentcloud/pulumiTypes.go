// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessPointAwsEgressPrivateLinkEndpoint struct {
	// Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
	EnableHighAvailability *bool `pulumi:"enableHighAvailability"`
	// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
	VpcEndpointDnsName *string `pulumi:"vpcEndpointDnsName"`
	// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName string `pulumi:"vpcEndpointServiceName"`
}

// AccessPointAwsEgressPrivateLinkEndpointInput is an input type that accepts AccessPointAwsEgressPrivateLinkEndpointArgs and AccessPointAwsEgressPrivateLinkEndpointOutput values.
// You can construct a concrete instance of `AccessPointAwsEgressPrivateLinkEndpointInput` via:
//
//	AccessPointAwsEgressPrivateLinkEndpointArgs{...}
type AccessPointAwsEgressPrivateLinkEndpointInput interface {
	pulumi.Input

	ToAccessPointAwsEgressPrivateLinkEndpointOutput() AccessPointAwsEgressPrivateLinkEndpointOutput
	ToAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(context.Context) AccessPointAwsEgressPrivateLinkEndpointOutput
}

type AccessPointAwsEgressPrivateLinkEndpointArgs struct {
	// Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
	EnableHighAvailability pulumi.BoolPtrInput `pulumi:"enableHighAvailability"`
	// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
	VpcEndpointDnsName pulumi.StringPtrInput `pulumi:"vpcEndpointDnsName"`
	// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
	VpcEndpointId pulumi.StringPtrInput `pulumi:"vpcEndpointId"`
	// AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName pulumi.StringInput `pulumi:"vpcEndpointServiceName"`
}

func (AccessPointAwsEgressPrivateLinkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i AccessPointAwsEgressPrivateLinkEndpointArgs) ToAccessPointAwsEgressPrivateLinkEndpointOutput() AccessPointAwsEgressPrivateLinkEndpointOutput {
	return i.ToAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(context.Background())
}

func (i AccessPointAwsEgressPrivateLinkEndpointArgs) ToAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) AccessPointAwsEgressPrivateLinkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointAwsEgressPrivateLinkEndpointOutput)
}

func (i AccessPointAwsEgressPrivateLinkEndpointArgs) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutput() AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return i.ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(context.Background())
}

func (i AccessPointAwsEgressPrivateLinkEndpointArgs) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointAwsEgressPrivateLinkEndpointOutput).ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(ctx)
}

// AccessPointAwsEgressPrivateLinkEndpointPtrInput is an input type that accepts AccessPointAwsEgressPrivateLinkEndpointArgs, AccessPointAwsEgressPrivateLinkEndpointPtr and AccessPointAwsEgressPrivateLinkEndpointPtrOutput values.
// You can construct a concrete instance of `AccessPointAwsEgressPrivateLinkEndpointPtrInput` via:
//
//	        AccessPointAwsEgressPrivateLinkEndpointArgs{...}
//
//	or:
//
//	        nil
type AccessPointAwsEgressPrivateLinkEndpointPtrInput interface {
	pulumi.Input

	ToAccessPointAwsEgressPrivateLinkEndpointPtrOutput() AccessPointAwsEgressPrivateLinkEndpointPtrOutput
	ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(context.Context) AccessPointAwsEgressPrivateLinkEndpointPtrOutput
}

type accessPointAwsEgressPrivateLinkEndpointPtrType AccessPointAwsEgressPrivateLinkEndpointArgs

func AccessPointAwsEgressPrivateLinkEndpointPtr(v *AccessPointAwsEgressPrivateLinkEndpointArgs) AccessPointAwsEgressPrivateLinkEndpointPtrInput {
	return (*accessPointAwsEgressPrivateLinkEndpointPtrType)(v)
}

func (*accessPointAwsEgressPrivateLinkEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i *accessPointAwsEgressPrivateLinkEndpointPtrType) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutput() AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return i.ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(context.Background())
}

func (i *accessPointAwsEgressPrivateLinkEndpointPtrType) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointAwsEgressPrivateLinkEndpointPtrOutput)
}

type AccessPointAwsEgressPrivateLinkEndpointOutput struct{ *pulumi.OutputState }

func (AccessPointAwsEgressPrivateLinkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o AccessPointAwsEgressPrivateLinkEndpointOutput) ToAccessPointAwsEgressPrivateLinkEndpointOutput() AccessPointAwsEgressPrivateLinkEndpointOutput {
	return o
}

func (o AccessPointAwsEgressPrivateLinkEndpointOutput) ToAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) AccessPointAwsEgressPrivateLinkEndpointOutput {
	return o
}

func (o AccessPointAwsEgressPrivateLinkEndpointOutput) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutput() AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return o.ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(context.Background())
}

func (o AccessPointAwsEgressPrivateLinkEndpointOutput) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointAwsEgressPrivateLinkEndpoint) *AccessPointAwsEgressPrivateLinkEndpoint {
		return &v
	}).(AccessPointAwsEgressPrivateLinkEndpointPtrOutput)
}

// Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
func (o AccessPointAwsEgressPrivateLinkEndpointOutput) EnableHighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccessPointAwsEgressPrivateLinkEndpoint) *bool { return v.EnableHighAvailability }).(pulumi.BoolPtrOutput)
}

// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
func (o AccessPointAwsEgressPrivateLinkEndpointOutput) VpcEndpointDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointAwsEgressPrivateLinkEndpoint) *string { return v.VpcEndpointDnsName }).(pulumi.StringPtrOutput)
}

// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
func (o AccessPointAwsEgressPrivateLinkEndpointOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointAwsEgressPrivateLinkEndpoint) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

// AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
func (o AccessPointAwsEgressPrivateLinkEndpointOutput) VpcEndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPointAwsEgressPrivateLinkEndpoint) string { return v.VpcEndpointServiceName }).(pulumi.StringOutput)
}

type AccessPointAwsEgressPrivateLinkEndpointPtrOutput struct{ *pulumi.OutputState }

func (AccessPointAwsEgressPrivateLinkEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutput() AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return o
}

func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) ToAccessPointAwsEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAwsEgressPrivateLinkEndpointPtrOutput {
	return o
}

func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) Elem() AccessPointAwsEgressPrivateLinkEndpointOutput {
	return o.ApplyT(func(v *AccessPointAwsEgressPrivateLinkEndpoint) AccessPointAwsEgressPrivateLinkEndpoint {
		if v != nil {
			return *v
		}
		var ret AccessPointAwsEgressPrivateLinkEndpoint
		return ret
	}).(AccessPointAwsEgressPrivateLinkEndpointOutput)
}

// Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) EnableHighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccessPointAwsEgressPrivateLinkEndpoint) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHighAvailability
	}).(pulumi.BoolPtrOutput)
}

// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) VpcEndpointDnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAwsEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointDnsName
	}).(pulumi.StringPtrOutput)
}

// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAwsEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointId
	}).(pulumi.StringPtrOutput)
}

// AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
func (o AccessPointAwsEgressPrivateLinkEndpointPtrOutput) VpcEndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAwsEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return &v.VpcEndpointServiceName
	}).(pulumi.StringPtrOutput)
}

type AccessPointAzureEgressPrivateLinkEndpoint struct {
	// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
	PrivateEndpointCustomDnsConfigDomains []string `pulumi:"privateEndpointCustomDnsConfigDomains"`
	// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointDomain *string `pulumi:"privateEndpointDomain"`
	// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointIpAddress *string `pulumi:"privateEndpointIpAddress"`
	// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointResourceId *string `pulumi:"privateEndpointResourceId"`
	// Resource ID of the Azure Private Link service.
	PrivateLinkServiceResourceId string `pulumi:"privateLinkServiceResourceId"`
	// Name of the subresource for the Private Endpoint to connect to.
	PrivateLinkSubresourceName *string `pulumi:"privateLinkSubresourceName"`
}

// AccessPointAzureEgressPrivateLinkEndpointInput is an input type that accepts AccessPointAzureEgressPrivateLinkEndpointArgs and AccessPointAzureEgressPrivateLinkEndpointOutput values.
// You can construct a concrete instance of `AccessPointAzureEgressPrivateLinkEndpointInput` via:
//
//	AccessPointAzureEgressPrivateLinkEndpointArgs{...}
type AccessPointAzureEgressPrivateLinkEndpointInput interface {
	pulumi.Input

	ToAccessPointAzureEgressPrivateLinkEndpointOutput() AccessPointAzureEgressPrivateLinkEndpointOutput
	ToAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(context.Context) AccessPointAzureEgressPrivateLinkEndpointOutput
}

type AccessPointAzureEgressPrivateLinkEndpointArgs struct {
	// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
	PrivateEndpointCustomDnsConfigDomains pulumi.StringArrayInput `pulumi:"privateEndpointCustomDnsConfigDomains"`
	// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointDomain pulumi.StringPtrInput `pulumi:"privateEndpointDomain"`
	// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointIpAddress pulumi.StringPtrInput `pulumi:"privateEndpointIpAddress"`
	// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointResourceId pulumi.StringPtrInput `pulumi:"privateEndpointResourceId"`
	// Resource ID of the Azure Private Link service.
	PrivateLinkServiceResourceId pulumi.StringInput `pulumi:"privateLinkServiceResourceId"`
	// Name of the subresource for the Private Endpoint to connect to.
	PrivateLinkSubresourceName pulumi.StringPtrInput `pulumi:"privateLinkSubresourceName"`
}

func (AccessPointAzureEgressPrivateLinkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i AccessPointAzureEgressPrivateLinkEndpointArgs) ToAccessPointAzureEgressPrivateLinkEndpointOutput() AccessPointAzureEgressPrivateLinkEndpointOutput {
	return i.ToAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(context.Background())
}

func (i AccessPointAzureEgressPrivateLinkEndpointArgs) ToAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) AccessPointAzureEgressPrivateLinkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointAzureEgressPrivateLinkEndpointOutput)
}

func (i AccessPointAzureEgressPrivateLinkEndpointArgs) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutput() AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return i.ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(context.Background())
}

func (i AccessPointAzureEgressPrivateLinkEndpointArgs) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointAzureEgressPrivateLinkEndpointOutput).ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(ctx)
}

// AccessPointAzureEgressPrivateLinkEndpointPtrInput is an input type that accepts AccessPointAzureEgressPrivateLinkEndpointArgs, AccessPointAzureEgressPrivateLinkEndpointPtr and AccessPointAzureEgressPrivateLinkEndpointPtrOutput values.
// You can construct a concrete instance of `AccessPointAzureEgressPrivateLinkEndpointPtrInput` via:
//
//	        AccessPointAzureEgressPrivateLinkEndpointArgs{...}
//
//	or:
//
//	        nil
type AccessPointAzureEgressPrivateLinkEndpointPtrInput interface {
	pulumi.Input

	ToAccessPointAzureEgressPrivateLinkEndpointPtrOutput() AccessPointAzureEgressPrivateLinkEndpointPtrOutput
	ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(context.Context) AccessPointAzureEgressPrivateLinkEndpointPtrOutput
}

type accessPointAzureEgressPrivateLinkEndpointPtrType AccessPointAzureEgressPrivateLinkEndpointArgs

func AccessPointAzureEgressPrivateLinkEndpointPtr(v *AccessPointAzureEgressPrivateLinkEndpointArgs) AccessPointAzureEgressPrivateLinkEndpointPtrInput {
	return (*accessPointAzureEgressPrivateLinkEndpointPtrType)(v)
}

func (*accessPointAzureEgressPrivateLinkEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i *accessPointAzureEgressPrivateLinkEndpointPtrType) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutput() AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return i.ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(context.Background())
}

func (i *accessPointAzureEgressPrivateLinkEndpointPtrType) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointAzureEgressPrivateLinkEndpointPtrOutput)
}

type AccessPointAzureEgressPrivateLinkEndpointOutput struct{ *pulumi.OutputState }

func (AccessPointAzureEgressPrivateLinkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o AccessPointAzureEgressPrivateLinkEndpointOutput) ToAccessPointAzureEgressPrivateLinkEndpointOutput() AccessPointAzureEgressPrivateLinkEndpointOutput {
	return o
}

func (o AccessPointAzureEgressPrivateLinkEndpointOutput) ToAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) AccessPointAzureEgressPrivateLinkEndpointOutput {
	return o
}

func (o AccessPointAzureEgressPrivateLinkEndpointOutput) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutput() AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return o.ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(context.Background())
}

func (o AccessPointAzureEgressPrivateLinkEndpointOutput) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointAzureEgressPrivateLinkEndpoint) *AccessPointAzureEgressPrivateLinkEndpoint {
		return &v
	}).(AccessPointAzureEgressPrivateLinkEndpointPtrOutput)
}

// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
func (o AccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointCustomDnsConfigDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccessPointAzureEgressPrivateLinkEndpoint) []string {
		return v.PrivateEndpointCustomDnsConfigDomains
	}).(pulumi.StringArrayOutput)
}

// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointAzureEgressPrivateLinkEndpoint) *string { return v.PrivateEndpointDomain }).(pulumi.StringPtrOutput)
}

// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointAzureEgressPrivateLinkEndpoint) *string { return v.PrivateEndpointIpAddress }).(pulumi.StringPtrOutput)
}

// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointAzureEgressPrivateLinkEndpoint) *string { return v.PrivateEndpointResourceId }).(pulumi.StringPtrOutput)
}

// Resource ID of the Azure Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointOutput) PrivateLinkServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPointAzureEgressPrivateLinkEndpoint) string { return v.PrivateLinkServiceResourceId }).(pulumi.StringOutput)
}

// Name of the subresource for the Private Endpoint to connect to.
func (o AccessPointAzureEgressPrivateLinkEndpointOutput) PrivateLinkSubresourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointAzureEgressPrivateLinkEndpoint) *string { return v.PrivateLinkSubresourceName }).(pulumi.StringPtrOutput)
}

type AccessPointAzureEgressPrivateLinkEndpointPtrOutput struct{ *pulumi.OutputState }

func (AccessPointAzureEgressPrivateLinkEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutput() AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return o
}

func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) ToAccessPointAzureEgressPrivateLinkEndpointPtrOutputWithContext(ctx context.Context) AccessPointAzureEgressPrivateLinkEndpointPtrOutput {
	return o
}

func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) Elem() AccessPointAzureEgressPrivateLinkEndpointOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) AccessPointAzureEgressPrivateLinkEndpoint {
		if v != nil {
			return *v
		}
		var ret AccessPointAzureEgressPrivateLinkEndpoint
		return ret
	}).(AccessPointAzureEgressPrivateLinkEndpointOutput)
}

// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) PrivateEndpointCustomDnsConfigDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) []string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointCustomDnsConfigDomains
	}).(pulumi.StringArrayOutput)
}

// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) PrivateEndpointDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointDomain
	}).(pulumi.StringPtrOutput)
}

// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) PrivateEndpointIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointIpAddress
	}).(pulumi.StringPtrOutput)
}

// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) PrivateEndpointResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointResourceId
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the Azure Private Link service.
func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) PrivateLinkServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkServiceResourceId
	}).(pulumi.StringPtrOutput)
}

// Name of the subresource for the Private Endpoint to connect to.
func (o AccessPointAzureEgressPrivateLinkEndpointPtrOutput) PrivateLinkSubresourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointAzureEgressPrivateLinkEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkSubresourceName
	}).(pulumi.StringPtrOutput)
}

type AccessPointEnvironment struct {
	// The ID of the Environment that the Access Point belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// AccessPointEnvironmentInput is an input type that accepts AccessPointEnvironmentArgs and AccessPointEnvironmentOutput values.
// You can construct a concrete instance of `AccessPointEnvironmentInput` via:
//
//	AccessPointEnvironmentArgs{...}
type AccessPointEnvironmentInput interface {
	pulumi.Input

	ToAccessPointEnvironmentOutput() AccessPointEnvironmentOutput
	ToAccessPointEnvironmentOutputWithContext(context.Context) AccessPointEnvironmentOutput
}

type AccessPointEnvironmentArgs struct {
	// The ID of the Environment that the Access Point belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (AccessPointEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointEnvironment)(nil)).Elem()
}

func (i AccessPointEnvironmentArgs) ToAccessPointEnvironmentOutput() AccessPointEnvironmentOutput {
	return i.ToAccessPointEnvironmentOutputWithContext(context.Background())
}

func (i AccessPointEnvironmentArgs) ToAccessPointEnvironmentOutputWithContext(ctx context.Context) AccessPointEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointEnvironmentOutput)
}

func (i AccessPointEnvironmentArgs) ToAccessPointEnvironmentPtrOutput() AccessPointEnvironmentPtrOutput {
	return i.ToAccessPointEnvironmentPtrOutputWithContext(context.Background())
}

func (i AccessPointEnvironmentArgs) ToAccessPointEnvironmentPtrOutputWithContext(ctx context.Context) AccessPointEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointEnvironmentOutput).ToAccessPointEnvironmentPtrOutputWithContext(ctx)
}

// AccessPointEnvironmentPtrInput is an input type that accepts AccessPointEnvironmentArgs, AccessPointEnvironmentPtr and AccessPointEnvironmentPtrOutput values.
// You can construct a concrete instance of `AccessPointEnvironmentPtrInput` via:
//
//	        AccessPointEnvironmentArgs{...}
//
//	or:
//
//	        nil
type AccessPointEnvironmentPtrInput interface {
	pulumi.Input

	ToAccessPointEnvironmentPtrOutput() AccessPointEnvironmentPtrOutput
	ToAccessPointEnvironmentPtrOutputWithContext(context.Context) AccessPointEnvironmentPtrOutput
}

type accessPointEnvironmentPtrType AccessPointEnvironmentArgs

func AccessPointEnvironmentPtr(v *AccessPointEnvironmentArgs) AccessPointEnvironmentPtrInput {
	return (*accessPointEnvironmentPtrType)(v)
}

func (*accessPointEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointEnvironment)(nil)).Elem()
}

func (i *accessPointEnvironmentPtrType) ToAccessPointEnvironmentPtrOutput() AccessPointEnvironmentPtrOutput {
	return i.ToAccessPointEnvironmentPtrOutputWithContext(context.Background())
}

func (i *accessPointEnvironmentPtrType) ToAccessPointEnvironmentPtrOutputWithContext(ctx context.Context) AccessPointEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointEnvironmentPtrOutput)
}

type AccessPointEnvironmentOutput struct{ *pulumi.OutputState }

func (AccessPointEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointEnvironment)(nil)).Elem()
}

func (o AccessPointEnvironmentOutput) ToAccessPointEnvironmentOutput() AccessPointEnvironmentOutput {
	return o
}

func (o AccessPointEnvironmentOutput) ToAccessPointEnvironmentOutputWithContext(ctx context.Context) AccessPointEnvironmentOutput {
	return o
}

func (o AccessPointEnvironmentOutput) ToAccessPointEnvironmentPtrOutput() AccessPointEnvironmentPtrOutput {
	return o.ToAccessPointEnvironmentPtrOutputWithContext(context.Background())
}

func (o AccessPointEnvironmentOutput) ToAccessPointEnvironmentPtrOutputWithContext(ctx context.Context) AccessPointEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointEnvironment) *AccessPointEnvironment {
		return &v
	}).(AccessPointEnvironmentPtrOutput)
}

// The ID of the Environment that the Access Point belongs to, for example, `env-abc123`.
func (o AccessPointEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPointEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type AccessPointEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (AccessPointEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointEnvironment)(nil)).Elem()
}

func (o AccessPointEnvironmentPtrOutput) ToAccessPointEnvironmentPtrOutput() AccessPointEnvironmentPtrOutput {
	return o
}

func (o AccessPointEnvironmentPtrOutput) ToAccessPointEnvironmentPtrOutputWithContext(ctx context.Context) AccessPointEnvironmentPtrOutput {
	return o
}

func (o AccessPointEnvironmentPtrOutput) Elem() AccessPointEnvironmentOutput {
	return o.ApplyT(func(v *AccessPointEnvironment) AccessPointEnvironment {
		if v != nil {
			return *v
		}
		var ret AccessPointEnvironment
		return ret
	}).(AccessPointEnvironmentOutput)
}

// The ID of the Environment that the Access Point belongs to, for example, `env-abc123`.
func (o AccessPointEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type AccessPointGateway struct {
	// The ID of the gateway to which the Access Point belongs, for example, `gw-abc123`.
	Id string `pulumi:"id"`
}

// AccessPointGatewayInput is an input type that accepts AccessPointGatewayArgs and AccessPointGatewayOutput values.
// You can construct a concrete instance of `AccessPointGatewayInput` via:
//
//	AccessPointGatewayArgs{...}
type AccessPointGatewayInput interface {
	pulumi.Input

	ToAccessPointGatewayOutput() AccessPointGatewayOutput
	ToAccessPointGatewayOutputWithContext(context.Context) AccessPointGatewayOutput
}

type AccessPointGatewayArgs struct {
	// The ID of the gateway to which the Access Point belongs, for example, `gw-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (AccessPointGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointGateway)(nil)).Elem()
}

func (i AccessPointGatewayArgs) ToAccessPointGatewayOutput() AccessPointGatewayOutput {
	return i.ToAccessPointGatewayOutputWithContext(context.Background())
}

func (i AccessPointGatewayArgs) ToAccessPointGatewayOutputWithContext(ctx context.Context) AccessPointGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointGatewayOutput)
}

func (i AccessPointGatewayArgs) ToAccessPointGatewayPtrOutput() AccessPointGatewayPtrOutput {
	return i.ToAccessPointGatewayPtrOutputWithContext(context.Background())
}

func (i AccessPointGatewayArgs) ToAccessPointGatewayPtrOutputWithContext(ctx context.Context) AccessPointGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointGatewayOutput).ToAccessPointGatewayPtrOutputWithContext(ctx)
}

// AccessPointGatewayPtrInput is an input type that accepts AccessPointGatewayArgs, AccessPointGatewayPtr and AccessPointGatewayPtrOutput values.
// You can construct a concrete instance of `AccessPointGatewayPtrInput` via:
//
//	        AccessPointGatewayArgs{...}
//
//	or:
//
//	        nil
type AccessPointGatewayPtrInput interface {
	pulumi.Input

	ToAccessPointGatewayPtrOutput() AccessPointGatewayPtrOutput
	ToAccessPointGatewayPtrOutputWithContext(context.Context) AccessPointGatewayPtrOutput
}

type accessPointGatewayPtrType AccessPointGatewayArgs

func AccessPointGatewayPtr(v *AccessPointGatewayArgs) AccessPointGatewayPtrInput {
	return (*accessPointGatewayPtrType)(v)
}

func (*accessPointGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointGateway)(nil)).Elem()
}

func (i *accessPointGatewayPtrType) ToAccessPointGatewayPtrOutput() AccessPointGatewayPtrOutput {
	return i.ToAccessPointGatewayPtrOutputWithContext(context.Background())
}

func (i *accessPointGatewayPtrType) ToAccessPointGatewayPtrOutputWithContext(ctx context.Context) AccessPointGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointGatewayPtrOutput)
}

type AccessPointGatewayOutput struct{ *pulumi.OutputState }

func (AccessPointGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointGateway)(nil)).Elem()
}

func (o AccessPointGatewayOutput) ToAccessPointGatewayOutput() AccessPointGatewayOutput {
	return o
}

func (o AccessPointGatewayOutput) ToAccessPointGatewayOutputWithContext(ctx context.Context) AccessPointGatewayOutput {
	return o
}

func (o AccessPointGatewayOutput) ToAccessPointGatewayPtrOutput() AccessPointGatewayPtrOutput {
	return o.ToAccessPointGatewayPtrOutputWithContext(context.Background())
}

func (o AccessPointGatewayOutput) ToAccessPointGatewayPtrOutputWithContext(ctx context.Context) AccessPointGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointGateway) *AccessPointGateway {
		return &v
	}).(AccessPointGatewayPtrOutput)
}

// The ID of the gateway to which the Access Point belongs, for example, `gw-abc123`.
func (o AccessPointGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPointGateway) string { return v.Id }).(pulumi.StringOutput)
}

type AccessPointGatewayPtrOutput struct{ *pulumi.OutputState }

func (AccessPointGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointGateway)(nil)).Elem()
}

func (o AccessPointGatewayPtrOutput) ToAccessPointGatewayPtrOutput() AccessPointGatewayPtrOutput {
	return o
}

func (o AccessPointGatewayPtrOutput) ToAccessPointGatewayPtrOutputWithContext(ctx context.Context) AccessPointGatewayPtrOutput {
	return o
}

func (o AccessPointGatewayPtrOutput) Elem() AccessPointGatewayOutput {
	return o.ApplyT(func(v *AccessPointGateway) AccessPointGateway {
		if v != nil {
			return *v
		}
		var ret AccessPointGateway
		return ret
	}).(AccessPointGatewayOutput)
}

// The ID of the gateway to which the Access Point belongs, for example, `gw-abc123`.
func (o AccessPointGatewayPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointGateway) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ApiKeyManagedResource struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion string `pulumi:"apiVersion"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment ApiKeyManagedResourceEnvironment `pulumi:"environment"`
	// The ID of the managed resource that the API Key associated with, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind string `pulumi:"kind"`
}

// ApiKeyManagedResourceInput is an input type that accepts ApiKeyManagedResourceArgs and ApiKeyManagedResourceOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceInput` via:
//
//	ApiKeyManagedResourceArgs{...}
type ApiKeyManagedResourceInput interface {
	pulumi.Input

	ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput
	ToApiKeyManagedResourceOutputWithContext(context.Context) ApiKeyManagedResourceOutput
}

type ApiKeyManagedResourceArgs struct {
	// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment ApiKeyManagedResourceEnvironmentInput `pulumi:"environment"`
	// The ID of the managed resource that the API Key associated with, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ApiKeyManagedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResource)(nil)).Elem()
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput {
	return i.ToApiKeyManagedResourceOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourceOutputWithContext(ctx context.Context) ApiKeyManagedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceOutput)
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return i.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceArgs) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceOutput).ToApiKeyManagedResourcePtrOutputWithContext(ctx)
}

// ApiKeyManagedResourcePtrInput is an input type that accepts ApiKeyManagedResourceArgs, ApiKeyManagedResourcePtr and ApiKeyManagedResourcePtrOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourcePtrInput` via:
//
//	        ApiKeyManagedResourceArgs{...}
//
//	or:
//
//	        nil
type ApiKeyManagedResourcePtrInput interface {
	pulumi.Input

	ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput
	ToApiKeyManagedResourcePtrOutputWithContext(context.Context) ApiKeyManagedResourcePtrOutput
}

type apiKeyManagedResourcePtrType ApiKeyManagedResourceArgs

func ApiKeyManagedResourcePtr(v *ApiKeyManagedResourceArgs) ApiKeyManagedResourcePtrInput {
	return (*apiKeyManagedResourcePtrType)(v)
}

func (*apiKeyManagedResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResource)(nil)).Elem()
}

func (i *apiKeyManagedResourcePtrType) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return i.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (i *apiKeyManagedResourcePtrType) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourcePtrOutput)
}

type ApiKeyManagedResourceOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResource)(nil)).Elem()
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourceOutput() ApiKeyManagedResourceOutput {
	return o
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourceOutputWithContext(ctx context.Context) ApiKeyManagedResourceOutput {
	return o
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return o.ToApiKeyManagedResourcePtrOutputWithContext(context.Background())
}

func (o ApiKeyManagedResourceOutput) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyManagedResource) *ApiKeyManagedResource {
		return &v
	}).(ApiKeyManagedResourcePtrOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyManagedResourceOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
func (o ApiKeyManagedResourceOutput) Environment() ApiKeyManagedResourceEnvironmentOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) ApiKeyManagedResourceEnvironment { return v.Environment }).(ApiKeyManagedResourceEnvironmentOutput)
}

// The ID of the managed resource that the API Key associated with, for example, `lkc-abc123`.
func (o ApiKeyManagedResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyManagedResourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResource) string { return v.Kind }).(pulumi.StringOutput)
}

type ApiKeyManagedResourcePtrOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResource)(nil)).Elem()
}

func (o ApiKeyManagedResourcePtrOutput) ToApiKeyManagedResourcePtrOutput() ApiKeyManagedResourcePtrOutput {
	return o
}

func (o ApiKeyManagedResourcePtrOutput) ToApiKeyManagedResourcePtrOutputWithContext(ctx context.Context) ApiKeyManagedResourcePtrOutput {
	return o
}

func (o ApiKeyManagedResourcePtrOutput) Elem() ApiKeyManagedResourceOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) ApiKeyManagedResource {
		if v != nil {
			return *v
		}
		var ret ApiKeyManagedResource
		return ret
	}).(ApiKeyManagedResourceOutput)
}

// The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
func (o ApiKeyManagedResourcePtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
func (o ApiKeyManagedResourcePtrOutput) Environment() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *ApiKeyManagedResourceEnvironment {
		if v == nil {
			return nil
		}
		return &v.Environment
	}).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

// The ID of the managed resource that the API Key associated with, for example, `lkc-abc123`.
func (o ApiKeyManagedResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the managed resource that the API Key associated with, for example, `Cluster`.
func (o ApiKeyManagedResourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

type ApiKeyManagedResourceEnvironment struct {
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// ApiKeyManagedResourceEnvironmentInput is an input type that accepts ApiKeyManagedResourceEnvironmentArgs and ApiKeyManagedResourceEnvironmentOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceEnvironmentInput` via:
//
//	ApiKeyManagedResourceEnvironmentArgs{...}
type ApiKeyManagedResourceEnvironmentInput interface {
	pulumi.Input

	ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput
	ToApiKeyManagedResourceEnvironmentOutputWithContext(context.Context) ApiKeyManagedResourceEnvironmentOutput
}

type ApiKeyManagedResourceEnvironmentArgs struct {
	// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ApiKeyManagedResourceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput {
	return i.ToApiKeyManagedResourceEnvironmentOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentOutput)
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return i.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (i ApiKeyManagedResourceEnvironmentArgs) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentOutput).ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx)
}

// ApiKeyManagedResourceEnvironmentPtrInput is an input type that accepts ApiKeyManagedResourceEnvironmentArgs, ApiKeyManagedResourceEnvironmentPtr and ApiKeyManagedResourceEnvironmentPtrOutput values.
// You can construct a concrete instance of `ApiKeyManagedResourceEnvironmentPtrInput` via:
//
//	        ApiKeyManagedResourceEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ApiKeyManagedResourceEnvironmentPtrInput interface {
	pulumi.Input

	ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput
	ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Context) ApiKeyManagedResourceEnvironmentPtrOutput
}

type apiKeyManagedResourceEnvironmentPtrType ApiKeyManagedResourceEnvironmentArgs

func ApiKeyManagedResourceEnvironmentPtr(v *ApiKeyManagedResourceEnvironmentArgs) ApiKeyManagedResourceEnvironmentPtrInput {
	return (*apiKeyManagedResourceEnvironmentPtrType)(v)
}

func (*apiKeyManagedResourceEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (i *apiKeyManagedResourceEnvironmentPtrType) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return i.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (i *apiKeyManagedResourceEnvironmentPtrType) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

type ApiKeyManagedResourceEnvironmentOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentOutput() ApiKeyManagedResourceEnvironmentOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(context.Background())
}

func (o ApiKeyManagedResourceEnvironmentOutput) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyManagedResourceEnvironment) *ApiKeyManagedResourceEnvironment {
		return &v
	}).(ApiKeyManagedResourceEnvironmentPtrOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyManagedResourceEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type ApiKeyManagedResourceEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyManagedResourceEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyManagedResourceEnvironment)(nil)).Elem()
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) ToApiKeyManagedResourceEnvironmentPtrOutput() ApiKeyManagedResourceEnvironmentPtrOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) ToApiKeyManagedResourceEnvironmentPtrOutputWithContext(ctx context.Context) ApiKeyManagedResourceEnvironmentPtrOutput {
	return o
}

func (o ApiKeyManagedResourceEnvironmentPtrOutput) Elem() ApiKeyManagedResourceEnvironmentOutput {
	return o.ApplyT(func(v *ApiKeyManagedResourceEnvironment) ApiKeyManagedResourceEnvironment {
		if v != nil {
			return *v
		}
		var ret ApiKeyManagedResourceEnvironment
		return ret
	}).(ApiKeyManagedResourceEnvironmentOutput)
}

// The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
func (o ApiKeyManagedResourceEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyManagedResourceEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ApiKeyOwner struct {
	// The API group and version of the owner that the API Key belongs to, for example, `iam/v2`.
	ApiVersion string `pulumi:"apiVersion"`
	// The ID of the owner that the API Key belongs to, for example, `sa-abc123` or `u-abc123`.
	Id string `pulumi:"id"`
	// The kind of the owner that the API Key belongs to, for example, `ServiceAccount` or `User`.
	Kind string `pulumi:"kind"`
}

// ApiKeyOwnerInput is an input type that accepts ApiKeyOwnerArgs and ApiKeyOwnerOutput values.
// You can construct a concrete instance of `ApiKeyOwnerInput` via:
//
//	ApiKeyOwnerArgs{...}
type ApiKeyOwnerInput interface {
	pulumi.Input

	ToApiKeyOwnerOutput() ApiKeyOwnerOutput
	ToApiKeyOwnerOutputWithContext(context.Context) ApiKeyOwnerOutput
}

type ApiKeyOwnerArgs struct {
	// The API group and version of the owner that the API Key belongs to, for example, `iam/v2`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// The ID of the owner that the API Key belongs to, for example, `sa-abc123` or `u-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The kind of the owner that the API Key belongs to, for example, `ServiceAccount` or `User`.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (ApiKeyOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyOwner)(nil)).Elem()
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerOutput() ApiKeyOwnerOutput {
	return i.ToApiKeyOwnerOutputWithContext(context.Background())
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerOutputWithContext(ctx context.Context) ApiKeyOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerOutput)
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return i.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (i ApiKeyOwnerArgs) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerOutput).ToApiKeyOwnerPtrOutputWithContext(ctx)
}

// ApiKeyOwnerPtrInput is an input type that accepts ApiKeyOwnerArgs, ApiKeyOwnerPtr and ApiKeyOwnerPtrOutput values.
// You can construct a concrete instance of `ApiKeyOwnerPtrInput` via:
//
//	        ApiKeyOwnerArgs{...}
//
//	or:
//
//	        nil
type ApiKeyOwnerPtrInput interface {
	pulumi.Input

	ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput
	ToApiKeyOwnerPtrOutputWithContext(context.Context) ApiKeyOwnerPtrOutput
}

type apiKeyOwnerPtrType ApiKeyOwnerArgs

func ApiKeyOwnerPtr(v *ApiKeyOwnerArgs) ApiKeyOwnerPtrInput {
	return (*apiKeyOwnerPtrType)(v)
}

func (*apiKeyOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyOwner)(nil)).Elem()
}

func (i *apiKeyOwnerPtrType) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return i.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (i *apiKeyOwnerPtrType) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOwnerPtrOutput)
}

type ApiKeyOwnerOutput struct{ *pulumi.OutputState }

func (ApiKeyOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyOwner)(nil)).Elem()
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerOutput() ApiKeyOwnerOutput {
	return o
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerOutputWithContext(ctx context.Context) ApiKeyOwnerOutput {
	return o
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return o.ToApiKeyOwnerPtrOutputWithContext(context.Background())
}

func (o ApiKeyOwnerOutput) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiKeyOwner) *ApiKeyOwner {
		return &v
	}).(ApiKeyOwnerPtrOutput)
}

// The API group and version of the owner that the API Key belongs to, for example, `iam/v2`.
func (o ApiKeyOwnerOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// The ID of the owner that the API Key belongs to, for example, `sa-abc123` or `u-abc123`.
func (o ApiKeyOwnerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.Id }).(pulumi.StringOutput)
}

// The kind of the owner that the API Key belongs to, for example, `ServiceAccount` or `User`.
func (o ApiKeyOwnerOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApiKeyOwner) string { return v.Kind }).(pulumi.StringOutput)
}

type ApiKeyOwnerPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyOwner)(nil)).Elem()
}

func (o ApiKeyOwnerPtrOutput) ToApiKeyOwnerPtrOutput() ApiKeyOwnerPtrOutput {
	return o
}

func (o ApiKeyOwnerPtrOutput) ToApiKeyOwnerPtrOutputWithContext(ctx context.Context) ApiKeyOwnerPtrOutput {
	return o
}

func (o ApiKeyOwnerPtrOutput) Elem() ApiKeyOwnerOutput {
	return o.ApplyT(func(v *ApiKeyOwner) ApiKeyOwner {
		if v != nil {
			return *v
		}
		var ret ApiKeyOwner
		return ret
	}).(ApiKeyOwnerOutput)
}

// The API group and version of the owner that the API Key belongs to, for example, `iam/v2`.
func (o ApiKeyOwnerPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// The ID of the owner that the API Key belongs to, for example, `sa-abc123` or `u-abc123`.
func (o ApiKeyOwnerPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the owner that the API Key belongs to, for example, `ServiceAccount` or `User`.
func (o ApiKeyOwnerPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKeyOwner) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

type BusinessMetadataAttributeDefinition struct {
	// The default value of this attribute.
	DefaultValue *string `pulumi:"defaultValue"`
	// The description of this attribute.
	Description *string `pulumi:"description"`
	// An optional flag to control whether the attribute should be optional or required. The default value is `false`.
	IsOptional *bool `pulumi:"isOptional"`
	// The name of the attribute.
	Name string `pulumi:"name"`
	// (Optional Map) Block for the attribute options:
	// - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
	// - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
	Options map[string]string `pulumi:"options"`
	// (Required String) The type of the attribute, it always returns `string`.
	Type *string `pulumi:"type"`
}

// BusinessMetadataAttributeDefinitionInput is an input type that accepts BusinessMetadataAttributeDefinitionArgs and BusinessMetadataAttributeDefinitionOutput values.
// You can construct a concrete instance of `BusinessMetadataAttributeDefinitionInput` via:
//
//	BusinessMetadataAttributeDefinitionArgs{...}
type BusinessMetadataAttributeDefinitionInput interface {
	pulumi.Input

	ToBusinessMetadataAttributeDefinitionOutput() BusinessMetadataAttributeDefinitionOutput
	ToBusinessMetadataAttributeDefinitionOutputWithContext(context.Context) BusinessMetadataAttributeDefinitionOutput
}

type BusinessMetadataAttributeDefinitionArgs struct {
	// The default value of this attribute.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// The description of this attribute.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// An optional flag to control whether the attribute should be optional or required. The default value is `false`.
	IsOptional pulumi.BoolPtrInput `pulumi:"isOptional"`
	// The name of the attribute.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional Map) Block for the attribute options:
	// - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
	// - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
	Options pulumi.StringMapInput `pulumi:"options"`
	// (Required String) The type of the attribute, it always returns `string`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BusinessMetadataAttributeDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (i BusinessMetadataAttributeDefinitionArgs) ToBusinessMetadataAttributeDefinitionOutput() BusinessMetadataAttributeDefinitionOutput {
	return i.ToBusinessMetadataAttributeDefinitionOutputWithContext(context.Background())
}

func (i BusinessMetadataAttributeDefinitionArgs) ToBusinessMetadataAttributeDefinitionOutputWithContext(ctx context.Context) BusinessMetadataAttributeDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataAttributeDefinitionOutput)
}

// BusinessMetadataAttributeDefinitionArrayInput is an input type that accepts BusinessMetadataAttributeDefinitionArray and BusinessMetadataAttributeDefinitionArrayOutput values.
// You can construct a concrete instance of `BusinessMetadataAttributeDefinitionArrayInput` via:
//
//	BusinessMetadataAttributeDefinitionArray{ BusinessMetadataAttributeDefinitionArgs{...} }
type BusinessMetadataAttributeDefinitionArrayInput interface {
	pulumi.Input

	ToBusinessMetadataAttributeDefinitionArrayOutput() BusinessMetadataAttributeDefinitionArrayOutput
	ToBusinessMetadataAttributeDefinitionArrayOutputWithContext(context.Context) BusinessMetadataAttributeDefinitionArrayOutput
}

type BusinessMetadataAttributeDefinitionArray []BusinessMetadataAttributeDefinitionInput

func (BusinessMetadataAttributeDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (i BusinessMetadataAttributeDefinitionArray) ToBusinessMetadataAttributeDefinitionArrayOutput() BusinessMetadataAttributeDefinitionArrayOutput {
	return i.ToBusinessMetadataAttributeDefinitionArrayOutputWithContext(context.Background())
}

func (i BusinessMetadataAttributeDefinitionArray) ToBusinessMetadataAttributeDefinitionArrayOutputWithContext(ctx context.Context) BusinessMetadataAttributeDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataAttributeDefinitionArrayOutput)
}

type BusinessMetadataAttributeDefinitionOutput struct{ *pulumi.OutputState }

func (BusinessMetadataAttributeDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (o BusinessMetadataAttributeDefinitionOutput) ToBusinessMetadataAttributeDefinitionOutput() BusinessMetadataAttributeDefinitionOutput {
	return o
}

func (o BusinessMetadataAttributeDefinitionOutput) ToBusinessMetadataAttributeDefinitionOutputWithContext(ctx context.Context) BusinessMetadataAttributeDefinitionOutput {
	return o
}

// The default value of this attribute.
func (o BusinessMetadataAttributeDefinitionOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BusinessMetadataAttributeDefinition) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// The description of this attribute.
func (o BusinessMetadataAttributeDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BusinessMetadataAttributeDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An optional flag to control whether the attribute should be optional or required. The default value is `false`.
func (o BusinessMetadataAttributeDefinitionOutput) IsOptional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BusinessMetadataAttributeDefinition) *bool { return v.IsOptional }).(pulumi.BoolPtrOutput)
}

// The name of the attribute.
func (o BusinessMetadataAttributeDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataAttributeDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional Map) Block for the attribute options:
// - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
// - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
func (o BusinessMetadataAttributeDefinitionOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v BusinessMetadataAttributeDefinition) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// (Required String) The type of the attribute, it always returns `string`.
func (o BusinessMetadataAttributeDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BusinessMetadataAttributeDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BusinessMetadataAttributeDefinitionArrayOutput struct{ *pulumi.OutputState }

func (BusinessMetadataAttributeDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (o BusinessMetadataAttributeDefinitionArrayOutput) ToBusinessMetadataAttributeDefinitionArrayOutput() BusinessMetadataAttributeDefinitionArrayOutput {
	return o
}

func (o BusinessMetadataAttributeDefinitionArrayOutput) ToBusinessMetadataAttributeDefinitionArrayOutputWithContext(ctx context.Context) BusinessMetadataAttributeDefinitionArrayOutput {
	return o
}

func (o BusinessMetadataAttributeDefinitionArrayOutput) Index(i pulumi.IntInput) BusinessMetadataAttributeDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BusinessMetadataAttributeDefinition {
		return vs[0].([]BusinessMetadataAttributeDefinition)[vs[1].(int)]
	}).(BusinessMetadataAttributeDefinitionOutput)
}

type BusinessMetadataBindingCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// BusinessMetadataBindingCredentialsInput is an input type that accepts BusinessMetadataBindingCredentialsArgs and BusinessMetadataBindingCredentialsOutput values.
// You can construct a concrete instance of `BusinessMetadataBindingCredentialsInput` via:
//
//	BusinessMetadataBindingCredentialsArgs{...}
type BusinessMetadataBindingCredentialsInput interface {
	pulumi.Input

	ToBusinessMetadataBindingCredentialsOutput() BusinessMetadataBindingCredentialsOutput
	ToBusinessMetadataBindingCredentialsOutputWithContext(context.Context) BusinessMetadataBindingCredentialsOutput
}

type BusinessMetadataBindingCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (BusinessMetadataBindingCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataBindingCredentials)(nil)).Elem()
}

func (i BusinessMetadataBindingCredentialsArgs) ToBusinessMetadataBindingCredentialsOutput() BusinessMetadataBindingCredentialsOutput {
	return i.ToBusinessMetadataBindingCredentialsOutputWithContext(context.Background())
}

func (i BusinessMetadataBindingCredentialsArgs) ToBusinessMetadataBindingCredentialsOutputWithContext(ctx context.Context) BusinessMetadataBindingCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataBindingCredentialsOutput)
}

func (i BusinessMetadataBindingCredentialsArgs) ToBusinessMetadataBindingCredentialsPtrOutput() BusinessMetadataBindingCredentialsPtrOutput {
	return i.ToBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i BusinessMetadataBindingCredentialsArgs) ToBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataBindingCredentialsOutput).ToBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx)
}

// BusinessMetadataBindingCredentialsPtrInput is an input type that accepts BusinessMetadataBindingCredentialsArgs, BusinessMetadataBindingCredentialsPtr and BusinessMetadataBindingCredentialsPtrOutput values.
// You can construct a concrete instance of `BusinessMetadataBindingCredentialsPtrInput` via:
//
//	        BusinessMetadataBindingCredentialsArgs{...}
//
//	or:
//
//	        nil
type BusinessMetadataBindingCredentialsPtrInput interface {
	pulumi.Input

	ToBusinessMetadataBindingCredentialsPtrOutput() BusinessMetadataBindingCredentialsPtrOutput
	ToBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Context) BusinessMetadataBindingCredentialsPtrOutput
}

type businessMetadataBindingCredentialsPtrType BusinessMetadataBindingCredentialsArgs

func BusinessMetadataBindingCredentialsPtr(v *BusinessMetadataBindingCredentialsArgs) BusinessMetadataBindingCredentialsPtrInput {
	return (*businessMetadataBindingCredentialsPtrType)(v)
}

func (*businessMetadataBindingCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataBindingCredentials)(nil)).Elem()
}

func (i *businessMetadataBindingCredentialsPtrType) ToBusinessMetadataBindingCredentialsPtrOutput() BusinessMetadataBindingCredentialsPtrOutput {
	return i.ToBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i *businessMetadataBindingCredentialsPtrType) ToBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataBindingCredentialsPtrOutput)
}

type BusinessMetadataBindingCredentialsOutput struct{ *pulumi.OutputState }

func (BusinessMetadataBindingCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataBindingCredentials)(nil)).Elem()
}

func (o BusinessMetadataBindingCredentialsOutput) ToBusinessMetadataBindingCredentialsOutput() BusinessMetadataBindingCredentialsOutput {
	return o
}

func (o BusinessMetadataBindingCredentialsOutput) ToBusinessMetadataBindingCredentialsOutputWithContext(ctx context.Context) BusinessMetadataBindingCredentialsOutput {
	return o
}

func (o BusinessMetadataBindingCredentialsOutput) ToBusinessMetadataBindingCredentialsPtrOutput() BusinessMetadataBindingCredentialsPtrOutput {
	return o.ToBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Background())
}

func (o BusinessMetadataBindingCredentialsOutput) ToBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BusinessMetadataBindingCredentials) *BusinessMetadataBindingCredentials {
		return &v
	}).(BusinessMetadataBindingCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o BusinessMetadataBindingCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataBindingCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o BusinessMetadataBindingCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataBindingCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type BusinessMetadataBindingCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BusinessMetadataBindingCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataBindingCredentials)(nil)).Elem()
}

func (o BusinessMetadataBindingCredentialsPtrOutput) ToBusinessMetadataBindingCredentialsPtrOutput() BusinessMetadataBindingCredentialsPtrOutput {
	return o
}

func (o BusinessMetadataBindingCredentialsPtrOutput) ToBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingCredentialsPtrOutput {
	return o
}

func (o BusinessMetadataBindingCredentialsPtrOutput) Elem() BusinessMetadataBindingCredentialsOutput {
	return o.ApplyT(func(v *BusinessMetadataBindingCredentials) BusinessMetadataBindingCredentials {
		if v != nil {
			return *v
		}
		var ret BusinessMetadataBindingCredentials
		return ret
	}).(BusinessMetadataBindingCredentialsOutput)
}

// The Schema Registry API Key.
func (o BusinessMetadataBindingCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessMetadataBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o BusinessMetadataBindingCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessMetadataBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type BusinessMetadataBindingSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// BusinessMetadataBindingSchemaRegistryClusterInput is an input type that accepts BusinessMetadataBindingSchemaRegistryClusterArgs and BusinessMetadataBindingSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `BusinessMetadataBindingSchemaRegistryClusterInput` via:
//
//	BusinessMetadataBindingSchemaRegistryClusterArgs{...}
type BusinessMetadataBindingSchemaRegistryClusterInput interface {
	pulumi.Input

	ToBusinessMetadataBindingSchemaRegistryClusterOutput() BusinessMetadataBindingSchemaRegistryClusterOutput
	ToBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(context.Context) BusinessMetadataBindingSchemaRegistryClusterOutput
}

type BusinessMetadataBindingSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (BusinessMetadataBindingSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i BusinessMetadataBindingSchemaRegistryClusterArgs) ToBusinessMetadataBindingSchemaRegistryClusterOutput() BusinessMetadataBindingSchemaRegistryClusterOutput {
	return i.ToBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i BusinessMetadataBindingSchemaRegistryClusterArgs) ToBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) BusinessMetadataBindingSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataBindingSchemaRegistryClusterOutput)
}

func (i BusinessMetadataBindingSchemaRegistryClusterArgs) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutput() BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return i.ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i BusinessMetadataBindingSchemaRegistryClusterArgs) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataBindingSchemaRegistryClusterOutput).ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// BusinessMetadataBindingSchemaRegistryClusterPtrInput is an input type that accepts BusinessMetadataBindingSchemaRegistryClusterArgs, BusinessMetadataBindingSchemaRegistryClusterPtr and BusinessMetadataBindingSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `BusinessMetadataBindingSchemaRegistryClusterPtrInput` via:
//
//	        BusinessMetadataBindingSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type BusinessMetadataBindingSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToBusinessMetadataBindingSchemaRegistryClusterPtrOutput() BusinessMetadataBindingSchemaRegistryClusterPtrOutput
	ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Context) BusinessMetadataBindingSchemaRegistryClusterPtrOutput
}

type businessMetadataBindingSchemaRegistryClusterPtrType BusinessMetadataBindingSchemaRegistryClusterArgs

func BusinessMetadataBindingSchemaRegistryClusterPtr(v *BusinessMetadataBindingSchemaRegistryClusterArgs) BusinessMetadataBindingSchemaRegistryClusterPtrInput {
	return (*businessMetadataBindingSchemaRegistryClusterPtrType)(v)
}

func (*businessMetadataBindingSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i *businessMetadataBindingSchemaRegistryClusterPtrType) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutput() BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return i.ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *businessMetadataBindingSchemaRegistryClusterPtrType) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataBindingSchemaRegistryClusterPtrOutput)
}

type BusinessMetadataBindingSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (BusinessMetadataBindingSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o BusinessMetadataBindingSchemaRegistryClusterOutput) ToBusinessMetadataBindingSchemaRegistryClusterOutput() BusinessMetadataBindingSchemaRegistryClusterOutput {
	return o
}

func (o BusinessMetadataBindingSchemaRegistryClusterOutput) ToBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) BusinessMetadataBindingSchemaRegistryClusterOutput {
	return o
}

func (o BusinessMetadataBindingSchemaRegistryClusterOutput) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutput() BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o.ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o BusinessMetadataBindingSchemaRegistryClusterOutput) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BusinessMetadataBindingSchemaRegistryCluster) *BusinessMetadataBindingSchemaRegistryCluster {
		return &v
	}).(BusinessMetadataBindingSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o BusinessMetadataBindingSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataBindingSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type BusinessMetadataBindingSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (BusinessMetadataBindingSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o BusinessMetadataBindingSchemaRegistryClusterPtrOutput) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutput() BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o BusinessMetadataBindingSchemaRegistryClusterPtrOutput) ToBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o BusinessMetadataBindingSchemaRegistryClusterPtrOutput) Elem() BusinessMetadataBindingSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *BusinessMetadataBindingSchemaRegistryCluster) BusinessMetadataBindingSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret BusinessMetadataBindingSchemaRegistryCluster
		return ret
	}).(BusinessMetadataBindingSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o BusinessMetadataBindingSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessMetadataBindingSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type BusinessMetadataCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// BusinessMetadataCredentialsInput is an input type that accepts BusinessMetadataCredentialsArgs and BusinessMetadataCredentialsOutput values.
// You can construct a concrete instance of `BusinessMetadataCredentialsInput` via:
//
//	BusinessMetadataCredentialsArgs{...}
type BusinessMetadataCredentialsInput interface {
	pulumi.Input

	ToBusinessMetadataCredentialsOutput() BusinessMetadataCredentialsOutput
	ToBusinessMetadataCredentialsOutputWithContext(context.Context) BusinessMetadataCredentialsOutput
}

type BusinessMetadataCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (BusinessMetadataCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataCredentials)(nil)).Elem()
}

func (i BusinessMetadataCredentialsArgs) ToBusinessMetadataCredentialsOutput() BusinessMetadataCredentialsOutput {
	return i.ToBusinessMetadataCredentialsOutputWithContext(context.Background())
}

func (i BusinessMetadataCredentialsArgs) ToBusinessMetadataCredentialsOutputWithContext(ctx context.Context) BusinessMetadataCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataCredentialsOutput)
}

func (i BusinessMetadataCredentialsArgs) ToBusinessMetadataCredentialsPtrOutput() BusinessMetadataCredentialsPtrOutput {
	return i.ToBusinessMetadataCredentialsPtrOutputWithContext(context.Background())
}

func (i BusinessMetadataCredentialsArgs) ToBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataCredentialsOutput).ToBusinessMetadataCredentialsPtrOutputWithContext(ctx)
}

// BusinessMetadataCredentialsPtrInput is an input type that accepts BusinessMetadataCredentialsArgs, BusinessMetadataCredentialsPtr and BusinessMetadataCredentialsPtrOutput values.
// You can construct a concrete instance of `BusinessMetadataCredentialsPtrInput` via:
//
//	        BusinessMetadataCredentialsArgs{...}
//
//	or:
//
//	        nil
type BusinessMetadataCredentialsPtrInput interface {
	pulumi.Input

	ToBusinessMetadataCredentialsPtrOutput() BusinessMetadataCredentialsPtrOutput
	ToBusinessMetadataCredentialsPtrOutputWithContext(context.Context) BusinessMetadataCredentialsPtrOutput
}

type businessMetadataCredentialsPtrType BusinessMetadataCredentialsArgs

func BusinessMetadataCredentialsPtr(v *BusinessMetadataCredentialsArgs) BusinessMetadataCredentialsPtrInput {
	return (*businessMetadataCredentialsPtrType)(v)
}

func (*businessMetadataCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataCredentials)(nil)).Elem()
}

func (i *businessMetadataCredentialsPtrType) ToBusinessMetadataCredentialsPtrOutput() BusinessMetadataCredentialsPtrOutput {
	return i.ToBusinessMetadataCredentialsPtrOutputWithContext(context.Background())
}

func (i *businessMetadataCredentialsPtrType) ToBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataCredentialsPtrOutput)
}

type BusinessMetadataCredentialsOutput struct{ *pulumi.OutputState }

func (BusinessMetadataCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataCredentials)(nil)).Elem()
}

func (o BusinessMetadataCredentialsOutput) ToBusinessMetadataCredentialsOutput() BusinessMetadataCredentialsOutput {
	return o
}

func (o BusinessMetadataCredentialsOutput) ToBusinessMetadataCredentialsOutputWithContext(ctx context.Context) BusinessMetadataCredentialsOutput {
	return o
}

func (o BusinessMetadataCredentialsOutput) ToBusinessMetadataCredentialsPtrOutput() BusinessMetadataCredentialsPtrOutput {
	return o.ToBusinessMetadataCredentialsPtrOutputWithContext(context.Background())
}

func (o BusinessMetadataCredentialsOutput) ToBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BusinessMetadataCredentials) *BusinessMetadataCredentials {
		return &v
	}).(BusinessMetadataCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o BusinessMetadataCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o BusinessMetadataCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type BusinessMetadataCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BusinessMetadataCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataCredentials)(nil)).Elem()
}

func (o BusinessMetadataCredentialsPtrOutput) ToBusinessMetadataCredentialsPtrOutput() BusinessMetadataCredentialsPtrOutput {
	return o
}

func (o BusinessMetadataCredentialsPtrOutput) ToBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) BusinessMetadataCredentialsPtrOutput {
	return o
}

func (o BusinessMetadataCredentialsPtrOutput) Elem() BusinessMetadataCredentialsOutput {
	return o.ApplyT(func(v *BusinessMetadataCredentials) BusinessMetadataCredentials {
		if v != nil {
			return *v
		}
		var ret BusinessMetadataCredentials
		return ret
	}).(BusinessMetadataCredentialsOutput)
}

// The Schema Registry API Key.
func (o BusinessMetadataCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessMetadataCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o BusinessMetadataCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessMetadataCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type BusinessMetadataSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// BusinessMetadataSchemaRegistryClusterInput is an input type that accepts BusinessMetadataSchemaRegistryClusterArgs and BusinessMetadataSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `BusinessMetadataSchemaRegistryClusterInput` via:
//
//	BusinessMetadataSchemaRegistryClusterArgs{...}
type BusinessMetadataSchemaRegistryClusterInput interface {
	pulumi.Input

	ToBusinessMetadataSchemaRegistryClusterOutput() BusinessMetadataSchemaRegistryClusterOutput
	ToBusinessMetadataSchemaRegistryClusterOutputWithContext(context.Context) BusinessMetadataSchemaRegistryClusterOutput
}

type BusinessMetadataSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (BusinessMetadataSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (i BusinessMetadataSchemaRegistryClusterArgs) ToBusinessMetadataSchemaRegistryClusterOutput() BusinessMetadataSchemaRegistryClusterOutput {
	return i.ToBusinessMetadataSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i BusinessMetadataSchemaRegistryClusterArgs) ToBusinessMetadataSchemaRegistryClusterOutputWithContext(ctx context.Context) BusinessMetadataSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataSchemaRegistryClusterOutput)
}

func (i BusinessMetadataSchemaRegistryClusterArgs) ToBusinessMetadataSchemaRegistryClusterPtrOutput() BusinessMetadataSchemaRegistryClusterPtrOutput {
	return i.ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i BusinessMetadataSchemaRegistryClusterArgs) ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataSchemaRegistryClusterOutput).ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// BusinessMetadataSchemaRegistryClusterPtrInput is an input type that accepts BusinessMetadataSchemaRegistryClusterArgs, BusinessMetadataSchemaRegistryClusterPtr and BusinessMetadataSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `BusinessMetadataSchemaRegistryClusterPtrInput` via:
//
//	        BusinessMetadataSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type BusinessMetadataSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToBusinessMetadataSchemaRegistryClusterPtrOutput() BusinessMetadataSchemaRegistryClusterPtrOutput
	ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Context) BusinessMetadataSchemaRegistryClusterPtrOutput
}

type businessMetadataSchemaRegistryClusterPtrType BusinessMetadataSchemaRegistryClusterArgs

func BusinessMetadataSchemaRegistryClusterPtr(v *BusinessMetadataSchemaRegistryClusterArgs) BusinessMetadataSchemaRegistryClusterPtrInput {
	return (*businessMetadataSchemaRegistryClusterPtrType)(v)
}

func (*businessMetadataSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (i *businessMetadataSchemaRegistryClusterPtrType) ToBusinessMetadataSchemaRegistryClusterPtrOutput() BusinessMetadataSchemaRegistryClusterPtrOutput {
	return i.ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *businessMetadataSchemaRegistryClusterPtrType) ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessMetadataSchemaRegistryClusterPtrOutput)
}

type BusinessMetadataSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (BusinessMetadataSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (o BusinessMetadataSchemaRegistryClusterOutput) ToBusinessMetadataSchemaRegistryClusterOutput() BusinessMetadataSchemaRegistryClusterOutput {
	return o
}

func (o BusinessMetadataSchemaRegistryClusterOutput) ToBusinessMetadataSchemaRegistryClusterOutputWithContext(ctx context.Context) BusinessMetadataSchemaRegistryClusterOutput {
	return o
}

func (o BusinessMetadataSchemaRegistryClusterOutput) ToBusinessMetadataSchemaRegistryClusterPtrOutput() BusinessMetadataSchemaRegistryClusterPtrOutput {
	return o.ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o BusinessMetadataSchemaRegistryClusterOutput) ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BusinessMetadataSchemaRegistryCluster) *BusinessMetadataSchemaRegistryCluster {
		return &v
	}).(BusinessMetadataSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o BusinessMetadataSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BusinessMetadataSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type BusinessMetadataSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (BusinessMetadataSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (o BusinessMetadataSchemaRegistryClusterPtrOutput) ToBusinessMetadataSchemaRegistryClusterPtrOutput() BusinessMetadataSchemaRegistryClusterPtrOutput {
	return o
}

func (o BusinessMetadataSchemaRegistryClusterPtrOutput) ToBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) BusinessMetadataSchemaRegistryClusterPtrOutput {
	return o
}

func (o BusinessMetadataSchemaRegistryClusterPtrOutput) Elem() BusinessMetadataSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *BusinessMetadataSchemaRegistryCluster) BusinessMetadataSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret BusinessMetadataSchemaRegistryCluster
		return ret
	}).(BusinessMetadataSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o BusinessMetadataSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BusinessMetadataSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ByokKeyAws struct {
	// The Amazon Resource Name (ARN) of an AWS KMS key.
	KeyArn string `pulumi:"keyArn"`
	// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment
	Roles []string `pulumi:"roles"`
}

// ByokKeyAwsInput is an input type that accepts ByokKeyAwsArgs and ByokKeyAwsOutput values.
// You can construct a concrete instance of `ByokKeyAwsInput` via:
//
//	ByokKeyAwsArgs{...}
type ByokKeyAwsInput interface {
	pulumi.Input

	ToByokKeyAwsOutput() ByokKeyAwsOutput
	ToByokKeyAwsOutputWithContext(context.Context) ByokKeyAwsOutput
}

type ByokKeyAwsArgs struct {
	// The Amazon Resource Name (ARN) of an AWS KMS key.
	KeyArn pulumi.StringInput `pulumi:"keyArn"`
	// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (ByokKeyAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByokKeyAws)(nil)).Elem()
}

func (i ByokKeyAwsArgs) ToByokKeyAwsOutput() ByokKeyAwsOutput {
	return i.ToByokKeyAwsOutputWithContext(context.Background())
}

func (i ByokKeyAwsArgs) ToByokKeyAwsOutputWithContext(ctx context.Context) ByokKeyAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyAwsOutput)
}

func (i ByokKeyAwsArgs) ToByokKeyAwsPtrOutput() ByokKeyAwsPtrOutput {
	return i.ToByokKeyAwsPtrOutputWithContext(context.Background())
}

func (i ByokKeyAwsArgs) ToByokKeyAwsPtrOutputWithContext(ctx context.Context) ByokKeyAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyAwsOutput).ToByokKeyAwsPtrOutputWithContext(ctx)
}

// ByokKeyAwsPtrInput is an input type that accepts ByokKeyAwsArgs, ByokKeyAwsPtr and ByokKeyAwsPtrOutput values.
// You can construct a concrete instance of `ByokKeyAwsPtrInput` via:
//
//	        ByokKeyAwsArgs{...}
//
//	or:
//
//	        nil
type ByokKeyAwsPtrInput interface {
	pulumi.Input

	ToByokKeyAwsPtrOutput() ByokKeyAwsPtrOutput
	ToByokKeyAwsPtrOutputWithContext(context.Context) ByokKeyAwsPtrOutput
}

type byokKeyAwsPtrType ByokKeyAwsArgs

func ByokKeyAwsPtr(v *ByokKeyAwsArgs) ByokKeyAwsPtrInput {
	return (*byokKeyAwsPtrType)(v)
}

func (*byokKeyAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ByokKeyAws)(nil)).Elem()
}

func (i *byokKeyAwsPtrType) ToByokKeyAwsPtrOutput() ByokKeyAwsPtrOutput {
	return i.ToByokKeyAwsPtrOutputWithContext(context.Background())
}

func (i *byokKeyAwsPtrType) ToByokKeyAwsPtrOutputWithContext(ctx context.Context) ByokKeyAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyAwsPtrOutput)
}

type ByokKeyAwsOutput struct{ *pulumi.OutputState }

func (ByokKeyAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByokKeyAws)(nil)).Elem()
}

func (o ByokKeyAwsOutput) ToByokKeyAwsOutput() ByokKeyAwsOutput {
	return o
}

func (o ByokKeyAwsOutput) ToByokKeyAwsOutputWithContext(ctx context.Context) ByokKeyAwsOutput {
	return o
}

func (o ByokKeyAwsOutput) ToByokKeyAwsPtrOutput() ByokKeyAwsPtrOutput {
	return o.ToByokKeyAwsPtrOutputWithContext(context.Background())
}

func (o ByokKeyAwsOutput) ToByokKeyAwsPtrOutputWithContext(ctx context.Context) ByokKeyAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ByokKeyAws) *ByokKeyAws {
		return &v
	}).(ByokKeyAwsPtrOutput)
}

// The Amazon Resource Name (ARN) of an AWS KMS key.
func (o ByokKeyAwsOutput) KeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v ByokKeyAws) string { return v.KeyArn }).(pulumi.StringOutput)
}

// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment
func (o ByokKeyAwsOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ByokKeyAws) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type ByokKeyAwsPtrOutput struct{ *pulumi.OutputState }

func (ByokKeyAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ByokKeyAws)(nil)).Elem()
}

func (o ByokKeyAwsPtrOutput) ToByokKeyAwsPtrOutput() ByokKeyAwsPtrOutput {
	return o
}

func (o ByokKeyAwsPtrOutput) ToByokKeyAwsPtrOutputWithContext(ctx context.Context) ByokKeyAwsPtrOutput {
	return o
}

func (o ByokKeyAwsPtrOutput) Elem() ByokKeyAwsOutput {
	return o.ApplyT(func(v *ByokKeyAws) ByokKeyAws {
		if v != nil {
			return *v
		}
		var ret ByokKeyAws
		return ret
	}).(ByokKeyAwsOutput)
}

// The Amazon Resource Name (ARN) of an AWS KMS key.
func (o ByokKeyAwsPtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyAws) *string {
		if v == nil {
			return nil
		}
		return &v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment
func (o ByokKeyAwsPtrOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ByokKeyAws) []string {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(pulumi.StringArrayOutput)
}

type ByokKeyAzure struct {
	// (Optional String) The Application ID created for this key-environment combination.
	ApplicationId *string `pulumi:"applicationId"`
	// The unique Key Object Identifier URL of an Azure Key Vault key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// Key Vault ID containing the key.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Tenant ID (uuid) hosting the Key Vault containing the key.
	TenantId string `pulumi:"tenantId"`
}

// ByokKeyAzureInput is an input type that accepts ByokKeyAzureArgs and ByokKeyAzureOutput values.
// You can construct a concrete instance of `ByokKeyAzureInput` via:
//
//	ByokKeyAzureArgs{...}
type ByokKeyAzureInput interface {
	pulumi.Input

	ToByokKeyAzureOutput() ByokKeyAzureOutput
	ToByokKeyAzureOutputWithContext(context.Context) ByokKeyAzureOutput
}

type ByokKeyAzureArgs struct {
	// (Optional String) The Application ID created for this key-environment combination.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// The unique Key Object Identifier URL of an Azure Key Vault key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// Key Vault ID containing the key.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Tenant ID (uuid) hosting the Key Vault containing the key.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (ByokKeyAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByokKeyAzure)(nil)).Elem()
}

func (i ByokKeyAzureArgs) ToByokKeyAzureOutput() ByokKeyAzureOutput {
	return i.ToByokKeyAzureOutputWithContext(context.Background())
}

func (i ByokKeyAzureArgs) ToByokKeyAzureOutputWithContext(ctx context.Context) ByokKeyAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyAzureOutput)
}

func (i ByokKeyAzureArgs) ToByokKeyAzurePtrOutput() ByokKeyAzurePtrOutput {
	return i.ToByokKeyAzurePtrOutputWithContext(context.Background())
}

func (i ByokKeyAzureArgs) ToByokKeyAzurePtrOutputWithContext(ctx context.Context) ByokKeyAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyAzureOutput).ToByokKeyAzurePtrOutputWithContext(ctx)
}

// ByokKeyAzurePtrInput is an input type that accepts ByokKeyAzureArgs, ByokKeyAzurePtr and ByokKeyAzurePtrOutput values.
// You can construct a concrete instance of `ByokKeyAzurePtrInput` via:
//
//	        ByokKeyAzureArgs{...}
//
//	or:
//
//	        nil
type ByokKeyAzurePtrInput interface {
	pulumi.Input

	ToByokKeyAzurePtrOutput() ByokKeyAzurePtrOutput
	ToByokKeyAzurePtrOutputWithContext(context.Context) ByokKeyAzurePtrOutput
}

type byokKeyAzurePtrType ByokKeyAzureArgs

func ByokKeyAzurePtr(v *ByokKeyAzureArgs) ByokKeyAzurePtrInput {
	return (*byokKeyAzurePtrType)(v)
}

func (*byokKeyAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ByokKeyAzure)(nil)).Elem()
}

func (i *byokKeyAzurePtrType) ToByokKeyAzurePtrOutput() ByokKeyAzurePtrOutput {
	return i.ToByokKeyAzurePtrOutputWithContext(context.Background())
}

func (i *byokKeyAzurePtrType) ToByokKeyAzurePtrOutputWithContext(ctx context.Context) ByokKeyAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyAzurePtrOutput)
}

type ByokKeyAzureOutput struct{ *pulumi.OutputState }

func (ByokKeyAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByokKeyAzure)(nil)).Elem()
}

func (o ByokKeyAzureOutput) ToByokKeyAzureOutput() ByokKeyAzureOutput {
	return o
}

func (o ByokKeyAzureOutput) ToByokKeyAzureOutputWithContext(ctx context.Context) ByokKeyAzureOutput {
	return o
}

func (o ByokKeyAzureOutput) ToByokKeyAzurePtrOutput() ByokKeyAzurePtrOutput {
	return o.ToByokKeyAzurePtrOutputWithContext(context.Background())
}

func (o ByokKeyAzureOutput) ToByokKeyAzurePtrOutputWithContext(ctx context.Context) ByokKeyAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ByokKeyAzure) *ByokKeyAzure {
		return &v
	}).(ByokKeyAzurePtrOutput)
}

// (Optional String) The Application ID created for this key-environment combination.
func (o ByokKeyAzureOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ByokKeyAzure) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// The unique Key Object Identifier URL of an Azure Key Vault key.
func (o ByokKeyAzureOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ByokKeyAzure) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// Key Vault ID containing the key.
func (o ByokKeyAzureOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ByokKeyAzure) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Tenant ID (uuid) hosting the Key Vault containing the key.
func (o ByokKeyAzureOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ByokKeyAzure) string { return v.TenantId }).(pulumi.StringOutput)
}

type ByokKeyAzurePtrOutput struct{ *pulumi.OutputState }

func (ByokKeyAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ByokKeyAzure)(nil)).Elem()
}

func (o ByokKeyAzurePtrOutput) ToByokKeyAzurePtrOutput() ByokKeyAzurePtrOutput {
	return o
}

func (o ByokKeyAzurePtrOutput) ToByokKeyAzurePtrOutputWithContext(ctx context.Context) ByokKeyAzurePtrOutput {
	return o
}

func (o ByokKeyAzurePtrOutput) Elem() ByokKeyAzureOutput {
	return o.ApplyT(func(v *ByokKeyAzure) ByokKeyAzure {
		if v != nil {
			return *v
		}
		var ret ByokKeyAzure
		return ret
	}).(ByokKeyAzureOutput)
}

// (Optional String) The Application ID created for this key-environment combination.
func (o ByokKeyAzurePtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyAzure) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// The unique Key Object Identifier URL of an Azure Key Vault key.
func (o ByokKeyAzurePtrOutput) KeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyAzure) *string {
		if v == nil {
			return nil
		}
		return &v.KeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// Key Vault ID containing the key.
func (o ByokKeyAzurePtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyAzure) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// Tenant ID (uuid) hosting the Key Vault containing the key.
func (o ByokKeyAzurePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyAzure) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ByokKeyGcp struct {
	// The Google Cloud Platform key ID.
	KeyId string `pulumi:"keyId"`
	// (Optional String) The Google security group created for this key.
	SecurityGroup *string `pulumi:"securityGroup"`
}

// ByokKeyGcpInput is an input type that accepts ByokKeyGcpArgs and ByokKeyGcpOutput values.
// You can construct a concrete instance of `ByokKeyGcpInput` via:
//
//	ByokKeyGcpArgs{...}
type ByokKeyGcpInput interface {
	pulumi.Input

	ToByokKeyGcpOutput() ByokKeyGcpOutput
	ToByokKeyGcpOutputWithContext(context.Context) ByokKeyGcpOutput
}

type ByokKeyGcpArgs struct {
	// The Google Cloud Platform key ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// (Optional String) The Google security group created for this key.
	SecurityGroup pulumi.StringPtrInput `pulumi:"securityGroup"`
}

func (ByokKeyGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ByokKeyGcp)(nil)).Elem()
}

func (i ByokKeyGcpArgs) ToByokKeyGcpOutput() ByokKeyGcpOutput {
	return i.ToByokKeyGcpOutputWithContext(context.Background())
}

func (i ByokKeyGcpArgs) ToByokKeyGcpOutputWithContext(ctx context.Context) ByokKeyGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyGcpOutput)
}

func (i ByokKeyGcpArgs) ToByokKeyGcpPtrOutput() ByokKeyGcpPtrOutput {
	return i.ToByokKeyGcpPtrOutputWithContext(context.Background())
}

func (i ByokKeyGcpArgs) ToByokKeyGcpPtrOutputWithContext(ctx context.Context) ByokKeyGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyGcpOutput).ToByokKeyGcpPtrOutputWithContext(ctx)
}

// ByokKeyGcpPtrInput is an input type that accepts ByokKeyGcpArgs, ByokKeyGcpPtr and ByokKeyGcpPtrOutput values.
// You can construct a concrete instance of `ByokKeyGcpPtrInput` via:
//
//	        ByokKeyGcpArgs{...}
//
//	or:
//
//	        nil
type ByokKeyGcpPtrInput interface {
	pulumi.Input

	ToByokKeyGcpPtrOutput() ByokKeyGcpPtrOutput
	ToByokKeyGcpPtrOutputWithContext(context.Context) ByokKeyGcpPtrOutput
}

type byokKeyGcpPtrType ByokKeyGcpArgs

func ByokKeyGcpPtr(v *ByokKeyGcpArgs) ByokKeyGcpPtrInput {
	return (*byokKeyGcpPtrType)(v)
}

func (*byokKeyGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ByokKeyGcp)(nil)).Elem()
}

func (i *byokKeyGcpPtrType) ToByokKeyGcpPtrOutput() ByokKeyGcpPtrOutput {
	return i.ToByokKeyGcpPtrOutputWithContext(context.Background())
}

func (i *byokKeyGcpPtrType) ToByokKeyGcpPtrOutputWithContext(ctx context.Context) ByokKeyGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ByokKeyGcpPtrOutput)
}

type ByokKeyGcpOutput struct{ *pulumi.OutputState }

func (ByokKeyGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ByokKeyGcp)(nil)).Elem()
}

func (o ByokKeyGcpOutput) ToByokKeyGcpOutput() ByokKeyGcpOutput {
	return o
}

func (o ByokKeyGcpOutput) ToByokKeyGcpOutputWithContext(ctx context.Context) ByokKeyGcpOutput {
	return o
}

func (o ByokKeyGcpOutput) ToByokKeyGcpPtrOutput() ByokKeyGcpPtrOutput {
	return o.ToByokKeyGcpPtrOutputWithContext(context.Background())
}

func (o ByokKeyGcpOutput) ToByokKeyGcpPtrOutputWithContext(ctx context.Context) ByokKeyGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ByokKeyGcp) *ByokKeyGcp {
		return &v
	}).(ByokKeyGcpPtrOutput)
}

// The Google Cloud Platform key ID.
func (o ByokKeyGcpOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ByokKeyGcp) string { return v.KeyId }).(pulumi.StringOutput)
}

// (Optional String) The Google security group created for this key.
func (o ByokKeyGcpOutput) SecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ByokKeyGcp) *string { return v.SecurityGroup }).(pulumi.StringPtrOutput)
}

type ByokKeyGcpPtrOutput struct{ *pulumi.OutputState }

func (ByokKeyGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ByokKeyGcp)(nil)).Elem()
}

func (o ByokKeyGcpPtrOutput) ToByokKeyGcpPtrOutput() ByokKeyGcpPtrOutput {
	return o
}

func (o ByokKeyGcpPtrOutput) ToByokKeyGcpPtrOutputWithContext(ctx context.Context) ByokKeyGcpPtrOutput {
	return o
}

func (o ByokKeyGcpPtrOutput) Elem() ByokKeyGcpOutput {
	return o.ApplyT(func(v *ByokKeyGcp) ByokKeyGcp {
		if v != nil {
			return *v
		}
		var ret ByokKeyGcp
		return ret
	}).(ByokKeyGcpOutput)
}

// The Google Cloud Platform key ID.
func (o ByokKeyGcpPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyGcp) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

// (Optional String) The Google security group created for this key.
func (o ByokKeyGcpPtrOutput) SecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ByokKeyGcp) *string {
		if v == nil {
			return nil
		}
		return v.SecurityGroup
	}).(pulumi.StringPtrOutput)
}

type CatalogEntityAttributesCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// CatalogEntityAttributesCredentialsInput is an input type that accepts CatalogEntityAttributesCredentialsArgs and CatalogEntityAttributesCredentialsOutput values.
// You can construct a concrete instance of `CatalogEntityAttributesCredentialsInput` via:
//
//	CatalogEntityAttributesCredentialsArgs{...}
type CatalogEntityAttributesCredentialsInput interface {
	pulumi.Input

	ToCatalogEntityAttributesCredentialsOutput() CatalogEntityAttributesCredentialsOutput
	ToCatalogEntityAttributesCredentialsOutputWithContext(context.Context) CatalogEntityAttributesCredentialsOutput
}

type CatalogEntityAttributesCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (CatalogEntityAttributesCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEntityAttributesCredentials)(nil)).Elem()
}

func (i CatalogEntityAttributesCredentialsArgs) ToCatalogEntityAttributesCredentialsOutput() CatalogEntityAttributesCredentialsOutput {
	return i.ToCatalogEntityAttributesCredentialsOutputWithContext(context.Background())
}

func (i CatalogEntityAttributesCredentialsArgs) ToCatalogEntityAttributesCredentialsOutputWithContext(ctx context.Context) CatalogEntityAttributesCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntityAttributesCredentialsOutput)
}

func (i CatalogEntityAttributesCredentialsArgs) ToCatalogEntityAttributesCredentialsPtrOutput() CatalogEntityAttributesCredentialsPtrOutput {
	return i.ToCatalogEntityAttributesCredentialsPtrOutputWithContext(context.Background())
}

func (i CatalogEntityAttributesCredentialsArgs) ToCatalogEntityAttributesCredentialsPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntityAttributesCredentialsOutput).ToCatalogEntityAttributesCredentialsPtrOutputWithContext(ctx)
}

// CatalogEntityAttributesCredentialsPtrInput is an input type that accepts CatalogEntityAttributesCredentialsArgs, CatalogEntityAttributesCredentialsPtr and CatalogEntityAttributesCredentialsPtrOutput values.
// You can construct a concrete instance of `CatalogEntityAttributesCredentialsPtrInput` via:
//
//	        CatalogEntityAttributesCredentialsArgs{...}
//
//	or:
//
//	        nil
type CatalogEntityAttributesCredentialsPtrInput interface {
	pulumi.Input

	ToCatalogEntityAttributesCredentialsPtrOutput() CatalogEntityAttributesCredentialsPtrOutput
	ToCatalogEntityAttributesCredentialsPtrOutputWithContext(context.Context) CatalogEntityAttributesCredentialsPtrOutput
}

type catalogEntityAttributesCredentialsPtrType CatalogEntityAttributesCredentialsArgs

func CatalogEntityAttributesCredentialsPtr(v *CatalogEntityAttributesCredentialsArgs) CatalogEntityAttributesCredentialsPtrInput {
	return (*catalogEntityAttributesCredentialsPtrType)(v)
}

func (*catalogEntityAttributesCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogEntityAttributesCredentials)(nil)).Elem()
}

func (i *catalogEntityAttributesCredentialsPtrType) ToCatalogEntityAttributesCredentialsPtrOutput() CatalogEntityAttributesCredentialsPtrOutput {
	return i.ToCatalogEntityAttributesCredentialsPtrOutputWithContext(context.Background())
}

func (i *catalogEntityAttributesCredentialsPtrType) ToCatalogEntityAttributesCredentialsPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntityAttributesCredentialsPtrOutput)
}

type CatalogEntityAttributesCredentialsOutput struct{ *pulumi.OutputState }

func (CatalogEntityAttributesCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEntityAttributesCredentials)(nil)).Elem()
}

func (o CatalogEntityAttributesCredentialsOutput) ToCatalogEntityAttributesCredentialsOutput() CatalogEntityAttributesCredentialsOutput {
	return o
}

func (o CatalogEntityAttributesCredentialsOutput) ToCatalogEntityAttributesCredentialsOutputWithContext(ctx context.Context) CatalogEntityAttributesCredentialsOutput {
	return o
}

func (o CatalogEntityAttributesCredentialsOutput) ToCatalogEntityAttributesCredentialsPtrOutput() CatalogEntityAttributesCredentialsPtrOutput {
	return o.ToCatalogEntityAttributesCredentialsPtrOutputWithContext(context.Background())
}

func (o CatalogEntityAttributesCredentialsOutput) ToCatalogEntityAttributesCredentialsPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CatalogEntityAttributesCredentials) *CatalogEntityAttributesCredentials {
		return &v
	}).(CatalogEntityAttributesCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o CatalogEntityAttributesCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogEntityAttributesCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o CatalogEntityAttributesCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogEntityAttributesCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type CatalogEntityAttributesCredentialsPtrOutput struct{ *pulumi.OutputState }

func (CatalogEntityAttributesCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogEntityAttributesCredentials)(nil)).Elem()
}

func (o CatalogEntityAttributesCredentialsPtrOutput) ToCatalogEntityAttributesCredentialsPtrOutput() CatalogEntityAttributesCredentialsPtrOutput {
	return o
}

func (o CatalogEntityAttributesCredentialsPtrOutput) ToCatalogEntityAttributesCredentialsPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesCredentialsPtrOutput {
	return o
}

func (o CatalogEntityAttributesCredentialsPtrOutput) Elem() CatalogEntityAttributesCredentialsOutput {
	return o.ApplyT(func(v *CatalogEntityAttributesCredentials) CatalogEntityAttributesCredentials {
		if v != nil {
			return *v
		}
		var ret CatalogEntityAttributesCredentials
		return ret
	}).(CatalogEntityAttributesCredentialsOutput)
}

// The Schema Registry API Key.
func (o CatalogEntityAttributesCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogEntityAttributesCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o CatalogEntityAttributesCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogEntityAttributesCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type CatalogEntityAttributesSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// CatalogEntityAttributesSchemaRegistryClusterInput is an input type that accepts CatalogEntityAttributesSchemaRegistryClusterArgs and CatalogEntityAttributesSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `CatalogEntityAttributesSchemaRegistryClusterInput` via:
//
//	CatalogEntityAttributesSchemaRegistryClusterArgs{...}
type CatalogEntityAttributesSchemaRegistryClusterInput interface {
	pulumi.Input

	ToCatalogEntityAttributesSchemaRegistryClusterOutput() CatalogEntityAttributesSchemaRegistryClusterOutput
	ToCatalogEntityAttributesSchemaRegistryClusterOutputWithContext(context.Context) CatalogEntityAttributesSchemaRegistryClusterOutput
}

type CatalogEntityAttributesSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (CatalogEntityAttributesSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEntityAttributesSchemaRegistryCluster)(nil)).Elem()
}

func (i CatalogEntityAttributesSchemaRegistryClusterArgs) ToCatalogEntityAttributesSchemaRegistryClusterOutput() CatalogEntityAttributesSchemaRegistryClusterOutput {
	return i.ToCatalogEntityAttributesSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i CatalogEntityAttributesSchemaRegistryClusterArgs) ToCatalogEntityAttributesSchemaRegistryClusterOutputWithContext(ctx context.Context) CatalogEntityAttributesSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntityAttributesSchemaRegistryClusterOutput)
}

func (i CatalogEntityAttributesSchemaRegistryClusterArgs) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutput() CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return i.ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i CatalogEntityAttributesSchemaRegistryClusterArgs) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntityAttributesSchemaRegistryClusterOutput).ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// CatalogEntityAttributesSchemaRegistryClusterPtrInput is an input type that accepts CatalogEntityAttributesSchemaRegistryClusterArgs, CatalogEntityAttributesSchemaRegistryClusterPtr and CatalogEntityAttributesSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `CatalogEntityAttributesSchemaRegistryClusterPtrInput` via:
//
//	        CatalogEntityAttributesSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type CatalogEntityAttributesSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToCatalogEntityAttributesSchemaRegistryClusterPtrOutput() CatalogEntityAttributesSchemaRegistryClusterPtrOutput
	ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(context.Context) CatalogEntityAttributesSchemaRegistryClusterPtrOutput
}

type catalogEntityAttributesSchemaRegistryClusterPtrType CatalogEntityAttributesSchemaRegistryClusterArgs

func CatalogEntityAttributesSchemaRegistryClusterPtr(v *CatalogEntityAttributesSchemaRegistryClusterArgs) CatalogEntityAttributesSchemaRegistryClusterPtrInput {
	return (*catalogEntityAttributesSchemaRegistryClusterPtrType)(v)
}

func (*catalogEntityAttributesSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogEntityAttributesSchemaRegistryCluster)(nil)).Elem()
}

func (i *catalogEntityAttributesSchemaRegistryClusterPtrType) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutput() CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return i.ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *catalogEntityAttributesSchemaRegistryClusterPtrType) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CatalogEntityAttributesSchemaRegistryClusterPtrOutput)
}

type CatalogEntityAttributesSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (CatalogEntityAttributesSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CatalogEntityAttributesSchemaRegistryCluster)(nil)).Elem()
}

func (o CatalogEntityAttributesSchemaRegistryClusterOutput) ToCatalogEntityAttributesSchemaRegistryClusterOutput() CatalogEntityAttributesSchemaRegistryClusterOutput {
	return o
}

func (o CatalogEntityAttributesSchemaRegistryClusterOutput) ToCatalogEntityAttributesSchemaRegistryClusterOutputWithContext(ctx context.Context) CatalogEntityAttributesSchemaRegistryClusterOutput {
	return o
}

func (o CatalogEntityAttributesSchemaRegistryClusterOutput) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutput() CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return o.ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o CatalogEntityAttributesSchemaRegistryClusterOutput) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CatalogEntityAttributesSchemaRegistryCluster) *CatalogEntityAttributesSchemaRegistryCluster {
		return &v
	}).(CatalogEntityAttributesSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o CatalogEntityAttributesSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CatalogEntityAttributesSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type CatalogEntityAttributesSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (CatalogEntityAttributesSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CatalogEntityAttributesSchemaRegistryCluster)(nil)).Elem()
}

func (o CatalogEntityAttributesSchemaRegistryClusterPtrOutput) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutput() CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return o
}

func (o CatalogEntityAttributesSchemaRegistryClusterPtrOutput) ToCatalogEntityAttributesSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) CatalogEntityAttributesSchemaRegistryClusterPtrOutput {
	return o
}

func (o CatalogEntityAttributesSchemaRegistryClusterPtrOutput) Elem() CatalogEntityAttributesSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *CatalogEntityAttributesSchemaRegistryCluster) CatalogEntityAttributesSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret CatalogEntityAttributesSchemaRegistryCluster
		return ret
	}).(CatalogEntityAttributesSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o CatalogEntityAttributesSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CatalogEntityAttributesSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkDestinationKafkaCluster struct {
	// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint *string `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials *ClusterLinkDestinationKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// ClusterLinkDestinationKafkaClusterInput is an input type that accepts ClusterLinkDestinationKafkaClusterArgs and ClusterLinkDestinationKafkaClusterOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterInput` via:
//
//	ClusterLinkDestinationKafkaClusterArgs{...}
type ClusterLinkDestinationKafkaClusterInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterOutput() ClusterLinkDestinationKafkaClusterOutput
	ToClusterLinkDestinationKafkaClusterOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterOutput
}

type ClusterLinkDestinationKafkaClusterArgs struct {
	// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint pulumi.StringPtrInput `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials ClusterLinkDestinationKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (ClusterLinkDestinationKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterOutput() ClusterLinkDestinationKafkaClusterOutput {
	return i.ToClusterLinkDestinationKafkaClusterOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterOutput)
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterArgs) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterOutput).ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx)
}

// ClusterLinkDestinationKafkaClusterPtrInput is an input type that accepts ClusterLinkDestinationKafkaClusterArgs, ClusterLinkDestinationKafkaClusterPtr and ClusterLinkDestinationKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterPtrInput` via:
//
//	        ClusterLinkDestinationKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkDestinationKafkaClusterPtrInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput
	ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterPtrOutput
}

type clusterLinkDestinationKafkaClusterPtrType ClusterLinkDestinationKafkaClusterArgs

func ClusterLinkDestinationKafkaClusterPtr(v *ClusterLinkDestinationKafkaClusterArgs) ClusterLinkDestinationKafkaClusterPtrInput {
	return (*clusterLinkDestinationKafkaClusterPtrType)(v)
}

func (*clusterLinkDestinationKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (i *clusterLinkDestinationKafkaClusterPtrType) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *clusterLinkDestinationKafkaClusterPtrType) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterPtrOutput)
}

type ClusterLinkDestinationKafkaClusterOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterOutput() ClusterLinkDestinationKafkaClusterOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return o.ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ClusterLinkDestinationKafkaClusterOutput) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkDestinationKafkaCluster) *ClusterLinkDestinationKafkaCluster {
		return &v
	}).(ClusterLinkDestinationKafkaClusterPtrOutput)
}

// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkDestinationKafkaClusterOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) *string { return v.BootstrapEndpoint }).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkDestinationKafkaClusterOutput) Credentials() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) *ClusterLinkDestinationKafkaClusterCredentials {
		return v.Credentials
	}).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkDestinationKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkDestinationKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterLinkDestinationKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) ToClusterLinkDestinationKafkaClusterPtrOutput() ClusterLinkDestinationKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) ToClusterLinkDestinationKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterPtrOutput) Elem() ClusterLinkDestinationKafkaClusterOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) ClusterLinkDestinationKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ClusterLinkDestinationKafkaCluster
		return ret
	}).(ClusterLinkDestinationKafkaClusterOutput)
}

// The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkDestinationKafkaClusterPtrOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkDestinationKafkaClusterPtrOutput) Credentials() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *ClusterLinkDestinationKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkDestinationKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkDestinationKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkDestinationKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// ClusterLinkDestinationKafkaClusterCredentialsInput is an input type that accepts ClusterLinkDestinationKafkaClusterCredentialsArgs and ClusterLinkDestinationKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterCredentialsInput` via:
//
//	ClusterLinkDestinationKafkaClusterCredentialsArgs{...}
type ClusterLinkDestinationKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterCredentialsOutput() ClusterLinkDestinationKafkaClusterCredentialsOutput
	ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterCredentialsOutput
}

type ClusterLinkDestinationKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterLinkDestinationKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsOutput() ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return i.ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterCredentialsOutput)
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterLinkDestinationKafkaClusterCredentialsArgs) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterCredentialsOutput).ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// ClusterLinkDestinationKafkaClusterCredentialsPtrInput is an input type that accepts ClusterLinkDestinationKafkaClusterCredentialsArgs, ClusterLinkDestinationKafkaClusterCredentialsPtr and ClusterLinkDestinationKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterLinkDestinationKafkaClusterCredentialsPtrInput` via:
//
//	        ClusterLinkDestinationKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkDestinationKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput
	ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput
}

type clusterLinkDestinationKafkaClusterCredentialsPtrType ClusterLinkDestinationKafkaClusterCredentialsArgs

func ClusterLinkDestinationKafkaClusterCredentialsPtr(v *ClusterLinkDestinationKafkaClusterCredentialsArgs) ClusterLinkDestinationKafkaClusterCredentialsPtrInput {
	return (*clusterLinkDestinationKafkaClusterCredentialsPtrType)(v)
}

func (*clusterLinkDestinationKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (i *clusterLinkDestinationKafkaClusterCredentialsPtrType) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterLinkDestinationKafkaClusterCredentialsPtrType) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

type ClusterLinkDestinationKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsOutput() ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkDestinationKafkaClusterCredentials) *ClusterLinkDestinationKafkaClusterCredentials {
		return &v
	}).(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o ClusterLinkDestinationKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkDestinationKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterLinkDestinationKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkDestinationKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutput() ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) ToClusterLinkDestinationKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkDestinationKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) Elem() ClusterLinkDestinationKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaClusterCredentials) ClusterLinkDestinationKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterLinkDestinationKafkaClusterCredentials
		return ret
	}).(ClusterLinkDestinationKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o ClusterLinkDestinationKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkDestinationKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkLocalKafkaCluster struct {
	// The bootstrap endpoint of the local Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint *string `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials *ClusterLinkLocalKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the local Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the local Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// ClusterLinkLocalKafkaClusterInput is an input type that accepts ClusterLinkLocalKafkaClusterArgs and ClusterLinkLocalKafkaClusterOutput values.
// You can construct a concrete instance of `ClusterLinkLocalKafkaClusterInput` via:
//
//	ClusterLinkLocalKafkaClusterArgs{...}
type ClusterLinkLocalKafkaClusterInput interface {
	pulumi.Input

	ToClusterLinkLocalKafkaClusterOutput() ClusterLinkLocalKafkaClusterOutput
	ToClusterLinkLocalKafkaClusterOutputWithContext(context.Context) ClusterLinkLocalKafkaClusterOutput
}

type ClusterLinkLocalKafkaClusterArgs struct {
	// The bootstrap endpoint of the local Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint pulumi.StringPtrInput `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials ClusterLinkLocalKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the local Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the local Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (ClusterLinkLocalKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkLocalKafkaCluster)(nil)).Elem()
}

func (i ClusterLinkLocalKafkaClusterArgs) ToClusterLinkLocalKafkaClusterOutput() ClusterLinkLocalKafkaClusterOutput {
	return i.ToClusterLinkLocalKafkaClusterOutputWithContext(context.Background())
}

func (i ClusterLinkLocalKafkaClusterArgs) ToClusterLinkLocalKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkLocalKafkaClusterOutput)
}

func (i ClusterLinkLocalKafkaClusterArgs) ToClusterLinkLocalKafkaClusterPtrOutput() ClusterLinkLocalKafkaClusterPtrOutput {
	return i.ToClusterLinkLocalKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ClusterLinkLocalKafkaClusterArgs) ToClusterLinkLocalKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkLocalKafkaClusterOutput).ToClusterLinkLocalKafkaClusterPtrOutputWithContext(ctx)
}

// ClusterLinkLocalKafkaClusterPtrInput is an input type that accepts ClusterLinkLocalKafkaClusterArgs, ClusterLinkLocalKafkaClusterPtr and ClusterLinkLocalKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ClusterLinkLocalKafkaClusterPtrInput` via:
//
//	        ClusterLinkLocalKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkLocalKafkaClusterPtrInput interface {
	pulumi.Input

	ToClusterLinkLocalKafkaClusterPtrOutput() ClusterLinkLocalKafkaClusterPtrOutput
	ToClusterLinkLocalKafkaClusterPtrOutputWithContext(context.Context) ClusterLinkLocalKafkaClusterPtrOutput
}

type clusterLinkLocalKafkaClusterPtrType ClusterLinkLocalKafkaClusterArgs

func ClusterLinkLocalKafkaClusterPtr(v *ClusterLinkLocalKafkaClusterArgs) ClusterLinkLocalKafkaClusterPtrInput {
	return (*clusterLinkLocalKafkaClusterPtrType)(v)
}

func (*clusterLinkLocalKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkLocalKafkaCluster)(nil)).Elem()
}

func (i *clusterLinkLocalKafkaClusterPtrType) ToClusterLinkLocalKafkaClusterPtrOutput() ClusterLinkLocalKafkaClusterPtrOutput {
	return i.ToClusterLinkLocalKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *clusterLinkLocalKafkaClusterPtrType) ToClusterLinkLocalKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkLocalKafkaClusterPtrOutput)
}

type ClusterLinkLocalKafkaClusterOutput struct{ *pulumi.OutputState }

func (ClusterLinkLocalKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkLocalKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkLocalKafkaClusterOutput) ToClusterLinkLocalKafkaClusterOutput() ClusterLinkLocalKafkaClusterOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterOutput) ToClusterLinkLocalKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterOutput) ToClusterLinkLocalKafkaClusterPtrOutput() ClusterLinkLocalKafkaClusterPtrOutput {
	return o.ToClusterLinkLocalKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ClusterLinkLocalKafkaClusterOutput) ToClusterLinkLocalKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkLocalKafkaCluster) *ClusterLinkLocalKafkaCluster {
		return &v
	}).(ClusterLinkLocalKafkaClusterPtrOutput)
}

// The bootstrap endpoint of the local Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkLocalKafkaClusterOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkLocalKafkaCluster) *string { return v.BootstrapEndpoint }).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkLocalKafkaClusterOutput) Credentials() ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterLinkLocalKafkaCluster) *ClusterLinkLocalKafkaClusterCredentials { return v.Credentials }).(ClusterLinkLocalKafkaClusterCredentialsPtrOutput)
}

// The ID of the local Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkLocalKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkLocalKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the local Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkLocalKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkLocalKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterLinkLocalKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkLocalKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkLocalKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkLocalKafkaClusterPtrOutput) ToClusterLinkLocalKafkaClusterPtrOutput() ClusterLinkLocalKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterPtrOutput) ToClusterLinkLocalKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterPtrOutput) Elem() ClusterLinkLocalKafkaClusterOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaCluster) ClusterLinkLocalKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ClusterLinkLocalKafkaCluster
		return ret
	}).(ClusterLinkLocalKafkaClusterOutput)
}

// The bootstrap endpoint of the local Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkLocalKafkaClusterPtrOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkLocalKafkaClusterPtrOutput) Credentials() ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaCluster) *ClusterLinkLocalKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterLinkLocalKafkaClusterCredentialsPtrOutput)
}

// The ID of the local Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkLocalKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the local Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkLocalKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkLocalKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// ClusterLinkLocalKafkaClusterCredentialsInput is an input type that accepts ClusterLinkLocalKafkaClusterCredentialsArgs and ClusterLinkLocalKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `ClusterLinkLocalKafkaClusterCredentialsInput` via:
//
//	ClusterLinkLocalKafkaClusterCredentialsArgs{...}
type ClusterLinkLocalKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToClusterLinkLocalKafkaClusterCredentialsOutput() ClusterLinkLocalKafkaClusterCredentialsOutput
	ToClusterLinkLocalKafkaClusterCredentialsOutputWithContext(context.Context) ClusterLinkLocalKafkaClusterCredentialsOutput
}

type ClusterLinkLocalKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterLinkLocalKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkLocalKafkaClusterCredentials)(nil)).Elem()
}

func (i ClusterLinkLocalKafkaClusterCredentialsArgs) ToClusterLinkLocalKafkaClusterCredentialsOutput() ClusterLinkLocalKafkaClusterCredentialsOutput {
	return i.ToClusterLinkLocalKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i ClusterLinkLocalKafkaClusterCredentialsArgs) ToClusterLinkLocalKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkLocalKafkaClusterCredentialsOutput)
}

func (i ClusterLinkLocalKafkaClusterCredentialsArgs) ToClusterLinkLocalKafkaClusterCredentialsPtrOutput() ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterLinkLocalKafkaClusterCredentialsArgs) ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkLocalKafkaClusterCredentialsOutput).ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// ClusterLinkLocalKafkaClusterCredentialsPtrInput is an input type that accepts ClusterLinkLocalKafkaClusterCredentialsArgs, ClusterLinkLocalKafkaClusterCredentialsPtr and ClusterLinkLocalKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterLinkLocalKafkaClusterCredentialsPtrInput` via:
//
//	        ClusterLinkLocalKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkLocalKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToClusterLinkLocalKafkaClusterCredentialsPtrOutput() ClusterLinkLocalKafkaClusterCredentialsPtrOutput
	ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(context.Context) ClusterLinkLocalKafkaClusterCredentialsPtrOutput
}

type clusterLinkLocalKafkaClusterCredentialsPtrType ClusterLinkLocalKafkaClusterCredentialsArgs

func ClusterLinkLocalKafkaClusterCredentialsPtr(v *ClusterLinkLocalKafkaClusterCredentialsArgs) ClusterLinkLocalKafkaClusterCredentialsPtrInput {
	return (*clusterLinkLocalKafkaClusterCredentialsPtrType)(v)
}

func (*clusterLinkLocalKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkLocalKafkaClusterCredentials)(nil)).Elem()
}

func (i *clusterLinkLocalKafkaClusterCredentialsPtrType) ToClusterLinkLocalKafkaClusterCredentialsPtrOutput() ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterLinkLocalKafkaClusterCredentialsPtrType) ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkLocalKafkaClusterCredentialsPtrOutput)
}

type ClusterLinkLocalKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterLinkLocalKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkLocalKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkLocalKafkaClusterCredentialsOutput) ToClusterLinkLocalKafkaClusterCredentialsOutput() ClusterLinkLocalKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterCredentialsOutput) ToClusterLinkLocalKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterCredentialsOutput) ToClusterLinkLocalKafkaClusterCredentialsPtrOutput() ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return o.ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterLinkLocalKafkaClusterCredentialsOutput) ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkLocalKafkaClusterCredentials) *ClusterLinkLocalKafkaClusterCredentials {
		return &v
	}).(ClusterLinkLocalKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o ClusterLinkLocalKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkLocalKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o ClusterLinkLocalKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkLocalKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterLinkLocalKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkLocalKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkLocalKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkLocalKafkaClusterCredentialsPtrOutput) ToClusterLinkLocalKafkaClusterCredentialsPtrOutput() ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterCredentialsPtrOutput) ToClusterLinkLocalKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkLocalKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkLocalKafkaClusterCredentialsPtrOutput) Elem() ClusterLinkLocalKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaClusterCredentials) ClusterLinkLocalKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterLinkLocalKafkaClusterCredentials
		return ret
	}).(ClusterLinkLocalKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o ClusterLinkLocalKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o ClusterLinkLocalKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkLocalKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkRemoteKafkaCluster struct {
	// The bootstrap endpoint of the remote Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint *string `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials *ClusterLinkRemoteKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the remote Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the remote Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// ClusterLinkRemoteKafkaClusterInput is an input type that accepts ClusterLinkRemoteKafkaClusterArgs and ClusterLinkRemoteKafkaClusterOutput values.
// You can construct a concrete instance of `ClusterLinkRemoteKafkaClusterInput` via:
//
//	ClusterLinkRemoteKafkaClusterArgs{...}
type ClusterLinkRemoteKafkaClusterInput interface {
	pulumi.Input

	ToClusterLinkRemoteKafkaClusterOutput() ClusterLinkRemoteKafkaClusterOutput
	ToClusterLinkRemoteKafkaClusterOutputWithContext(context.Context) ClusterLinkRemoteKafkaClusterOutput
}

type ClusterLinkRemoteKafkaClusterArgs struct {
	// The bootstrap endpoint of the remote Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint pulumi.StringPtrInput `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials ClusterLinkRemoteKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the remote Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the remote Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (ClusterLinkRemoteKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkRemoteKafkaCluster)(nil)).Elem()
}

func (i ClusterLinkRemoteKafkaClusterArgs) ToClusterLinkRemoteKafkaClusterOutput() ClusterLinkRemoteKafkaClusterOutput {
	return i.ToClusterLinkRemoteKafkaClusterOutputWithContext(context.Background())
}

func (i ClusterLinkRemoteKafkaClusterArgs) ToClusterLinkRemoteKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkRemoteKafkaClusterOutput)
}

func (i ClusterLinkRemoteKafkaClusterArgs) ToClusterLinkRemoteKafkaClusterPtrOutput() ClusterLinkRemoteKafkaClusterPtrOutput {
	return i.ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ClusterLinkRemoteKafkaClusterArgs) ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkRemoteKafkaClusterOutput).ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(ctx)
}

// ClusterLinkRemoteKafkaClusterPtrInput is an input type that accepts ClusterLinkRemoteKafkaClusterArgs, ClusterLinkRemoteKafkaClusterPtr and ClusterLinkRemoteKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ClusterLinkRemoteKafkaClusterPtrInput` via:
//
//	        ClusterLinkRemoteKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkRemoteKafkaClusterPtrInput interface {
	pulumi.Input

	ToClusterLinkRemoteKafkaClusterPtrOutput() ClusterLinkRemoteKafkaClusterPtrOutput
	ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(context.Context) ClusterLinkRemoteKafkaClusterPtrOutput
}

type clusterLinkRemoteKafkaClusterPtrType ClusterLinkRemoteKafkaClusterArgs

func ClusterLinkRemoteKafkaClusterPtr(v *ClusterLinkRemoteKafkaClusterArgs) ClusterLinkRemoteKafkaClusterPtrInput {
	return (*clusterLinkRemoteKafkaClusterPtrType)(v)
}

func (*clusterLinkRemoteKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkRemoteKafkaCluster)(nil)).Elem()
}

func (i *clusterLinkRemoteKafkaClusterPtrType) ToClusterLinkRemoteKafkaClusterPtrOutput() ClusterLinkRemoteKafkaClusterPtrOutput {
	return i.ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *clusterLinkRemoteKafkaClusterPtrType) ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkRemoteKafkaClusterPtrOutput)
}

type ClusterLinkRemoteKafkaClusterOutput struct{ *pulumi.OutputState }

func (ClusterLinkRemoteKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkRemoteKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkRemoteKafkaClusterOutput) ToClusterLinkRemoteKafkaClusterOutput() ClusterLinkRemoteKafkaClusterOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterOutput) ToClusterLinkRemoteKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterOutput) ToClusterLinkRemoteKafkaClusterPtrOutput() ClusterLinkRemoteKafkaClusterPtrOutput {
	return o.ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ClusterLinkRemoteKafkaClusterOutput) ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkRemoteKafkaCluster) *ClusterLinkRemoteKafkaCluster {
		return &v
	}).(ClusterLinkRemoteKafkaClusterPtrOutput)
}

// The bootstrap endpoint of the remote Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkRemoteKafkaClusterOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkRemoteKafkaCluster) *string { return v.BootstrapEndpoint }).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkRemoteKafkaClusterOutput) Credentials() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterLinkRemoteKafkaCluster) *ClusterLinkRemoteKafkaClusterCredentials { return v.Credentials }).(ClusterLinkRemoteKafkaClusterCredentialsPtrOutput)
}

// The ID of the remote Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkRemoteKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkRemoteKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the remote Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkRemoteKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkRemoteKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterLinkRemoteKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkRemoteKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkRemoteKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkRemoteKafkaClusterPtrOutput) ToClusterLinkRemoteKafkaClusterPtrOutput() ClusterLinkRemoteKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterPtrOutput) ToClusterLinkRemoteKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterPtrOutput) Elem() ClusterLinkRemoteKafkaClusterOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaCluster) ClusterLinkRemoteKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ClusterLinkRemoteKafkaCluster
		return ret
	}).(ClusterLinkRemoteKafkaClusterOutput)
}

// The bootstrap endpoint of the remote Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkRemoteKafkaClusterPtrOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkRemoteKafkaClusterPtrOutput) Credentials() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaCluster) *ClusterLinkRemoteKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterLinkRemoteKafkaClusterCredentialsPtrOutput)
}

// The ID of the remote Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkRemoteKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the remote Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkRemoteKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkRemoteKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// ClusterLinkRemoteKafkaClusterCredentialsInput is an input type that accepts ClusterLinkRemoteKafkaClusterCredentialsArgs and ClusterLinkRemoteKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `ClusterLinkRemoteKafkaClusterCredentialsInput` via:
//
//	ClusterLinkRemoteKafkaClusterCredentialsArgs{...}
type ClusterLinkRemoteKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToClusterLinkRemoteKafkaClusterCredentialsOutput() ClusterLinkRemoteKafkaClusterCredentialsOutput
	ToClusterLinkRemoteKafkaClusterCredentialsOutputWithContext(context.Context) ClusterLinkRemoteKafkaClusterCredentialsOutput
}

type ClusterLinkRemoteKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterLinkRemoteKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkRemoteKafkaClusterCredentials)(nil)).Elem()
}

func (i ClusterLinkRemoteKafkaClusterCredentialsArgs) ToClusterLinkRemoteKafkaClusterCredentialsOutput() ClusterLinkRemoteKafkaClusterCredentialsOutput {
	return i.ToClusterLinkRemoteKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i ClusterLinkRemoteKafkaClusterCredentialsArgs) ToClusterLinkRemoteKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkRemoteKafkaClusterCredentialsOutput)
}

func (i ClusterLinkRemoteKafkaClusterCredentialsArgs) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutput() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterLinkRemoteKafkaClusterCredentialsArgs) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkRemoteKafkaClusterCredentialsOutput).ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// ClusterLinkRemoteKafkaClusterCredentialsPtrInput is an input type that accepts ClusterLinkRemoteKafkaClusterCredentialsArgs, ClusterLinkRemoteKafkaClusterCredentialsPtr and ClusterLinkRemoteKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterLinkRemoteKafkaClusterCredentialsPtrInput` via:
//
//	        ClusterLinkRemoteKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkRemoteKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToClusterLinkRemoteKafkaClusterCredentialsPtrOutput() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput
	ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(context.Context) ClusterLinkRemoteKafkaClusterCredentialsPtrOutput
}

type clusterLinkRemoteKafkaClusterCredentialsPtrType ClusterLinkRemoteKafkaClusterCredentialsArgs

func ClusterLinkRemoteKafkaClusterCredentialsPtr(v *ClusterLinkRemoteKafkaClusterCredentialsArgs) ClusterLinkRemoteKafkaClusterCredentialsPtrInput {
	return (*clusterLinkRemoteKafkaClusterCredentialsPtrType)(v)
}

func (*clusterLinkRemoteKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkRemoteKafkaClusterCredentials)(nil)).Elem()
}

func (i *clusterLinkRemoteKafkaClusterCredentialsPtrType) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutput() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterLinkRemoteKafkaClusterCredentialsPtrType) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkRemoteKafkaClusterCredentialsPtrOutput)
}

type ClusterLinkRemoteKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterLinkRemoteKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkRemoteKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkRemoteKafkaClusterCredentialsOutput) ToClusterLinkRemoteKafkaClusterCredentialsOutput() ClusterLinkRemoteKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterCredentialsOutput) ToClusterLinkRemoteKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterCredentialsOutput) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutput() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return o.ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterLinkRemoteKafkaClusterCredentialsOutput) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkRemoteKafkaClusterCredentials) *ClusterLinkRemoteKafkaClusterCredentials {
		return &v
	}).(ClusterLinkRemoteKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o ClusterLinkRemoteKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkRemoteKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o ClusterLinkRemoteKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkRemoteKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterLinkRemoteKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkRemoteKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkRemoteKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkRemoteKafkaClusterCredentialsPtrOutput) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutput() ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterCredentialsPtrOutput) ToClusterLinkRemoteKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkRemoteKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkRemoteKafkaClusterCredentialsPtrOutput) Elem() ClusterLinkRemoteKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaClusterCredentials) ClusterLinkRemoteKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterLinkRemoteKafkaClusterCredentials
		return ret
	}).(ClusterLinkRemoteKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o ClusterLinkRemoteKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o ClusterLinkRemoteKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkRemoteKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkSourceKafkaCluster struct {
	// The bootstrap endpoint of the source Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint *string `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials *ClusterLinkSourceKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the source Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the source Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// ClusterLinkSourceKafkaClusterInput is an input type that accepts ClusterLinkSourceKafkaClusterArgs and ClusterLinkSourceKafkaClusterOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterInput` via:
//
//	ClusterLinkSourceKafkaClusterArgs{...}
type ClusterLinkSourceKafkaClusterInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterOutput() ClusterLinkSourceKafkaClusterOutput
	ToClusterLinkSourceKafkaClusterOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterOutput
}

type ClusterLinkSourceKafkaClusterArgs struct {
	// The bootstrap endpoint of the source Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
	BootstrapEndpoint pulumi.StringPtrInput `pulumi:"bootstrapEndpoint"`
	// The Kafka API Credentials.
	Credentials ClusterLinkSourceKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the source Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the source Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (ClusterLinkSourceKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterOutput() ClusterLinkSourceKafkaClusterOutput {
	return i.ToClusterLinkSourceKafkaClusterOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterOutput)
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterArgs) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterOutput).ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx)
}

// ClusterLinkSourceKafkaClusterPtrInput is an input type that accepts ClusterLinkSourceKafkaClusterArgs, ClusterLinkSourceKafkaClusterPtr and ClusterLinkSourceKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterPtrInput` via:
//
//	        ClusterLinkSourceKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkSourceKafkaClusterPtrInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput
	ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterPtrOutput
}

type clusterLinkSourceKafkaClusterPtrType ClusterLinkSourceKafkaClusterArgs

func ClusterLinkSourceKafkaClusterPtr(v *ClusterLinkSourceKafkaClusterArgs) ClusterLinkSourceKafkaClusterPtrInput {
	return (*clusterLinkSourceKafkaClusterPtrType)(v)
}

func (*clusterLinkSourceKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (i *clusterLinkSourceKafkaClusterPtrType) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *clusterLinkSourceKafkaClusterPtrType) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterPtrOutput)
}

type ClusterLinkSourceKafkaClusterOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterOutput() ClusterLinkSourceKafkaClusterOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return o.ToClusterLinkSourceKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ClusterLinkSourceKafkaClusterOutput) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkSourceKafkaCluster) *ClusterLinkSourceKafkaCluster {
		return &v
	}).(ClusterLinkSourceKafkaClusterPtrOutput)
}

// The bootstrap endpoint of the source Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkSourceKafkaClusterOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) *string { return v.BootstrapEndpoint }).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkSourceKafkaClusterOutput) Credentials() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) *ClusterLinkSourceKafkaClusterCredentials { return v.Credentials }).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

// The ID of the source Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkSourceKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the source Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkSourceKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type ClusterLinkSourceKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaCluster)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) ToClusterLinkSourceKafkaClusterPtrOutput() ClusterLinkSourceKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) ToClusterLinkSourceKafkaClusterPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterPtrOutput) Elem() ClusterLinkSourceKafkaClusterOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) ClusterLinkSourceKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ClusterLinkSourceKafkaCluster
		return ret
	}).(ClusterLinkSourceKafkaClusterOutput)
}

// The bootstrap endpoint of the source Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
func (o ClusterLinkSourceKafkaClusterPtrOutput) BootstrapEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.BootstrapEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Credentials.
func (o ClusterLinkSourceKafkaClusterPtrOutput) Credentials() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *ClusterLinkSourceKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

// The ID of the source Kafka cluster, for example, `lkc-abc123`.
func (o ClusterLinkSourceKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the source Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o ClusterLinkSourceKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type ClusterLinkSourceKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// ClusterLinkSourceKafkaClusterCredentialsInput is an input type that accepts ClusterLinkSourceKafkaClusterCredentialsArgs and ClusterLinkSourceKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterCredentialsInput` via:
//
//	ClusterLinkSourceKafkaClusterCredentialsArgs{...}
type ClusterLinkSourceKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterCredentialsOutput() ClusterLinkSourceKafkaClusterCredentialsOutput
	ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterCredentialsOutput
}

type ClusterLinkSourceKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (ClusterLinkSourceKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsOutput() ClusterLinkSourceKafkaClusterCredentialsOutput {
	return i.ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterCredentialsOutput)
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i ClusterLinkSourceKafkaClusterCredentialsArgs) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterCredentialsOutput).ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// ClusterLinkSourceKafkaClusterCredentialsPtrInput is an input type that accepts ClusterLinkSourceKafkaClusterCredentialsArgs, ClusterLinkSourceKafkaClusterCredentialsPtr and ClusterLinkSourceKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `ClusterLinkSourceKafkaClusterCredentialsPtrInput` via:
//
//	        ClusterLinkSourceKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type ClusterLinkSourceKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput
	ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput
}

type clusterLinkSourceKafkaClusterCredentialsPtrType ClusterLinkSourceKafkaClusterCredentialsArgs

func ClusterLinkSourceKafkaClusterCredentialsPtr(v *ClusterLinkSourceKafkaClusterCredentialsArgs) ClusterLinkSourceKafkaClusterCredentialsPtrInput {
	return (*clusterLinkSourceKafkaClusterCredentialsPtrType)(v)
}

func (*clusterLinkSourceKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (i *clusterLinkSourceKafkaClusterCredentialsPtrType) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return i.ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *clusterLinkSourceKafkaClusterCredentialsPtrType) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

type ClusterLinkSourceKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsOutput() ClusterLinkSourceKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o ClusterLinkSourceKafkaClusterCredentialsOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLinkSourceKafkaClusterCredentials) *ClusterLinkSourceKafkaClusterCredentials {
		return &v
	}).(ClusterLinkSourceKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o ClusterLinkSourceKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o ClusterLinkSourceKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterLinkSourceKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type ClusterLinkSourceKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLinkSourceKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLinkSourceKafkaClusterCredentials)(nil)).Elem()
}

func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutput() ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) ToClusterLinkSourceKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) ClusterLinkSourceKafkaClusterCredentialsPtrOutput {
	return o
}

func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) Elem() ClusterLinkSourceKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaClusterCredentials) ClusterLinkSourceKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret ClusterLinkSourceKafkaClusterCredentials
		return ret
	}).(ClusterLinkSourceKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o ClusterLinkSourceKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLinkSourceKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type ConnectorEnvironment struct {
	// The ID of the Environment that the connector belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// ConnectorEnvironmentInput is an input type that accepts ConnectorEnvironmentArgs and ConnectorEnvironmentOutput values.
// You can construct a concrete instance of `ConnectorEnvironmentInput` via:
//
//	ConnectorEnvironmentArgs{...}
type ConnectorEnvironmentInput interface {
	pulumi.Input

	ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput
	ToConnectorEnvironmentOutputWithContext(context.Context) ConnectorEnvironmentOutput
}

type ConnectorEnvironmentArgs struct {
	// The ID of the Environment that the connector belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ConnectorEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorEnvironment)(nil)).Elem()
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput {
	return i.ToConnectorEnvironmentOutputWithContext(context.Background())
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentOutputWithContext(ctx context.Context) ConnectorEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentOutput)
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return i.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (i ConnectorEnvironmentArgs) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentOutput).ToConnectorEnvironmentPtrOutputWithContext(ctx)
}

// ConnectorEnvironmentPtrInput is an input type that accepts ConnectorEnvironmentArgs, ConnectorEnvironmentPtr and ConnectorEnvironmentPtrOutput values.
// You can construct a concrete instance of `ConnectorEnvironmentPtrInput` via:
//
//	        ConnectorEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ConnectorEnvironmentPtrInput interface {
	pulumi.Input

	ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput
	ToConnectorEnvironmentPtrOutputWithContext(context.Context) ConnectorEnvironmentPtrOutput
}

type connectorEnvironmentPtrType ConnectorEnvironmentArgs

func ConnectorEnvironmentPtr(v *ConnectorEnvironmentArgs) ConnectorEnvironmentPtrInput {
	return (*connectorEnvironmentPtrType)(v)
}

func (*connectorEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorEnvironment)(nil)).Elem()
}

func (i *connectorEnvironmentPtrType) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return i.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (i *connectorEnvironmentPtrType) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorEnvironmentPtrOutput)
}

type ConnectorEnvironmentOutput struct{ *pulumi.OutputState }

func (ConnectorEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorEnvironment)(nil)).Elem()
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentOutput() ConnectorEnvironmentOutput {
	return o
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentOutputWithContext(ctx context.Context) ConnectorEnvironmentOutput {
	return o
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return o.ToConnectorEnvironmentPtrOutputWithContext(context.Background())
}

func (o ConnectorEnvironmentOutput) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorEnvironment) *ConnectorEnvironment {
		return &v
	}).(ConnectorEnvironmentPtrOutput)
}

// The ID of the Environment that the connector belongs to, for example, `env-abc123`.
func (o ConnectorEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type ConnectorEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ConnectorEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorEnvironment)(nil)).Elem()
}

func (o ConnectorEnvironmentPtrOutput) ToConnectorEnvironmentPtrOutput() ConnectorEnvironmentPtrOutput {
	return o
}

func (o ConnectorEnvironmentPtrOutput) ToConnectorEnvironmentPtrOutputWithContext(ctx context.Context) ConnectorEnvironmentPtrOutput {
	return o
}

func (o ConnectorEnvironmentPtrOutput) Elem() ConnectorEnvironmentOutput {
	return o.ApplyT(func(v *ConnectorEnvironment) ConnectorEnvironment {
		if v != nil {
			return *v
		}
		var ret ConnectorEnvironment
		return ret
	}).(ConnectorEnvironmentOutput)
}

// The ID of the Environment that the connector belongs to, for example, `env-abc123`.
func (o ConnectorEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type ConnectorKafkaCluster struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// ConnectorKafkaClusterInput is an input type that accepts ConnectorKafkaClusterArgs and ConnectorKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterInput` via:
//
//	ConnectorKafkaClusterArgs{...}
type ConnectorKafkaClusterInput interface {
	pulumi.Input

	ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput
	ToConnectorKafkaClusterOutputWithContext(context.Context) ConnectorKafkaClusterOutput
}

type ConnectorKafkaClusterArgs struct {
	// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ConnectorKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return i.ToConnectorKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput)
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput).ToConnectorKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterPtrInput is an input type that accepts ConnectorKafkaClusterArgs, ConnectorKafkaClusterPtr and ConnectorKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterPtrInput` via:
//
//	        ConnectorKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type ConnectorKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput
	ToConnectorKafkaClusterPtrOutputWithContext(context.Context) ConnectorKafkaClusterPtrOutput
}

type connectorKafkaClusterPtrType ConnectorKafkaClusterArgs

func ConnectorKafkaClusterPtr(v *ConnectorKafkaClusterArgs) ConnectorKafkaClusterPtrInput {
	return (*connectorKafkaClusterPtrType)(v)
}

func (*connectorKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterPtrOutput)
}

type ConnectorKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaCluster) *ConnectorKafkaCluster {
		return &v
	}).(ConnectorKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type ConnectorKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) Elem() ConnectorKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) ConnectorKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaCluster
		return ret
	}).(ConnectorKafkaClusterOutput)
}

// The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
func (o ConnectorKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type DnsForwarderEnvironment struct {
	// The ID of the Environment that the DNS Forwarder belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// DnsForwarderEnvironmentInput is an input type that accepts DnsForwarderEnvironmentArgs and DnsForwarderEnvironmentOutput values.
// You can construct a concrete instance of `DnsForwarderEnvironmentInput` via:
//
//	DnsForwarderEnvironmentArgs{...}
type DnsForwarderEnvironmentInput interface {
	pulumi.Input

	ToDnsForwarderEnvironmentOutput() DnsForwarderEnvironmentOutput
	ToDnsForwarderEnvironmentOutputWithContext(context.Context) DnsForwarderEnvironmentOutput
}

type DnsForwarderEnvironmentArgs struct {
	// The ID of the Environment that the DNS Forwarder belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (DnsForwarderEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsForwarderEnvironment)(nil)).Elem()
}

func (i DnsForwarderEnvironmentArgs) ToDnsForwarderEnvironmentOutput() DnsForwarderEnvironmentOutput {
	return i.ToDnsForwarderEnvironmentOutputWithContext(context.Background())
}

func (i DnsForwarderEnvironmentArgs) ToDnsForwarderEnvironmentOutputWithContext(ctx context.Context) DnsForwarderEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderEnvironmentOutput)
}

func (i DnsForwarderEnvironmentArgs) ToDnsForwarderEnvironmentPtrOutput() DnsForwarderEnvironmentPtrOutput {
	return i.ToDnsForwarderEnvironmentPtrOutputWithContext(context.Background())
}

func (i DnsForwarderEnvironmentArgs) ToDnsForwarderEnvironmentPtrOutputWithContext(ctx context.Context) DnsForwarderEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderEnvironmentOutput).ToDnsForwarderEnvironmentPtrOutputWithContext(ctx)
}

// DnsForwarderEnvironmentPtrInput is an input type that accepts DnsForwarderEnvironmentArgs, DnsForwarderEnvironmentPtr and DnsForwarderEnvironmentPtrOutput values.
// You can construct a concrete instance of `DnsForwarderEnvironmentPtrInput` via:
//
//	        DnsForwarderEnvironmentArgs{...}
//
//	or:
//
//	        nil
type DnsForwarderEnvironmentPtrInput interface {
	pulumi.Input

	ToDnsForwarderEnvironmentPtrOutput() DnsForwarderEnvironmentPtrOutput
	ToDnsForwarderEnvironmentPtrOutputWithContext(context.Context) DnsForwarderEnvironmentPtrOutput
}

type dnsForwarderEnvironmentPtrType DnsForwarderEnvironmentArgs

func DnsForwarderEnvironmentPtr(v *DnsForwarderEnvironmentArgs) DnsForwarderEnvironmentPtrInput {
	return (*dnsForwarderEnvironmentPtrType)(v)
}

func (*dnsForwarderEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsForwarderEnvironment)(nil)).Elem()
}

func (i *dnsForwarderEnvironmentPtrType) ToDnsForwarderEnvironmentPtrOutput() DnsForwarderEnvironmentPtrOutput {
	return i.ToDnsForwarderEnvironmentPtrOutputWithContext(context.Background())
}

func (i *dnsForwarderEnvironmentPtrType) ToDnsForwarderEnvironmentPtrOutputWithContext(ctx context.Context) DnsForwarderEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderEnvironmentPtrOutput)
}

type DnsForwarderEnvironmentOutput struct{ *pulumi.OutputState }

func (DnsForwarderEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsForwarderEnvironment)(nil)).Elem()
}

func (o DnsForwarderEnvironmentOutput) ToDnsForwarderEnvironmentOutput() DnsForwarderEnvironmentOutput {
	return o
}

func (o DnsForwarderEnvironmentOutput) ToDnsForwarderEnvironmentOutputWithContext(ctx context.Context) DnsForwarderEnvironmentOutput {
	return o
}

func (o DnsForwarderEnvironmentOutput) ToDnsForwarderEnvironmentPtrOutput() DnsForwarderEnvironmentPtrOutput {
	return o.ToDnsForwarderEnvironmentPtrOutputWithContext(context.Background())
}

func (o DnsForwarderEnvironmentOutput) ToDnsForwarderEnvironmentPtrOutputWithContext(ctx context.Context) DnsForwarderEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsForwarderEnvironment) *DnsForwarderEnvironment {
		return &v
	}).(DnsForwarderEnvironmentPtrOutput)
}

// The ID of the Environment that the DNS Forwarder belongs to, for example, `env-abc123`.
func (o DnsForwarderEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DnsForwarderEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type DnsForwarderEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (DnsForwarderEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsForwarderEnvironment)(nil)).Elem()
}

func (o DnsForwarderEnvironmentPtrOutput) ToDnsForwarderEnvironmentPtrOutput() DnsForwarderEnvironmentPtrOutput {
	return o
}

func (o DnsForwarderEnvironmentPtrOutput) ToDnsForwarderEnvironmentPtrOutputWithContext(ctx context.Context) DnsForwarderEnvironmentPtrOutput {
	return o
}

func (o DnsForwarderEnvironmentPtrOutput) Elem() DnsForwarderEnvironmentOutput {
	return o.ApplyT(func(v *DnsForwarderEnvironment) DnsForwarderEnvironment {
		if v != nil {
			return *v
		}
		var ret DnsForwarderEnvironment
		return ret
	}).(DnsForwarderEnvironmentOutput)
}

// The ID of the Environment that the DNS Forwarder belongs to, for example, `env-abc123`.
func (o DnsForwarderEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsForwarderEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type DnsForwarderForwardViaIp struct {
	// List of IP addresses of the DNS server.
	DnsServerIps []string `pulumi:"dnsServerIps"`
}

// DnsForwarderForwardViaIpInput is an input type that accepts DnsForwarderForwardViaIpArgs and DnsForwarderForwardViaIpOutput values.
// You can construct a concrete instance of `DnsForwarderForwardViaIpInput` via:
//
//	DnsForwarderForwardViaIpArgs{...}
type DnsForwarderForwardViaIpInput interface {
	pulumi.Input

	ToDnsForwarderForwardViaIpOutput() DnsForwarderForwardViaIpOutput
	ToDnsForwarderForwardViaIpOutputWithContext(context.Context) DnsForwarderForwardViaIpOutput
}

type DnsForwarderForwardViaIpArgs struct {
	// List of IP addresses of the DNS server.
	DnsServerIps pulumi.StringArrayInput `pulumi:"dnsServerIps"`
}

func (DnsForwarderForwardViaIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsForwarderForwardViaIp)(nil)).Elem()
}

func (i DnsForwarderForwardViaIpArgs) ToDnsForwarderForwardViaIpOutput() DnsForwarderForwardViaIpOutput {
	return i.ToDnsForwarderForwardViaIpOutputWithContext(context.Background())
}

func (i DnsForwarderForwardViaIpArgs) ToDnsForwarderForwardViaIpOutputWithContext(ctx context.Context) DnsForwarderForwardViaIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderForwardViaIpOutput)
}

func (i DnsForwarderForwardViaIpArgs) ToDnsForwarderForwardViaIpPtrOutput() DnsForwarderForwardViaIpPtrOutput {
	return i.ToDnsForwarderForwardViaIpPtrOutputWithContext(context.Background())
}

func (i DnsForwarderForwardViaIpArgs) ToDnsForwarderForwardViaIpPtrOutputWithContext(ctx context.Context) DnsForwarderForwardViaIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderForwardViaIpOutput).ToDnsForwarderForwardViaIpPtrOutputWithContext(ctx)
}

// DnsForwarderForwardViaIpPtrInput is an input type that accepts DnsForwarderForwardViaIpArgs, DnsForwarderForwardViaIpPtr and DnsForwarderForwardViaIpPtrOutput values.
// You can construct a concrete instance of `DnsForwarderForwardViaIpPtrInput` via:
//
//	        DnsForwarderForwardViaIpArgs{...}
//
//	or:
//
//	        nil
type DnsForwarderForwardViaIpPtrInput interface {
	pulumi.Input

	ToDnsForwarderForwardViaIpPtrOutput() DnsForwarderForwardViaIpPtrOutput
	ToDnsForwarderForwardViaIpPtrOutputWithContext(context.Context) DnsForwarderForwardViaIpPtrOutput
}

type dnsForwarderForwardViaIpPtrType DnsForwarderForwardViaIpArgs

func DnsForwarderForwardViaIpPtr(v *DnsForwarderForwardViaIpArgs) DnsForwarderForwardViaIpPtrInput {
	return (*dnsForwarderForwardViaIpPtrType)(v)
}

func (*dnsForwarderForwardViaIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsForwarderForwardViaIp)(nil)).Elem()
}

func (i *dnsForwarderForwardViaIpPtrType) ToDnsForwarderForwardViaIpPtrOutput() DnsForwarderForwardViaIpPtrOutput {
	return i.ToDnsForwarderForwardViaIpPtrOutputWithContext(context.Background())
}

func (i *dnsForwarderForwardViaIpPtrType) ToDnsForwarderForwardViaIpPtrOutputWithContext(ctx context.Context) DnsForwarderForwardViaIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderForwardViaIpPtrOutput)
}

type DnsForwarderForwardViaIpOutput struct{ *pulumi.OutputState }

func (DnsForwarderForwardViaIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsForwarderForwardViaIp)(nil)).Elem()
}

func (o DnsForwarderForwardViaIpOutput) ToDnsForwarderForwardViaIpOutput() DnsForwarderForwardViaIpOutput {
	return o
}

func (o DnsForwarderForwardViaIpOutput) ToDnsForwarderForwardViaIpOutputWithContext(ctx context.Context) DnsForwarderForwardViaIpOutput {
	return o
}

func (o DnsForwarderForwardViaIpOutput) ToDnsForwarderForwardViaIpPtrOutput() DnsForwarderForwardViaIpPtrOutput {
	return o.ToDnsForwarderForwardViaIpPtrOutputWithContext(context.Background())
}

func (o DnsForwarderForwardViaIpOutput) ToDnsForwarderForwardViaIpPtrOutputWithContext(ctx context.Context) DnsForwarderForwardViaIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsForwarderForwardViaIp) *DnsForwarderForwardViaIp {
		return &v
	}).(DnsForwarderForwardViaIpPtrOutput)
}

// List of IP addresses of the DNS server.
func (o DnsForwarderForwardViaIpOutput) DnsServerIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DnsForwarderForwardViaIp) []string { return v.DnsServerIps }).(pulumi.StringArrayOutput)
}

type DnsForwarderForwardViaIpPtrOutput struct{ *pulumi.OutputState }

func (DnsForwarderForwardViaIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsForwarderForwardViaIp)(nil)).Elem()
}

func (o DnsForwarderForwardViaIpPtrOutput) ToDnsForwarderForwardViaIpPtrOutput() DnsForwarderForwardViaIpPtrOutput {
	return o
}

func (o DnsForwarderForwardViaIpPtrOutput) ToDnsForwarderForwardViaIpPtrOutputWithContext(ctx context.Context) DnsForwarderForwardViaIpPtrOutput {
	return o
}

func (o DnsForwarderForwardViaIpPtrOutput) Elem() DnsForwarderForwardViaIpOutput {
	return o.ApplyT(func(v *DnsForwarderForwardViaIp) DnsForwarderForwardViaIp {
		if v != nil {
			return *v
		}
		var ret DnsForwarderForwardViaIp
		return ret
	}).(DnsForwarderForwardViaIpOutput)
}

// List of IP addresses of the DNS server.
func (o DnsForwarderForwardViaIpPtrOutput) DnsServerIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsForwarderForwardViaIp) []string {
		if v == nil {
			return nil
		}
		return v.DnsServerIps
	}).(pulumi.StringArrayOutput)
}

type DnsForwarderGateway struct {
	// The ID of the gateway to which the DNS Forwarder belongs, for example, `gw-abc123`.
	Id string `pulumi:"id"`
}

// DnsForwarderGatewayInput is an input type that accepts DnsForwarderGatewayArgs and DnsForwarderGatewayOutput values.
// You can construct a concrete instance of `DnsForwarderGatewayInput` via:
//
//	DnsForwarderGatewayArgs{...}
type DnsForwarderGatewayInput interface {
	pulumi.Input

	ToDnsForwarderGatewayOutput() DnsForwarderGatewayOutput
	ToDnsForwarderGatewayOutputWithContext(context.Context) DnsForwarderGatewayOutput
}

type DnsForwarderGatewayArgs struct {
	// The ID of the gateway to which the DNS Forwarder belongs, for example, `gw-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (DnsForwarderGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsForwarderGateway)(nil)).Elem()
}

func (i DnsForwarderGatewayArgs) ToDnsForwarderGatewayOutput() DnsForwarderGatewayOutput {
	return i.ToDnsForwarderGatewayOutputWithContext(context.Background())
}

func (i DnsForwarderGatewayArgs) ToDnsForwarderGatewayOutputWithContext(ctx context.Context) DnsForwarderGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderGatewayOutput)
}

func (i DnsForwarderGatewayArgs) ToDnsForwarderGatewayPtrOutput() DnsForwarderGatewayPtrOutput {
	return i.ToDnsForwarderGatewayPtrOutputWithContext(context.Background())
}

func (i DnsForwarderGatewayArgs) ToDnsForwarderGatewayPtrOutputWithContext(ctx context.Context) DnsForwarderGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderGatewayOutput).ToDnsForwarderGatewayPtrOutputWithContext(ctx)
}

// DnsForwarderGatewayPtrInput is an input type that accepts DnsForwarderGatewayArgs, DnsForwarderGatewayPtr and DnsForwarderGatewayPtrOutput values.
// You can construct a concrete instance of `DnsForwarderGatewayPtrInput` via:
//
//	        DnsForwarderGatewayArgs{...}
//
//	or:
//
//	        nil
type DnsForwarderGatewayPtrInput interface {
	pulumi.Input

	ToDnsForwarderGatewayPtrOutput() DnsForwarderGatewayPtrOutput
	ToDnsForwarderGatewayPtrOutputWithContext(context.Context) DnsForwarderGatewayPtrOutput
}

type dnsForwarderGatewayPtrType DnsForwarderGatewayArgs

func DnsForwarderGatewayPtr(v *DnsForwarderGatewayArgs) DnsForwarderGatewayPtrInput {
	return (*dnsForwarderGatewayPtrType)(v)
}

func (*dnsForwarderGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsForwarderGateway)(nil)).Elem()
}

func (i *dnsForwarderGatewayPtrType) ToDnsForwarderGatewayPtrOutput() DnsForwarderGatewayPtrOutput {
	return i.ToDnsForwarderGatewayPtrOutputWithContext(context.Background())
}

func (i *dnsForwarderGatewayPtrType) ToDnsForwarderGatewayPtrOutputWithContext(ctx context.Context) DnsForwarderGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsForwarderGatewayPtrOutput)
}

type DnsForwarderGatewayOutput struct{ *pulumi.OutputState }

func (DnsForwarderGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsForwarderGateway)(nil)).Elem()
}

func (o DnsForwarderGatewayOutput) ToDnsForwarderGatewayOutput() DnsForwarderGatewayOutput {
	return o
}

func (o DnsForwarderGatewayOutput) ToDnsForwarderGatewayOutputWithContext(ctx context.Context) DnsForwarderGatewayOutput {
	return o
}

func (o DnsForwarderGatewayOutput) ToDnsForwarderGatewayPtrOutput() DnsForwarderGatewayPtrOutput {
	return o.ToDnsForwarderGatewayPtrOutputWithContext(context.Background())
}

func (o DnsForwarderGatewayOutput) ToDnsForwarderGatewayPtrOutputWithContext(ctx context.Context) DnsForwarderGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsForwarderGateway) *DnsForwarderGateway {
		return &v
	}).(DnsForwarderGatewayPtrOutput)
}

// The ID of the gateway to which the DNS Forwarder belongs, for example, `gw-abc123`.
func (o DnsForwarderGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DnsForwarderGateway) string { return v.Id }).(pulumi.StringOutput)
}

type DnsForwarderGatewayPtrOutput struct{ *pulumi.OutputState }

func (DnsForwarderGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsForwarderGateway)(nil)).Elem()
}

func (o DnsForwarderGatewayPtrOutput) ToDnsForwarderGatewayPtrOutput() DnsForwarderGatewayPtrOutput {
	return o
}

func (o DnsForwarderGatewayPtrOutput) ToDnsForwarderGatewayPtrOutputWithContext(ctx context.Context) DnsForwarderGatewayPtrOutput {
	return o
}

func (o DnsForwarderGatewayPtrOutput) Elem() DnsForwarderGatewayOutput {
	return o.ApplyT(func(v *DnsForwarderGateway) DnsForwarderGateway {
		if v != nil {
			return *v
		}
		var ret DnsForwarderGateway
		return ret
	}).(DnsForwarderGatewayOutput)
}

// The ID of the gateway to which the DNS Forwarder belongs, for example, `gw-abc123`.
func (o DnsForwarderGatewayPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsForwarderGateway) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type DnsRecordEnvironment struct {
	// The ID of the Environment that the DNS Record belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// DnsRecordEnvironmentInput is an input type that accepts DnsRecordEnvironmentArgs and DnsRecordEnvironmentOutput values.
// You can construct a concrete instance of `DnsRecordEnvironmentInput` via:
//
//	DnsRecordEnvironmentArgs{...}
type DnsRecordEnvironmentInput interface {
	pulumi.Input

	ToDnsRecordEnvironmentOutput() DnsRecordEnvironmentOutput
	ToDnsRecordEnvironmentOutputWithContext(context.Context) DnsRecordEnvironmentOutput
}

type DnsRecordEnvironmentArgs struct {
	// The ID of the Environment that the DNS Record belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (DnsRecordEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordEnvironment)(nil)).Elem()
}

func (i DnsRecordEnvironmentArgs) ToDnsRecordEnvironmentOutput() DnsRecordEnvironmentOutput {
	return i.ToDnsRecordEnvironmentOutputWithContext(context.Background())
}

func (i DnsRecordEnvironmentArgs) ToDnsRecordEnvironmentOutputWithContext(ctx context.Context) DnsRecordEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordEnvironmentOutput)
}

func (i DnsRecordEnvironmentArgs) ToDnsRecordEnvironmentPtrOutput() DnsRecordEnvironmentPtrOutput {
	return i.ToDnsRecordEnvironmentPtrOutputWithContext(context.Background())
}

func (i DnsRecordEnvironmentArgs) ToDnsRecordEnvironmentPtrOutputWithContext(ctx context.Context) DnsRecordEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordEnvironmentOutput).ToDnsRecordEnvironmentPtrOutputWithContext(ctx)
}

// DnsRecordEnvironmentPtrInput is an input type that accepts DnsRecordEnvironmentArgs, DnsRecordEnvironmentPtr and DnsRecordEnvironmentPtrOutput values.
// You can construct a concrete instance of `DnsRecordEnvironmentPtrInput` via:
//
//	        DnsRecordEnvironmentArgs{...}
//
//	or:
//
//	        nil
type DnsRecordEnvironmentPtrInput interface {
	pulumi.Input

	ToDnsRecordEnvironmentPtrOutput() DnsRecordEnvironmentPtrOutput
	ToDnsRecordEnvironmentPtrOutputWithContext(context.Context) DnsRecordEnvironmentPtrOutput
}

type dnsRecordEnvironmentPtrType DnsRecordEnvironmentArgs

func DnsRecordEnvironmentPtr(v *DnsRecordEnvironmentArgs) DnsRecordEnvironmentPtrInput {
	return (*dnsRecordEnvironmentPtrType)(v)
}

func (*dnsRecordEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordEnvironment)(nil)).Elem()
}

func (i *dnsRecordEnvironmentPtrType) ToDnsRecordEnvironmentPtrOutput() DnsRecordEnvironmentPtrOutput {
	return i.ToDnsRecordEnvironmentPtrOutputWithContext(context.Background())
}

func (i *dnsRecordEnvironmentPtrType) ToDnsRecordEnvironmentPtrOutputWithContext(ctx context.Context) DnsRecordEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordEnvironmentPtrOutput)
}

type DnsRecordEnvironmentOutput struct{ *pulumi.OutputState }

func (DnsRecordEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordEnvironment)(nil)).Elem()
}

func (o DnsRecordEnvironmentOutput) ToDnsRecordEnvironmentOutput() DnsRecordEnvironmentOutput {
	return o
}

func (o DnsRecordEnvironmentOutput) ToDnsRecordEnvironmentOutputWithContext(ctx context.Context) DnsRecordEnvironmentOutput {
	return o
}

func (o DnsRecordEnvironmentOutput) ToDnsRecordEnvironmentPtrOutput() DnsRecordEnvironmentPtrOutput {
	return o.ToDnsRecordEnvironmentPtrOutputWithContext(context.Background())
}

func (o DnsRecordEnvironmentOutput) ToDnsRecordEnvironmentPtrOutputWithContext(ctx context.Context) DnsRecordEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsRecordEnvironment) *DnsRecordEnvironment {
		return &v
	}).(DnsRecordEnvironmentPtrOutput)
}

// The ID of the Environment that the DNS Record belongs to, for example, `env-abc123`.
func (o DnsRecordEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DnsRecordEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type DnsRecordEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (DnsRecordEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordEnvironment)(nil)).Elem()
}

func (o DnsRecordEnvironmentPtrOutput) ToDnsRecordEnvironmentPtrOutput() DnsRecordEnvironmentPtrOutput {
	return o
}

func (o DnsRecordEnvironmentPtrOutput) ToDnsRecordEnvironmentPtrOutputWithContext(ctx context.Context) DnsRecordEnvironmentPtrOutput {
	return o
}

func (o DnsRecordEnvironmentPtrOutput) Elem() DnsRecordEnvironmentOutput {
	return o.ApplyT(func(v *DnsRecordEnvironment) DnsRecordEnvironment {
		if v != nil {
			return *v
		}
		var ret DnsRecordEnvironment
		return ret
	}).(DnsRecordEnvironmentOutput)
}

// The ID of the Environment that the DNS Record belongs to, for example, `env-abc123`.
func (o DnsRecordEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecordEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type DnsRecordGateway struct {
	// The ID of the gateway to which the DNS Record belongs, for example, `gw-abc123`.
	Id string `pulumi:"id"`
}

// DnsRecordGatewayInput is an input type that accepts DnsRecordGatewayArgs and DnsRecordGatewayOutput values.
// You can construct a concrete instance of `DnsRecordGatewayInput` via:
//
//	DnsRecordGatewayArgs{...}
type DnsRecordGatewayInput interface {
	pulumi.Input

	ToDnsRecordGatewayOutput() DnsRecordGatewayOutput
	ToDnsRecordGatewayOutputWithContext(context.Context) DnsRecordGatewayOutput
}

type DnsRecordGatewayArgs struct {
	// The ID of the gateway to which the DNS Record belongs, for example, `gw-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (DnsRecordGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordGateway)(nil)).Elem()
}

func (i DnsRecordGatewayArgs) ToDnsRecordGatewayOutput() DnsRecordGatewayOutput {
	return i.ToDnsRecordGatewayOutputWithContext(context.Background())
}

func (i DnsRecordGatewayArgs) ToDnsRecordGatewayOutputWithContext(ctx context.Context) DnsRecordGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordGatewayOutput)
}

func (i DnsRecordGatewayArgs) ToDnsRecordGatewayPtrOutput() DnsRecordGatewayPtrOutput {
	return i.ToDnsRecordGatewayPtrOutputWithContext(context.Background())
}

func (i DnsRecordGatewayArgs) ToDnsRecordGatewayPtrOutputWithContext(ctx context.Context) DnsRecordGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordGatewayOutput).ToDnsRecordGatewayPtrOutputWithContext(ctx)
}

// DnsRecordGatewayPtrInput is an input type that accepts DnsRecordGatewayArgs, DnsRecordGatewayPtr and DnsRecordGatewayPtrOutput values.
// You can construct a concrete instance of `DnsRecordGatewayPtrInput` via:
//
//	        DnsRecordGatewayArgs{...}
//
//	or:
//
//	        nil
type DnsRecordGatewayPtrInput interface {
	pulumi.Input

	ToDnsRecordGatewayPtrOutput() DnsRecordGatewayPtrOutput
	ToDnsRecordGatewayPtrOutputWithContext(context.Context) DnsRecordGatewayPtrOutput
}

type dnsRecordGatewayPtrType DnsRecordGatewayArgs

func DnsRecordGatewayPtr(v *DnsRecordGatewayArgs) DnsRecordGatewayPtrInput {
	return (*dnsRecordGatewayPtrType)(v)
}

func (*dnsRecordGatewayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordGateway)(nil)).Elem()
}

func (i *dnsRecordGatewayPtrType) ToDnsRecordGatewayPtrOutput() DnsRecordGatewayPtrOutput {
	return i.ToDnsRecordGatewayPtrOutputWithContext(context.Background())
}

func (i *dnsRecordGatewayPtrType) ToDnsRecordGatewayPtrOutputWithContext(ctx context.Context) DnsRecordGatewayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordGatewayPtrOutput)
}

type DnsRecordGatewayOutput struct{ *pulumi.OutputState }

func (DnsRecordGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordGateway)(nil)).Elem()
}

func (o DnsRecordGatewayOutput) ToDnsRecordGatewayOutput() DnsRecordGatewayOutput {
	return o
}

func (o DnsRecordGatewayOutput) ToDnsRecordGatewayOutputWithContext(ctx context.Context) DnsRecordGatewayOutput {
	return o
}

func (o DnsRecordGatewayOutput) ToDnsRecordGatewayPtrOutput() DnsRecordGatewayPtrOutput {
	return o.ToDnsRecordGatewayPtrOutputWithContext(context.Background())
}

func (o DnsRecordGatewayOutput) ToDnsRecordGatewayPtrOutputWithContext(ctx context.Context) DnsRecordGatewayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsRecordGateway) *DnsRecordGateway {
		return &v
	}).(DnsRecordGatewayPtrOutput)
}

// The ID of the gateway to which the DNS Record belongs, for example, `gw-abc123`.
func (o DnsRecordGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DnsRecordGateway) string { return v.Id }).(pulumi.StringOutput)
}

type DnsRecordGatewayPtrOutput struct{ *pulumi.OutputState }

func (DnsRecordGatewayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordGateway)(nil)).Elem()
}

func (o DnsRecordGatewayPtrOutput) ToDnsRecordGatewayPtrOutput() DnsRecordGatewayPtrOutput {
	return o
}

func (o DnsRecordGatewayPtrOutput) ToDnsRecordGatewayPtrOutputWithContext(ctx context.Context) DnsRecordGatewayPtrOutput {
	return o
}

func (o DnsRecordGatewayPtrOutput) Elem() DnsRecordGatewayOutput {
	return o.ApplyT(func(v *DnsRecordGateway) DnsRecordGateway {
		if v != nil {
			return *v
		}
		var ret DnsRecordGateway
		return ret
	}).(DnsRecordGatewayOutput)
}

// The ID of the gateway to which the DNS Record belongs, for example, `gw-abc123`.
func (o DnsRecordGatewayPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecordGateway) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type DnsRecordPrivateLinkAccessPoint struct {
	// The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
	Id string `pulumi:"id"`
}

// DnsRecordPrivateLinkAccessPointInput is an input type that accepts DnsRecordPrivateLinkAccessPointArgs and DnsRecordPrivateLinkAccessPointOutput values.
// You can construct a concrete instance of `DnsRecordPrivateLinkAccessPointInput` via:
//
//	DnsRecordPrivateLinkAccessPointArgs{...}
type DnsRecordPrivateLinkAccessPointInput interface {
	pulumi.Input

	ToDnsRecordPrivateLinkAccessPointOutput() DnsRecordPrivateLinkAccessPointOutput
	ToDnsRecordPrivateLinkAccessPointOutputWithContext(context.Context) DnsRecordPrivateLinkAccessPointOutput
}

type DnsRecordPrivateLinkAccessPointArgs struct {
	// The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (DnsRecordPrivateLinkAccessPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (i DnsRecordPrivateLinkAccessPointArgs) ToDnsRecordPrivateLinkAccessPointOutput() DnsRecordPrivateLinkAccessPointOutput {
	return i.ToDnsRecordPrivateLinkAccessPointOutputWithContext(context.Background())
}

func (i DnsRecordPrivateLinkAccessPointArgs) ToDnsRecordPrivateLinkAccessPointOutputWithContext(ctx context.Context) DnsRecordPrivateLinkAccessPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordPrivateLinkAccessPointOutput)
}

func (i DnsRecordPrivateLinkAccessPointArgs) ToDnsRecordPrivateLinkAccessPointPtrOutput() DnsRecordPrivateLinkAccessPointPtrOutput {
	return i.ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(context.Background())
}

func (i DnsRecordPrivateLinkAccessPointArgs) ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(ctx context.Context) DnsRecordPrivateLinkAccessPointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordPrivateLinkAccessPointOutput).ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(ctx)
}

// DnsRecordPrivateLinkAccessPointPtrInput is an input type that accepts DnsRecordPrivateLinkAccessPointArgs, DnsRecordPrivateLinkAccessPointPtr and DnsRecordPrivateLinkAccessPointPtrOutput values.
// You can construct a concrete instance of `DnsRecordPrivateLinkAccessPointPtrInput` via:
//
//	        DnsRecordPrivateLinkAccessPointArgs{...}
//
//	or:
//
//	        nil
type DnsRecordPrivateLinkAccessPointPtrInput interface {
	pulumi.Input

	ToDnsRecordPrivateLinkAccessPointPtrOutput() DnsRecordPrivateLinkAccessPointPtrOutput
	ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(context.Context) DnsRecordPrivateLinkAccessPointPtrOutput
}

type dnsRecordPrivateLinkAccessPointPtrType DnsRecordPrivateLinkAccessPointArgs

func DnsRecordPrivateLinkAccessPointPtr(v *DnsRecordPrivateLinkAccessPointArgs) DnsRecordPrivateLinkAccessPointPtrInput {
	return (*dnsRecordPrivateLinkAccessPointPtrType)(v)
}

func (*dnsRecordPrivateLinkAccessPointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (i *dnsRecordPrivateLinkAccessPointPtrType) ToDnsRecordPrivateLinkAccessPointPtrOutput() DnsRecordPrivateLinkAccessPointPtrOutput {
	return i.ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(context.Background())
}

func (i *dnsRecordPrivateLinkAccessPointPtrType) ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(ctx context.Context) DnsRecordPrivateLinkAccessPointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsRecordPrivateLinkAccessPointPtrOutput)
}

type DnsRecordPrivateLinkAccessPointOutput struct{ *pulumi.OutputState }

func (DnsRecordPrivateLinkAccessPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (o DnsRecordPrivateLinkAccessPointOutput) ToDnsRecordPrivateLinkAccessPointOutput() DnsRecordPrivateLinkAccessPointOutput {
	return o
}

func (o DnsRecordPrivateLinkAccessPointOutput) ToDnsRecordPrivateLinkAccessPointOutputWithContext(ctx context.Context) DnsRecordPrivateLinkAccessPointOutput {
	return o
}

func (o DnsRecordPrivateLinkAccessPointOutput) ToDnsRecordPrivateLinkAccessPointPtrOutput() DnsRecordPrivateLinkAccessPointPtrOutput {
	return o.ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(context.Background())
}

func (o DnsRecordPrivateLinkAccessPointOutput) ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(ctx context.Context) DnsRecordPrivateLinkAccessPointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DnsRecordPrivateLinkAccessPoint) *DnsRecordPrivateLinkAccessPoint {
		return &v
	}).(DnsRecordPrivateLinkAccessPointPtrOutput)
}

// The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
func (o DnsRecordPrivateLinkAccessPointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DnsRecordPrivateLinkAccessPoint) string { return v.Id }).(pulumi.StringOutput)
}

type DnsRecordPrivateLinkAccessPointPtrOutput struct{ *pulumi.OutputState }

func (DnsRecordPrivateLinkAccessPointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (o DnsRecordPrivateLinkAccessPointPtrOutput) ToDnsRecordPrivateLinkAccessPointPtrOutput() DnsRecordPrivateLinkAccessPointPtrOutput {
	return o
}

func (o DnsRecordPrivateLinkAccessPointPtrOutput) ToDnsRecordPrivateLinkAccessPointPtrOutputWithContext(ctx context.Context) DnsRecordPrivateLinkAccessPointPtrOutput {
	return o
}

func (o DnsRecordPrivateLinkAccessPointPtrOutput) Elem() DnsRecordPrivateLinkAccessPointOutput {
	return o.ApplyT(func(v *DnsRecordPrivateLinkAccessPoint) DnsRecordPrivateLinkAccessPoint {
		if v != nil {
			return *v
		}
		var ret DnsRecordPrivateLinkAccessPoint
		return ret
	}).(DnsRecordPrivateLinkAccessPointOutput)
}

// The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
func (o DnsRecordPrivateLinkAccessPointPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsRecordPrivateLinkAccessPoint) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type EnvironmentStreamGovernance struct {
	// The [stream governance package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages) for the Environment. Accepted values are: `ESSENTIALS` and `ADVANCED`.
	Package string `pulumi:"package"`
}

// EnvironmentStreamGovernanceInput is an input type that accepts EnvironmentStreamGovernanceArgs and EnvironmentStreamGovernanceOutput values.
// You can construct a concrete instance of `EnvironmentStreamGovernanceInput` via:
//
//	EnvironmentStreamGovernanceArgs{...}
type EnvironmentStreamGovernanceInput interface {
	pulumi.Input

	ToEnvironmentStreamGovernanceOutput() EnvironmentStreamGovernanceOutput
	ToEnvironmentStreamGovernanceOutputWithContext(context.Context) EnvironmentStreamGovernanceOutput
}

type EnvironmentStreamGovernanceArgs struct {
	// The [stream governance package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages) for the Environment. Accepted values are: `ESSENTIALS` and `ADVANCED`.
	Package pulumi.StringInput `pulumi:"package"`
}

func (EnvironmentStreamGovernanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStreamGovernance)(nil)).Elem()
}

func (i EnvironmentStreamGovernanceArgs) ToEnvironmentStreamGovernanceOutput() EnvironmentStreamGovernanceOutput {
	return i.ToEnvironmentStreamGovernanceOutputWithContext(context.Background())
}

func (i EnvironmentStreamGovernanceArgs) ToEnvironmentStreamGovernanceOutputWithContext(ctx context.Context) EnvironmentStreamGovernanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStreamGovernanceOutput)
}

func (i EnvironmentStreamGovernanceArgs) ToEnvironmentStreamGovernancePtrOutput() EnvironmentStreamGovernancePtrOutput {
	return i.ToEnvironmentStreamGovernancePtrOutputWithContext(context.Background())
}

func (i EnvironmentStreamGovernanceArgs) ToEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) EnvironmentStreamGovernancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStreamGovernanceOutput).ToEnvironmentStreamGovernancePtrOutputWithContext(ctx)
}

// EnvironmentStreamGovernancePtrInput is an input type that accepts EnvironmentStreamGovernanceArgs, EnvironmentStreamGovernancePtr and EnvironmentStreamGovernancePtrOutput values.
// You can construct a concrete instance of `EnvironmentStreamGovernancePtrInput` via:
//
//	        EnvironmentStreamGovernanceArgs{...}
//
//	or:
//
//	        nil
type EnvironmentStreamGovernancePtrInput interface {
	pulumi.Input

	ToEnvironmentStreamGovernancePtrOutput() EnvironmentStreamGovernancePtrOutput
	ToEnvironmentStreamGovernancePtrOutputWithContext(context.Context) EnvironmentStreamGovernancePtrOutput
}

type environmentStreamGovernancePtrType EnvironmentStreamGovernanceArgs

func EnvironmentStreamGovernancePtr(v *EnvironmentStreamGovernanceArgs) EnvironmentStreamGovernancePtrInput {
	return (*environmentStreamGovernancePtrType)(v)
}

func (*environmentStreamGovernancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStreamGovernance)(nil)).Elem()
}

func (i *environmentStreamGovernancePtrType) ToEnvironmentStreamGovernancePtrOutput() EnvironmentStreamGovernancePtrOutput {
	return i.ToEnvironmentStreamGovernancePtrOutputWithContext(context.Background())
}

func (i *environmentStreamGovernancePtrType) ToEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) EnvironmentStreamGovernancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStreamGovernancePtrOutput)
}

type EnvironmentStreamGovernanceOutput struct{ *pulumi.OutputState }

func (EnvironmentStreamGovernanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStreamGovernance)(nil)).Elem()
}

func (o EnvironmentStreamGovernanceOutput) ToEnvironmentStreamGovernanceOutput() EnvironmentStreamGovernanceOutput {
	return o
}

func (o EnvironmentStreamGovernanceOutput) ToEnvironmentStreamGovernanceOutputWithContext(ctx context.Context) EnvironmentStreamGovernanceOutput {
	return o
}

func (o EnvironmentStreamGovernanceOutput) ToEnvironmentStreamGovernancePtrOutput() EnvironmentStreamGovernancePtrOutput {
	return o.ToEnvironmentStreamGovernancePtrOutputWithContext(context.Background())
}

func (o EnvironmentStreamGovernanceOutput) ToEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) EnvironmentStreamGovernancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentStreamGovernance) *EnvironmentStreamGovernance {
		return &v
	}).(EnvironmentStreamGovernancePtrOutput)
}

// The [stream governance package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages) for the Environment. Accepted values are: `ESSENTIALS` and `ADVANCED`.
func (o EnvironmentStreamGovernanceOutput) Package() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentStreamGovernance) string { return v.Package }).(pulumi.StringOutput)
}

type EnvironmentStreamGovernancePtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStreamGovernancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStreamGovernance)(nil)).Elem()
}

func (o EnvironmentStreamGovernancePtrOutput) ToEnvironmentStreamGovernancePtrOutput() EnvironmentStreamGovernancePtrOutput {
	return o
}

func (o EnvironmentStreamGovernancePtrOutput) ToEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) EnvironmentStreamGovernancePtrOutput {
	return o
}

func (o EnvironmentStreamGovernancePtrOutput) Elem() EnvironmentStreamGovernanceOutput {
	return o.ApplyT(func(v *EnvironmentStreamGovernance) EnvironmentStreamGovernance {
		if v != nil {
			return *v
		}
		var ret EnvironmentStreamGovernance
		return ret
	}).(EnvironmentStreamGovernanceOutput)
}

// The [stream governance package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages) for the Environment. Accepted values are: `ESSENTIALS` and `ADVANCED`.
func (o EnvironmentStreamGovernancePtrOutput) Package() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStreamGovernance) *string {
		if v == nil {
			return nil
		}
		return &v.Package
	}).(pulumi.StringPtrOutput)
}

type FlinkComputePoolEnvironment struct {
	// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// FlinkComputePoolEnvironmentInput is an input type that accepts FlinkComputePoolEnvironmentArgs and FlinkComputePoolEnvironmentOutput values.
// You can construct a concrete instance of `FlinkComputePoolEnvironmentInput` via:
//
//	FlinkComputePoolEnvironmentArgs{...}
type FlinkComputePoolEnvironmentInput interface {
	pulumi.Input

	ToFlinkComputePoolEnvironmentOutput() FlinkComputePoolEnvironmentOutput
	ToFlinkComputePoolEnvironmentOutputWithContext(context.Context) FlinkComputePoolEnvironmentOutput
}

type FlinkComputePoolEnvironmentArgs struct {
	// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (FlinkComputePoolEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkComputePoolEnvironment)(nil)).Elem()
}

func (i FlinkComputePoolEnvironmentArgs) ToFlinkComputePoolEnvironmentOutput() FlinkComputePoolEnvironmentOutput {
	return i.ToFlinkComputePoolEnvironmentOutputWithContext(context.Background())
}

func (i FlinkComputePoolEnvironmentArgs) ToFlinkComputePoolEnvironmentOutputWithContext(ctx context.Context) FlinkComputePoolEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkComputePoolEnvironmentOutput)
}

func (i FlinkComputePoolEnvironmentArgs) ToFlinkComputePoolEnvironmentPtrOutput() FlinkComputePoolEnvironmentPtrOutput {
	return i.ToFlinkComputePoolEnvironmentPtrOutputWithContext(context.Background())
}

func (i FlinkComputePoolEnvironmentArgs) ToFlinkComputePoolEnvironmentPtrOutputWithContext(ctx context.Context) FlinkComputePoolEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkComputePoolEnvironmentOutput).ToFlinkComputePoolEnvironmentPtrOutputWithContext(ctx)
}

// FlinkComputePoolEnvironmentPtrInput is an input type that accepts FlinkComputePoolEnvironmentArgs, FlinkComputePoolEnvironmentPtr and FlinkComputePoolEnvironmentPtrOutput values.
// You can construct a concrete instance of `FlinkComputePoolEnvironmentPtrInput` via:
//
//	        FlinkComputePoolEnvironmentArgs{...}
//
//	or:
//
//	        nil
type FlinkComputePoolEnvironmentPtrInput interface {
	pulumi.Input

	ToFlinkComputePoolEnvironmentPtrOutput() FlinkComputePoolEnvironmentPtrOutput
	ToFlinkComputePoolEnvironmentPtrOutputWithContext(context.Context) FlinkComputePoolEnvironmentPtrOutput
}

type flinkComputePoolEnvironmentPtrType FlinkComputePoolEnvironmentArgs

func FlinkComputePoolEnvironmentPtr(v *FlinkComputePoolEnvironmentArgs) FlinkComputePoolEnvironmentPtrInput {
	return (*flinkComputePoolEnvironmentPtrType)(v)
}

func (*flinkComputePoolEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkComputePoolEnvironment)(nil)).Elem()
}

func (i *flinkComputePoolEnvironmentPtrType) ToFlinkComputePoolEnvironmentPtrOutput() FlinkComputePoolEnvironmentPtrOutput {
	return i.ToFlinkComputePoolEnvironmentPtrOutputWithContext(context.Background())
}

func (i *flinkComputePoolEnvironmentPtrType) ToFlinkComputePoolEnvironmentPtrOutputWithContext(ctx context.Context) FlinkComputePoolEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkComputePoolEnvironmentPtrOutput)
}

type FlinkComputePoolEnvironmentOutput struct{ *pulumi.OutputState }

func (FlinkComputePoolEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkComputePoolEnvironment)(nil)).Elem()
}

func (o FlinkComputePoolEnvironmentOutput) ToFlinkComputePoolEnvironmentOutput() FlinkComputePoolEnvironmentOutput {
	return o
}

func (o FlinkComputePoolEnvironmentOutput) ToFlinkComputePoolEnvironmentOutputWithContext(ctx context.Context) FlinkComputePoolEnvironmentOutput {
	return o
}

func (o FlinkComputePoolEnvironmentOutput) ToFlinkComputePoolEnvironmentPtrOutput() FlinkComputePoolEnvironmentPtrOutput {
	return o.ToFlinkComputePoolEnvironmentPtrOutputWithContext(context.Background())
}

func (o FlinkComputePoolEnvironmentOutput) ToFlinkComputePoolEnvironmentPtrOutputWithContext(ctx context.Context) FlinkComputePoolEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlinkComputePoolEnvironment) *FlinkComputePoolEnvironment {
		return &v
	}).(FlinkComputePoolEnvironmentPtrOutput)
}

// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
func (o FlinkComputePoolEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkComputePoolEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type FlinkComputePoolEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (FlinkComputePoolEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkComputePoolEnvironment)(nil)).Elem()
}

func (o FlinkComputePoolEnvironmentPtrOutput) ToFlinkComputePoolEnvironmentPtrOutput() FlinkComputePoolEnvironmentPtrOutput {
	return o
}

func (o FlinkComputePoolEnvironmentPtrOutput) ToFlinkComputePoolEnvironmentPtrOutputWithContext(ctx context.Context) FlinkComputePoolEnvironmentPtrOutput {
	return o
}

func (o FlinkComputePoolEnvironmentPtrOutput) Elem() FlinkComputePoolEnvironmentOutput {
	return o.ApplyT(func(v *FlinkComputePoolEnvironment) FlinkComputePoolEnvironment {
		if v != nil {
			return *v
		}
		var ret FlinkComputePoolEnvironment
		return ret
	}).(FlinkComputePoolEnvironmentOutput)
}

// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
func (o FlinkComputePoolEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkComputePoolEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type FlinkStatementComputePool struct {
	// The ID of the Flink Compute Pool, for example, `lfcp-abc123`.
	Id string `pulumi:"id"`
}

// FlinkStatementComputePoolInput is an input type that accepts FlinkStatementComputePoolArgs and FlinkStatementComputePoolOutput values.
// You can construct a concrete instance of `FlinkStatementComputePoolInput` via:
//
//	FlinkStatementComputePoolArgs{...}
type FlinkStatementComputePoolInput interface {
	pulumi.Input

	ToFlinkStatementComputePoolOutput() FlinkStatementComputePoolOutput
	ToFlinkStatementComputePoolOutputWithContext(context.Context) FlinkStatementComputePoolOutput
}

type FlinkStatementComputePoolArgs struct {
	// The ID of the Flink Compute Pool, for example, `lfcp-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (FlinkStatementComputePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementComputePool)(nil)).Elem()
}

func (i FlinkStatementComputePoolArgs) ToFlinkStatementComputePoolOutput() FlinkStatementComputePoolOutput {
	return i.ToFlinkStatementComputePoolOutputWithContext(context.Background())
}

func (i FlinkStatementComputePoolArgs) ToFlinkStatementComputePoolOutputWithContext(ctx context.Context) FlinkStatementComputePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementComputePoolOutput)
}

func (i FlinkStatementComputePoolArgs) ToFlinkStatementComputePoolPtrOutput() FlinkStatementComputePoolPtrOutput {
	return i.ToFlinkStatementComputePoolPtrOutputWithContext(context.Background())
}

func (i FlinkStatementComputePoolArgs) ToFlinkStatementComputePoolPtrOutputWithContext(ctx context.Context) FlinkStatementComputePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementComputePoolOutput).ToFlinkStatementComputePoolPtrOutputWithContext(ctx)
}

// FlinkStatementComputePoolPtrInput is an input type that accepts FlinkStatementComputePoolArgs, FlinkStatementComputePoolPtr and FlinkStatementComputePoolPtrOutput values.
// You can construct a concrete instance of `FlinkStatementComputePoolPtrInput` via:
//
//	        FlinkStatementComputePoolArgs{...}
//
//	or:
//
//	        nil
type FlinkStatementComputePoolPtrInput interface {
	pulumi.Input

	ToFlinkStatementComputePoolPtrOutput() FlinkStatementComputePoolPtrOutput
	ToFlinkStatementComputePoolPtrOutputWithContext(context.Context) FlinkStatementComputePoolPtrOutput
}

type flinkStatementComputePoolPtrType FlinkStatementComputePoolArgs

func FlinkStatementComputePoolPtr(v *FlinkStatementComputePoolArgs) FlinkStatementComputePoolPtrInput {
	return (*flinkStatementComputePoolPtrType)(v)
}

func (*flinkStatementComputePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementComputePool)(nil)).Elem()
}

func (i *flinkStatementComputePoolPtrType) ToFlinkStatementComputePoolPtrOutput() FlinkStatementComputePoolPtrOutput {
	return i.ToFlinkStatementComputePoolPtrOutputWithContext(context.Background())
}

func (i *flinkStatementComputePoolPtrType) ToFlinkStatementComputePoolPtrOutputWithContext(ctx context.Context) FlinkStatementComputePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementComputePoolPtrOutput)
}

type FlinkStatementComputePoolOutput struct{ *pulumi.OutputState }

func (FlinkStatementComputePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementComputePool)(nil)).Elem()
}

func (o FlinkStatementComputePoolOutput) ToFlinkStatementComputePoolOutput() FlinkStatementComputePoolOutput {
	return o
}

func (o FlinkStatementComputePoolOutput) ToFlinkStatementComputePoolOutputWithContext(ctx context.Context) FlinkStatementComputePoolOutput {
	return o
}

func (o FlinkStatementComputePoolOutput) ToFlinkStatementComputePoolPtrOutput() FlinkStatementComputePoolPtrOutput {
	return o.ToFlinkStatementComputePoolPtrOutputWithContext(context.Background())
}

func (o FlinkStatementComputePoolOutput) ToFlinkStatementComputePoolPtrOutputWithContext(ctx context.Context) FlinkStatementComputePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlinkStatementComputePool) *FlinkStatementComputePool {
		return &v
	}).(FlinkStatementComputePoolPtrOutput)
}

// The ID of the Flink Compute Pool, for example, `lfcp-abc123`.
func (o FlinkStatementComputePoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkStatementComputePool) string { return v.Id }).(pulumi.StringOutput)
}

type FlinkStatementComputePoolPtrOutput struct{ *pulumi.OutputState }

func (FlinkStatementComputePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementComputePool)(nil)).Elem()
}

func (o FlinkStatementComputePoolPtrOutput) ToFlinkStatementComputePoolPtrOutput() FlinkStatementComputePoolPtrOutput {
	return o
}

func (o FlinkStatementComputePoolPtrOutput) ToFlinkStatementComputePoolPtrOutputWithContext(ctx context.Context) FlinkStatementComputePoolPtrOutput {
	return o
}

func (o FlinkStatementComputePoolPtrOutput) Elem() FlinkStatementComputePoolOutput {
	return o.ApplyT(func(v *FlinkStatementComputePool) FlinkStatementComputePool {
		if v != nil {
			return *v
		}
		var ret FlinkStatementComputePool
		return ret
	}).(FlinkStatementComputePoolOutput)
}

// The ID of the Flink Compute Pool, for example, `lfcp-abc123`.
func (o FlinkStatementComputePoolPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkStatementComputePool) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type FlinkStatementCredentials struct {
	// The Flink API Key.
	Key string `pulumi:"key"`
	// The Flink API Secret.
	//
	// > **Note:** A Flink API key consists of a key and a secret. Flink API keys are required to interact with Flink Statements in Confluent Cloud. Each Flink API key is valid for one specific Flink Region.
	//
	// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Flink API key, create a new Flink API key, update the `credentials` block in all configuration files to use the new Flink API key, run `pulumi up -target="confluent_flink_statement.example"`, and remove the old Flink API key. Alternatively, in case the old Flink API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_flink_statement.example" -out=rotate-flink-api-key` and `pulumi up rotate-flink-api-key` instead.
	Secret string `pulumi:"secret"`
}

// FlinkStatementCredentialsInput is an input type that accepts FlinkStatementCredentialsArgs and FlinkStatementCredentialsOutput values.
// You can construct a concrete instance of `FlinkStatementCredentialsInput` via:
//
//	FlinkStatementCredentialsArgs{...}
type FlinkStatementCredentialsInput interface {
	pulumi.Input

	ToFlinkStatementCredentialsOutput() FlinkStatementCredentialsOutput
	ToFlinkStatementCredentialsOutputWithContext(context.Context) FlinkStatementCredentialsOutput
}

type FlinkStatementCredentialsArgs struct {
	// The Flink API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Flink API Secret.
	//
	// > **Note:** A Flink API key consists of a key and a secret. Flink API keys are required to interact with Flink Statements in Confluent Cloud. Each Flink API key is valid for one specific Flink Region.
	//
	// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Flink API key, create a new Flink API key, update the `credentials` block in all configuration files to use the new Flink API key, run `pulumi up -target="confluent_flink_statement.example"`, and remove the old Flink API key. Alternatively, in case the old Flink API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_flink_statement.example" -out=rotate-flink-api-key` and `pulumi up rotate-flink-api-key` instead.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (FlinkStatementCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementCredentials)(nil)).Elem()
}

func (i FlinkStatementCredentialsArgs) ToFlinkStatementCredentialsOutput() FlinkStatementCredentialsOutput {
	return i.ToFlinkStatementCredentialsOutputWithContext(context.Background())
}

func (i FlinkStatementCredentialsArgs) ToFlinkStatementCredentialsOutputWithContext(ctx context.Context) FlinkStatementCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementCredentialsOutput)
}

func (i FlinkStatementCredentialsArgs) ToFlinkStatementCredentialsPtrOutput() FlinkStatementCredentialsPtrOutput {
	return i.ToFlinkStatementCredentialsPtrOutputWithContext(context.Background())
}

func (i FlinkStatementCredentialsArgs) ToFlinkStatementCredentialsPtrOutputWithContext(ctx context.Context) FlinkStatementCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementCredentialsOutput).ToFlinkStatementCredentialsPtrOutputWithContext(ctx)
}

// FlinkStatementCredentialsPtrInput is an input type that accepts FlinkStatementCredentialsArgs, FlinkStatementCredentialsPtr and FlinkStatementCredentialsPtrOutput values.
// You can construct a concrete instance of `FlinkStatementCredentialsPtrInput` via:
//
//	        FlinkStatementCredentialsArgs{...}
//
//	or:
//
//	        nil
type FlinkStatementCredentialsPtrInput interface {
	pulumi.Input

	ToFlinkStatementCredentialsPtrOutput() FlinkStatementCredentialsPtrOutput
	ToFlinkStatementCredentialsPtrOutputWithContext(context.Context) FlinkStatementCredentialsPtrOutput
}

type flinkStatementCredentialsPtrType FlinkStatementCredentialsArgs

func FlinkStatementCredentialsPtr(v *FlinkStatementCredentialsArgs) FlinkStatementCredentialsPtrInput {
	return (*flinkStatementCredentialsPtrType)(v)
}

func (*flinkStatementCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementCredentials)(nil)).Elem()
}

func (i *flinkStatementCredentialsPtrType) ToFlinkStatementCredentialsPtrOutput() FlinkStatementCredentialsPtrOutput {
	return i.ToFlinkStatementCredentialsPtrOutputWithContext(context.Background())
}

func (i *flinkStatementCredentialsPtrType) ToFlinkStatementCredentialsPtrOutputWithContext(ctx context.Context) FlinkStatementCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementCredentialsPtrOutput)
}

type FlinkStatementCredentialsOutput struct{ *pulumi.OutputState }

func (FlinkStatementCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementCredentials)(nil)).Elem()
}

func (o FlinkStatementCredentialsOutput) ToFlinkStatementCredentialsOutput() FlinkStatementCredentialsOutput {
	return o
}

func (o FlinkStatementCredentialsOutput) ToFlinkStatementCredentialsOutputWithContext(ctx context.Context) FlinkStatementCredentialsOutput {
	return o
}

func (o FlinkStatementCredentialsOutput) ToFlinkStatementCredentialsPtrOutput() FlinkStatementCredentialsPtrOutput {
	return o.ToFlinkStatementCredentialsPtrOutputWithContext(context.Background())
}

func (o FlinkStatementCredentialsOutput) ToFlinkStatementCredentialsPtrOutputWithContext(ctx context.Context) FlinkStatementCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlinkStatementCredentials) *FlinkStatementCredentials {
		return &v
	}).(FlinkStatementCredentialsPtrOutput)
}

// The Flink API Key.
func (o FlinkStatementCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkStatementCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Flink API Secret.
//
// > **Note:** A Flink API key consists of a key and a secret. Flink API keys are required to interact with Flink Statements in Confluent Cloud. Each Flink API key is valid for one specific Flink Region.
//
// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Flink API key, create a new Flink API key, update the `credentials` block in all configuration files to use the new Flink API key, run `pulumi up -target="confluent_flink_statement.example"`, and remove the old Flink API key. Alternatively, in case the old Flink API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_flink_statement.example" -out=rotate-flink-api-key` and `pulumi up rotate-flink-api-key` instead.
func (o FlinkStatementCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkStatementCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type FlinkStatementCredentialsPtrOutput struct{ *pulumi.OutputState }

func (FlinkStatementCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementCredentials)(nil)).Elem()
}

func (o FlinkStatementCredentialsPtrOutput) ToFlinkStatementCredentialsPtrOutput() FlinkStatementCredentialsPtrOutput {
	return o
}

func (o FlinkStatementCredentialsPtrOutput) ToFlinkStatementCredentialsPtrOutputWithContext(ctx context.Context) FlinkStatementCredentialsPtrOutput {
	return o
}

func (o FlinkStatementCredentialsPtrOutput) Elem() FlinkStatementCredentialsOutput {
	return o.ApplyT(func(v *FlinkStatementCredentials) FlinkStatementCredentials {
		if v != nil {
			return *v
		}
		var ret FlinkStatementCredentials
		return ret
	}).(FlinkStatementCredentialsOutput)
}

// The Flink API Key.
func (o FlinkStatementCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkStatementCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Flink API Secret.
//
// > **Note:** A Flink API key consists of a key and a secret. Flink API keys are required to interact with Flink Statements in Confluent Cloud. Each Flink API key is valid for one specific Flink Region.
//
// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Flink API key, create a new Flink API key, update the `credentials` block in all configuration files to use the new Flink API key, run `pulumi up -target="confluent_flink_statement.example"`, and remove the old Flink API key. Alternatively, in case the old Flink API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_flink_statement.example" -out=rotate-flink-api-key` and `pulumi up rotate-flink-api-key` instead.
func (o FlinkStatementCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkStatementCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type FlinkStatementEnvironment struct {
	// The ID of the Environment, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// FlinkStatementEnvironmentInput is an input type that accepts FlinkStatementEnvironmentArgs and FlinkStatementEnvironmentOutput values.
// You can construct a concrete instance of `FlinkStatementEnvironmentInput` via:
//
//	FlinkStatementEnvironmentArgs{...}
type FlinkStatementEnvironmentInput interface {
	pulumi.Input

	ToFlinkStatementEnvironmentOutput() FlinkStatementEnvironmentOutput
	ToFlinkStatementEnvironmentOutputWithContext(context.Context) FlinkStatementEnvironmentOutput
}

type FlinkStatementEnvironmentArgs struct {
	// The ID of the Environment, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (FlinkStatementEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementEnvironment)(nil)).Elem()
}

func (i FlinkStatementEnvironmentArgs) ToFlinkStatementEnvironmentOutput() FlinkStatementEnvironmentOutput {
	return i.ToFlinkStatementEnvironmentOutputWithContext(context.Background())
}

func (i FlinkStatementEnvironmentArgs) ToFlinkStatementEnvironmentOutputWithContext(ctx context.Context) FlinkStatementEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementEnvironmentOutput)
}

func (i FlinkStatementEnvironmentArgs) ToFlinkStatementEnvironmentPtrOutput() FlinkStatementEnvironmentPtrOutput {
	return i.ToFlinkStatementEnvironmentPtrOutputWithContext(context.Background())
}

func (i FlinkStatementEnvironmentArgs) ToFlinkStatementEnvironmentPtrOutputWithContext(ctx context.Context) FlinkStatementEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementEnvironmentOutput).ToFlinkStatementEnvironmentPtrOutputWithContext(ctx)
}

// FlinkStatementEnvironmentPtrInput is an input type that accepts FlinkStatementEnvironmentArgs, FlinkStatementEnvironmentPtr and FlinkStatementEnvironmentPtrOutput values.
// You can construct a concrete instance of `FlinkStatementEnvironmentPtrInput` via:
//
//	        FlinkStatementEnvironmentArgs{...}
//
//	or:
//
//	        nil
type FlinkStatementEnvironmentPtrInput interface {
	pulumi.Input

	ToFlinkStatementEnvironmentPtrOutput() FlinkStatementEnvironmentPtrOutput
	ToFlinkStatementEnvironmentPtrOutputWithContext(context.Context) FlinkStatementEnvironmentPtrOutput
}

type flinkStatementEnvironmentPtrType FlinkStatementEnvironmentArgs

func FlinkStatementEnvironmentPtr(v *FlinkStatementEnvironmentArgs) FlinkStatementEnvironmentPtrInput {
	return (*flinkStatementEnvironmentPtrType)(v)
}

func (*flinkStatementEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementEnvironment)(nil)).Elem()
}

func (i *flinkStatementEnvironmentPtrType) ToFlinkStatementEnvironmentPtrOutput() FlinkStatementEnvironmentPtrOutput {
	return i.ToFlinkStatementEnvironmentPtrOutputWithContext(context.Background())
}

func (i *flinkStatementEnvironmentPtrType) ToFlinkStatementEnvironmentPtrOutputWithContext(ctx context.Context) FlinkStatementEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementEnvironmentPtrOutput)
}

type FlinkStatementEnvironmentOutput struct{ *pulumi.OutputState }

func (FlinkStatementEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementEnvironment)(nil)).Elem()
}

func (o FlinkStatementEnvironmentOutput) ToFlinkStatementEnvironmentOutput() FlinkStatementEnvironmentOutput {
	return o
}

func (o FlinkStatementEnvironmentOutput) ToFlinkStatementEnvironmentOutputWithContext(ctx context.Context) FlinkStatementEnvironmentOutput {
	return o
}

func (o FlinkStatementEnvironmentOutput) ToFlinkStatementEnvironmentPtrOutput() FlinkStatementEnvironmentPtrOutput {
	return o.ToFlinkStatementEnvironmentPtrOutputWithContext(context.Background())
}

func (o FlinkStatementEnvironmentOutput) ToFlinkStatementEnvironmentPtrOutputWithContext(ctx context.Context) FlinkStatementEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlinkStatementEnvironment) *FlinkStatementEnvironment {
		return &v
	}).(FlinkStatementEnvironmentPtrOutput)
}

// The ID of the Environment, for example, `env-abc123`.
func (o FlinkStatementEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkStatementEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type FlinkStatementEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (FlinkStatementEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementEnvironment)(nil)).Elem()
}

func (o FlinkStatementEnvironmentPtrOutput) ToFlinkStatementEnvironmentPtrOutput() FlinkStatementEnvironmentPtrOutput {
	return o
}

func (o FlinkStatementEnvironmentPtrOutput) ToFlinkStatementEnvironmentPtrOutputWithContext(ctx context.Context) FlinkStatementEnvironmentPtrOutput {
	return o
}

func (o FlinkStatementEnvironmentPtrOutput) Elem() FlinkStatementEnvironmentOutput {
	return o.ApplyT(func(v *FlinkStatementEnvironment) FlinkStatementEnvironment {
		if v != nil {
			return *v
		}
		var ret FlinkStatementEnvironment
		return ret
	}).(FlinkStatementEnvironmentOutput)
}

// The ID of the Environment, for example, `env-abc123`.
func (o FlinkStatementEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkStatementEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type FlinkStatementOrganization struct {
	// The ID of the Organization, for example, `1111aaaa-11aa-11aa-11aa-111111aaaaaa`.
	Id string `pulumi:"id"`
}

// FlinkStatementOrganizationInput is an input type that accepts FlinkStatementOrganizationArgs and FlinkStatementOrganizationOutput values.
// You can construct a concrete instance of `FlinkStatementOrganizationInput` via:
//
//	FlinkStatementOrganizationArgs{...}
type FlinkStatementOrganizationInput interface {
	pulumi.Input

	ToFlinkStatementOrganizationOutput() FlinkStatementOrganizationOutput
	ToFlinkStatementOrganizationOutputWithContext(context.Context) FlinkStatementOrganizationOutput
}

type FlinkStatementOrganizationArgs struct {
	// The ID of the Organization, for example, `1111aaaa-11aa-11aa-11aa-111111aaaaaa`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (FlinkStatementOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementOrganization)(nil)).Elem()
}

func (i FlinkStatementOrganizationArgs) ToFlinkStatementOrganizationOutput() FlinkStatementOrganizationOutput {
	return i.ToFlinkStatementOrganizationOutputWithContext(context.Background())
}

func (i FlinkStatementOrganizationArgs) ToFlinkStatementOrganizationOutputWithContext(ctx context.Context) FlinkStatementOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementOrganizationOutput)
}

func (i FlinkStatementOrganizationArgs) ToFlinkStatementOrganizationPtrOutput() FlinkStatementOrganizationPtrOutput {
	return i.ToFlinkStatementOrganizationPtrOutputWithContext(context.Background())
}

func (i FlinkStatementOrganizationArgs) ToFlinkStatementOrganizationPtrOutputWithContext(ctx context.Context) FlinkStatementOrganizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementOrganizationOutput).ToFlinkStatementOrganizationPtrOutputWithContext(ctx)
}

// FlinkStatementOrganizationPtrInput is an input type that accepts FlinkStatementOrganizationArgs, FlinkStatementOrganizationPtr and FlinkStatementOrganizationPtrOutput values.
// You can construct a concrete instance of `FlinkStatementOrganizationPtrInput` via:
//
//	        FlinkStatementOrganizationArgs{...}
//
//	or:
//
//	        nil
type FlinkStatementOrganizationPtrInput interface {
	pulumi.Input

	ToFlinkStatementOrganizationPtrOutput() FlinkStatementOrganizationPtrOutput
	ToFlinkStatementOrganizationPtrOutputWithContext(context.Context) FlinkStatementOrganizationPtrOutput
}

type flinkStatementOrganizationPtrType FlinkStatementOrganizationArgs

func FlinkStatementOrganizationPtr(v *FlinkStatementOrganizationArgs) FlinkStatementOrganizationPtrInput {
	return (*flinkStatementOrganizationPtrType)(v)
}

func (*flinkStatementOrganizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementOrganization)(nil)).Elem()
}

func (i *flinkStatementOrganizationPtrType) ToFlinkStatementOrganizationPtrOutput() FlinkStatementOrganizationPtrOutput {
	return i.ToFlinkStatementOrganizationPtrOutputWithContext(context.Background())
}

func (i *flinkStatementOrganizationPtrType) ToFlinkStatementOrganizationPtrOutputWithContext(ctx context.Context) FlinkStatementOrganizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementOrganizationPtrOutput)
}

type FlinkStatementOrganizationOutput struct{ *pulumi.OutputState }

func (FlinkStatementOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementOrganization)(nil)).Elem()
}

func (o FlinkStatementOrganizationOutput) ToFlinkStatementOrganizationOutput() FlinkStatementOrganizationOutput {
	return o
}

func (o FlinkStatementOrganizationOutput) ToFlinkStatementOrganizationOutputWithContext(ctx context.Context) FlinkStatementOrganizationOutput {
	return o
}

func (o FlinkStatementOrganizationOutput) ToFlinkStatementOrganizationPtrOutput() FlinkStatementOrganizationPtrOutput {
	return o.ToFlinkStatementOrganizationPtrOutputWithContext(context.Background())
}

func (o FlinkStatementOrganizationOutput) ToFlinkStatementOrganizationPtrOutputWithContext(ctx context.Context) FlinkStatementOrganizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlinkStatementOrganization) *FlinkStatementOrganization {
		return &v
	}).(FlinkStatementOrganizationPtrOutput)
}

// The ID of the Organization, for example, `1111aaaa-11aa-11aa-11aa-111111aaaaaa`.
func (o FlinkStatementOrganizationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkStatementOrganization) string { return v.Id }).(pulumi.StringOutput)
}

type FlinkStatementOrganizationPtrOutput struct{ *pulumi.OutputState }

func (FlinkStatementOrganizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementOrganization)(nil)).Elem()
}

func (o FlinkStatementOrganizationPtrOutput) ToFlinkStatementOrganizationPtrOutput() FlinkStatementOrganizationPtrOutput {
	return o
}

func (o FlinkStatementOrganizationPtrOutput) ToFlinkStatementOrganizationPtrOutputWithContext(ctx context.Context) FlinkStatementOrganizationPtrOutput {
	return o
}

func (o FlinkStatementOrganizationPtrOutput) Elem() FlinkStatementOrganizationOutput {
	return o.ApplyT(func(v *FlinkStatementOrganization) FlinkStatementOrganization {
		if v != nil {
			return *v
		}
		var ret FlinkStatementOrganization
		return ret
	}).(FlinkStatementOrganizationOutput)
}

// The ID of the Organization, for example, `1111aaaa-11aa-11aa-11aa-111111aaaaaa`.
func (o FlinkStatementOrganizationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkStatementOrganization) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type FlinkStatementPrincipal struct {
	// The ID of the Principal the Flink Statement runs as, for example, `sa-abc123`.
	Id string `pulumi:"id"`
}

// FlinkStatementPrincipalInput is an input type that accepts FlinkStatementPrincipalArgs and FlinkStatementPrincipalOutput values.
// You can construct a concrete instance of `FlinkStatementPrincipalInput` via:
//
//	FlinkStatementPrincipalArgs{...}
type FlinkStatementPrincipalInput interface {
	pulumi.Input

	ToFlinkStatementPrincipalOutput() FlinkStatementPrincipalOutput
	ToFlinkStatementPrincipalOutputWithContext(context.Context) FlinkStatementPrincipalOutput
}

type FlinkStatementPrincipalArgs struct {
	// The ID of the Principal the Flink Statement runs as, for example, `sa-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (FlinkStatementPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementPrincipal)(nil)).Elem()
}

func (i FlinkStatementPrincipalArgs) ToFlinkStatementPrincipalOutput() FlinkStatementPrincipalOutput {
	return i.ToFlinkStatementPrincipalOutputWithContext(context.Background())
}

func (i FlinkStatementPrincipalArgs) ToFlinkStatementPrincipalOutputWithContext(ctx context.Context) FlinkStatementPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementPrincipalOutput)
}

func (i FlinkStatementPrincipalArgs) ToFlinkStatementPrincipalPtrOutput() FlinkStatementPrincipalPtrOutput {
	return i.ToFlinkStatementPrincipalPtrOutputWithContext(context.Background())
}

func (i FlinkStatementPrincipalArgs) ToFlinkStatementPrincipalPtrOutputWithContext(ctx context.Context) FlinkStatementPrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementPrincipalOutput).ToFlinkStatementPrincipalPtrOutputWithContext(ctx)
}

// FlinkStatementPrincipalPtrInput is an input type that accepts FlinkStatementPrincipalArgs, FlinkStatementPrincipalPtr and FlinkStatementPrincipalPtrOutput values.
// You can construct a concrete instance of `FlinkStatementPrincipalPtrInput` via:
//
//	        FlinkStatementPrincipalArgs{...}
//
//	or:
//
//	        nil
type FlinkStatementPrincipalPtrInput interface {
	pulumi.Input

	ToFlinkStatementPrincipalPtrOutput() FlinkStatementPrincipalPtrOutput
	ToFlinkStatementPrincipalPtrOutputWithContext(context.Context) FlinkStatementPrincipalPtrOutput
}

type flinkStatementPrincipalPtrType FlinkStatementPrincipalArgs

func FlinkStatementPrincipalPtr(v *FlinkStatementPrincipalArgs) FlinkStatementPrincipalPtrInput {
	return (*flinkStatementPrincipalPtrType)(v)
}

func (*flinkStatementPrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementPrincipal)(nil)).Elem()
}

func (i *flinkStatementPrincipalPtrType) ToFlinkStatementPrincipalPtrOutput() FlinkStatementPrincipalPtrOutput {
	return i.ToFlinkStatementPrincipalPtrOutputWithContext(context.Background())
}

func (i *flinkStatementPrincipalPtrType) ToFlinkStatementPrincipalPtrOutputWithContext(ctx context.Context) FlinkStatementPrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkStatementPrincipalPtrOutput)
}

type FlinkStatementPrincipalOutput struct{ *pulumi.OutputState }

func (FlinkStatementPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlinkStatementPrincipal)(nil)).Elem()
}

func (o FlinkStatementPrincipalOutput) ToFlinkStatementPrincipalOutput() FlinkStatementPrincipalOutput {
	return o
}

func (o FlinkStatementPrincipalOutput) ToFlinkStatementPrincipalOutputWithContext(ctx context.Context) FlinkStatementPrincipalOutput {
	return o
}

func (o FlinkStatementPrincipalOutput) ToFlinkStatementPrincipalPtrOutput() FlinkStatementPrincipalPtrOutput {
	return o.ToFlinkStatementPrincipalPtrOutputWithContext(context.Background())
}

func (o FlinkStatementPrincipalOutput) ToFlinkStatementPrincipalPtrOutputWithContext(ctx context.Context) FlinkStatementPrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlinkStatementPrincipal) *FlinkStatementPrincipal {
		return &v
	}).(FlinkStatementPrincipalPtrOutput)
}

// The ID of the Principal the Flink Statement runs as, for example, `sa-abc123`.
func (o FlinkStatementPrincipalOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v FlinkStatementPrincipal) string { return v.Id }).(pulumi.StringOutput)
}

type FlinkStatementPrincipalPtrOutput struct{ *pulumi.OutputState }

func (FlinkStatementPrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkStatementPrincipal)(nil)).Elem()
}

func (o FlinkStatementPrincipalPtrOutput) ToFlinkStatementPrincipalPtrOutput() FlinkStatementPrincipalPtrOutput {
	return o
}

func (o FlinkStatementPrincipalPtrOutput) ToFlinkStatementPrincipalPtrOutputWithContext(ctx context.Context) FlinkStatementPrincipalPtrOutput {
	return o
}

func (o FlinkStatementPrincipalPtrOutput) Elem() FlinkStatementPrincipalOutput {
	return o.ApplyT(func(v *FlinkStatementPrincipal) FlinkStatementPrincipal {
		if v != nil {
			return *v
		}
		var ret FlinkStatementPrincipal
		return ret
	}).(FlinkStatementPrincipalOutput)
}

// The ID of the Principal the Flink Statement runs as, for example, `sa-abc123`.
func (o FlinkStatementPrincipalPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkStatementPrincipal) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type IdentityPoolIdentityProvider struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	Id string `pulumi:"id"`
}

// IdentityPoolIdentityProviderInput is an input type that accepts IdentityPoolIdentityProviderArgs and IdentityPoolIdentityProviderOutput values.
// You can construct a concrete instance of `IdentityPoolIdentityProviderInput` via:
//
//	IdentityPoolIdentityProviderArgs{...}
type IdentityPoolIdentityProviderInput interface {
	pulumi.Input

	ToIdentityPoolIdentityProviderOutput() IdentityPoolIdentityProviderOutput
	ToIdentityPoolIdentityProviderOutputWithContext(context.Context) IdentityPoolIdentityProviderOutput
}

type IdentityPoolIdentityProviderArgs struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (IdentityPoolIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderOutput() IdentityPoolIdentityProviderOutput {
	return i.ToIdentityPoolIdentityProviderOutputWithContext(context.Background())
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolIdentityProviderOutput)
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return i.ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Background())
}

func (i IdentityPoolIdentityProviderArgs) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolIdentityProviderOutput).ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx)
}

// IdentityPoolIdentityProviderPtrInput is an input type that accepts IdentityPoolIdentityProviderArgs, IdentityPoolIdentityProviderPtr and IdentityPoolIdentityProviderPtrOutput values.
// You can construct a concrete instance of `IdentityPoolIdentityProviderPtrInput` via:
//
//	        IdentityPoolIdentityProviderArgs{...}
//
//	or:
//
//	        nil
type IdentityPoolIdentityProviderPtrInput interface {
	pulumi.Input

	ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput
	ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Context) IdentityPoolIdentityProviderPtrOutput
}

type identityPoolIdentityProviderPtrType IdentityPoolIdentityProviderArgs

func IdentityPoolIdentityProviderPtr(v *IdentityPoolIdentityProviderArgs) IdentityPoolIdentityProviderPtrInput {
	return (*identityPoolIdentityProviderPtrType)(v)
}

func (*identityPoolIdentityProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolIdentityProvider)(nil)).Elem()
}

func (i *identityPoolIdentityProviderPtrType) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return i.ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Background())
}

func (i *identityPoolIdentityProviderPtrType) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolIdentityProviderPtrOutput)
}

type IdentityPoolIdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityPoolIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderOutput() IdentityPoolIdentityProviderOutput {
	return o
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderOutput {
	return o
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return o.ToIdentityPoolIdentityProviderPtrOutputWithContext(context.Background())
}

func (o IdentityPoolIdentityProviderOutput) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IdentityPoolIdentityProvider) *IdentityPoolIdentityProvider {
		return &v
	}).(IdentityPoolIdentityProviderPtrOutput)
}

// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
func (o IdentityPoolIdentityProviderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolIdentityProvider) string { return v.Id }).(pulumi.StringOutput)
}

type IdentityPoolIdentityProviderPtrOutput struct{ *pulumi.OutputState }

func (IdentityPoolIdentityProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolIdentityProviderPtrOutput) ToIdentityPoolIdentityProviderPtrOutput() IdentityPoolIdentityProviderPtrOutput {
	return o
}

func (o IdentityPoolIdentityProviderPtrOutput) ToIdentityPoolIdentityProviderPtrOutputWithContext(ctx context.Context) IdentityPoolIdentityProviderPtrOutput {
	return o
}

func (o IdentityPoolIdentityProviderPtrOutput) Elem() IdentityPoolIdentityProviderOutput {
	return o.ApplyT(func(v *IdentityPoolIdentityProvider) IdentityPoolIdentityProvider {
		if v != nil {
			return *v
		}
		var ret IdentityPoolIdentityProvider
		return ret
	}).(IdentityPoolIdentityProviderOutput)
}

// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
func (o IdentityPoolIdentityProviderPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPoolIdentityProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type InvitationCreator struct {
	// (Required String) The id of invitation creator.
	Id *string `pulumi:"id"`
}

// InvitationCreatorInput is an input type that accepts InvitationCreatorArgs and InvitationCreatorOutput values.
// You can construct a concrete instance of `InvitationCreatorInput` via:
//
//	InvitationCreatorArgs{...}
type InvitationCreatorInput interface {
	pulumi.Input

	ToInvitationCreatorOutput() InvitationCreatorOutput
	ToInvitationCreatorOutputWithContext(context.Context) InvitationCreatorOutput
}

type InvitationCreatorArgs struct {
	// (Required String) The id of invitation creator.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (InvitationCreatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationCreator)(nil)).Elem()
}

func (i InvitationCreatorArgs) ToInvitationCreatorOutput() InvitationCreatorOutput {
	return i.ToInvitationCreatorOutputWithContext(context.Background())
}

func (i InvitationCreatorArgs) ToInvitationCreatorOutputWithContext(ctx context.Context) InvitationCreatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationCreatorOutput)
}

// InvitationCreatorArrayInput is an input type that accepts InvitationCreatorArray and InvitationCreatorArrayOutput values.
// You can construct a concrete instance of `InvitationCreatorArrayInput` via:
//
//	InvitationCreatorArray{ InvitationCreatorArgs{...} }
type InvitationCreatorArrayInput interface {
	pulumi.Input

	ToInvitationCreatorArrayOutput() InvitationCreatorArrayOutput
	ToInvitationCreatorArrayOutputWithContext(context.Context) InvitationCreatorArrayOutput
}

type InvitationCreatorArray []InvitationCreatorInput

func (InvitationCreatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InvitationCreator)(nil)).Elem()
}

func (i InvitationCreatorArray) ToInvitationCreatorArrayOutput() InvitationCreatorArrayOutput {
	return i.ToInvitationCreatorArrayOutputWithContext(context.Background())
}

func (i InvitationCreatorArray) ToInvitationCreatorArrayOutputWithContext(ctx context.Context) InvitationCreatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationCreatorArrayOutput)
}

type InvitationCreatorOutput struct{ *pulumi.OutputState }

func (InvitationCreatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationCreator)(nil)).Elem()
}

func (o InvitationCreatorOutput) ToInvitationCreatorOutput() InvitationCreatorOutput {
	return o
}

func (o InvitationCreatorOutput) ToInvitationCreatorOutputWithContext(ctx context.Context) InvitationCreatorOutput {
	return o
}

// (Required String) The id of invitation creator.
func (o InvitationCreatorOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationCreator) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type InvitationCreatorArrayOutput struct{ *pulumi.OutputState }

func (InvitationCreatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InvitationCreator)(nil)).Elem()
}

func (o InvitationCreatorArrayOutput) ToInvitationCreatorArrayOutput() InvitationCreatorArrayOutput {
	return o
}

func (o InvitationCreatorArrayOutput) ToInvitationCreatorArrayOutputWithContext(ctx context.Context) InvitationCreatorArrayOutput {
	return o
}

func (o InvitationCreatorArrayOutput) Index(i pulumi.IntInput) InvitationCreatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InvitationCreator {
		return vs[0].([]InvitationCreator)[vs[1].(int)]
	}).(InvitationCreatorOutput)
}

type InvitationUser struct {
	// (Required String) The id of invitation creator.
	Id *string `pulumi:"id"`
}

// InvitationUserInput is an input type that accepts InvitationUserArgs and InvitationUserOutput values.
// You can construct a concrete instance of `InvitationUserInput` via:
//
//	InvitationUserArgs{...}
type InvitationUserInput interface {
	pulumi.Input

	ToInvitationUserOutput() InvitationUserOutput
	ToInvitationUserOutputWithContext(context.Context) InvitationUserOutput
}

type InvitationUserArgs struct {
	// (Required String) The id of invitation creator.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (InvitationUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationUser)(nil)).Elem()
}

func (i InvitationUserArgs) ToInvitationUserOutput() InvitationUserOutput {
	return i.ToInvitationUserOutputWithContext(context.Background())
}

func (i InvitationUserArgs) ToInvitationUserOutputWithContext(ctx context.Context) InvitationUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationUserOutput)
}

// InvitationUserArrayInput is an input type that accepts InvitationUserArray and InvitationUserArrayOutput values.
// You can construct a concrete instance of `InvitationUserArrayInput` via:
//
//	InvitationUserArray{ InvitationUserArgs{...} }
type InvitationUserArrayInput interface {
	pulumi.Input

	ToInvitationUserArrayOutput() InvitationUserArrayOutput
	ToInvitationUserArrayOutputWithContext(context.Context) InvitationUserArrayOutput
}

type InvitationUserArray []InvitationUserInput

func (InvitationUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InvitationUser)(nil)).Elem()
}

func (i InvitationUserArray) ToInvitationUserArrayOutput() InvitationUserArrayOutput {
	return i.ToInvitationUserArrayOutputWithContext(context.Background())
}

func (i InvitationUserArray) ToInvitationUserArrayOutputWithContext(ctx context.Context) InvitationUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationUserArrayOutput)
}

type InvitationUserOutput struct{ *pulumi.OutputState }

func (InvitationUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvitationUser)(nil)).Elem()
}

func (o InvitationUserOutput) ToInvitationUserOutput() InvitationUserOutput {
	return o
}

func (o InvitationUserOutput) ToInvitationUserOutputWithContext(ctx context.Context) InvitationUserOutput {
	return o
}

// (Required String) The id of invitation creator.
func (o InvitationUserOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvitationUser) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type InvitationUserArrayOutput struct{ *pulumi.OutputState }

func (InvitationUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InvitationUser)(nil)).Elem()
}

func (o InvitationUserArrayOutput) ToInvitationUserArrayOutput() InvitationUserArrayOutput {
	return o
}

func (o InvitationUserArrayOutput) ToInvitationUserArrayOutputWithContext(ctx context.Context) InvitationUserArrayOutput {
	return o
}

func (o InvitationUserArrayOutput) Index(i pulumi.IntInput) InvitationUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InvitationUser {
		return vs[0].([]InvitationUser)[vs[1].(int)]
	}).(InvitationUserOutput)
}

type KafkaAclCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaAclCredentialsInput is an input type that accepts KafkaAclCredentialsArgs and KafkaAclCredentialsOutput values.
// You can construct a concrete instance of `KafkaAclCredentialsInput` via:
//
//	KafkaAclCredentialsArgs{...}
type KafkaAclCredentialsInput interface {
	pulumi.Input

	ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput
	ToKafkaAclCredentialsOutputWithContext(context.Context) KafkaAclCredentialsOutput
}

type KafkaAclCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaAclCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclCredentials)(nil)).Elem()
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput {
	return i.ToKafkaAclCredentialsOutputWithContext(context.Background())
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsOutputWithContext(ctx context.Context) KafkaAclCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsOutput)
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return i.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaAclCredentialsArgs) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsOutput).ToKafkaAclCredentialsPtrOutputWithContext(ctx)
}

// KafkaAclCredentialsPtrInput is an input type that accepts KafkaAclCredentialsArgs, KafkaAclCredentialsPtr and KafkaAclCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaAclCredentialsPtrInput` via:
//
//	        KafkaAclCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaAclCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput
	ToKafkaAclCredentialsPtrOutputWithContext(context.Context) KafkaAclCredentialsPtrOutput
}

type kafkaAclCredentialsPtrType KafkaAclCredentialsArgs

func KafkaAclCredentialsPtr(v *KafkaAclCredentialsArgs) KafkaAclCredentialsPtrInput {
	return (*kafkaAclCredentialsPtrType)(v)
}

func (*kafkaAclCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclCredentials)(nil)).Elem()
}

func (i *kafkaAclCredentialsPtrType) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return i.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaAclCredentialsPtrType) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclCredentialsPtrOutput)
}

type KafkaAclCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaAclCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclCredentials)(nil)).Elem()
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsOutput() KafkaAclCredentialsOutput {
	return o
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsOutputWithContext(ctx context.Context) KafkaAclCredentialsOutput {
	return o
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return o.ToKafkaAclCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaAclCredentialsOutput) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaAclCredentials) *KafkaAclCredentials {
		return &v
	}).(KafkaAclCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaAclCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaAclCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaAclCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaAclCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclCredentials)(nil)).Elem()
}

func (o KafkaAclCredentialsPtrOutput) ToKafkaAclCredentialsPtrOutput() KafkaAclCredentialsPtrOutput {
	return o
}

func (o KafkaAclCredentialsPtrOutput) ToKafkaAclCredentialsPtrOutputWithContext(ctx context.Context) KafkaAclCredentialsPtrOutput {
	return o
}

func (o KafkaAclCredentialsPtrOutput) Elem() KafkaAclCredentialsOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) KafkaAclCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaAclCredentials
		return ret
	}).(KafkaAclCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaAclCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaAclCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaAclKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaAclKafkaClusterInput is an input type that accepts KafkaAclKafkaClusterArgs and KafkaAclKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaAclKafkaClusterInput` via:
//
//	KafkaAclKafkaClusterArgs{...}
type KafkaAclKafkaClusterInput interface {
	pulumi.Input

	ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput
	ToKafkaAclKafkaClusterOutputWithContext(context.Context) KafkaAclKafkaClusterOutput
}

type KafkaAclKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaAclKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclKafkaCluster)(nil)).Elem()
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput {
	return i.ToKafkaAclKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterOutputWithContext(ctx context.Context) KafkaAclKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterOutput)
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return i.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaAclKafkaClusterArgs) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterOutput).ToKafkaAclKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaAclKafkaClusterPtrInput is an input type that accepts KafkaAclKafkaClusterArgs, KafkaAclKafkaClusterPtr and KafkaAclKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaAclKafkaClusterPtrInput` via:
//
//	        KafkaAclKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaAclKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput
	ToKafkaAclKafkaClusterPtrOutputWithContext(context.Context) KafkaAclKafkaClusterPtrOutput
}

type kafkaAclKafkaClusterPtrType KafkaAclKafkaClusterArgs

func KafkaAclKafkaClusterPtr(v *KafkaAclKafkaClusterArgs) KafkaAclKafkaClusterPtrInput {
	return (*kafkaAclKafkaClusterPtrType)(v)
}

func (*kafkaAclKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclKafkaCluster)(nil)).Elem()
}

func (i *kafkaAclKafkaClusterPtrType) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return i.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaAclKafkaClusterPtrType) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaAclKafkaClusterPtrOutput)
}

type KafkaAclKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaAclKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaAclKafkaCluster)(nil)).Elem()
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterOutput() KafkaAclKafkaClusterOutput {
	return o
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterOutputWithContext(ctx context.Context) KafkaAclKafkaClusterOutput {
	return o
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return o.ToKafkaAclKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaAclKafkaClusterOutput) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaAclKafkaCluster) *KafkaAclKafkaCluster {
		return &v
	}).(KafkaAclKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaAclKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaAclKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaAclKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaAclKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaAclKafkaCluster)(nil)).Elem()
}

func (o KafkaAclKafkaClusterPtrOutput) ToKafkaAclKafkaClusterPtrOutput() KafkaAclKafkaClusterPtrOutput {
	return o
}

func (o KafkaAclKafkaClusterPtrOutput) ToKafkaAclKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaAclKafkaClusterPtrOutput {
	return o
}

func (o KafkaAclKafkaClusterPtrOutput) Elem() KafkaAclKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaAclKafkaCluster) KafkaAclKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaAclKafkaCluster
		return ret
	}).(KafkaAclKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaAclKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaAclKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClientQuotaEnvironment struct {
	// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
	//
	// > **Note:** Each principal assigned to a quota receives the full amount of the quota, meaning the quota is not shared by the principals it is assigned. For example, if a 10 MBps ingress quota is applied to Principals 1 and 2, Principal 1 can produce at most 10 MBps, independently of Principal 2.
	//
	// > **Note:** Define a throughput maximum, but do not guarantee a throughput floor. Applications are rate-limited through the use of the Kafka throttling mechanism. Kafka asks the client to wait before sending more data and mutes the channel, which appears as latency to the client application.
	Id string `pulumi:"id"`
}

// KafkaClientQuotaEnvironmentInput is an input type that accepts KafkaClientQuotaEnvironmentArgs and KafkaClientQuotaEnvironmentOutput values.
// You can construct a concrete instance of `KafkaClientQuotaEnvironmentInput` via:
//
//	KafkaClientQuotaEnvironmentArgs{...}
type KafkaClientQuotaEnvironmentInput interface {
	pulumi.Input

	ToKafkaClientQuotaEnvironmentOutput() KafkaClientQuotaEnvironmentOutput
	ToKafkaClientQuotaEnvironmentOutputWithContext(context.Context) KafkaClientQuotaEnvironmentOutput
}

type KafkaClientQuotaEnvironmentArgs struct {
	// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
	//
	// > **Note:** Each principal assigned to a quota receives the full amount of the quota, meaning the quota is not shared by the principals it is assigned. For example, if a 10 MBps ingress quota is applied to Principals 1 and 2, Principal 1 can produce at most 10 MBps, independently of Principal 2.
	//
	// > **Note:** Define a throughput maximum, but do not guarantee a throughput floor. Applications are rate-limited through the use of the Kafka throttling mechanism. Kafka asks the client to wait before sending more data and mutes the channel, which appears as latency to the client application.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClientQuotaEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentOutput() KafkaClientQuotaEnvironmentOutput {
	return i.ToKafkaClientQuotaEnvironmentOutputWithContext(context.Background())
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaEnvironmentOutput)
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return i.ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Background())
}

func (i KafkaClientQuotaEnvironmentArgs) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaEnvironmentOutput).ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx)
}

// KafkaClientQuotaEnvironmentPtrInput is an input type that accepts KafkaClientQuotaEnvironmentArgs, KafkaClientQuotaEnvironmentPtr and KafkaClientQuotaEnvironmentPtrOutput values.
// You can construct a concrete instance of `KafkaClientQuotaEnvironmentPtrInput` via:
//
//	        KafkaClientQuotaEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KafkaClientQuotaEnvironmentPtrInput interface {
	pulumi.Input

	ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput
	ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Context) KafkaClientQuotaEnvironmentPtrOutput
}

type kafkaClientQuotaEnvironmentPtrType KafkaClientQuotaEnvironmentArgs

func KafkaClientQuotaEnvironmentPtr(v *KafkaClientQuotaEnvironmentArgs) KafkaClientQuotaEnvironmentPtrInput {
	return (*kafkaClientQuotaEnvironmentPtrType)(v)
}

func (*kafkaClientQuotaEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i *kafkaClientQuotaEnvironmentPtrType) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return i.ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Background())
}

func (i *kafkaClientQuotaEnvironmentPtrType) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaEnvironmentPtrOutput)
}

type KafkaClientQuotaEnvironmentOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentOutput() KafkaClientQuotaEnvironmentOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return o.ToKafkaClientQuotaEnvironmentPtrOutputWithContext(context.Background())
}

func (o KafkaClientQuotaEnvironmentOutput) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClientQuotaEnvironment) *KafkaClientQuotaEnvironment {
		return &v
	}).(KafkaClientQuotaEnvironmentPtrOutput)
}

// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
//
// > **Note:** Each principal assigned to a quota receives the full amount of the quota, meaning the quota is not shared by the principals it is assigned. For example, if a 10 MBps ingress quota is applied to Principals 1 and 2, Principal 1 can produce at most 10 MBps, independently of Principal 2.
//
// > **Note:** Define a throughput maximum, but do not guarantee a throughput floor. Applications are rate-limited through the use of the Kafka throttling mechanism. Kafka asks the client to wait before sending more data and mutes the channel, which appears as latency to the client application.
func (o KafkaClientQuotaEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClientQuotaEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o KafkaClientQuotaEnvironmentPtrOutput) ToKafkaClientQuotaEnvironmentPtrOutput() KafkaClientQuotaEnvironmentPtrOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentPtrOutput) ToKafkaClientQuotaEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClientQuotaEnvironmentPtrOutput {
	return o
}

func (o KafkaClientQuotaEnvironmentPtrOutput) Elem() KafkaClientQuotaEnvironmentOutput {
	return o.ApplyT(func(v *KafkaClientQuotaEnvironment) KafkaClientQuotaEnvironment {
		if v != nil {
			return *v
		}
		var ret KafkaClientQuotaEnvironment
		return ret
	}).(KafkaClientQuotaEnvironmentOutput)
}

// The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
//
// > **Note:** Each principal assigned to a quota receives the full amount of the quota, meaning the quota is not shared by the principals it is assigned. For example, if a 10 MBps ingress quota is applied to Principals 1 and 2, Principal 1 can produce at most 10 MBps, independently of Principal 2.
//
// > **Note:** Define a throughput maximum, but do not guarantee a throughput floor. Applications are rate-limited through the use of the Kafka throttling mechanism. Kafka asks the client to wait before sending more data and mutes the channel, which appears as latency to the client application.
func (o KafkaClientQuotaEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClientQuotaKafkaCluster struct {
	// The ID of the Kafka Cluster where the Kafka Client Quota is applied, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClientQuotaKafkaClusterInput is an input type that accepts KafkaClientQuotaKafkaClusterArgs and KafkaClientQuotaKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaClientQuotaKafkaClusterInput` via:
//
//	KafkaClientQuotaKafkaClusterArgs{...}
type KafkaClientQuotaKafkaClusterInput interface {
	pulumi.Input

	ToKafkaClientQuotaKafkaClusterOutput() KafkaClientQuotaKafkaClusterOutput
	ToKafkaClientQuotaKafkaClusterOutputWithContext(context.Context) KafkaClientQuotaKafkaClusterOutput
}

type KafkaClientQuotaKafkaClusterArgs struct {
	// The ID of the Kafka Cluster where the Kafka Client Quota is applied, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClientQuotaKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterOutput() KafkaClientQuotaKafkaClusterOutput {
	return i.ToKafkaClientQuotaKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaKafkaClusterOutput)
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return i.ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaClientQuotaKafkaClusterArgs) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaKafkaClusterOutput).ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaClientQuotaKafkaClusterPtrInput is an input type that accepts KafkaClientQuotaKafkaClusterArgs, KafkaClientQuotaKafkaClusterPtr and KafkaClientQuotaKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaClientQuotaKafkaClusterPtrInput` via:
//
//	        KafkaClientQuotaKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaClientQuotaKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput
	ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Context) KafkaClientQuotaKafkaClusterPtrOutput
}

type kafkaClientQuotaKafkaClusterPtrType KafkaClientQuotaKafkaClusterArgs

func KafkaClientQuotaKafkaClusterPtr(v *KafkaClientQuotaKafkaClusterArgs) KafkaClientQuotaKafkaClusterPtrInput {
	return (*kafkaClientQuotaKafkaClusterPtrType)(v)
}

func (*kafkaClientQuotaKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i *kafkaClientQuotaKafkaClusterPtrType) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return i.ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaClientQuotaKafkaClusterPtrType) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaKafkaClusterPtrOutput)
}

type KafkaClientQuotaKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterOutput() KafkaClientQuotaKafkaClusterOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return o.ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaClientQuotaKafkaClusterOutput) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClientQuotaKafkaCluster) *KafkaClientQuotaKafkaCluster {
		return &v
	}).(KafkaClientQuotaKafkaClusterPtrOutput)
}

// The ID of the Kafka Cluster where the Kafka Client Quota is applied, for example, `lkc-abc123`.
func (o KafkaClientQuotaKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClientQuotaKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o KafkaClientQuotaKafkaClusterPtrOutput) ToKafkaClientQuotaKafkaClusterPtrOutput() KafkaClientQuotaKafkaClusterPtrOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterPtrOutput) ToKafkaClientQuotaKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClientQuotaKafkaClusterPtrOutput {
	return o
}

func (o KafkaClientQuotaKafkaClusterPtrOutput) Elem() KafkaClientQuotaKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaClientQuotaKafkaCluster) KafkaClientQuotaKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaClientQuotaKafkaCluster
		return ret
	}).(KafkaClientQuotaKafkaClusterOutput)
}

// The ID of the Kafka Cluster where the Kafka Client Quota is applied, for example, `lkc-abc123`.
func (o KafkaClientQuotaKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClientQuotaThroughput struct {
	// The egress throughput limit in bytes per second.
	EgressByteRate string `pulumi:"egressByteRate"`
	// The ingress throughput limit in bytes per second.
	IngressByteRate string `pulumi:"ingressByteRate"`
}

// KafkaClientQuotaThroughputInput is an input type that accepts KafkaClientQuotaThroughputArgs and KafkaClientQuotaThroughputOutput values.
// You can construct a concrete instance of `KafkaClientQuotaThroughputInput` via:
//
//	KafkaClientQuotaThroughputArgs{...}
type KafkaClientQuotaThroughputInput interface {
	pulumi.Input

	ToKafkaClientQuotaThroughputOutput() KafkaClientQuotaThroughputOutput
	ToKafkaClientQuotaThroughputOutputWithContext(context.Context) KafkaClientQuotaThroughputOutput
}

type KafkaClientQuotaThroughputArgs struct {
	// The egress throughput limit in bytes per second.
	EgressByteRate pulumi.StringInput `pulumi:"egressByteRate"`
	// The ingress throughput limit in bytes per second.
	IngressByteRate pulumi.StringInput `pulumi:"ingressByteRate"`
}

func (KafkaClientQuotaThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaThroughput)(nil)).Elem()
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputOutput() KafkaClientQuotaThroughputOutput {
	return i.ToKafkaClientQuotaThroughputOutputWithContext(context.Background())
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaThroughputOutput)
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return i.ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Background())
}

func (i KafkaClientQuotaThroughputArgs) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaThroughputOutput).ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx)
}

// KafkaClientQuotaThroughputPtrInput is an input type that accepts KafkaClientQuotaThroughputArgs, KafkaClientQuotaThroughputPtr and KafkaClientQuotaThroughputPtrOutput values.
// You can construct a concrete instance of `KafkaClientQuotaThroughputPtrInput` via:
//
//	        KafkaClientQuotaThroughputArgs{...}
//
//	or:
//
//	        nil
type KafkaClientQuotaThroughputPtrInput interface {
	pulumi.Input

	ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput
	ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Context) KafkaClientQuotaThroughputPtrOutput
}

type kafkaClientQuotaThroughputPtrType KafkaClientQuotaThroughputArgs

func KafkaClientQuotaThroughputPtr(v *KafkaClientQuotaThroughputArgs) KafkaClientQuotaThroughputPtrInput {
	return (*kafkaClientQuotaThroughputPtrType)(v)
}

func (*kafkaClientQuotaThroughputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaThroughput)(nil)).Elem()
}

func (i *kafkaClientQuotaThroughputPtrType) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return i.ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Background())
}

func (i *kafkaClientQuotaThroughputPtrType) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClientQuotaThroughputPtrOutput)
}

type KafkaClientQuotaThroughputOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClientQuotaThroughput)(nil)).Elem()
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputOutput() KafkaClientQuotaThroughputOutput {
	return o
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputOutput {
	return o
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return o.ToKafkaClientQuotaThroughputPtrOutputWithContext(context.Background())
}

func (o KafkaClientQuotaThroughputOutput) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClientQuotaThroughput) *KafkaClientQuotaThroughput {
		return &v
	}).(KafkaClientQuotaThroughputPtrOutput)
}

// The egress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputOutput) EgressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaThroughput) string { return v.EgressByteRate }).(pulumi.StringOutput)
}

// The ingress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputOutput) IngressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClientQuotaThroughput) string { return v.IngressByteRate }).(pulumi.StringOutput)
}

type KafkaClientQuotaThroughputPtrOutput struct{ *pulumi.OutputState }

func (KafkaClientQuotaThroughputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClientQuotaThroughput)(nil)).Elem()
}

func (o KafkaClientQuotaThroughputPtrOutput) ToKafkaClientQuotaThroughputPtrOutput() KafkaClientQuotaThroughputPtrOutput {
	return o
}

func (o KafkaClientQuotaThroughputPtrOutput) ToKafkaClientQuotaThroughputPtrOutputWithContext(ctx context.Context) KafkaClientQuotaThroughputPtrOutput {
	return o
}

func (o KafkaClientQuotaThroughputPtrOutput) Elem() KafkaClientQuotaThroughputOutput {
	return o.ApplyT(func(v *KafkaClientQuotaThroughput) KafkaClientQuotaThroughput {
		if v != nil {
			return *v
		}
		var ret KafkaClientQuotaThroughput
		return ret
	}).(KafkaClientQuotaThroughputOutput)
}

// The egress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputPtrOutput) EgressByteRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaThroughput) *string {
		if v == nil {
			return nil
		}
		return &v.EgressByteRate
	}).(pulumi.StringPtrOutput)
}

// The ingress throughput limit in bytes per second.
func (o KafkaClientQuotaThroughputPtrOutput) IngressByteRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClientQuotaThroughput) *string {
		if v == nil {
			return nil
		}
		return &v.IngressByteRate
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterBasic struct {
}

// KafkaClusterBasicInput is an input type that accepts KafkaClusterBasicArgs and KafkaClusterBasicOutput values.
// You can construct a concrete instance of `KafkaClusterBasicInput` via:
//
//	KafkaClusterBasicArgs{...}
type KafkaClusterBasicInput interface {
	pulumi.Input

	ToKafkaClusterBasicOutput() KafkaClusterBasicOutput
	ToKafkaClusterBasicOutputWithContext(context.Context) KafkaClusterBasicOutput
}

type KafkaClusterBasicArgs struct {
}

func (KafkaClusterBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterBasic)(nil)).Elem()
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicOutput() KafkaClusterBasicOutput {
	return i.ToKafkaClusterBasicOutputWithContext(context.Background())
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicOutputWithContext(ctx context.Context) KafkaClusterBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicOutput)
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return i.ToKafkaClusterBasicPtrOutputWithContext(context.Background())
}

func (i KafkaClusterBasicArgs) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicOutput).ToKafkaClusterBasicPtrOutputWithContext(ctx)
}

// KafkaClusterBasicPtrInput is an input type that accepts KafkaClusterBasicArgs, KafkaClusterBasicPtr and KafkaClusterBasicPtrOutput values.
// You can construct a concrete instance of `KafkaClusterBasicPtrInput` via:
//
//	        KafkaClusterBasicArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterBasicPtrInput interface {
	pulumi.Input

	ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput
	ToKafkaClusterBasicPtrOutputWithContext(context.Context) KafkaClusterBasicPtrOutput
}

type kafkaClusterBasicPtrType KafkaClusterBasicArgs

func KafkaClusterBasicPtr(v *KafkaClusterBasicArgs) KafkaClusterBasicPtrInput {
	return (*kafkaClusterBasicPtrType)(v)
}

func (*kafkaClusterBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterBasic)(nil)).Elem()
}

func (i *kafkaClusterBasicPtrType) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return i.ToKafkaClusterBasicPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterBasicPtrType) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterBasicPtrOutput)
}

type KafkaClusterBasicOutput struct{ *pulumi.OutputState }

func (KafkaClusterBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterBasic)(nil)).Elem()
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicOutput() KafkaClusterBasicOutput {
	return o
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicOutputWithContext(ctx context.Context) KafkaClusterBasicOutput {
	return o
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return o.ToKafkaClusterBasicPtrOutputWithContext(context.Background())
}

func (o KafkaClusterBasicOutput) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterBasic) *KafkaClusterBasic {
		return &v
	}).(KafkaClusterBasicPtrOutput)
}

type KafkaClusterBasicPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterBasic)(nil)).Elem()
}

func (o KafkaClusterBasicPtrOutput) ToKafkaClusterBasicPtrOutput() KafkaClusterBasicPtrOutput {
	return o
}

func (o KafkaClusterBasicPtrOutput) ToKafkaClusterBasicPtrOutputWithContext(ctx context.Context) KafkaClusterBasicPtrOutput {
	return o
}

func (o KafkaClusterBasicPtrOutput) Elem() KafkaClusterBasicOutput {
	return o.ApplyT(func(v *KafkaClusterBasic) KafkaClusterBasic {
		if v != nil {
			return *v
		}
		var ret KafkaClusterBasic
		return ret
	}).(KafkaClusterBasicOutput)
}

type KafkaClusterByokKey struct {
	// The ID of the Confluent key that is used to encrypt the data in the Kafka cluster, for example, `cck-lye5m`.
	Id string `pulumi:"id"`
}

// KafkaClusterByokKeyInput is an input type that accepts KafkaClusterByokKeyArgs and KafkaClusterByokKeyOutput values.
// You can construct a concrete instance of `KafkaClusterByokKeyInput` via:
//
//	KafkaClusterByokKeyArgs{...}
type KafkaClusterByokKeyInput interface {
	pulumi.Input

	ToKafkaClusterByokKeyOutput() KafkaClusterByokKeyOutput
	ToKafkaClusterByokKeyOutputWithContext(context.Context) KafkaClusterByokKeyOutput
}

type KafkaClusterByokKeyArgs struct {
	// The ID of the Confluent key that is used to encrypt the data in the Kafka cluster, for example, `cck-lye5m`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterByokKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterByokKey)(nil)).Elem()
}

func (i KafkaClusterByokKeyArgs) ToKafkaClusterByokKeyOutput() KafkaClusterByokKeyOutput {
	return i.ToKafkaClusterByokKeyOutputWithContext(context.Background())
}

func (i KafkaClusterByokKeyArgs) ToKafkaClusterByokKeyOutputWithContext(ctx context.Context) KafkaClusterByokKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterByokKeyOutput)
}

func (i KafkaClusterByokKeyArgs) ToKafkaClusterByokKeyPtrOutput() KafkaClusterByokKeyPtrOutput {
	return i.ToKafkaClusterByokKeyPtrOutputWithContext(context.Background())
}

func (i KafkaClusterByokKeyArgs) ToKafkaClusterByokKeyPtrOutputWithContext(ctx context.Context) KafkaClusterByokKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterByokKeyOutput).ToKafkaClusterByokKeyPtrOutputWithContext(ctx)
}

// KafkaClusterByokKeyPtrInput is an input type that accepts KafkaClusterByokKeyArgs, KafkaClusterByokKeyPtr and KafkaClusterByokKeyPtrOutput values.
// You can construct a concrete instance of `KafkaClusterByokKeyPtrInput` via:
//
//	        KafkaClusterByokKeyArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterByokKeyPtrInput interface {
	pulumi.Input

	ToKafkaClusterByokKeyPtrOutput() KafkaClusterByokKeyPtrOutput
	ToKafkaClusterByokKeyPtrOutputWithContext(context.Context) KafkaClusterByokKeyPtrOutput
}

type kafkaClusterByokKeyPtrType KafkaClusterByokKeyArgs

func KafkaClusterByokKeyPtr(v *KafkaClusterByokKeyArgs) KafkaClusterByokKeyPtrInput {
	return (*kafkaClusterByokKeyPtrType)(v)
}

func (*kafkaClusterByokKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterByokKey)(nil)).Elem()
}

func (i *kafkaClusterByokKeyPtrType) ToKafkaClusterByokKeyPtrOutput() KafkaClusterByokKeyPtrOutput {
	return i.ToKafkaClusterByokKeyPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterByokKeyPtrType) ToKafkaClusterByokKeyPtrOutputWithContext(ctx context.Context) KafkaClusterByokKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterByokKeyPtrOutput)
}

type KafkaClusterByokKeyOutput struct{ *pulumi.OutputState }

func (KafkaClusterByokKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterByokKey)(nil)).Elem()
}

func (o KafkaClusterByokKeyOutput) ToKafkaClusterByokKeyOutput() KafkaClusterByokKeyOutput {
	return o
}

func (o KafkaClusterByokKeyOutput) ToKafkaClusterByokKeyOutputWithContext(ctx context.Context) KafkaClusterByokKeyOutput {
	return o
}

func (o KafkaClusterByokKeyOutput) ToKafkaClusterByokKeyPtrOutput() KafkaClusterByokKeyPtrOutput {
	return o.ToKafkaClusterByokKeyPtrOutputWithContext(context.Background())
}

func (o KafkaClusterByokKeyOutput) ToKafkaClusterByokKeyPtrOutputWithContext(ctx context.Context) KafkaClusterByokKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterByokKey) *KafkaClusterByokKey {
		return &v
	}).(KafkaClusterByokKeyPtrOutput)
}

// The ID of the Confluent key that is used to encrypt the data in the Kafka cluster, for example, `cck-lye5m`.
func (o KafkaClusterByokKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterByokKey) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterByokKeyPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterByokKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterByokKey)(nil)).Elem()
}

func (o KafkaClusterByokKeyPtrOutput) ToKafkaClusterByokKeyPtrOutput() KafkaClusterByokKeyPtrOutput {
	return o
}

func (o KafkaClusterByokKeyPtrOutput) ToKafkaClusterByokKeyPtrOutputWithContext(ctx context.Context) KafkaClusterByokKeyPtrOutput {
	return o
}

func (o KafkaClusterByokKeyPtrOutput) Elem() KafkaClusterByokKeyOutput {
	return o.ApplyT(func(v *KafkaClusterByokKey) KafkaClusterByokKey {
		if v != nil {
			return *v
		}
		var ret KafkaClusterByokKey
		return ret
	}).(KafkaClusterByokKeyOutput)
}

// The ID of the Confluent key that is used to encrypt the data in the Kafka cluster, for example, `cck-lye5m`.
func (o KafkaClusterByokKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterByokKey) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterConfigCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	//
	// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
	//
	// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_cluster_config.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_cluster_config.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
	Secret string `pulumi:"secret"`
}

// KafkaClusterConfigCredentialsInput is an input type that accepts KafkaClusterConfigCredentialsArgs and KafkaClusterConfigCredentialsOutput values.
// You can construct a concrete instance of `KafkaClusterConfigCredentialsInput` via:
//
//	KafkaClusterConfigCredentialsArgs{...}
type KafkaClusterConfigCredentialsInput interface {
	pulumi.Input

	ToKafkaClusterConfigCredentialsOutput() KafkaClusterConfigCredentialsOutput
	ToKafkaClusterConfigCredentialsOutputWithContext(context.Context) KafkaClusterConfigCredentialsOutput
}

type KafkaClusterConfigCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	//
	// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
	//
	// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_cluster_config.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_cluster_config.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaClusterConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigCredentials)(nil)).Elem()
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsOutput() KafkaClusterConfigCredentialsOutput {
	return i.ToKafkaClusterConfigCredentialsOutputWithContext(context.Background())
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigCredentialsOutput)
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return i.ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaClusterConfigCredentialsArgs) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigCredentialsOutput).ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx)
}

// KafkaClusterConfigCredentialsPtrInput is an input type that accepts KafkaClusterConfigCredentialsArgs, KafkaClusterConfigCredentialsPtr and KafkaClusterConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaClusterConfigCredentialsPtrInput` via:
//
//	        KafkaClusterConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterConfigCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput
	ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Context) KafkaClusterConfigCredentialsPtrOutput
}

type kafkaClusterConfigCredentialsPtrType KafkaClusterConfigCredentialsArgs

func KafkaClusterConfigCredentialsPtr(v *KafkaClusterConfigCredentialsArgs) KafkaClusterConfigCredentialsPtrInput {
	return (*kafkaClusterConfigCredentialsPtrType)(v)
}

func (*kafkaClusterConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigCredentials)(nil)).Elem()
}

func (i *kafkaClusterConfigCredentialsPtrType) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return i.ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterConfigCredentialsPtrType) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigCredentialsPtrOutput)
}

type KafkaClusterConfigCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigCredentials)(nil)).Elem()
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsOutput() KafkaClusterConfigCredentialsOutput {
	return o
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsOutput {
	return o
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return o.ToKafkaClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaClusterConfigCredentialsOutput) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterConfigCredentials) *KafkaClusterConfigCredentials {
		return &v
	}).(KafkaClusterConfigCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaClusterConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
//
// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
//
// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_cluster_config.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_cluster_config.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
func (o KafkaClusterConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaClusterConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigCredentials)(nil)).Elem()
}

func (o KafkaClusterConfigCredentialsPtrOutput) ToKafkaClusterConfigCredentialsPtrOutput() KafkaClusterConfigCredentialsPtrOutput {
	return o
}

func (o KafkaClusterConfigCredentialsPtrOutput) ToKafkaClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) KafkaClusterConfigCredentialsPtrOutput {
	return o
}

func (o KafkaClusterConfigCredentialsPtrOutput) Elem() KafkaClusterConfigCredentialsOutput {
	return o.ApplyT(func(v *KafkaClusterConfigCredentials) KafkaClusterConfigCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaClusterConfigCredentials
		return ret
	}).(KafkaClusterConfigCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaClusterConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
//
// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
//
// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_cluster_config.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_cluster_config.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
func (o KafkaClusterConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterConfigKafkaCluster struct {
	// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterConfigKafkaClusterInput is an input type that accepts KafkaClusterConfigKafkaClusterArgs and KafkaClusterConfigKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaClusterConfigKafkaClusterInput` via:
//
//	KafkaClusterConfigKafkaClusterArgs{...}
type KafkaClusterConfigKafkaClusterInput interface {
	pulumi.Input

	ToKafkaClusterConfigKafkaClusterOutput() KafkaClusterConfigKafkaClusterOutput
	ToKafkaClusterConfigKafkaClusterOutputWithContext(context.Context) KafkaClusterConfigKafkaClusterOutput
}

type KafkaClusterConfigKafkaClusterArgs struct {
	// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterConfigKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterOutput() KafkaClusterConfigKafkaClusterOutput {
	return i.ToKafkaClusterConfigKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigKafkaClusterOutput)
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return i.ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaClusterConfigKafkaClusterArgs) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigKafkaClusterOutput).ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaClusterConfigKafkaClusterPtrInput is an input type that accepts KafkaClusterConfigKafkaClusterArgs, KafkaClusterConfigKafkaClusterPtr and KafkaClusterConfigKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaClusterConfigKafkaClusterPtrInput` via:
//
//	        KafkaClusterConfigKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterConfigKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput
	ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Context) KafkaClusterConfigKafkaClusterPtrOutput
}

type kafkaClusterConfigKafkaClusterPtrType KafkaClusterConfigKafkaClusterArgs

func KafkaClusterConfigKafkaClusterPtr(v *KafkaClusterConfigKafkaClusterArgs) KafkaClusterConfigKafkaClusterPtrInput {
	return (*kafkaClusterConfigKafkaClusterPtrType)(v)
}

func (*kafkaClusterConfigKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (i *kafkaClusterConfigKafkaClusterPtrType) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return i.ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterConfigKafkaClusterPtrType) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterConfigKafkaClusterPtrOutput)
}

type KafkaClusterConfigKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterOutput() KafkaClusterConfigKafkaClusterOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return o.ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaClusterConfigKafkaClusterOutput) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterConfigKafkaCluster) *KafkaClusterConfigKafkaCluster {
		return &v
	}).(KafkaClusterConfigKafkaClusterPtrOutput)
}

// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
func (o KafkaClusterConfigKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterConfigKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterConfigKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterConfigKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterConfigKafkaCluster)(nil)).Elem()
}

func (o KafkaClusterConfigKafkaClusterPtrOutput) ToKafkaClusterConfigKafkaClusterPtrOutput() KafkaClusterConfigKafkaClusterPtrOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterPtrOutput) ToKafkaClusterConfigKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaClusterConfigKafkaClusterPtrOutput {
	return o
}

func (o KafkaClusterConfigKafkaClusterPtrOutput) Elem() KafkaClusterConfigKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaClusterConfigKafkaCluster) KafkaClusterConfigKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaClusterConfigKafkaCluster
		return ret
	}).(KafkaClusterConfigKafkaClusterOutput)
}

// The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
func (o KafkaClusterConfigKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterConfigKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterDedicated struct {
	// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
	//
	// > **Note:** Exactly one from the `basic`, `standard`, `dedicated`, `enterprise` or `freight` configuration blocks must be specified.
	//
	// > **Note:** The `freight` block is in an [Early Access lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy).
	//
	// > **Note:** The `freight` Kafka cluster type is only available in AWS currently.
	//
	// !> **Warning:** You can only upgrade clusters from `basic` to `standard`.
	//
	// > **Note:** Currently, provisioning of a Dedicated Kafka cluster takes around 25 minutes on average but might take up to 24 hours. If you can't wait for the `pulumi up` step to finish, you can exit it and import the cluster by using the `pulumi import` command once it has been provisioned. When the cluster is provisioned, you will receive an email notification, and you can also follow updates on the Target Environment web page of the Confluent Cloud website.
	Cku int `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	Zones []string `pulumi:"zones"`
}

// KafkaClusterDedicatedInput is an input type that accepts KafkaClusterDedicatedArgs and KafkaClusterDedicatedOutput values.
// You can construct a concrete instance of `KafkaClusterDedicatedInput` via:
//
//	KafkaClusterDedicatedArgs{...}
type KafkaClusterDedicatedInput interface {
	pulumi.Input

	ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput
	ToKafkaClusterDedicatedOutputWithContext(context.Context) KafkaClusterDedicatedOutput
}

type KafkaClusterDedicatedArgs struct {
	// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
	//
	// > **Note:** Exactly one from the `basic`, `standard`, `dedicated`, `enterprise` or `freight` configuration blocks must be specified.
	//
	// > **Note:** The `freight` block is in an [Early Access lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy).
	//
	// > **Note:** The `freight` Kafka cluster type is only available in AWS currently.
	//
	// !> **Warning:** You can only upgrade clusters from `basic` to `standard`.
	//
	// > **Note:** Currently, provisioning of a Dedicated Kafka cluster takes around 25 minutes on average but might take up to 24 hours. If you can't wait for the `pulumi up` step to finish, you can exit it and import the cluster by using the `pulumi import` command once it has been provisioned. When the cluster is provisioned, you will receive an email notification, and you can also follow updates on the Target Environment web page of the Confluent Cloud website.
	Cku pulumi.IntInput `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
	EncryptionKey pulumi.StringPtrInput `pulumi:"encryptionKey"`
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (KafkaClusterDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterDedicated)(nil)).Elem()
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput {
	return i.ToKafkaClusterDedicatedOutputWithContext(context.Background())
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedOutputWithContext(ctx context.Context) KafkaClusterDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedOutput)
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return i.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i KafkaClusterDedicatedArgs) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedOutput).ToKafkaClusterDedicatedPtrOutputWithContext(ctx)
}

// KafkaClusterDedicatedPtrInput is an input type that accepts KafkaClusterDedicatedArgs, KafkaClusterDedicatedPtr and KafkaClusterDedicatedPtrOutput values.
// You can construct a concrete instance of `KafkaClusterDedicatedPtrInput` via:
//
//	        KafkaClusterDedicatedArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterDedicatedPtrInput interface {
	pulumi.Input

	ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput
	ToKafkaClusterDedicatedPtrOutputWithContext(context.Context) KafkaClusterDedicatedPtrOutput
}

type kafkaClusterDedicatedPtrType KafkaClusterDedicatedArgs

func KafkaClusterDedicatedPtr(v *KafkaClusterDedicatedArgs) KafkaClusterDedicatedPtrInput {
	return (*kafkaClusterDedicatedPtrType)(v)
}

func (*kafkaClusterDedicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterDedicated)(nil)).Elem()
}

func (i *kafkaClusterDedicatedPtrType) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return i.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterDedicatedPtrType) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterDedicatedPtrOutput)
}

type KafkaClusterDedicatedOutput struct{ *pulumi.OutputState }

func (KafkaClusterDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterDedicated)(nil)).Elem()
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedOutput() KafkaClusterDedicatedOutput {
	return o
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedOutputWithContext(ctx context.Context) KafkaClusterDedicatedOutput {
	return o
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return o.ToKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (o KafkaClusterDedicatedOutput) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterDedicated) *KafkaClusterDedicated {
		return &v
	}).(KafkaClusterDedicatedPtrOutput)
}

// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
//
// > **Note:** Exactly one from the `basic`, `standard`, `dedicated`, `enterprise` or `freight` configuration blocks must be specified.
//
// > **Note:** The `freight` block is in an [Early Access lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy).
//
// > **Note:** The `freight` Kafka cluster type is only available in AWS currently.
//
// !> **Warning:** You can only upgrade clusters from `basic` to `standard`.
//
// > **Note:** Currently, provisioning of a Dedicated Kafka cluster takes around 25 minutes on average but might take up to 24 hours. If you can't wait for the `pulumi up` step to finish, you can exit it and import the cluster by using the `pulumi import` command once it has been provisioned. When the cluster is provisioned, you will receive an email notification, and you can also follow updates on the Target Environment web page of the Confluent Cloud website.
func (o KafkaClusterDedicatedOutput) Cku() pulumi.IntOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) int { return v.Cku }).(pulumi.IntOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
func (o KafkaClusterDedicatedOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) *string { return v.EncryptionKey }).(pulumi.StringPtrOutput)
}

// (Required List of String) The list of zones the cluster is in.
// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
func (o KafkaClusterDedicatedOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaClusterDedicated) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type KafkaClusterDedicatedPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterDedicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterDedicated)(nil)).Elem()
}

func (o KafkaClusterDedicatedPtrOutput) ToKafkaClusterDedicatedPtrOutput() KafkaClusterDedicatedPtrOutput {
	return o
}

func (o KafkaClusterDedicatedPtrOutput) ToKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) KafkaClusterDedicatedPtrOutput {
	return o
}

func (o KafkaClusterDedicatedPtrOutput) Elem() KafkaClusterDedicatedOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) KafkaClusterDedicated {
		if v != nil {
			return *v
		}
		var ret KafkaClusterDedicated
		return ret
	}).(KafkaClusterDedicatedOutput)
}

// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
//
// > **Note:** Exactly one from the `basic`, `standard`, `dedicated`, `enterprise` or `freight` configuration blocks must be specified.
//
// > **Note:** The `freight` block is in an [Early Access lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy).
//
// > **Note:** The `freight` Kafka cluster type is only available in AWS currently.
//
// !> **Warning:** You can only upgrade clusters from `basic` to `standard`.
//
// > **Note:** Currently, provisioning of a Dedicated Kafka cluster takes around 25 minutes on average but might take up to 24 hours. If you can't wait for the `pulumi up` step to finish, you can exit it and import the cluster by using the `pulumi import` command once it has been provisioned. When the cluster is provisioned, you will receive an email notification, and you can also follow updates on the Target Environment web page of the Confluent Cloud website.
func (o KafkaClusterDedicatedPtrOutput) Cku() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) *int {
		if v == nil {
			return nil
		}
		return &v.Cku
	}).(pulumi.IntPtrOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
func (o KafkaClusterDedicatedPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// (Required List of String) The list of zones the cluster is in.
// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
func (o KafkaClusterDedicatedPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaClusterDedicated) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type KafkaClusterEnterprise struct {
}

// KafkaClusterEnterpriseInput is an input type that accepts KafkaClusterEnterpriseArgs and KafkaClusterEnterpriseOutput values.
// You can construct a concrete instance of `KafkaClusterEnterpriseInput` via:
//
//	KafkaClusterEnterpriseArgs{...}
type KafkaClusterEnterpriseInput interface {
	pulumi.Input

	ToKafkaClusterEnterpriseOutput() KafkaClusterEnterpriseOutput
	ToKafkaClusterEnterpriseOutputWithContext(context.Context) KafkaClusterEnterpriseOutput
}

type KafkaClusterEnterpriseArgs struct {
}

func (KafkaClusterEnterpriseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnterprise)(nil)).Elem()
}

func (i KafkaClusterEnterpriseArgs) ToKafkaClusterEnterpriseOutput() KafkaClusterEnterpriseOutput {
	return i.ToKafkaClusterEnterpriseOutputWithContext(context.Background())
}

func (i KafkaClusterEnterpriseArgs) ToKafkaClusterEnterpriseOutputWithContext(ctx context.Context) KafkaClusterEnterpriseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnterpriseOutput)
}

// KafkaClusterEnterpriseArrayInput is an input type that accepts KafkaClusterEnterpriseArray and KafkaClusterEnterpriseArrayOutput values.
// You can construct a concrete instance of `KafkaClusterEnterpriseArrayInput` via:
//
//	KafkaClusterEnterpriseArray{ KafkaClusterEnterpriseArgs{...} }
type KafkaClusterEnterpriseArrayInput interface {
	pulumi.Input

	ToKafkaClusterEnterpriseArrayOutput() KafkaClusterEnterpriseArrayOutput
	ToKafkaClusterEnterpriseArrayOutputWithContext(context.Context) KafkaClusterEnterpriseArrayOutput
}

type KafkaClusterEnterpriseArray []KafkaClusterEnterpriseInput

func (KafkaClusterEnterpriseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterEnterprise)(nil)).Elem()
}

func (i KafkaClusterEnterpriseArray) ToKafkaClusterEnterpriseArrayOutput() KafkaClusterEnterpriseArrayOutput {
	return i.ToKafkaClusterEnterpriseArrayOutputWithContext(context.Background())
}

func (i KafkaClusterEnterpriseArray) ToKafkaClusterEnterpriseArrayOutputWithContext(ctx context.Context) KafkaClusterEnterpriseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnterpriseArrayOutput)
}

type KafkaClusterEnterpriseOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnterpriseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnterprise)(nil)).Elem()
}

func (o KafkaClusterEnterpriseOutput) ToKafkaClusterEnterpriseOutput() KafkaClusterEnterpriseOutput {
	return o
}

func (o KafkaClusterEnterpriseOutput) ToKafkaClusterEnterpriseOutputWithContext(ctx context.Context) KafkaClusterEnterpriseOutput {
	return o
}

type KafkaClusterEnterpriseArrayOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnterpriseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterEnterprise)(nil)).Elem()
}

func (o KafkaClusterEnterpriseArrayOutput) ToKafkaClusterEnterpriseArrayOutput() KafkaClusterEnterpriseArrayOutput {
	return o
}

func (o KafkaClusterEnterpriseArrayOutput) ToKafkaClusterEnterpriseArrayOutputWithContext(ctx context.Context) KafkaClusterEnterpriseArrayOutput {
	return o
}

func (o KafkaClusterEnterpriseArrayOutput) Index(i pulumi.IntInput) KafkaClusterEnterpriseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaClusterEnterprise {
		return vs[0].([]KafkaClusterEnterprise)[vs[1].(int)]
	}).(KafkaClusterEnterpriseOutput)
}

type KafkaClusterEnvironment struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterEnvironmentInput is an input type that accepts KafkaClusterEnvironmentArgs and KafkaClusterEnvironmentOutput values.
// You can construct a concrete instance of `KafkaClusterEnvironmentInput` via:
//
//	KafkaClusterEnvironmentArgs{...}
type KafkaClusterEnvironmentInput interface {
	pulumi.Input

	ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput
	ToKafkaClusterEnvironmentOutputWithContext(context.Context) KafkaClusterEnvironmentOutput
}

type KafkaClusterEnvironmentArgs struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnvironment)(nil)).Elem()
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput {
	return i.ToKafkaClusterEnvironmentOutputWithContext(context.Background())
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentOutputWithContext(ctx context.Context) KafkaClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentOutput)
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return i.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i KafkaClusterEnvironmentArgs) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentOutput).ToKafkaClusterEnvironmentPtrOutputWithContext(ctx)
}

// KafkaClusterEnvironmentPtrInput is an input type that accepts KafkaClusterEnvironmentArgs, KafkaClusterEnvironmentPtr and KafkaClusterEnvironmentPtrOutput values.
// You can construct a concrete instance of `KafkaClusterEnvironmentPtrInput` via:
//
//	        KafkaClusterEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterEnvironmentPtrInput interface {
	pulumi.Input

	ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput
	ToKafkaClusterEnvironmentPtrOutputWithContext(context.Context) KafkaClusterEnvironmentPtrOutput
}

type kafkaClusterEnvironmentPtrType KafkaClusterEnvironmentArgs

func KafkaClusterEnvironmentPtr(v *KafkaClusterEnvironmentArgs) KafkaClusterEnvironmentPtrInput {
	return (*kafkaClusterEnvironmentPtrType)(v)
}

func (*kafkaClusterEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterEnvironment)(nil)).Elem()
}

func (i *kafkaClusterEnvironmentPtrType) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return i.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterEnvironmentPtrType) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterEnvironmentPtrOutput)
}

type KafkaClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterEnvironment)(nil)).Elem()
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentOutput() KafkaClusterEnvironmentOutput {
	return o
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentOutputWithContext(ctx context.Context) KafkaClusterEnvironmentOutput {
	return o
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return o.ToKafkaClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (o KafkaClusterEnvironmentOutput) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterEnvironment) *KafkaClusterEnvironment {
		return &v
	}).(KafkaClusterEnvironmentPtrOutput)
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-abc123`.
func (o KafkaClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterEnvironment)(nil)).Elem()
}

func (o KafkaClusterEnvironmentPtrOutput) ToKafkaClusterEnvironmentPtrOutput() KafkaClusterEnvironmentPtrOutput {
	return o
}

func (o KafkaClusterEnvironmentPtrOutput) ToKafkaClusterEnvironmentPtrOutputWithContext(ctx context.Context) KafkaClusterEnvironmentPtrOutput {
	return o
}

func (o KafkaClusterEnvironmentPtrOutput) Elem() KafkaClusterEnvironmentOutput {
	return o.ApplyT(func(v *KafkaClusterEnvironment) KafkaClusterEnvironment {
		if v != nil {
			return *v
		}
		var ret KafkaClusterEnvironment
		return ret
	}).(KafkaClusterEnvironmentOutput)
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-abc123`.
func (o KafkaClusterEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterFreight struct {
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	Zones []string `pulumi:"zones"`
}

// KafkaClusterFreightInput is an input type that accepts KafkaClusterFreightArgs and KafkaClusterFreightOutput values.
// You can construct a concrete instance of `KafkaClusterFreightInput` via:
//
//	KafkaClusterFreightArgs{...}
type KafkaClusterFreightInput interface {
	pulumi.Input

	ToKafkaClusterFreightOutput() KafkaClusterFreightOutput
	ToKafkaClusterFreightOutputWithContext(context.Context) KafkaClusterFreightOutput
}

type KafkaClusterFreightArgs struct {
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (KafkaClusterFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterFreight)(nil)).Elem()
}

func (i KafkaClusterFreightArgs) ToKafkaClusterFreightOutput() KafkaClusterFreightOutput {
	return i.ToKafkaClusterFreightOutputWithContext(context.Background())
}

func (i KafkaClusterFreightArgs) ToKafkaClusterFreightOutputWithContext(ctx context.Context) KafkaClusterFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterFreightOutput)
}

// KafkaClusterFreightArrayInput is an input type that accepts KafkaClusterFreightArray and KafkaClusterFreightArrayOutput values.
// You can construct a concrete instance of `KafkaClusterFreightArrayInput` via:
//
//	KafkaClusterFreightArray{ KafkaClusterFreightArgs{...} }
type KafkaClusterFreightArrayInput interface {
	pulumi.Input

	ToKafkaClusterFreightArrayOutput() KafkaClusterFreightArrayOutput
	ToKafkaClusterFreightArrayOutputWithContext(context.Context) KafkaClusterFreightArrayOutput
}

type KafkaClusterFreightArray []KafkaClusterFreightInput

func (KafkaClusterFreightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterFreight)(nil)).Elem()
}

func (i KafkaClusterFreightArray) ToKafkaClusterFreightArrayOutput() KafkaClusterFreightArrayOutput {
	return i.ToKafkaClusterFreightArrayOutputWithContext(context.Background())
}

func (i KafkaClusterFreightArray) ToKafkaClusterFreightArrayOutputWithContext(ctx context.Context) KafkaClusterFreightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterFreightArrayOutput)
}

type KafkaClusterFreightOutput struct{ *pulumi.OutputState }

func (KafkaClusterFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterFreight)(nil)).Elem()
}

func (o KafkaClusterFreightOutput) ToKafkaClusterFreightOutput() KafkaClusterFreightOutput {
	return o
}

func (o KafkaClusterFreightOutput) ToKafkaClusterFreightOutputWithContext(ctx context.Context) KafkaClusterFreightOutput {
	return o
}

// (Required List of String) The list of zones the cluster is in.
// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
func (o KafkaClusterFreightOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaClusterFreight) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type KafkaClusterFreightArrayOutput struct{ *pulumi.OutputState }

func (KafkaClusterFreightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KafkaClusterFreight)(nil)).Elem()
}

func (o KafkaClusterFreightArrayOutput) ToKafkaClusterFreightArrayOutput() KafkaClusterFreightArrayOutput {
	return o
}

func (o KafkaClusterFreightArrayOutput) ToKafkaClusterFreightArrayOutputWithContext(ctx context.Context) KafkaClusterFreightArrayOutput {
	return o
}

func (o KafkaClusterFreightArrayOutput) Index(i pulumi.IntInput) KafkaClusterFreightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KafkaClusterFreight {
		return vs[0].([]KafkaClusterFreight)[vs[1].(int)]
	}).(KafkaClusterFreightOutput)
}

type KafkaClusterNetwork struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// KafkaClusterNetworkInput is an input type that accepts KafkaClusterNetworkArgs and KafkaClusterNetworkOutput values.
// You can construct a concrete instance of `KafkaClusterNetworkInput` via:
//
//	KafkaClusterNetworkArgs{...}
type KafkaClusterNetworkInput interface {
	pulumi.Input

	ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput
	ToKafkaClusterNetworkOutputWithContext(context.Context) KafkaClusterNetworkOutput
}

type KafkaClusterNetworkArgs struct {
	// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterNetwork)(nil)).Elem()
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput {
	return i.ToKafkaClusterNetworkOutputWithContext(context.Background())
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkOutputWithContext(ctx context.Context) KafkaClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkOutput)
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return i.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (i KafkaClusterNetworkArgs) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkOutput).ToKafkaClusterNetworkPtrOutputWithContext(ctx)
}

// KafkaClusterNetworkPtrInput is an input type that accepts KafkaClusterNetworkArgs, KafkaClusterNetworkPtr and KafkaClusterNetworkPtrOutput values.
// You can construct a concrete instance of `KafkaClusterNetworkPtrInput` via:
//
//	        KafkaClusterNetworkArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterNetworkPtrInput interface {
	pulumi.Input

	ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput
	ToKafkaClusterNetworkPtrOutputWithContext(context.Context) KafkaClusterNetworkPtrOutput
}

type kafkaClusterNetworkPtrType KafkaClusterNetworkArgs

func KafkaClusterNetworkPtr(v *KafkaClusterNetworkArgs) KafkaClusterNetworkPtrInput {
	return (*kafkaClusterNetworkPtrType)(v)
}

func (*kafkaClusterNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterNetwork)(nil)).Elem()
}

func (i *kafkaClusterNetworkPtrType) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return i.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterNetworkPtrType) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterNetworkPtrOutput)
}

type KafkaClusterNetworkOutput struct{ *pulumi.OutputState }

func (KafkaClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterNetwork)(nil)).Elem()
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkOutput() KafkaClusterNetworkOutput {
	return o
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkOutputWithContext(ctx context.Context) KafkaClusterNetworkOutput {
	return o
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return o.ToKafkaClusterNetworkPtrOutputWithContext(context.Background())
}

func (o KafkaClusterNetworkOutput) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterNetwork) *KafkaClusterNetwork {
		return &v
	}).(KafkaClusterNetworkPtrOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaClusterNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaClusterNetworkPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterNetwork)(nil)).Elem()
}

func (o KafkaClusterNetworkPtrOutput) ToKafkaClusterNetworkPtrOutput() KafkaClusterNetworkPtrOutput {
	return o
}

func (o KafkaClusterNetworkPtrOutput) ToKafkaClusterNetworkPtrOutputWithContext(ctx context.Context) KafkaClusterNetworkPtrOutput {
	return o
}

func (o KafkaClusterNetworkPtrOutput) Elem() KafkaClusterNetworkOutput {
	return o.ApplyT(func(v *KafkaClusterNetwork) KafkaClusterNetwork {
		if v != nil {
			return *v
		}
		var ret KafkaClusterNetwork
		return ret
	}).(KafkaClusterNetworkOutput)
}

// The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
func (o KafkaClusterNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KafkaClusterStandard struct {
}

// KafkaClusterStandardInput is an input type that accepts KafkaClusterStandardArgs and KafkaClusterStandardOutput values.
// You can construct a concrete instance of `KafkaClusterStandardInput` via:
//
//	KafkaClusterStandardArgs{...}
type KafkaClusterStandardInput interface {
	pulumi.Input

	ToKafkaClusterStandardOutput() KafkaClusterStandardOutput
	ToKafkaClusterStandardOutputWithContext(context.Context) KafkaClusterStandardOutput
}

type KafkaClusterStandardArgs struct {
}

func (KafkaClusterStandardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterStandard)(nil)).Elem()
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardOutput() KafkaClusterStandardOutput {
	return i.ToKafkaClusterStandardOutputWithContext(context.Background())
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardOutputWithContext(ctx context.Context) KafkaClusterStandardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardOutput)
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return i.ToKafkaClusterStandardPtrOutputWithContext(context.Background())
}

func (i KafkaClusterStandardArgs) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardOutput).ToKafkaClusterStandardPtrOutputWithContext(ctx)
}

// KafkaClusterStandardPtrInput is an input type that accepts KafkaClusterStandardArgs, KafkaClusterStandardPtr and KafkaClusterStandardPtrOutput values.
// You can construct a concrete instance of `KafkaClusterStandardPtrInput` via:
//
//	        KafkaClusterStandardArgs{...}
//
//	or:
//
//	        nil
type KafkaClusterStandardPtrInput interface {
	pulumi.Input

	ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput
	ToKafkaClusterStandardPtrOutputWithContext(context.Context) KafkaClusterStandardPtrOutput
}

type kafkaClusterStandardPtrType KafkaClusterStandardArgs

func KafkaClusterStandardPtr(v *KafkaClusterStandardArgs) KafkaClusterStandardPtrInput {
	return (*kafkaClusterStandardPtrType)(v)
}

func (*kafkaClusterStandardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterStandard)(nil)).Elem()
}

func (i *kafkaClusterStandardPtrType) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return i.ToKafkaClusterStandardPtrOutputWithContext(context.Background())
}

func (i *kafkaClusterStandardPtrType) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterStandardPtrOutput)
}

type KafkaClusterStandardOutput struct{ *pulumi.OutputState }

func (KafkaClusterStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaClusterStandard)(nil)).Elem()
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardOutput() KafkaClusterStandardOutput {
	return o
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardOutputWithContext(ctx context.Context) KafkaClusterStandardOutput {
	return o
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return o.ToKafkaClusterStandardPtrOutputWithContext(context.Background())
}

func (o KafkaClusterStandardOutput) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaClusterStandard) *KafkaClusterStandard {
		return &v
	}).(KafkaClusterStandardPtrOutput)
}

type KafkaClusterStandardPtrOutput struct{ *pulumi.OutputState }

func (KafkaClusterStandardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaClusterStandard)(nil)).Elem()
}

func (o KafkaClusterStandardPtrOutput) ToKafkaClusterStandardPtrOutput() KafkaClusterStandardPtrOutput {
	return o
}

func (o KafkaClusterStandardPtrOutput) ToKafkaClusterStandardPtrOutputWithContext(ctx context.Context) KafkaClusterStandardPtrOutput {
	return o
}

func (o KafkaClusterStandardPtrOutput) Elem() KafkaClusterStandardOutput {
	return o.ApplyT(func(v *KafkaClusterStandard) KafkaClusterStandard {
		if v != nil {
			return *v
		}
		var ret KafkaClusterStandard
		return ret
	}).(KafkaClusterStandardOutput)
}

type KafkaMirrorTopicClusterLink struct {
	// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
	LinkName string `pulumi:"linkName"`
}

// KafkaMirrorTopicClusterLinkInput is an input type that accepts KafkaMirrorTopicClusterLinkArgs and KafkaMirrorTopicClusterLinkOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicClusterLinkInput` via:
//
//	KafkaMirrorTopicClusterLinkArgs{...}
type KafkaMirrorTopicClusterLinkInput interface {
	pulumi.Input

	ToKafkaMirrorTopicClusterLinkOutput() KafkaMirrorTopicClusterLinkOutput
	ToKafkaMirrorTopicClusterLinkOutputWithContext(context.Context) KafkaMirrorTopicClusterLinkOutput
}

type KafkaMirrorTopicClusterLinkArgs struct {
	// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
	LinkName pulumi.StringInput `pulumi:"linkName"`
}

func (KafkaMirrorTopicClusterLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkOutput() KafkaMirrorTopicClusterLinkOutput {
	return i.ToKafkaMirrorTopicClusterLinkOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicClusterLinkOutput)
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return i.ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicClusterLinkArgs) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicClusterLinkOutput).ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicClusterLinkPtrInput is an input type that accepts KafkaMirrorTopicClusterLinkArgs, KafkaMirrorTopicClusterLinkPtr and KafkaMirrorTopicClusterLinkPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicClusterLinkPtrInput` via:
//
//	        KafkaMirrorTopicClusterLinkArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicClusterLinkPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput
	ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Context) KafkaMirrorTopicClusterLinkPtrOutput
}

type kafkaMirrorTopicClusterLinkPtrType KafkaMirrorTopicClusterLinkArgs

func KafkaMirrorTopicClusterLinkPtr(v *KafkaMirrorTopicClusterLinkArgs) KafkaMirrorTopicClusterLinkPtrInput {
	return (*kafkaMirrorTopicClusterLinkPtrType)(v)
}

func (*kafkaMirrorTopicClusterLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (i *kafkaMirrorTopicClusterLinkPtrType) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return i.ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicClusterLinkPtrType) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicClusterLinkPtrOutput)
}

type KafkaMirrorTopicClusterLinkOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicClusterLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkOutput() KafkaMirrorTopicClusterLinkOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return o.ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicClusterLinkOutput) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicClusterLink) *KafkaMirrorTopicClusterLink {
		return &v
	}).(KafkaMirrorTopicClusterLinkPtrOutput)
}

// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
func (o KafkaMirrorTopicClusterLinkOutput) LinkName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicClusterLink) string { return v.LinkName }).(pulumi.StringOutput)
}

type KafkaMirrorTopicClusterLinkPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicClusterLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicClusterLink)(nil)).Elem()
}

func (o KafkaMirrorTopicClusterLinkPtrOutput) ToKafkaMirrorTopicClusterLinkPtrOutput() KafkaMirrorTopicClusterLinkPtrOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkPtrOutput) ToKafkaMirrorTopicClusterLinkPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicClusterLinkPtrOutput {
	return o
}

func (o KafkaMirrorTopicClusterLinkPtrOutput) Elem() KafkaMirrorTopicClusterLinkOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicClusterLink) KafkaMirrorTopicClusterLink {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicClusterLink
		return ret
	}).(KafkaMirrorTopicClusterLinkOutput)
}

// The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
func (o KafkaMirrorTopicClusterLinkPtrOutput) LinkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicClusterLink) *string {
		if v == nil {
			return nil
		}
		return &v.LinkName
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicKafkaCluster struct {
	// The Kafka API Credentials.
	Credentials *KafkaMirrorTopicKafkaClusterCredentials `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint *string `pulumi:"restEndpoint"`
}

// KafkaMirrorTopicKafkaClusterInput is an input type that accepts KafkaMirrorTopicKafkaClusterArgs and KafkaMirrorTopicKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterInput` via:
//
//	KafkaMirrorTopicKafkaClusterArgs{...}
type KafkaMirrorTopicKafkaClusterInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterOutput() KafkaMirrorTopicKafkaClusterOutput
	ToKafkaMirrorTopicKafkaClusterOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterOutput
}

type KafkaMirrorTopicKafkaClusterArgs struct {
	// The Kafka API Credentials.
	Credentials KafkaMirrorTopicKafkaClusterCredentialsPtrInput `pulumi:"credentials"`
	// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
	// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
}

func (KafkaMirrorTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterOutput() KafkaMirrorTopicKafkaClusterOutput {
	return i.ToKafkaMirrorTopicKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterOutput)
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterArgs) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterOutput).ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicKafkaClusterPtrInput is an input type that accepts KafkaMirrorTopicKafkaClusterArgs, KafkaMirrorTopicKafkaClusterPtr and KafkaMirrorTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterPtrInput` via:
//
//	        KafkaMirrorTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput
	ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterPtrOutput
}

type kafkaMirrorTopicKafkaClusterPtrType KafkaMirrorTopicKafkaClusterArgs

func KafkaMirrorTopicKafkaClusterPtr(v *KafkaMirrorTopicKafkaClusterArgs) KafkaMirrorTopicKafkaClusterPtrInput {
	return (*kafkaMirrorTopicKafkaClusterPtrType)(v)
}

func (*kafkaMirrorTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (i *kafkaMirrorTopicKafkaClusterPtrType) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicKafkaClusterPtrType) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterPtrOutput)
}

type KafkaMirrorTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterOutput() KafkaMirrorTopicKafkaClusterOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return o.ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicKafkaClusterOutput) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicKafkaCluster) *KafkaMirrorTopicKafkaCluster {
		return &v
	}).(KafkaMirrorTopicKafkaClusterPtrOutput)
}

// The Kafka API Credentials.
func (o KafkaMirrorTopicKafkaClusterOutput) Credentials() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaCluster) *KafkaMirrorTopicKafkaClusterCredentials { return v.Credentials }).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o KafkaMirrorTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o KafkaMirrorTopicKafkaClusterOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaCluster) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) ToKafkaMirrorTopicKafkaClusterPtrOutput() KafkaMirrorTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) ToKafkaMirrorTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterPtrOutput) Elem() KafkaMirrorTopicKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) KafkaMirrorTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicKafkaCluster
		return ret
	}).(KafkaMirrorTopicKafkaClusterOutput)
}

// The Kafka API Credentials.
func (o KafkaMirrorTopicKafkaClusterPtrOutput) Credentials() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) *KafkaMirrorTopicKafkaClusterCredentials {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

// The ID of the destination Kafka cluster, for example, `lkc-abc123`.
func (o KafkaMirrorTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o KafkaMirrorTopicKafkaClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicKafkaClusterCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	Secret string `pulumi:"secret"`
}

// KafkaMirrorTopicKafkaClusterCredentialsInput is an input type that accepts KafkaMirrorTopicKafkaClusterCredentialsArgs and KafkaMirrorTopicKafkaClusterCredentialsOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterCredentialsInput` via:
//
//	KafkaMirrorTopicKafkaClusterCredentialsArgs{...}
type KafkaMirrorTopicKafkaClusterCredentialsInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterCredentialsOutput() KafkaMirrorTopicKafkaClusterCredentialsOutput
	ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterCredentialsOutput
}

type KafkaMirrorTopicKafkaClusterCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaMirrorTopicKafkaClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsOutput() KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return i.ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterCredentialsOutput)
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicKafkaClusterCredentialsArgs) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterCredentialsOutput).ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicKafkaClusterCredentialsPtrInput is an input type that accepts KafkaMirrorTopicKafkaClusterCredentialsArgs, KafkaMirrorTopicKafkaClusterCredentialsPtr and KafkaMirrorTopicKafkaClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicKafkaClusterCredentialsPtrInput` via:
//
//	        KafkaMirrorTopicKafkaClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicKafkaClusterCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput
	ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput
}

type kafkaMirrorTopicKafkaClusterCredentialsPtrType KafkaMirrorTopicKafkaClusterCredentialsArgs

func KafkaMirrorTopicKafkaClusterCredentialsPtr(v *KafkaMirrorTopicKafkaClusterCredentialsArgs) KafkaMirrorTopicKafkaClusterCredentialsPtrInput {
	return (*kafkaMirrorTopicKafkaClusterCredentialsPtrType)(v)
}

func (*kafkaMirrorTopicKafkaClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (i *kafkaMirrorTopicKafkaClusterCredentialsPtrType) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return i.ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicKafkaClusterCredentialsPtrType) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

type KafkaMirrorTopicKafkaClusterCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsOutput() KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicKafkaClusterCredentials) *KafkaMirrorTopicKafkaClusterCredentials {
		return &v
	}).(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
func (o KafkaMirrorTopicKafkaClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicKafkaClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaMirrorTopicKafkaClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicKafkaClusterCredentials)(nil)).Elem()
}

func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutput() KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) ToKafkaMirrorTopicKafkaClusterCredentialsPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicKafkaClusterCredentialsPtrOutput {
	return o
}

func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) Elem() KafkaMirrorTopicKafkaClusterCredentialsOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaClusterCredentials) KafkaMirrorTopicKafkaClusterCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicKafkaClusterCredentials
		return ret
	}).(KafkaMirrorTopicKafkaClusterCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
func (o KafkaMirrorTopicKafkaClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicKafkaClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaMirrorTopicSourceKafkaTopic struct {
	// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
	TopicName string `pulumi:"topicName"`
}

// KafkaMirrorTopicSourceKafkaTopicInput is an input type that accepts KafkaMirrorTopicSourceKafkaTopicArgs and KafkaMirrorTopicSourceKafkaTopicOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicSourceKafkaTopicInput` via:
//
//	KafkaMirrorTopicSourceKafkaTopicArgs{...}
type KafkaMirrorTopicSourceKafkaTopicInput interface {
	pulumi.Input

	ToKafkaMirrorTopicSourceKafkaTopicOutput() KafkaMirrorTopicSourceKafkaTopicOutput
	ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(context.Context) KafkaMirrorTopicSourceKafkaTopicOutput
}

type KafkaMirrorTopicSourceKafkaTopicArgs struct {
	// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (KafkaMirrorTopicSourceKafkaTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicOutput() KafkaMirrorTopicSourceKafkaTopicOutput {
	return i.ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicSourceKafkaTopicOutput)
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return i.ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Background())
}

func (i KafkaMirrorTopicSourceKafkaTopicArgs) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicSourceKafkaTopicOutput).ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx)
}

// KafkaMirrorTopicSourceKafkaTopicPtrInput is an input type that accepts KafkaMirrorTopicSourceKafkaTopicArgs, KafkaMirrorTopicSourceKafkaTopicPtr and KafkaMirrorTopicSourceKafkaTopicPtrOutput values.
// You can construct a concrete instance of `KafkaMirrorTopicSourceKafkaTopicPtrInput` via:
//
//	        KafkaMirrorTopicSourceKafkaTopicArgs{...}
//
//	or:
//
//	        nil
type KafkaMirrorTopicSourceKafkaTopicPtrInput interface {
	pulumi.Input

	ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput
	ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput
}

type kafkaMirrorTopicSourceKafkaTopicPtrType KafkaMirrorTopicSourceKafkaTopicArgs

func KafkaMirrorTopicSourceKafkaTopicPtr(v *KafkaMirrorTopicSourceKafkaTopicArgs) KafkaMirrorTopicSourceKafkaTopicPtrInput {
	return (*kafkaMirrorTopicSourceKafkaTopicPtrType)(v)
}

func (*kafkaMirrorTopicSourceKafkaTopicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (i *kafkaMirrorTopicSourceKafkaTopicPtrType) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return i.ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Background())
}

func (i *kafkaMirrorTopicSourceKafkaTopicPtrType) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaMirrorTopicSourceKafkaTopicPtrOutput)
}

type KafkaMirrorTopicSourceKafkaTopicOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicSourceKafkaTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicOutput() KafkaMirrorTopicSourceKafkaTopicOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o.ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(context.Background())
}

func (o KafkaMirrorTopicSourceKafkaTopicOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaMirrorTopicSourceKafkaTopic) *KafkaMirrorTopicSourceKafkaTopic {
		return &v
	}).(KafkaMirrorTopicSourceKafkaTopicPtrOutput)
}

// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
func (o KafkaMirrorTopicSourceKafkaTopicOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaMirrorTopicSourceKafkaTopic) string { return v.TopicName }).(pulumi.StringOutput)
}

type KafkaMirrorTopicSourceKafkaTopicPtrOutput struct{ *pulumi.OutputState }

func (KafkaMirrorTopicSourceKafkaTopicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaMirrorTopicSourceKafkaTopic)(nil)).Elem()
}

func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutput() KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) ToKafkaMirrorTopicSourceKafkaTopicPtrOutputWithContext(ctx context.Context) KafkaMirrorTopicSourceKafkaTopicPtrOutput {
	return o
}

func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) Elem() KafkaMirrorTopicSourceKafkaTopicOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicSourceKafkaTopic) KafkaMirrorTopicSourceKafkaTopic {
		if v != nil {
			return *v
		}
		var ret KafkaMirrorTopicSourceKafkaTopic
		return ret
	}).(KafkaMirrorTopicSourceKafkaTopicOutput)
}

// The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
func (o KafkaMirrorTopicSourceKafkaTopicPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaMirrorTopicSourceKafkaTopic) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Kafka API Secret.
	//
	// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
	//
	// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_topic.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_topic.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
	Secret string `pulumi:"secret"`
}

// KafkaTopicCredentialsInput is an input type that accepts KafkaTopicCredentialsArgs and KafkaTopicCredentialsOutput values.
// You can construct a concrete instance of `KafkaTopicCredentialsInput` via:
//
//	KafkaTopicCredentialsArgs{...}
type KafkaTopicCredentialsInput interface {
	pulumi.Input

	ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput
	ToKafkaTopicCredentialsOutputWithContext(context.Context) KafkaTopicCredentialsOutput
}

type KafkaTopicCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Kafka API Secret.
	//
	// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
	//
	// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_topic.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_topic.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (KafkaTopicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicCredentials)(nil)).Elem()
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput {
	return i.ToKafkaTopicCredentialsOutputWithContext(context.Background())
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsOutputWithContext(ctx context.Context) KafkaTopicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsOutput)
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return i.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i KafkaTopicCredentialsArgs) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsOutput).ToKafkaTopicCredentialsPtrOutputWithContext(ctx)
}

// KafkaTopicCredentialsPtrInput is an input type that accepts KafkaTopicCredentialsArgs, KafkaTopicCredentialsPtr and KafkaTopicCredentialsPtrOutput values.
// You can construct a concrete instance of `KafkaTopicCredentialsPtrInput` via:
//
//	        KafkaTopicCredentialsArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicCredentialsPtrInput interface {
	pulumi.Input

	ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput
	ToKafkaTopicCredentialsPtrOutputWithContext(context.Context) KafkaTopicCredentialsPtrOutput
}

type kafkaTopicCredentialsPtrType KafkaTopicCredentialsArgs

func KafkaTopicCredentialsPtr(v *KafkaTopicCredentialsArgs) KafkaTopicCredentialsPtrInput {
	return (*kafkaTopicCredentialsPtrType)(v)
}

func (*kafkaTopicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicCredentials)(nil)).Elem()
}

func (i *kafkaTopicCredentialsPtrType) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return i.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicCredentialsPtrType) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicCredentialsPtrOutput)
}

type KafkaTopicCredentialsOutput struct{ *pulumi.OutputState }

func (KafkaTopicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicCredentials)(nil)).Elem()
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsOutput() KafkaTopicCredentialsOutput {
	return o
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsOutputWithContext(ctx context.Context) KafkaTopicCredentialsOutput {
	return o
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return o.ToKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (o KafkaTopicCredentialsOutput) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicCredentials) *KafkaTopicCredentials {
		return &v
	}).(KafkaTopicCredentialsPtrOutput)
}

// The Kafka API Key.
func (o KafkaTopicCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Kafka API Secret.
//
// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
//
// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_topic.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_topic.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
func (o KafkaTopicCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type KafkaTopicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicCredentials)(nil)).Elem()
}

func (o KafkaTopicCredentialsPtrOutput) ToKafkaTopicCredentialsPtrOutput() KafkaTopicCredentialsPtrOutput {
	return o
}

func (o KafkaTopicCredentialsPtrOutput) ToKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) KafkaTopicCredentialsPtrOutput {
	return o
}

func (o KafkaTopicCredentialsPtrOutput) Elem() KafkaTopicCredentialsOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) KafkaTopicCredentials {
		if v != nil {
			return *v
		}
		var ret KafkaTopicCredentials
		return ret
	}).(KafkaTopicCredentialsOutput)
}

// The Kafka API Key.
func (o KafkaTopicCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Kafka API Secret.
//
// > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
//
// > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_topic.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_topic.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
func (o KafkaTopicCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type KafkaTopicKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KafkaTopicKafkaClusterInput is an input type that accepts KafkaTopicKafkaClusterArgs and KafkaTopicKafkaClusterOutput values.
// You can construct a concrete instance of `KafkaTopicKafkaClusterInput` via:
//
//	KafkaTopicKafkaClusterArgs{...}
type KafkaTopicKafkaClusterInput interface {
	pulumi.Input

	ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput
	ToKafkaTopicKafkaClusterOutputWithContext(context.Context) KafkaTopicKafkaClusterOutput
}

type KafkaTopicKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KafkaTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicKafkaCluster)(nil)).Elem()
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput {
	return i.ToKafkaTopicKafkaClusterOutputWithContext(context.Background())
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterOutput)
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return i.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KafkaTopicKafkaClusterArgs) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterOutput).ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx)
}

// KafkaTopicKafkaClusterPtrInput is an input type that accepts KafkaTopicKafkaClusterArgs, KafkaTopicKafkaClusterPtr and KafkaTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KafkaTopicKafkaClusterPtrInput` via:
//
//	        KafkaTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KafkaTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput
	ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Context) KafkaTopicKafkaClusterPtrOutput
}

type kafkaTopicKafkaClusterPtrType KafkaTopicKafkaClusterArgs

func KafkaTopicKafkaClusterPtr(v *KafkaTopicKafkaClusterArgs) KafkaTopicKafkaClusterPtrInput {
	return (*kafkaTopicKafkaClusterPtrType)(v)
}

func (*kafkaTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicKafkaCluster)(nil)).Elem()
}

func (i *kafkaTopicKafkaClusterPtrType) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return i.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *kafkaTopicKafkaClusterPtrType) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaTopicKafkaClusterPtrOutput)
}

type KafkaTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterOutput() KafkaTopicKafkaClusterOutput {
	return o
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterOutput {
	return o
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return o.ToKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KafkaTopicKafkaClusterOutput) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaTopicKafkaCluster) *KafkaTopicKafkaCluster {
		return &v
	}).(KafkaTopicKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KafkaTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KafkaTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaTopicKafkaCluster)(nil)).Elem()
}

func (o KafkaTopicKafkaClusterPtrOutput) ToKafkaTopicKafkaClusterPtrOutput() KafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaTopicKafkaClusterPtrOutput) ToKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) KafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o KafkaTopicKafkaClusterPtrOutput) Elem() KafkaTopicKafkaClusterOutput {
	return o.ApplyT(func(v *KafkaTopicKafkaCluster) KafkaTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KafkaTopicKafkaCluster
		return ret
	}).(KafkaTopicKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o KafkaTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KsqlClusterCredentialIdentity struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id string `pulumi:"id"`
}

// KsqlClusterCredentialIdentityInput is an input type that accepts KsqlClusterCredentialIdentityArgs and KsqlClusterCredentialIdentityOutput values.
// You can construct a concrete instance of `KsqlClusterCredentialIdentityInput` via:
//
//	KsqlClusterCredentialIdentityArgs{...}
type KsqlClusterCredentialIdentityInput interface {
	pulumi.Input

	ToKsqlClusterCredentialIdentityOutput() KsqlClusterCredentialIdentityOutput
	ToKsqlClusterCredentialIdentityOutputWithContext(context.Context) KsqlClusterCredentialIdentityOutput
}

type KsqlClusterCredentialIdentityArgs struct {
	// The ID of the associated service or user account, for example, `sa-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KsqlClusterCredentialIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityOutput() KsqlClusterCredentialIdentityOutput {
	return i.ToKsqlClusterCredentialIdentityOutputWithContext(context.Background())
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterCredentialIdentityOutput)
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return i.ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Background())
}

func (i KsqlClusterCredentialIdentityArgs) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterCredentialIdentityOutput).ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx)
}

// KsqlClusterCredentialIdentityPtrInput is an input type that accepts KsqlClusterCredentialIdentityArgs, KsqlClusterCredentialIdentityPtr and KsqlClusterCredentialIdentityPtrOutput values.
// You can construct a concrete instance of `KsqlClusterCredentialIdentityPtrInput` via:
//
//	        KsqlClusterCredentialIdentityArgs{...}
//
//	or:
//
//	        nil
type KsqlClusterCredentialIdentityPtrInput interface {
	pulumi.Input

	ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput
	ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Context) KsqlClusterCredentialIdentityPtrOutput
}

type ksqlClusterCredentialIdentityPtrType KsqlClusterCredentialIdentityArgs

func KsqlClusterCredentialIdentityPtr(v *KsqlClusterCredentialIdentityArgs) KsqlClusterCredentialIdentityPtrInput {
	return (*ksqlClusterCredentialIdentityPtrType)(v)
}

func (*ksqlClusterCredentialIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i *ksqlClusterCredentialIdentityPtrType) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return i.ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Background())
}

func (i *ksqlClusterCredentialIdentityPtrType) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterCredentialIdentityPtrOutput)
}

type KsqlClusterCredentialIdentityOutput struct{ *pulumi.OutputState }

func (KsqlClusterCredentialIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityOutput() KsqlClusterCredentialIdentityOutput {
	return o
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityOutput {
	return o
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return o.ToKsqlClusterCredentialIdentityPtrOutputWithContext(context.Background())
}

func (o KsqlClusterCredentialIdentityOutput) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KsqlClusterCredentialIdentity) *KsqlClusterCredentialIdentity {
		return &v
	}).(KsqlClusterCredentialIdentityPtrOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterCredentialIdentityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KsqlClusterCredentialIdentity) string { return v.Id }).(pulumi.StringOutput)
}

type KsqlClusterCredentialIdentityPtrOutput struct{ *pulumi.OutputState }

func (KsqlClusterCredentialIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o KsqlClusterCredentialIdentityPtrOutput) ToKsqlClusterCredentialIdentityPtrOutput() KsqlClusterCredentialIdentityPtrOutput {
	return o
}

func (o KsqlClusterCredentialIdentityPtrOutput) ToKsqlClusterCredentialIdentityPtrOutputWithContext(ctx context.Context) KsqlClusterCredentialIdentityPtrOutput {
	return o
}

func (o KsqlClusterCredentialIdentityPtrOutput) Elem() KsqlClusterCredentialIdentityOutput {
	return o.ApplyT(func(v *KsqlClusterCredentialIdentity) KsqlClusterCredentialIdentity {
		if v != nil {
			return *v
		}
		var ret KsqlClusterCredentialIdentity
		return ret
	}).(KsqlClusterCredentialIdentityOutput)
}

// The ID of the associated service or user account, for example, `sa-abc123`.
func (o KsqlClusterCredentialIdentityPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KsqlClusterCredentialIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KsqlClusterEnvironment struct {
	// The ID of the associated Environment, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// KsqlClusterEnvironmentInput is an input type that accepts KsqlClusterEnvironmentArgs and KsqlClusterEnvironmentOutput values.
// You can construct a concrete instance of `KsqlClusterEnvironmentInput` via:
//
//	KsqlClusterEnvironmentArgs{...}
type KsqlClusterEnvironmentInput interface {
	pulumi.Input

	ToKsqlClusterEnvironmentOutput() KsqlClusterEnvironmentOutput
	ToKsqlClusterEnvironmentOutputWithContext(context.Context) KsqlClusterEnvironmentOutput
}

type KsqlClusterEnvironmentArgs struct {
	// The ID of the associated Environment, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KsqlClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterEnvironment)(nil)).Elem()
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentOutput() KsqlClusterEnvironmentOutput {
	return i.ToKsqlClusterEnvironmentOutputWithContext(context.Background())
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentOutputWithContext(ctx context.Context) KsqlClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterEnvironmentOutput)
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return i.ToKsqlClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i KsqlClusterEnvironmentArgs) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterEnvironmentOutput).ToKsqlClusterEnvironmentPtrOutputWithContext(ctx)
}

// KsqlClusterEnvironmentPtrInput is an input type that accepts KsqlClusterEnvironmentArgs, KsqlClusterEnvironmentPtr and KsqlClusterEnvironmentPtrOutput values.
// You can construct a concrete instance of `KsqlClusterEnvironmentPtrInput` via:
//
//	        KsqlClusterEnvironmentArgs{...}
//
//	or:
//
//	        nil
type KsqlClusterEnvironmentPtrInput interface {
	pulumi.Input

	ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput
	ToKsqlClusterEnvironmentPtrOutputWithContext(context.Context) KsqlClusterEnvironmentPtrOutput
}

type ksqlClusterEnvironmentPtrType KsqlClusterEnvironmentArgs

func KsqlClusterEnvironmentPtr(v *KsqlClusterEnvironmentArgs) KsqlClusterEnvironmentPtrInput {
	return (*ksqlClusterEnvironmentPtrType)(v)
}

func (*ksqlClusterEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterEnvironment)(nil)).Elem()
}

func (i *ksqlClusterEnvironmentPtrType) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return i.ToKsqlClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (i *ksqlClusterEnvironmentPtrType) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterEnvironmentPtrOutput)
}

type KsqlClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (KsqlClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterEnvironment)(nil)).Elem()
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentOutput() KsqlClusterEnvironmentOutput {
	return o
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentOutputWithContext(ctx context.Context) KsqlClusterEnvironmentOutput {
	return o
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return o.ToKsqlClusterEnvironmentPtrOutputWithContext(context.Background())
}

func (o KsqlClusterEnvironmentOutput) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KsqlClusterEnvironment) *KsqlClusterEnvironment {
		return &v
	}).(KsqlClusterEnvironmentPtrOutput)
}

// The ID of the associated Environment, for example, `env-xyz456`.
func (o KsqlClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KsqlClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type KsqlClusterEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (KsqlClusterEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterEnvironment)(nil)).Elem()
}

func (o KsqlClusterEnvironmentPtrOutput) ToKsqlClusterEnvironmentPtrOutput() KsqlClusterEnvironmentPtrOutput {
	return o
}

func (o KsqlClusterEnvironmentPtrOutput) ToKsqlClusterEnvironmentPtrOutputWithContext(ctx context.Context) KsqlClusterEnvironmentPtrOutput {
	return o
}

func (o KsqlClusterEnvironmentPtrOutput) Elem() KsqlClusterEnvironmentOutput {
	return o.ApplyT(func(v *KsqlClusterEnvironment) KsqlClusterEnvironment {
		if v != nil {
			return *v
		}
		var ret KsqlClusterEnvironment
		return ret
	}).(KsqlClusterEnvironmentOutput)
}

// The ID of the associated Environment, for example, `env-xyz456`.
func (o KsqlClusterEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KsqlClusterEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type KsqlClusterKafkaCluster struct {
	// The ID of the associated Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// KsqlClusterKafkaClusterInput is an input type that accepts KsqlClusterKafkaClusterArgs and KsqlClusterKafkaClusterOutput values.
// You can construct a concrete instance of `KsqlClusterKafkaClusterInput` via:
//
//	KsqlClusterKafkaClusterArgs{...}
type KsqlClusterKafkaClusterInput interface {
	pulumi.Input

	ToKsqlClusterKafkaClusterOutput() KsqlClusterKafkaClusterOutput
	ToKsqlClusterKafkaClusterOutputWithContext(context.Context) KsqlClusterKafkaClusterOutput
}

type KsqlClusterKafkaClusterArgs struct {
	// The ID of the associated Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (KsqlClusterKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterKafkaCluster)(nil)).Elem()
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterOutput() KsqlClusterKafkaClusterOutput {
	return i.ToKsqlClusterKafkaClusterOutputWithContext(context.Background())
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterKafkaClusterOutput)
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return i.ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Background())
}

func (i KsqlClusterKafkaClusterArgs) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterKafkaClusterOutput).ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx)
}

// KsqlClusterKafkaClusterPtrInput is an input type that accepts KsqlClusterKafkaClusterArgs, KsqlClusterKafkaClusterPtr and KsqlClusterKafkaClusterPtrOutput values.
// You can construct a concrete instance of `KsqlClusterKafkaClusterPtrInput` via:
//
//	        KsqlClusterKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type KsqlClusterKafkaClusterPtrInput interface {
	pulumi.Input

	ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput
	ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Context) KsqlClusterKafkaClusterPtrOutput
}

type ksqlClusterKafkaClusterPtrType KsqlClusterKafkaClusterArgs

func KsqlClusterKafkaClusterPtr(v *KsqlClusterKafkaClusterArgs) KsqlClusterKafkaClusterPtrInput {
	return (*ksqlClusterKafkaClusterPtrType)(v)
}

func (*ksqlClusterKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterKafkaCluster)(nil)).Elem()
}

func (i *ksqlClusterKafkaClusterPtrType) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return i.ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *ksqlClusterKafkaClusterPtrType) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KsqlClusterKafkaClusterPtrOutput)
}

type KsqlClusterKafkaClusterOutput struct{ *pulumi.OutputState }

func (KsqlClusterKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KsqlClusterKafkaCluster)(nil)).Elem()
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterOutput() KsqlClusterKafkaClusterOutput {
	return o
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterOutput {
	return o
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return o.ToKsqlClusterKafkaClusterPtrOutputWithContext(context.Background())
}

func (o KsqlClusterKafkaClusterOutput) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KsqlClusterKafkaCluster) *KsqlClusterKafkaCluster {
		return &v
	}).(KsqlClusterKafkaClusterPtrOutput)
}

// The ID of the associated Kafka cluster, for example, `lkc-abc123`.
func (o KsqlClusterKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v KsqlClusterKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type KsqlClusterKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (KsqlClusterKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KsqlClusterKafkaCluster)(nil)).Elem()
}

func (o KsqlClusterKafkaClusterPtrOutput) ToKsqlClusterKafkaClusterPtrOutput() KsqlClusterKafkaClusterPtrOutput {
	return o
}

func (o KsqlClusterKafkaClusterPtrOutput) ToKsqlClusterKafkaClusterPtrOutputWithContext(ctx context.Context) KsqlClusterKafkaClusterPtrOutput {
	return o
}

func (o KsqlClusterKafkaClusterPtrOutput) Elem() KsqlClusterKafkaClusterOutput {
	return o.ApplyT(func(v *KsqlClusterKafkaCluster) KsqlClusterKafkaCluster {
		if v != nil {
			return *v
		}
		var ret KsqlClusterKafkaCluster
		return ret
	}).(KsqlClusterKafkaClusterOutput)
}

// The ID of the associated Kafka cluster, for example, `lkc-abc123`.
func (o KsqlClusterKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KsqlClusterKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkAw struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account *string `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService *string `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc *string `pulumi:"vpc"`
}

// NetworkAwInput is an input type that accepts NetworkAwArgs and NetworkAwOutput values.
// You can construct a concrete instance of `NetworkAwInput` via:
//
//	NetworkAwArgs{...}
type NetworkAwInput interface {
	pulumi.Input

	ToNetworkAwOutput() NetworkAwOutput
	ToNetworkAwOutputWithContext(context.Context) NetworkAwOutput
}

type NetworkAwArgs struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account pulumi.StringPtrInput `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService pulumi.StringPtrInput `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
}

func (NetworkAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAw)(nil)).Elem()
}

func (i NetworkAwArgs) ToNetworkAwOutput() NetworkAwOutput {
	return i.ToNetworkAwOutputWithContext(context.Background())
}

func (i NetworkAwArgs) ToNetworkAwOutputWithContext(ctx context.Context) NetworkAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAwOutput)
}

// NetworkAwArrayInput is an input type that accepts NetworkAwArray and NetworkAwArrayOutput values.
// You can construct a concrete instance of `NetworkAwArrayInput` via:
//
//	NetworkAwArray{ NetworkAwArgs{...} }
type NetworkAwArrayInput interface {
	pulumi.Input

	ToNetworkAwArrayOutput() NetworkAwArrayOutput
	ToNetworkAwArrayOutputWithContext(context.Context) NetworkAwArrayOutput
}

type NetworkAwArray []NetworkAwInput

func (NetworkAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAw)(nil)).Elem()
}

func (i NetworkAwArray) ToNetworkAwArrayOutput() NetworkAwArrayOutput {
	return i.ToNetworkAwArrayOutputWithContext(context.Background())
}

func (i NetworkAwArray) ToNetworkAwArrayOutputWithContext(ctx context.Context) NetworkAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAwArrayOutput)
}

type NetworkAwOutput struct{ *pulumi.OutputState }

func (NetworkAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAw)(nil)).Elem()
}

func (o NetworkAwOutput) ToNetworkAwOutput() NetworkAwOutput {
	return o
}

func (o NetworkAwOutput) ToNetworkAwOutputWithContext(ctx context.Context) NetworkAwOutput {
	return o
}

// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
func (o NetworkAwOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
func (o NetworkAwOutput) PrivateLinkEndpointService() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.PrivateLinkEndpointService }).(pulumi.StringPtrOutput)
}

// (Required String) The Confluent Cloud VPC ID.
func (o NetworkAwOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAw) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

type NetworkAwArrayOutput struct{ *pulumi.OutputState }

func (NetworkAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAw)(nil)).Elem()
}

func (o NetworkAwArrayOutput) ToNetworkAwArrayOutput() NetworkAwArrayOutput {
	return o
}

func (o NetworkAwArrayOutput) ToNetworkAwArrayOutputWithContext(ctx context.Context) NetworkAwArrayOutput {
	return o
}

func (o NetworkAwArrayOutput) Index(i pulumi.IntInput) NetworkAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAw {
		return vs[0].([]NetworkAw)[vs[1].(int)]
	}).(NetworkAwOutput)
}

type NetworkAzure struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
	PrivateLinkServiceAliases map[string]string `pulumi:"privateLinkServiceAliases"`
}

// NetworkAzureInput is an input type that accepts NetworkAzureArgs and NetworkAzureOutput values.
// You can construct a concrete instance of `NetworkAzureInput` via:
//
//	NetworkAzureArgs{...}
type NetworkAzureInput interface {
	pulumi.Input

	ToNetworkAzureOutput() NetworkAzureOutput
	ToNetworkAzureOutputWithContext(context.Context) NetworkAzureOutput
}

type NetworkAzureArgs struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
	PrivateLinkServiceAliases pulumi.StringMapInput `pulumi:"privateLinkServiceAliases"`
}

func (NetworkAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAzure)(nil)).Elem()
}

func (i NetworkAzureArgs) ToNetworkAzureOutput() NetworkAzureOutput {
	return i.ToNetworkAzureOutputWithContext(context.Background())
}

func (i NetworkAzureArgs) ToNetworkAzureOutputWithContext(ctx context.Context) NetworkAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAzureOutput)
}

// NetworkAzureArrayInput is an input type that accepts NetworkAzureArray and NetworkAzureArrayOutput values.
// You can construct a concrete instance of `NetworkAzureArrayInput` via:
//
//	NetworkAzureArray{ NetworkAzureArgs{...} }
type NetworkAzureArrayInput interface {
	pulumi.Input

	ToNetworkAzureArrayOutput() NetworkAzureArrayOutput
	ToNetworkAzureArrayOutputWithContext(context.Context) NetworkAzureArrayOutput
}

type NetworkAzureArray []NetworkAzureInput

func (NetworkAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAzure)(nil)).Elem()
}

func (i NetworkAzureArray) ToNetworkAzureArrayOutput() NetworkAzureArrayOutput {
	return i.ToNetworkAzureArrayOutputWithContext(context.Background())
}

func (i NetworkAzureArray) ToNetworkAzureArrayOutputWithContext(ctx context.Context) NetworkAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAzureArrayOutput)
}

type NetworkAzureOutput struct{ *pulumi.OutputState }

func (NetworkAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAzure)(nil)).Elem()
}

func (o NetworkAzureOutput) ToNetworkAzureOutput() NetworkAzureOutput {
	return o
}

func (o NetworkAzureOutput) ToNetworkAzureOutputWithContext(ctx context.Context) NetworkAzureOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
func (o NetworkAzureOutput) PrivateLinkServiceAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkAzure) map[string]string { return v.PrivateLinkServiceAliases }).(pulumi.StringMapOutput)
}

type NetworkAzureArrayOutput struct{ *pulumi.OutputState }

func (NetworkAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAzure)(nil)).Elem()
}

func (o NetworkAzureArrayOutput) ToNetworkAzureArrayOutput() NetworkAzureArrayOutput {
	return o
}

func (o NetworkAzureArrayOutput) ToNetworkAzureArrayOutputWithContext(ctx context.Context) NetworkAzureArrayOutput {
	return o
}

func (o NetworkAzureArrayOutput) Index(i pulumi.IntInput) NetworkAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAzure {
		return vs[0].([]NetworkAzure)[vs[1].(int)]
	}).(NetworkAzureOutput)
}

type NetworkDnsConfig struct {
	// Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	// The Confluent Cloud Console uses `resolution = PRIVATE`.
	Resolution string `pulumi:"resolution"`
}

// NetworkDnsConfigInput is an input type that accepts NetworkDnsConfigArgs and NetworkDnsConfigOutput values.
// You can construct a concrete instance of `NetworkDnsConfigInput` via:
//
//	NetworkDnsConfigArgs{...}
type NetworkDnsConfigInput interface {
	pulumi.Input

	ToNetworkDnsConfigOutput() NetworkDnsConfigOutput
	ToNetworkDnsConfigOutputWithContext(context.Context) NetworkDnsConfigOutput
}

type NetworkDnsConfigArgs struct {
	// Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	// The Confluent Cloud Console uses `resolution = PRIVATE`.
	Resolution pulumi.StringInput `pulumi:"resolution"`
}

func (NetworkDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDnsConfig)(nil)).Elem()
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigOutput() NetworkDnsConfigOutput {
	return i.ToNetworkDnsConfigOutputWithContext(context.Background())
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigOutputWithContext(ctx context.Context) NetworkDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDnsConfigOutput)
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return i.ToNetworkDnsConfigPtrOutputWithContext(context.Background())
}

func (i NetworkDnsConfigArgs) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDnsConfigOutput).ToNetworkDnsConfigPtrOutputWithContext(ctx)
}

// NetworkDnsConfigPtrInput is an input type that accepts NetworkDnsConfigArgs, NetworkDnsConfigPtr and NetworkDnsConfigPtrOutput values.
// You can construct a concrete instance of `NetworkDnsConfigPtrInput` via:
//
//	        NetworkDnsConfigArgs{...}
//
//	or:
//
//	        nil
type NetworkDnsConfigPtrInput interface {
	pulumi.Input

	ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput
	ToNetworkDnsConfigPtrOutputWithContext(context.Context) NetworkDnsConfigPtrOutput
}

type networkDnsConfigPtrType NetworkDnsConfigArgs

func NetworkDnsConfigPtr(v *NetworkDnsConfigArgs) NetworkDnsConfigPtrInput {
	return (*networkDnsConfigPtrType)(v)
}

func (*networkDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDnsConfig)(nil)).Elem()
}

func (i *networkDnsConfigPtrType) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return i.ToNetworkDnsConfigPtrOutputWithContext(context.Background())
}

func (i *networkDnsConfigPtrType) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDnsConfigPtrOutput)
}

type NetworkDnsConfigOutput struct{ *pulumi.OutputState }

func (NetworkDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkDnsConfig)(nil)).Elem()
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigOutput() NetworkDnsConfigOutput {
	return o
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigOutputWithContext(ctx context.Context) NetworkDnsConfigOutput {
	return o
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return o.ToNetworkDnsConfigPtrOutputWithContext(context.Background())
}

func (o NetworkDnsConfigOutput) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkDnsConfig) *NetworkDnsConfig {
		return &v
	}).(NetworkDnsConfigPtrOutput)
}

// Network DNS resolution.
// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
// The Confluent Cloud Console uses `resolution = PRIVATE`.
func (o NetworkDnsConfigOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkDnsConfig) string { return v.Resolution }).(pulumi.StringOutput)
}

type NetworkDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (NetworkDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDnsConfig)(nil)).Elem()
}

func (o NetworkDnsConfigPtrOutput) ToNetworkDnsConfigPtrOutput() NetworkDnsConfigPtrOutput {
	return o
}

func (o NetworkDnsConfigPtrOutput) ToNetworkDnsConfigPtrOutputWithContext(ctx context.Context) NetworkDnsConfigPtrOutput {
	return o
}

func (o NetworkDnsConfigPtrOutput) Elem() NetworkDnsConfigOutput {
	return o.ApplyT(func(v *NetworkDnsConfig) NetworkDnsConfig {
		if v != nil {
			return *v
		}
		var ret NetworkDnsConfig
		return ret
	}).(NetworkDnsConfigOutput)
}

// Network DNS resolution.
// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
// The Confluent Cloud Console uses `resolution = PRIVATE`.
func (o NetworkDnsConfigPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkDnsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(pulumi.StringPtrOutput)
}

type NetworkEnvironment struct {
	// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// NetworkEnvironmentInput is an input type that accepts NetworkEnvironmentArgs and NetworkEnvironmentOutput values.
// You can construct a concrete instance of `NetworkEnvironmentInput` via:
//
//	NetworkEnvironmentArgs{...}
type NetworkEnvironmentInput interface {
	pulumi.Input

	ToNetworkEnvironmentOutput() NetworkEnvironmentOutput
	ToNetworkEnvironmentOutputWithContext(context.Context) NetworkEnvironmentOutput
}

type NetworkEnvironmentArgs struct {
	// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEnvironment)(nil)).Elem()
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentOutput() NetworkEnvironmentOutput {
	return i.ToNetworkEnvironmentOutputWithContext(context.Background())
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentOutputWithContext(ctx context.Context) NetworkEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentOutput)
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return i.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (i NetworkEnvironmentArgs) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentOutput).ToNetworkEnvironmentPtrOutputWithContext(ctx)
}

// NetworkEnvironmentPtrInput is an input type that accepts NetworkEnvironmentArgs, NetworkEnvironmentPtr and NetworkEnvironmentPtrOutput values.
// You can construct a concrete instance of `NetworkEnvironmentPtrInput` via:
//
//	        NetworkEnvironmentArgs{...}
//
//	or:
//
//	        nil
type NetworkEnvironmentPtrInput interface {
	pulumi.Input

	ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput
	ToNetworkEnvironmentPtrOutputWithContext(context.Context) NetworkEnvironmentPtrOutput
}

type networkEnvironmentPtrType NetworkEnvironmentArgs

func NetworkEnvironmentPtr(v *NetworkEnvironmentArgs) NetworkEnvironmentPtrInput {
	return (*networkEnvironmentPtrType)(v)
}

func (*networkEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEnvironment)(nil)).Elem()
}

func (i *networkEnvironmentPtrType) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return i.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (i *networkEnvironmentPtrType) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkEnvironmentPtrOutput)
}

type NetworkEnvironmentOutput struct{ *pulumi.OutputState }

func (NetworkEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkEnvironment)(nil)).Elem()
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentOutput() NetworkEnvironmentOutput {
	return o
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentOutputWithContext(ctx context.Context) NetworkEnvironmentOutput {
	return o
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return o.ToNetworkEnvironmentPtrOutputWithContext(context.Background())
}

func (o NetworkEnvironmentOutput) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkEnvironment) *NetworkEnvironment {
		return &v
	}).(NetworkEnvironmentPtrOutput)
}

// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
func (o NetworkEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (NetworkEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkEnvironment)(nil)).Elem()
}

func (o NetworkEnvironmentPtrOutput) ToNetworkEnvironmentPtrOutput() NetworkEnvironmentPtrOutput {
	return o
}

func (o NetworkEnvironmentPtrOutput) ToNetworkEnvironmentPtrOutputWithContext(ctx context.Context) NetworkEnvironmentPtrOutput {
	return o
}

func (o NetworkEnvironmentPtrOutput) Elem() NetworkEnvironmentOutput {
	return o.ApplyT(func(v *NetworkEnvironment) NetworkEnvironment {
		if v != nil {
			return *v
		}
		var ret NetworkEnvironment
		return ret
	}).(NetworkEnvironmentOutput)
}

// The ID of the Environment that the Network belongs to, for example, `env-abc123`.
func (o NetworkEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkGateway struct {
	// (Optional String) The ID of the Gateway, for example, `gw-abc123`.
	Id *string `pulumi:"id"`
}

// NetworkGatewayInput is an input type that accepts NetworkGatewayArgs and NetworkGatewayOutput values.
// You can construct a concrete instance of `NetworkGatewayInput` via:
//
//	NetworkGatewayArgs{...}
type NetworkGatewayInput interface {
	pulumi.Input

	ToNetworkGatewayOutput() NetworkGatewayOutput
	ToNetworkGatewayOutputWithContext(context.Context) NetworkGatewayOutput
}

type NetworkGatewayArgs struct {
	// (Optional String) The ID of the Gateway, for example, `gw-abc123`.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (NetworkGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGateway)(nil)).Elem()
}

func (i NetworkGatewayArgs) ToNetworkGatewayOutput() NetworkGatewayOutput {
	return i.ToNetworkGatewayOutputWithContext(context.Background())
}

func (i NetworkGatewayArgs) ToNetworkGatewayOutputWithContext(ctx context.Context) NetworkGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGatewayOutput)
}

// NetworkGatewayArrayInput is an input type that accepts NetworkGatewayArray and NetworkGatewayArrayOutput values.
// You can construct a concrete instance of `NetworkGatewayArrayInput` via:
//
//	NetworkGatewayArray{ NetworkGatewayArgs{...} }
type NetworkGatewayArrayInput interface {
	pulumi.Input

	ToNetworkGatewayArrayOutput() NetworkGatewayArrayOutput
	ToNetworkGatewayArrayOutputWithContext(context.Context) NetworkGatewayArrayOutput
}

type NetworkGatewayArray []NetworkGatewayInput

func (NetworkGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGateway)(nil)).Elem()
}

func (i NetworkGatewayArray) ToNetworkGatewayArrayOutput() NetworkGatewayArrayOutput {
	return i.ToNetworkGatewayArrayOutputWithContext(context.Background())
}

func (i NetworkGatewayArray) ToNetworkGatewayArrayOutputWithContext(ctx context.Context) NetworkGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGatewayArrayOutput)
}

type NetworkGatewayOutput struct{ *pulumi.OutputState }

func (NetworkGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGateway)(nil)).Elem()
}

func (o NetworkGatewayOutput) ToNetworkGatewayOutput() NetworkGatewayOutput {
	return o
}

func (o NetworkGatewayOutput) ToNetworkGatewayOutputWithContext(ctx context.Context) NetworkGatewayOutput {
	return o
}

// (Optional String) The ID of the Gateway, for example, `gw-abc123`.
func (o NetworkGatewayOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGateway) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type NetworkGatewayArrayOutput struct{ *pulumi.OutputState }

func (NetworkGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGateway)(nil)).Elem()
}

func (o NetworkGatewayArrayOutput) ToNetworkGatewayArrayOutput() NetworkGatewayArrayOutput {
	return o
}

func (o NetworkGatewayArrayOutput) ToNetworkGatewayArrayOutputWithContext(ctx context.Context) NetworkGatewayArrayOutput {
	return o
}

func (o NetworkGatewayArrayOutput) Index(i pulumi.IntInput) NetworkGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkGateway {
		return vs[0].([]NetworkGateway)[vs[1].(int)]
	}).(NetworkGatewayOutput)
}

type NetworkGcp struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments map[string]string `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project *string `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork *string `pulumi:"vpcNetwork"`
}

// NetworkGcpInput is an input type that accepts NetworkGcpArgs and NetworkGcpOutput values.
// You can construct a concrete instance of `NetworkGcpInput` via:
//
//	NetworkGcpArgs{...}
type NetworkGcpInput interface {
	pulumi.Input

	ToNetworkGcpOutput() NetworkGcpOutput
	ToNetworkGcpOutputWithContext(context.Context) NetworkGcpOutput
}

type NetworkGcpArgs struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments pulumi.StringMapInput `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork pulumi.StringPtrInput `pulumi:"vpcNetwork"`
}

func (NetworkGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGcp)(nil)).Elem()
}

func (i NetworkGcpArgs) ToNetworkGcpOutput() NetworkGcpOutput {
	return i.ToNetworkGcpOutputWithContext(context.Background())
}

func (i NetworkGcpArgs) ToNetworkGcpOutputWithContext(ctx context.Context) NetworkGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGcpOutput)
}

// NetworkGcpArrayInput is an input type that accepts NetworkGcpArray and NetworkGcpArrayOutput values.
// You can construct a concrete instance of `NetworkGcpArrayInput` via:
//
//	NetworkGcpArray{ NetworkGcpArgs{...} }
type NetworkGcpArrayInput interface {
	pulumi.Input

	ToNetworkGcpArrayOutput() NetworkGcpArrayOutput
	ToNetworkGcpArrayOutputWithContext(context.Context) NetworkGcpArrayOutput
}

type NetworkGcpArray []NetworkGcpInput

func (NetworkGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGcp)(nil)).Elem()
}

func (i NetworkGcpArray) ToNetworkGcpArrayOutput() NetworkGcpArrayOutput {
	return i.ToNetworkGcpArrayOutputWithContext(context.Background())
}

func (i NetworkGcpArray) ToNetworkGcpArrayOutputWithContext(ctx context.Context) NetworkGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkGcpArrayOutput)
}

type NetworkGcpOutput struct{ *pulumi.OutputState }

func (NetworkGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkGcp)(nil)).Elem()
}

func (o NetworkGcpOutput) ToNetworkGcpOutput() NetworkGcpOutput {
	return o
}

func (o NetworkGcpOutput) ToNetworkGcpOutputWithContext(ctx context.Context) NetworkGcpOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
func (o NetworkGcpOutput) PrivateServiceConnectServiceAttachments() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkGcp) map[string]string { return v.PrivateServiceConnectServiceAttachments }).(pulumi.StringMapOutput)
}

// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
func (o NetworkGcpOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGcp) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// (Required String) The network name of the Confluent Cloud VPC.
func (o NetworkGcpOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkGcp) *string { return v.VpcNetwork }).(pulumi.StringPtrOutput)
}

type NetworkGcpArrayOutput struct{ *pulumi.OutputState }

func (NetworkGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkGcp)(nil)).Elem()
}

func (o NetworkGcpArrayOutput) ToNetworkGcpArrayOutput() NetworkGcpArrayOutput {
	return o
}

func (o NetworkGcpArrayOutput) ToNetworkGcpArrayOutputWithContext(ctx context.Context) NetworkGcpArrayOutput {
	return o
}

func (o NetworkGcpArrayOutput) Index(i pulumi.IntInput) NetworkGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkGcp {
		return vs[0].([]NetworkGcp)[vs[1].(int)]
	}).(NetworkGcpOutput)
}

type NetworkLinkEndpointEnvironment struct {
	// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// NetworkLinkEndpointEnvironmentInput is an input type that accepts NetworkLinkEndpointEnvironmentArgs and NetworkLinkEndpointEnvironmentOutput values.
// You can construct a concrete instance of `NetworkLinkEndpointEnvironmentInput` via:
//
//	NetworkLinkEndpointEnvironmentArgs{...}
type NetworkLinkEndpointEnvironmentInput interface {
	pulumi.Input

	ToNetworkLinkEndpointEnvironmentOutput() NetworkLinkEndpointEnvironmentOutput
	ToNetworkLinkEndpointEnvironmentOutputWithContext(context.Context) NetworkLinkEndpointEnvironmentOutput
}

type NetworkLinkEndpointEnvironmentArgs struct {
	// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkLinkEndpointEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkEndpointEnvironment)(nil)).Elem()
}

func (i NetworkLinkEndpointEnvironmentArgs) ToNetworkLinkEndpointEnvironmentOutput() NetworkLinkEndpointEnvironmentOutput {
	return i.ToNetworkLinkEndpointEnvironmentOutputWithContext(context.Background())
}

func (i NetworkLinkEndpointEnvironmentArgs) ToNetworkLinkEndpointEnvironmentOutputWithContext(ctx context.Context) NetworkLinkEndpointEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointEnvironmentOutput)
}

func (i NetworkLinkEndpointEnvironmentArgs) ToNetworkLinkEndpointEnvironmentPtrOutput() NetworkLinkEndpointEnvironmentPtrOutput {
	return i.ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(context.Background())
}

func (i NetworkLinkEndpointEnvironmentArgs) ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointEnvironmentOutput).ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(ctx)
}

// NetworkLinkEndpointEnvironmentPtrInput is an input type that accepts NetworkLinkEndpointEnvironmentArgs, NetworkLinkEndpointEnvironmentPtr and NetworkLinkEndpointEnvironmentPtrOutput values.
// You can construct a concrete instance of `NetworkLinkEndpointEnvironmentPtrInput` via:
//
//	        NetworkLinkEndpointEnvironmentArgs{...}
//
//	or:
//
//	        nil
type NetworkLinkEndpointEnvironmentPtrInput interface {
	pulumi.Input

	ToNetworkLinkEndpointEnvironmentPtrOutput() NetworkLinkEndpointEnvironmentPtrOutput
	ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(context.Context) NetworkLinkEndpointEnvironmentPtrOutput
}

type networkLinkEndpointEnvironmentPtrType NetworkLinkEndpointEnvironmentArgs

func NetworkLinkEndpointEnvironmentPtr(v *NetworkLinkEndpointEnvironmentArgs) NetworkLinkEndpointEnvironmentPtrInput {
	return (*networkLinkEndpointEnvironmentPtrType)(v)
}

func (*networkLinkEndpointEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkEndpointEnvironment)(nil)).Elem()
}

func (i *networkLinkEndpointEnvironmentPtrType) ToNetworkLinkEndpointEnvironmentPtrOutput() NetworkLinkEndpointEnvironmentPtrOutput {
	return i.ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(context.Background())
}

func (i *networkLinkEndpointEnvironmentPtrType) ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointEnvironmentPtrOutput)
}

type NetworkLinkEndpointEnvironmentOutput struct{ *pulumi.OutputState }

func (NetworkLinkEndpointEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkEndpointEnvironment)(nil)).Elem()
}

func (o NetworkLinkEndpointEnvironmentOutput) ToNetworkLinkEndpointEnvironmentOutput() NetworkLinkEndpointEnvironmentOutput {
	return o
}

func (o NetworkLinkEndpointEnvironmentOutput) ToNetworkLinkEndpointEnvironmentOutputWithContext(ctx context.Context) NetworkLinkEndpointEnvironmentOutput {
	return o
}

func (o NetworkLinkEndpointEnvironmentOutput) ToNetworkLinkEndpointEnvironmentPtrOutput() NetworkLinkEndpointEnvironmentPtrOutput {
	return o.ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(context.Background())
}

func (o NetworkLinkEndpointEnvironmentOutput) ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLinkEndpointEnvironment) *NetworkLinkEndpointEnvironment {
		return &v
	}).(NetworkLinkEndpointEnvironmentPtrOutput)
}

// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
func (o NetworkLinkEndpointEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLinkEndpointEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkLinkEndpointEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (NetworkLinkEndpointEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkEndpointEnvironment)(nil)).Elem()
}

func (o NetworkLinkEndpointEnvironmentPtrOutput) ToNetworkLinkEndpointEnvironmentPtrOutput() NetworkLinkEndpointEnvironmentPtrOutput {
	return o
}

func (o NetworkLinkEndpointEnvironmentPtrOutput) ToNetworkLinkEndpointEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointEnvironmentPtrOutput {
	return o
}

func (o NetworkLinkEndpointEnvironmentPtrOutput) Elem() NetworkLinkEndpointEnvironmentOutput {
	return o.ApplyT(func(v *NetworkLinkEndpointEnvironment) NetworkLinkEndpointEnvironment {
		if v != nil {
			return *v
		}
		var ret NetworkLinkEndpointEnvironment
		return ret
	}).(NetworkLinkEndpointEnvironmentOutput)
}

// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
func (o NetworkLinkEndpointEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLinkEndpointEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkLinkEndpointNetwork struct {
	// The ID of the Network that the Network Link Endpoint belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// NetworkLinkEndpointNetworkInput is an input type that accepts NetworkLinkEndpointNetworkArgs and NetworkLinkEndpointNetworkOutput values.
// You can construct a concrete instance of `NetworkLinkEndpointNetworkInput` via:
//
//	NetworkLinkEndpointNetworkArgs{...}
type NetworkLinkEndpointNetworkInput interface {
	pulumi.Input

	ToNetworkLinkEndpointNetworkOutput() NetworkLinkEndpointNetworkOutput
	ToNetworkLinkEndpointNetworkOutputWithContext(context.Context) NetworkLinkEndpointNetworkOutput
}

type NetworkLinkEndpointNetworkArgs struct {
	// The ID of the Network that the Network Link Endpoint belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkLinkEndpointNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkEndpointNetwork)(nil)).Elem()
}

func (i NetworkLinkEndpointNetworkArgs) ToNetworkLinkEndpointNetworkOutput() NetworkLinkEndpointNetworkOutput {
	return i.ToNetworkLinkEndpointNetworkOutputWithContext(context.Background())
}

func (i NetworkLinkEndpointNetworkArgs) ToNetworkLinkEndpointNetworkOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointNetworkOutput)
}

func (i NetworkLinkEndpointNetworkArgs) ToNetworkLinkEndpointNetworkPtrOutput() NetworkLinkEndpointNetworkPtrOutput {
	return i.ToNetworkLinkEndpointNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkLinkEndpointNetworkArgs) ToNetworkLinkEndpointNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointNetworkOutput).ToNetworkLinkEndpointNetworkPtrOutputWithContext(ctx)
}

// NetworkLinkEndpointNetworkPtrInput is an input type that accepts NetworkLinkEndpointNetworkArgs, NetworkLinkEndpointNetworkPtr and NetworkLinkEndpointNetworkPtrOutput values.
// You can construct a concrete instance of `NetworkLinkEndpointNetworkPtrInput` via:
//
//	        NetworkLinkEndpointNetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkLinkEndpointNetworkPtrInput interface {
	pulumi.Input

	ToNetworkLinkEndpointNetworkPtrOutput() NetworkLinkEndpointNetworkPtrOutput
	ToNetworkLinkEndpointNetworkPtrOutputWithContext(context.Context) NetworkLinkEndpointNetworkPtrOutput
}

type networkLinkEndpointNetworkPtrType NetworkLinkEndpointNetworkArgs

func NetworkLinkEndpointNetworkPtr(v *NetworkLinkEndpointNetworkArgs) NetworkLinkEndpointNetworkPtrInput {
	return (*networkLinkEndpointNetworkPtrType)(v)
}

func (*networkLinkEndpointNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkEndpointNetwork)(nil)).Elem()
}

func (i *networkLinkEndpointNetworkPtrType) ToNetworkLinkEndpointNetworkPtrOutput() NetworkLinkEndpointNetworkPtrOutput {
	return i.ToNetworkLinkEndpointNetworkPtrOutputWithContext(context.Background())
}

func (i *networkLinkEndpointNetworkPtrType) ToNetworkLinkEndpointNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointNetworkPtrOutput)
}

type NetworkLinkEndpointNetworkOutput struct{ *pulumi.OutputState }

func (NetworkLinkEndpointNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkEndpointNetwork)(nil)).Elem()
}

func (o NetworkLinkEndpointNetworkOutput) ToNetworkLinkEndpointNetworkOutput() NetworkLinkEndpointNetworkOutput {
	return o
}

func (o NetworkLinkEndpointNetworkOutput) ToNetworkLinkEndpointNetworkOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkOutput {
	return o
}

func (o NetworkLinkEndpointNetworkOutput) ToNetworkLinkEndpointNetworkPtrOutput() NetworkLinkEndpointNetworkPtrOutput {
	return o.ToNetworkLinkEndpointNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkLinkEndpointNetworkOutput) ToNetworkLinkEndpointNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLinkEndpointNetwork) *NetworkLinkEndpointNetwork {
		return &v
	}).(NetworkLinkEndpointNetworkPtrOutput)
}

// The ID of the Network that the Network Link Endpoint belongs to, for example, `n-abc123`.
func (o NetworkLinkEndpointNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLinkEndpointNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkLinkEndpointNetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkLinkEndpointNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkEndpointNetwork)(nil)).Elem()
}

func (o NetworkLinkEndpointNetworkPtrOutput) ToNetworkLinkEndpointNetworkPtrOutput() NetworkLinkEndpointNetworkPtrOutput {
	return o
}

func (o NetworkLinkEndpointNetworkPtrOutput) ToNetworkLinkEndpointNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkPtrOutput {
	return o
}

func (o NetworkLinkEndpointNetworkPtrOutput) Elem() NetworkLinkEndpointNetworkOutput {
	return o.ApplyT(func(v *NetworkLinkEndpointNetwork) NetworkLinkEndpointNetwork {
		if v != nil {
			return *v
		}
		var ret NetworkLinkEndpointNetwork
		return ret
	}).(NetworkLinkEndpointNetworkOutput)
}

// The ID of the Network that the Network Link Endpoint belongs to, for example, `n-abc123`.
func (o NetworkLinkEndpointNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLinkEndpointNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkLinkEndpointNetworkLinkService struct {
	// The ID of the Network Link Service, for example, `nls-g3e1ox`.
	Id string `pulumi:"id"`
}

// NetworkLinkEndpointNetworkLinkServiceInput is an input type that accepts NetworkLinkEndpointNetworkLinkServiceArgs and NetworkLinkEndpointNetworkLinkServiceOutput values.
// You can construct a concrete instance of `NetworkLinkEndpointNetworkLinkServiceInput` via:
//
//	NetworkLinkEndpointNetworkLinkServiceArgs{...}
type NetworkLinkEndpointNetworkLinkServiceInput interface {
	pulumi.Input

	ToNetworkLinkEndpointNetworkLinkServiceOutput() NetworkLinkEndpointNetworkLinkServiceOutput
	ToNetworkLinkEndpointNetworkLinkServiceOutputWithContext(context.Context) NetworkLinkEndpointNetworkLinkServiceOutput
}

type NetworkLinkEndpointNetworkLinkServiceArgs struct {
	// The ID of the Network Link Service, for example, `nls-g3e1ox`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkLinkEndpointNetworkLinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (i NetworkLinkEndpointNetworkLinkServiceArgs) ToNetworkLinkEndpointNetworkLinkServiceOutput() NetworkLinkEndpointNetworkLinkServiceOutput {
	return i.ToNetworkLinkEndpointNetworkLinkServiceOutputWithContext(context.Background())
}

func (i NetworkLinkEndpointNetworkLinkServiceArgs) ToNetworkLinkEndpointNetworkLinkServiceOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkLinkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointNetworkLinkServiceOutput)
}

func (i NetworkLinkEndpointNetworkLinkServiceArgs) ToNetworkLinkEndpointNetworkLinkServicePtrOutput() NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return i.ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(context.Background())
}

func (i NetworkLinkEndpointNetworkLinkServiceArgs) ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointNetworkLinkServiceOutput).ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(ctx)
}

// NetworkLinkEndpointNetworkLinkServicePtrInput is an input type that accepts NetworkLinkEndpointNetworkLinkServiceArgs, NetworkLinkEndpointNetworkLinkServicePtr and NetworkLinkEndpointNetworkLinkServicePtrOutput values.
// You can construct a concrete instance of `NetworkLinkEndpointNetworkLinkServicePtrInput` via:
//
//	        NetworkLinkEndpointNetworkLinkServiceArgs{...}
//
//	or:
//
//	        nil
type NetworkLinkEndpointNetworkLinkServicePtrInput interface {
	pulumi.Input

	ToNetworkLinkEndpointNetworkLinkServicePtrOutput() NetworkLinkEndpointNetworkLinkServicePtrOutput
	ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(context.Context) NetworkLinkEndpointNetworkLinkServicePtrOutput
}

type networkLinkEndpointNetworkLinkServicePtrType NetworkLinkEndpointNetworkLinkServiceArgs

func NetworkLinkEndpointNetworkLinkServicePtr(v *NetworkLinkEndpointNetworkLinkServiceArgs) NetworkLinkEndpointNetworkLinkServicePtrInput {
	return (*networkLinkEndpointNetworkLinkServicePtrType)(v)
}

func (*networkLinkEndpointNetworkLinkServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (i *networkLinkEndpointNetworkLinkServicePtrType) ToNetworkLinkEndpointNetworkLinkServicePtrOutput() NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return i.ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(context.Background())
}

func (i *networkLinkEndpointNetworkLinkServicePtrType) ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkEndpointNetworkLinkServicePtrOutput)
}

type NetworkLinkEndpointNetworkLinkServiceOutput struct{ *pulumi.OutputState }

func (NetworkLinkEndpointNetworkLinkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (o NetworkLinkEndpointNetworkLinkServiceOutput) ToNetworkLinkEndpointNetworkLinkServiceOutput() NetworkLinkEndpointNetworkLinkServiceOutput {
	return o
}

func (o NetworkLinkEndpointNetworkLinkServiceOutput) ToNetworkLinkEndpointNetworkLinkServiceOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkLinkServiceOutput {
	return o
}

func (o NetworkLinkEndpointNetworkLinkServiceOutput) ToNetworkLinkEndpointNetworkLinkServicePtrOutput() NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return o.ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(context.Background())
}

func (o NetworkLinkEndpointNetworkLinkServiceOutput) ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLinkEndpointNetworkLinkService) *NetworkLinkEndpointNetworkLinkService {
		return &v
	}).(NetworkLinkEndpointNetworkLinkServicePtrOutput)
}

// The ID of the Network Link Service, for example, `nls-g3e1ox`.
func (o NetworkLinkEndpointNetworkLinkServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLinkEndpointNetworkLinkService) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkLinkEndpointNetworkLinkServicePtrOutput struct{ *pulumi.OutputState }

func (NetworkLinkEndpointNetworkLinkServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (o NetworkLinkEndpointNetworkLinkServicePtrOutput) ToNetworkLinkEndpointNetworkLinkServicePtrOutput() NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return o
}

func (o NetworkLinkEndpointNetworkLinkServicePtrOutput) ToNetworkLinkEndpointNetworkLinkServicePtrOutputWithContext(ctx context.Context) NetworkLinkEndpointNetworkLinkServicePtrOutput {
	return o
}

func (o NetworkLinkEndpointNetworkLinkServicePtrOutput) Elem() NetworkLinkEndpointNetworkLinkServiceOutput {
	return o.ApplyT(func(v *NetworkLinkEndpointNetworkLinkService) NetworkLinkEndpointNetworkLinkService {
		if v != nil {
			return *v
		}
		var ret NetworkLinkEndpointNetworkLinkService
		return ret
	}).(NetworkLinkEndpointNetworkLinkServiceOutput)
}

// The ID of the Network Link Service, for example, `nls-g3e1ox`.
func (o NetworkLinkEndpointNetworkLinkServicePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLinkEndpointNetworkLinkService) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkLinkServiceAccept struct {
	// List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
	Environments []string `pulumi:"environments"`
	// List of network ids from which connections can be accepted.
	Networks []string `pulumi:"networks"`
}

// NetworkLinkServiceAcceptInput is an input type that accepts NetworkLinkServiceAcceptArgs and NetworkLinkServiceAcceptOutput values.
// You can construct a concrete instance of `NetworkLinkServiceAcceptInput` via:
//
//	NetworkLinkServiceAcceptArgs{...}
type NetworkLinkServiceAcceptInput interface {
	pulumi.Input

	ToNetworkLinkServiceAcceptOutput() NetworkLinkServiceAcceptOutput
	ToNetworkLinkServiceAcceptOutputWithContext(context.Context) NetworkLinkServiceAcceptOutput
}

type NetworkLinkServiceAcceptArgs struct {
	// List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	// List of network ids from which connections can be accepted.
	Networks pulumi.StringArrayInput `pulumi:"networks"`
}

func (NetworkLinkServiceAcceptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkServiceAccept)(nil)).Elem()
}

func (i NetworkLinkServiceAcceptArgs) ToNetworkLinkServiceAcceptOutput() NetworkLinkServiceAcceptOutput {
	return i.ToNetworkLinkServiceAcceptOutputWithContext(context.Background())
}

func (i NetworkLinkServiceAcceptArgs) ToNetworkLinkServiceAcceptOutputWithContext(ctx context.Context) NetworkLinkServiceAcceptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceAcceptOutput)
}

func (i NetworkLinkServiceAcceptArgs) ToNetworkLinkServiceAcceptPtrOutput() NetworkLinkServiceAcceptPtrOutput {
	return i.ToNetworkLinkServiceAcceptPtrOutputWithContext(context.Background())
}

func (i NetworkLinkServiceAcceptArgs) ToNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) NetworkLinkServiceAcceptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceAcceptOutput).ToNetworkLinkServiceAcceptPtrOutputWithContext(ctx)
}

// NetworkLinkServiceAcceptPtrInput is an input type that accepts NetworkLinkServiceAcceptArgs, NetworkLinkServiceAcceptPtr and NetworkLinkServiceAcceptPtrOutput values.
// You can construct a concrete instance of `NetworkLinkServiceAcceptPtrInput` via:
//
//	        NetworkLinkServiceAcceptArgs{...}
//
//	or:
//
//	        nil
type NetworkLinkServiceAcceptPtrInput interface {
	pulumi.Input

	ToNetworkLinkServiceAcceptPtrOutput() NetworkLinkServiceAcceptPtrOutput
	ToNetworkLinkServiceAcceptPtrOutputWithContext(context.Context) NetworkLinkServiceAcceptPtrOutput
}

type networkLinkServiceAcceptPtrType NetworkLinkServiceAcceptArgs

func NetworkLinkServiceAcceptPtr(v *NetworkLinkServiceAcceptArgs) NetworkLinkServiceAcceptPtrInput {
	return (*networkLinkServiceAcceptPtrType)(v)
}

func (*networkLinkServiceAcceptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkServiceAccept)(nil)).Elem()
}

func (i *networkLinkServiceAcceptPtrType) ToNetworkLinkServiceAcceptPtrOutput() NetworkLinkServiceAcceptPtrOutput {
	return i.ToNetworkLinkServiceAcceptPtrOutputWithContext(context.Background())
}

func (i *networkLinkServiceAcceptPtrType) ToNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) NetworkLinkServiceAcceptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceAcceptPtrOutput)
}

type NetworkLinkServiceAcceptOutput struct{ *pulumi.OutputState }

func (NetworkLinkServiceAcceptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkServiceAccept)(nil)).Elem()
}

func (o NetworkLinkServiceAcceptOutput) ToNetworkLinkServiceAcceptOutput() NetworkLinkServiceAcceptOutput {
	return o
}

func (o NetworkLinkServiceAcceptOutput) ToNetworkLinkServiceAcceptOutputWithContext(ctx context.Context) NetworkLinkServiceAcceptOutput {
	return o
}

func (o NetworkLinkServiceAcceptOutput) ToNetworkLinkServiceAcceptPtrOutput() NetworkLinkServiceAcceptPtrOutput {
	return o.ToNetworkLinkServiceAcceptPtrOutputWithContext(context.Background())
}

func (o NetworkLinkServiceAcceptOutput) ToNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) NetworkLinkServiceAcceptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLinkServiceAccept) *NetworkLinkServiceAccept {
		return &v
	}).(NetworkLinkServiceAcceptPtrOutput)
}

// List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
func (o NetworkLinkServiceAcceptOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkLinkServiceAccept) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// List of network ids from which connections can be accepted.
func (o NetworkLinkServiceAcceptOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkLinkServiceAccept) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

type NetworkLinkServiceAcceptPtrOutput struct{ *pulumi.OutputState }

func (NetworkLinkServiceAcceptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkServiceAccept)(nil)).Elem()
}

func (o NetworkLinkServiceAcceptPtrOutput) ToNetworkLinkServiceAcceptPtrOutput() NetworkLinkServiceAcceptPtrOutput {
	return o
}

func (o NetworkLinkServiceAcceptPtrOutput) ToNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) NetworkLinkServiceAcceptPtrOutput {
	return o
}

func (o NetworkLinkServiceAcceptPtrOutput) Elem() NetworkLinkServiceAcceptOutput {
	return o.ApplyT(func(v *NetworkLinkServiceAccept) NetworkLinkServiceAccept {
		if v != nil {
			return *v
		}
		var ret NetworkLinkServiceAccept
		return ret
	}).(NetworkLinkServiceAcceptOutput)
}

// List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
func (o NetworkLinkServiceAcceptPtrOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkLinkServiceAccept) []string {
		if v == nil {
			return nil
		}
		return v.Environments
	}).(pulumi.StringArrayOutput)
}

// List of network ids from which connections can be accepted.
func (o NetworkLinkServiceAcceptPtrOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkLinkServiceAccept) []string {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(pulumi.StringArrayOutput)
}

type NetworkLinkServiceEnvironment struct {
	// The ID of the Environment that the Network Link Service belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// NetworkLinkServiceEnvironmentInput is an input type that accepts NetworkLinkServiceEnvironmentArgs and NetworkLinkServiceEnvironmentOutput values.
// You can construct a concrete instance of `NetworkLinkServiceEnvironmentInput` via:
//
//	NetworkLinkServiceEnvironmentArgs{...}
type NetworkLinkServiceEnvironmentInput interface {
	pulumi.Input

	ToNetworkLinkServiceEnvironmentOutput() NetworkLinkServiceEnvironmentOutput
	ToNetworkLinkServiceEnvironmentOutputWithContext(context.Context) NetworkLinkServiceEnvironmentOutput
}

type NetworkLinkServiceEnvironmentArgs struct {
	// The ID of the Environment that the Network Link Service belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkLinkServiceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkServiceEnvironment)(nil)).Elem()
}

func (i NetworkLinkServiceEnvironmentArgs) ToNetworkLinkServiceEnvironmentOutput() NetworkLinkServiceEnvironmentOutput {
	return i.ToNetworkLinkServiceEnvironmentOutputWithContext(context.Background())
}

func (i NetworkLinkServiceEnvironmentArgs) ToNetworkLinkServiceEnvironmentOutputWithContext(ctx context.Context) NetworkLinkServiceEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceEnvironmentOutput)
}

func (i NetworkLinkServiceEnvironmentArgs) ToNetworkLinkServiceEnvironmentPtrOutput() NetworkLinkServiceEnvironmentPtrOutput {
	return i.ToNetworkLinkServiceEnvironmentPtrOutputWithContext(context.Background())
}

func (i NetworkLinkServiceEnvironmentArgs) ToNetworkLinkServiceEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkServiceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceEnvironmentOutput).ToNetworkLinkServiceEnvironmentPtrOutputWithContext(ctx)
}

// NetworkLinkServiceEnvironmentPtrInput is an input type that accepts NetworkLinkServiceEnvironmentArgs, NetworkLinkServiceEnvironmentPtr and NetworkLinkServiceEnvironmentPtrOutput values.
// You can construct a concrete instance of `NetworkLinkServiceEnvironmentPtrInput` via:
//
//	        NetworkLinkServiceEnvironmentArgs{...}
//
//	or:
//
//	        nil
type NetworkLinkServiceEnvironmentPtrInput interface {
	pulumi.Input

	ToNetworkLinkServiceEnvironmentPtrOutput() NetworkLinkServiceEnvironmentPtrOutput
	ToNetworkLinkServiceEnvironmentPtrOutputWithContext(context.Context) NetworkLinkServiceEnvironmentPtrOutput
}

type networkLinkServiceEnvironmentPtrType NetworkLinkServiceEnvironmentArgs

func NetworkLinkServiceEnvironmentPtr(v *NetworkLinkServiceEnvironmentArgs) NetworkLinkServiceEnvironmentPtrInput {
	return (*networkLinkServiceEnvironmentPtrType)(v)
}

func (*networkLinkServiceEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkServiceEnvironment)(nil)).Elem()
}

func (i *networkLinkServiceEnvironmentPtrType) ToNetworkLinkServiceEnvironmentPtrOutput() NetworkLinkServiceEnvironmentPtrOutput {
	return i.ToNetworkLinkServiceEnvironmentPtrOutputWithContext(context.Background())
}

func (i *networkLinkServiceEnvironmentPtrType) ToNetworkLinkServiceEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkServiceEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceEnvironmentPtrOutput)
}

type NetworkLinkServiceEnvironmentOutput struct{ *pulumi.OutputState }

func (NetworkLinkServiceEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkServiceEnvironment)(nil)).Elem()
}

func (o NetworkLinkServiceEnvironmentOutput) ToNetworkLinkServiceEnvironmentOutput() NetworkLinkServiceEnvironmentOutput {
	return o
}

func (o NetworkLinkServiceEnvironmentOutput) ToNetworkLinkServiceEnvironmentOutputWithContext(ctx context.Context) NetworkLinkServiceEnvironmentOutput {
	return o
}

func (o NetworkLinkServiceEnvironmentOutput) ToNetworkLinkServiceEnvironmentPtrOutput() NetworkLinkServiceEnvironmentPtrOutput {
	return o.ToNetworkLinkServiceEnvironmentPtrOutputWithContext(context.Background())
}

func (o NetworkLinkServiceEnvironmentOutput) ToNetworkLinkServiceEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkServiceEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLinkServiceEnvironment) *NetworkLinkServiceEnvironment {
		return &v
	}).(NetworkLinkServiceEnvironmentPtrOutput)
}

// The ID of the Environment that the Network Link Service belongs to, for example, `env-abc123`.
func (o NetworkLinkServiceEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLinkServiceEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkLinkServiceEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (NetworkLinkServiceEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkServiceEnvironment)(nil)).Elem()
}

func (o NetworkLinkServiceEnvironmentPtrOutput) ToNetworkLinkServiceEnvironmentPtrOutput() NetworkLinkServiceEnvironmentPtrOutput {
	return o
}

func (o NetworkLinkServiceEnvironmentPtrOutput) ToNetworkLinkServiceEnvironmentPtrOutputWithContext(ctx context.Context) NetworkLinkServiceEnvironmentPtrOutput {
	return o
}

func (o NetworkLinkServiceEnvironmentPtrOutput) Elem() NetworkLinkServiceEnvironmentOutput {
	return o.ApplyT(func(v *NetworkLinkServiceEnvironment) NetworkLinkServiceEnvironment {
		if v != nil {
			return *v
		}
		var ret NetworkLinkServiceEnvironment
		return ret
	}).(NetworkLinkServiceEnvironmentOutput)
}

// The ID of the Environment that the Network Link Service belongs to, for example, `env-abc123`.
func (o NetworkLinkServiceEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLinkServiceEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkLinkServiceNetwork struct {
	// The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// NetworkLinkServiceNetworkInput is an input type that accepts NetworkLinkServiceNetworkArgs and NetworkLinkServiceNetworkOutput values.
// You can construct a concrete instance of `NetworkLinkServiceNetworkInput` via:
//
//	NetworkLinkServiceNetworkArgs{...}
type NetworkLinkServiceNetworkInput interface {
	pulumi.Input

	ToNetworkLinkServiceNetworkOutput() NetworkLinkServiceNetworkOutput
	ToNetworkLinkServiceNetworkOutputWithContext(context.Context) NetworkLinkServiceNetworkOutput
}

type NetworkLinkServiceNetworkArgs struct {
	// The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (NetworkLinkServiceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkServiceNetwork)(nil)).Elem()
}

func (i NetworkLinkServiceNetworkArgs) ToNetworkLinkServiceNetworkOutput() NetworkLinkServiceNetworkOutput {
	return i.ToNetworkLinkServiceNetworkOutputWithContext(context.Background())
}

func (i NetworkLinkServiceNetworkArgs) ToNetworkLinkServiceNetworkOutputWithContext(ctx context.Context) NetworkLinkServiceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceNetworkOutput)
}

func (i NetworkLinkServiceNetworkArgs) ToNetworkLinkServiceNetworkPtrOutput() NetworkLinkServiceNetworkPtrOutput {
	return i.ToNetworkLinkServiceNetworkPtrOutputWithContext(context.Background())
}

func (i NetworkLinkServiceNetworkArgs) ToNetworkLinkServiceNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkServiceNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceNetworkOutput).ToNetworkLinkServiceNetworkPtrOutputWithContext(ctx)
}

// NetworkLinkServiceNetworkPtrInput is an input type that accepts NetworkLinkServiceNetworkArgs, NetworkLinkServiceNetworkPtr and NetworkLinkServiceNetworkPtrOutput values.
// You can construct a concrete instance of `NetworkLinkServiceNetworkPtrInput` via:
//
//	        NetworkLinkServiceNetworkArgs{...}
//
//	or:
//
//	        nil
type NetworkLinkServiceNetworkPtrInput interface {
	pulumi.Input

	ToNetworkLinkServiceNetworkPtrOutput() NetworkLinkServiceNetworkPtrOutput
	ToNetworkLinkServiceNetworkPtrOutputWithContext(context.Context) NetworkLinkServiceNetworkPtrOutput
}

type networkLinkServiceNetworkPtrType NetworkLinkServiceNetworkArgs

func NetworkLinkServiceNetworkPtr(v *NetworkLinkServiceNetworkArgs) NetworkLinkServiceNetworkPtrInput {
	return (*networkLinkServiceNetworkPtrType)(v)
}

func (*networkLinkServiceNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkServiceNetwork)(nil)).Elem()
}

func (i *networkLinkServiceNetworkPtrType) ToNetworkLinkServiceNetworkPtrOutput() NetworkLinkServiceNetworkPtrOutput {
	return i.ToNetworkLinkServiceNetworkPtrOutputWithContext(context.Background())
}

func (i *networkLinkServiceNetworkPtrType) ToNetworkLinkServiceNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkServiceNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkLinkServiceNetworkPtrOutput)
}

type NetworkLinkServiceNetworkOutput struct{ *pulumi.OutputState }

func (NetworkLinkServiceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkLinkServiceNetwork)(nil)).Elem()
}

func (o NetworkLinkServiceNetworkOutput) ToNetworkLinkServiceNetworkOutput() NetworkLinkServiceNetworkOutput {
	return o
}

func (o NetworkLinkServiceNetworkOutput) ToNetworkLinkServiceNetworkOutputWithContext(ctx context.Context) NetworkLinkServiceNetworkOutput {
	return o
}

func (o NetworkLinkServiceNetworkOutput) ToNetworkLinkServiceNetworkPtrOutput() NetworkLinkServiceNetworkPtrOutput {
	return o.ToNetworkLinkServiceNetworkPtrOutputWithContext(context.Background())
}

func (o NetworkLinkServiceNetworkOutput) ToNetworkLinkServiceNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkServiceNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkLinkServiceNetwork) *NetworkLinkServiceNetwork {
		return &v
	}).(NetworkLinkServiceNetworkPtrOutput)
}

// The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
func (o NetworkLinkServiceNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkLinkServiceNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type NetworkLinkServiceNetworkPtrOutput struct{ *pulumi.OutputState }

func (NetworkLinkServiceNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkLinkServiceNetwork)(nil)).Elem()
}

func (o NetworkLinkServiceNetworkPtrOutput) ToNetworkLinkServiceNetworkPtrOutput() NetworkLinkServiceNetworkPtrOutput {
	return o
}

func (o NetworkLinkServiceNetworkPtrOutput) ToNetworkLinkServiceNetworkPtrOutputWithContext(ctx context.Context) NetworkLinkServiceNetworkPtrOutput {
	return o
}

func (o NetworkLinkServiceNetworkPtrOutput) Elem() NetworkLinkServiceNetworkOutput {
	return o.ApplyT(func(v *NetworkLinkServiceNetwork) NetworkLinkServiceNetwork {
		if v != nil {
			return *v
		}
		var ret NetworkLinkServiceNetwork
		return ret
	}).(NetworkLinkServiceNetworkOutput)
}

// The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
func (o NetworkLinkServiceNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkLinkServiceNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type NetworkZoneInfo struct {
	// The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
	//
	// > **Note:** The `zoneInfo` configuration block and `reservedCidr` are in a [Limited Availability lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy), and it's available only for AWS networks with PEERING connection type.
	Cidr *string `pulumi:"cidr"`
	// Cloud provider zone ID.
	ZoneId *string `pulumi:"zoneId"`
}

// NetworkZoneInfoInput is an input type that accepts NetworkZoneInfoArgs and NetworkZoneInfoOutput values.
// You can construct a concrete instance of `NetworkZoneInfoInput` via:
//
//	NetworkZoneInfoArgs{...}
type NetworkZoneInfoInput interface {
	pulumi.Input

	ToNetworkZoneInfoOutput() NetworkZoneInfoOutput
	ToNetworkZoneInfoOutputWithContext(context.Context) NetworkZoneInfoOutput
}

type NetworkZoneInfoArgs struct {
	// The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
	//
	// > **Note:** The `zoneInfo` configuration block and `reservedCidr` are in a [Limited Availability lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy), and it's available only for AWS networks with PEERING connection type.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Cloud provider zone ID.
	ZoneId pulumi.StringPtrInput `pulumi:"zoneId"`
}

func (NetworkZoneInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkZoneInfo)(nil)).Elem()
}

func (i NetworkZoneInfoArgs) ToNetworkZoneInfoOutput() NetworkZoneInfoOutput {
	return i.ToNetworkZoneInfoOutputWithContext(context.Background())
}

func (i NetworkZoneInfoArgs) ToNetworkZoneInfoOutputWithContext(ctx context.Context) NetworkZoneInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkZoneInfoOutput)
}

// NetworkZoneInfoArrayInput is an input type that accepts NetworkZoneInfoArray and NetworkZoneInfoArrayOutput values.
// You can construct a concrete instance of `NetworkZoneInfoArrayInput` via:
//
//	NetworkZoneInfoArray{ NetworkZoneInfoArgs{...} }
type NetworkZoneInfoArrayInput interface {
	pulumi.Input

	ToNetworkZoneInfoArrayOutput() NetworkZoneInfoArrayOutput
	ToNetworkZoneInfoArrayOutputWithContext(context.Context) NetworkZoneInfoArrayOutput
}

type NetworkZoneInfoArray []NetworkZoneInfoInput

func (NetworkZoneInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkZoneInfo)(nil)).Elem()
}

func (i NetworkZoneInfoArray) ToNetworkZoneInfoArrayOutput() NetworkZoneInfoArrayOutput {
	return i.ToNetworkZoneInfoArrayOutputWithContext(context.Background())
}

func (i NetworkZoneInfoArray) ToNetworkZoneInfoArrayOutputWithContext(ctx context.Context) NetworkZoneInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkZoneInfoArrayOutput)
}

type NetworkZoneInfoOutput struct{ *pulumi.OutputState }

func (NetworkZoneInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkZoneInfo)(nil)).Elem()
}

func (o NetworkZoneInfoOutput) ToNetworkZoneInfoOutput() NetworkZoneInfoOutput {
	return o
}

func (o NetworkZoneInfoOutput) ToNetworkZoneInfoOutputWithContext(ctx context.Context) NetworkZoneInfoOutput {
	return o
}

// The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
//
// > **Note:** The `zoneInfo` configuration block and `reservedCidr` are in a [Limited Availability lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy), and it's available only for AWS networks with PEERING connection type.
func (o NetworkZoneInfoOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkZoneInfo) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Cloud provider zone ID.
func (o NetworkZoneInfoOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkZoneInfo) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

type NetworkZoneInfoArrayOutput struct{ *pulumi.OutputState }

func (NetworkZoneInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkZoneInfo)(nil)).Elem()
}

func (o NetworkZoneInfoArrayOutput) ToNetworkZoneInfoArrayOutput() NetworkZoneInfoArrayOutput {
	return o
}

func (o NetworkZoneInfoArrayOutput) ToNetworkZoneInfoArrayOutputWithContext(ctx context.Context) NetworkZoneInfoArrayOutput {
	return o
}

func (o NetworkZoneInfoArrayOutput) Index(i pulumi.IntInput) NetworkZoneInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkZoneInfo {
		return vs[0].([]NetworkZoneInfo)[vs[1].(int)]
	}).(NetworkZoneInfoOutput)
}

type PeeringAws struct {
	// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
	// The region of the AWS peer VPC.
	CustomerRegion string `pulumi:"customerRegion"`
	// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes []string `pulumi:"routes"`
	// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc string `pulumi:"vpc"`
}

// PeeringAwsInput is an input type that accepts PeeringAwsArgs and PeeringAwsOutput values.
// You can construct a concrete instance of `PeeringAwsInput` via:
//
//	PeeringAwsArgs{...}
type PeeringAwsInput interface {
	pulumi.Input

	ToPeeringAwsOutput() PeeringAwsOutput
	ToPeeringAwsOutputWithContext(context.Context) PeeringAwsOutput
}

type PeeringAwsArgs struct {
	// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
	// The region of the AWS peer VPC.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (PeeringAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAws)(nil)).Elem()
}

func (i PeeringAwsArgs) ToPeeringAwsOutput() PeeringAwsOutput {
	return i.ToPeeringAwsOutputWithContext(context.Background())
}

func (i PeeringAwsArgs) ToPeeringAwsOutputWithContext(ctx context.Context) PeeringAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsOutput)
}

func (i PeeringAwsArgs) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return i.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (i PeeringAwsArgs) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsOutput).ToPeeringAwsPtrOutputWithContext(ctx)
}

// PeeringAwsPtrInput is an input type that accepts PeeringAwsArgs, PeeringAwsPtr and PeeringAwsPtrOutput values.
// You can construct a concrete instance of `PeeringAwsPtrInput` via:
//
//	        PeeringAwsArgs{...}
//
//	or:
//
//	        nil
type PeeringAwsPtrInput interface {
	pulumi.Input

	ToPeeringAwsPtrOutput() PeeringAwsPtrOutput
	ToPeeringAwsPtrOutputWithContext(context.Context) PeeringAwsPtrOutput
}

type peeringAwsPtrType PeeringAwsArgs

func PeeringAwsPtr(v *PeeringAwsArgs) PeeringAwsPtrInput {
	return (*peeringAwsPtrType)(v)
}

func (*peeringAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAws)(nil)).Elem()
}

func (i *peeringAwsPtrType) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return i.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (i *peeringAwsPtrType) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAwsPtrOutput)
}

type PeeringAwsOutput struct{ *pulumi.OutputState }

func (PeeringAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAws)(nil)).Elem()
}

func (o PeeringAwsOutput) ToPeeringAwsOutput() PeeringAwsOutput {
	return o
}

func (o PeeringAwsOutput) ToPeeringAwsOutputWithContext(ctx context.Context) PeeringAwsOutput {
	return o
}

func (o PeeringAwsOutput) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return o.ToPeeringAwsPtrOutputWithContext(context.Background())
}

func (o PeeringAwsOutput) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringAws) *PeeringAws {
		return &v
	}).(PeeringAwsPtrOutput)
}

// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o PeeringAwsOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.Account }).(pulumi.StringOutput)
}

// The region of the AWS peer VPC.
func (o PeeringAwsOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o PeeringAwsOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PeeringAws) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o PeeringAwsOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAws) string { return v.Vpc }).(pulumi.StringOutput)
}

type PeeringAwsPtrOutput struct{ *pulumi.OutputState }

func (PeeringAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAws)(nil)).Elem()
}

func (o PeeringAwsPtrOutput) ToPeeringAwsPtrOutput() PeeringAwsPtrOutput {
	return o
}

func (o PeeringAwsPtrOutput) ToPeeringAwsPtrOutputWithContext(ctx context.Context) PeeringAwsPtrOutput {
	return o
}

func (o PeeringAwsPtrOutput) Elem() PeeringAwsOutput {
	return o.ApplyT(func(v *PeeringAws) PeeringAws {
		if v != nil {
			return *v
		}
		var ret PeeringAws
		return ret
	}).(PeeringAwsOutput)
}

// The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o PeeringAwsPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

// The region of the AWS peer VPC.
func (o PeeringAwsPtrOutput) CustomerRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerRegion
	}).(pulumi.StringPtrOutput)
}

// The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o PeeringAwsPtrOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PeeringAws) []string {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(pulumi.StringArrayOutput)
}

// The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o PeeringAwsPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAws) *string {
		if v == nil {
			return nil
		}
		return &v.Vpc
	}).(pulumi.StringPtrOutput)
}

type PeeringAzure struct {
	// The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant string `pulumi:"tenant"`
	// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet string `pulumi:"vnet"`
}

// PeeringAzureInput is an input type that accepts PeeringAzureArgs and PeeringAzureOutput values.
// You can construct a concrete instance of `PeeringAzureInput` via:
//
//	PeeringAzureArgs{...}
type PeeringAzureInput interface {
	pulumi.Input

	ToPeeringAzureOutput() PeeringAzureOutput
	ToPeeringAzureOutputWithContext(context.Context) PeeringAzureOutput
}

type PeeringAzureArgs struct {
	// The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant pulumi.StringInput `pulumi:"tenant"`
	// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet pulumi.StringInput `pulumi:"vnet"`
}

func (PeeringAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAzure)(nil)).Elem()
}

func (i PeeringAzureArgs) ToPeeringAzureOutput() PeeringAzureOutput {
	return i.ToPeeringAzureOutputWithContext(context.Background())
}

func (i PeeringAzureArgs) ToPeeringAzureOutputWithContext(ctx context.Context) PeeringAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzureOutput)
}

func (i PeeringAzureArgs) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return i.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (i PeeringAzureArgs) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzureOutput).ToPeeringAzurePtrOutputWithContext(ctx)
}

// PeeringAzurePtrInput is an input type that accepts PeeringAzureArgs, PeeringAzurePtr and PeeringAzurePtrOutput values.
// You can construct a concrete instance of `PeeringAzurePtrInput` via:
//
//	        PeeringAzureArgs{...}
//
//	or:
//
//	        nil
type PeeringAzurePtrInput interface {
	pulumi.Input

	ToPeeringAzurePtrOutput() PeeringAzurePtrOutput
	ToPeeringAzurePtrOutputWithContext(context.Context) PeeringAzurePtrOutput
}

type peeringAzurePtrType PeeringAzureArgs

func PeeringAzurePtr(v *PeeringAzureArgs) PeeringAzurePtrInput {
	return (*peeringAzurePtrType)(v)
}

func (*peeringAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAzure)(nil)).Elem()
}

func (i *peeringAzurePtrType) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return i.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (i *peeringAzurePtrType) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringAzurePtrOutput)
}

type PeeringAzureOutput struct{ *pulumi.OutputState }

func (PeeringAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringAzure)(nil)).Elem()
}

func (o PeeringAzureOutput) ToPeeringAzureOutput() PeeringAzureOutput {
	return o
}

func (o PeeringAzureOutput) ToPeeringAzureOutputWithContext(ctx context.Context) PeeringAzureOutput {
	return o
}

func (o PeeringAzureOutput) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return o.ToPeeringAzurePtrOutputWithContext(context.Background())
}

func (o PeeringAzureOutput) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringAzure) *PeeringAzure {
		return &v
	}).(PeeringAzurePtrOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAzureOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o PeeringAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.Tenant }).(pulumi.StringOutput)
}

// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o PeeringAzureOutput) Vnet() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringAzure) string { return v.Vnet }).(pulumi.StringOutput)
}

type PeeringAzurePtrOutput struct{ *pulumi.OutputState }

func (PeeringAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringAzure)(nil)).Elem()
}

func (o PeeringAzurePtrOutput) ToPeeringAzurePtrOutput() PeeringAzurePtrOutput {
	return o
}

func (o PeeringAzurePtrOutput) ToPeeringAzurePtrOutputWithContext(ctx context.Context) PeeringAzurePtrOutput {
	return o
}

func (o PeeringAzurePtrOutput) Elem() PeeringAzureOutput {
	return o.ApplyT(func(v *PeeringAzure) PeeringAzure {
		if v != nil {
			return *v
		}
		var ret PeeringAzure
		return ret
	}).(PeeringAzureOutput)
}

// The region of the Azure peer VNet.
func (o PeeringAzurePtrOutput) CustomerRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.CustomerRegion
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o PeeringAzurePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Tenant
	}).(pulumi.StringPtrOutput)
}

// The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o PeeringAzurePtrOutput) Vnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Vnet
	}).(pulumi.StringPtrOutput)
}

type PeeringEnvironment struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// PeeringEnvironmentInput is an input type that accepts PeeringEnvironmentArgs and PeeringEnvironmentOutput values.
// You can construct a concrete instance of `PeeringEnvironmentInput` via:
//
//	PeeringEnvironmentArgs{...}
type PeeringEnvironmentInput interface {
	pulumi.Input

	ToPeeringEnvironmentOutput() PeeringEnvironmentOutput
	ToPeeringEnvironmentOutputWithContext(context.Context) PeeringEnvironmentOutput
}

type PeeringEnvironmentArgs struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PeeringEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringEnvironment)(nil)).Elem()
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentOutput() PeeringEnvironmentOutput {
	return i.ToPeeringEnvironmentOutputWithContext(context.Background())
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentOutputWithContext(ctx context.Context) PeeringEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentOutput)
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return i.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (i PeeringEnvironmentArgs) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentOutput).ToPeeringEnvironmentPtrOutputWithContext(ctx)
}

// PeeringEnvironmentPtrInput is an input type that accepts PeeringEnvironmentArgs, PeeringEnvironmentPtr and PeeringEnvironmentPtrOutput values.
// You can construct a concrete instance of `PeeringEnvironmentPtrInput` via:
//
//	        PeeringEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PeeringEnvironmentPtrInput interface {
	pulumi.Input

	ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput
	ToPeeringEnvironmentPtrOutputWithContext(context.Context) PeeringEnvironmentPtrOutput
}

type peeringEnvironmentPtrType PeeringEnvironmentArgs

func PeeringEnvironmentPtr(v *PeeringEnvironmentArgs) PeeringEnvironmentPtrInput {
	return (*peeringEnvironmentPtrType)(v)
}

func (*peeringEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringEnvironment)(nil)).Elem()
}

func (i *peeringEnvironmentPtrType) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return i.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (i *peeringEnvironmentPtrType) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringEnvironmentPtrOutput)
}

type PeeringEnvironmentOutput struct{ *pulumi.OutputState }

func (PeeringEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringEnvironment)(nil)).Elem()
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentOutput() PeeringEnvironmentOutput {
	return o
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentOutputWithContext(ctx context.Context) PeeringEnvironmentOutput {
	return o
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return o.ToPeeringEnvironmentPtrOutputWithContext(context.Background())
}

func (o PeeringEnvironmentOutput) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringEnvironment) *PeeringEnvironment {
		return &v
	}).(PeeringEnvironmentPtrOutput)
}

// The ID of the Environment that the Peering belongs to, for example, `env-abc123`.
func (o PeeringEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PeeringEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PeeringEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringEnvironment)(nil)).Elem()
}

func (o PeeringEnvironmentPtrOutput) ToPeeringEnvironmentPtrOutput() PeeringEnvironmentPtrOutput {
	return o
}

func (o PeeringEnvironmentPtrOutput) ToPeeringEnvironmentPtrOutputWithContext(ctx context.Context) PeeringEnvironmentPtrOutput {
	return o
}

func (o PeeringEnvironmentPtrOutput) Elem() PeeringEnvironmentOutput {
	return o.ApplyT(func(v *PeeringEnvironment) PeeringEnvironment {
		if v != nil {
			return *v
		}
		var ret PeeringEnvironment
		return ret
	}).(PeeringEnvironmentOutput)
}

// The ID of the Environment that the Peering belongs to, for example, `env-abc123`.
func (o PeeringEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PeeringGcp struct {
	// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	//
	// > **Note:** Exactly one from the `aws`, `azure`, and `gcp` configuration blocks must be specified.
	//
	// > **Note:** Learn more about VPC Peering requirements on AWS [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws).
	//
	// > **Note:** Learn more about VNet Peering requirements on Azure [here](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html#vnet-peering-on-az).
	//
	// > **Note:** Learn more about VPC Peering requirements on Google Cloud Platform [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#vpc-peering-on-gcp).
	ImportCustomRoutes *bool `pulumi:"importCustomRoutes"`
	// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
	// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// PeeringGcpInput is an input type that accepts PeeringGcpArgs and PeeringGcpOutput values.
// You can construct a concrete instance of `PeeringGcpInput` via:
//
//	PeeringGcpArgs{...}
type PeeringGcpInput interface {
	pulumi.Input

	ToPeeringGcpOutput() PeeringGcpOutput
	ToPeeringGcpOutputWithContext(context.Context) PeeringGcpOutput
}

type PeeringGcpArgs struct {
	// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	//
	// > **Note:** Exactly one from the `aws`, `azure`, and `gcp` configuration blocks must be specified.
	//
	// > **Note:** Learn more about VPC Peering requirements on AWS [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws).
	//
	// > **Note:** Learn more about VNet Peering requirements on Azure [here](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html#vnet-peering-on-az).
	//
	// > **Note:** Learn more about VPC Peering requirements on Google Cloud Platform [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#vpc-peering-on-gcp).
	ImportCustomRoutes pulumi.BoolPtrInput `pulumi:"importCustomRoutes"`
	// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
	// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (PeeringGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringGcp)(nil)).Elem()
}

func (i PeeringGcpArgs) ToPeeringGcpOutput() PeeringGcpOutput {
	return i.ToPeeringGcpOutputWithContext(context.Background())
}

func (i PeeringGcpArgs) ToPeeringGcpOutputWithContext(ctx context.Context) PeeringGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpOutput)
}

func (i PeeringGcpArgs) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return i.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (i PeeringGcpArgs) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpOutput).ToPeeringGcpPtrOutputWithContext(ctx)
}

// PeeringGcpPtrInput is an input type that accepts PeeringGcpArgs, PeeringGcpPtr and PeeringGcpPtrOutput values.
// You can construct a concrete instance of `PeeringGcpPtrInput` via:
//
//	        PeeringGcpArgs{...}
//
//	or:
//
//	        nil
type PeeringGcpPtrInput interface {
	pulumi.Input

	ToPeeringGcpPtrOutput() PeeringGcpPtrOutput
	ToPeeringGcpPtrOutputWithContext(context.Context) PeeringGcpPtrOutput
}

type peeringGcpPtrType PeeringGcpArgs

func PeeringGcpPtr(v *PeeringGcpArgs) PeeringGcpPtrInput {
	return (*peeringGcpPtrType)(v)
}

func (*peeringGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringGcp)(nil)).Elem()
}

func (i *peeringGcpPtrType) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return i.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (i *peeringGcpPtrType) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringGcpPtrOutput)
}

type PeeringGcpOutput struct{ *pulumi.OutputState }

func (PeeringGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringGcp)(nil)).Elem()
}

func (o PeeringGcpOutput) ToPeeringGcpOutput() PeeringGcpOutput {
	return o
}

func (o PeeringGcpOutput) ToPeeringGcpOutputWithContext(ctx context.Context) PeeringGcpOutput {
	return o
}

func (o PeeringGcpOutput) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return o.ToPeeringGcpPtrOutputWithContext(context.Background())
}

func (o PeeringGcpOutput) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringGcp) *PeeringGcp {
		return &v
	}).(PeeringGcpPtrOutput)
}

// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
//
// > **Note:** Exactly one from the `aws`, `azure`, and `gcp` configuration blocks must be specified.
//
// > **Note:** Learn more about VPC Peering requirements on AWS [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws).
//
// > **Note:** Learn more about VNet Peering requirements on Azure [here](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html#vnet-peering-on-az).
//
// > **Note:** Learn more about VPC Peering requirements on Google Cloud Platform [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#vpc-peering-on-gcp).
func (o PeeringGcpOutput) ImportCustomRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringGcp) *bool { return v.ImportCustomRoutes }).(pulumi.BoolPtrOutput)
}

// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PeeringGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringGcp) string { return v.Project }).(pulumi.StringOutput)
}

// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o PeeringGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type PeeringGcpPtrOutput struct{ *pulumi.OutputState }

func (PeeringGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringGcp)(nil)).Elem()
}

func (o PeeringGcpPtrOutput) ToPeeringGcpPtrOutput() PeeringGcpPtrOutput {
	return o
}

func (o PeeringGcpPtrOutput) ToPeeringGcpPtrOutputWithContext(ctx context.Context) PeeringGcpPtrOutput {
	return o
}

func (o PeeringGcpPtrOutput) Elem() PeeringGcpOutput {
	return o.ApplyT(func(v *PeeringGcp) PeeringGcp {
		if v != nil {
			return *v
		}
		var ret PeeringGcp
		return ret
	}).(PeeringGcpOutput)
}

// The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
//
// > **Note:** Exactly one from the `aws`, `azure`, and `gcp` configuration blocks must be specified.
//
// > **Note:** Learn more about VPC Peering requirements on AWS [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws).
//
// > **Note:** Learn more about VNet Peering requirements on Azure [here](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html#vnet-peering-on-az).
//
// > **Note:** Learn more about VPC Peering requirements on Google Cloud Platform [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#vpc-peering-on-gcp).
func (o PeeringGcpPtrOutput) ImportCustomRoutes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *bool {
		if v == nil {
			return nil
		}
		return v.ImportCustomRoutes
	}).(pulumi.BoolPtrOutput)
}

// The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o PeeringGcpPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o PeeringGcpPtrOutput) VpcNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringGcp) *string {
		if v == nil {
			return nil
		}
		return &v.VpcNetwork
	}).(pulumi.StringPtrOutput)
}

type PeeringNetwork struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PeeringNetworkInput is an input type that accepts PeeringNetworkArgs and PeeringNetworkOutput values.
// You can construct a concrete instance of `PeeringNetworkInput` via:
//
//	PeeringNetworkArgs{...}
type PeeringNetworkInput interface {
	pulumi.Input

	ToPeeringNetworkOutput() PeeringNetworkOutput
	ToPeeringNetworkOutputWithContext(context.Context) PeeringNetworkOutput
}

type PeeringNetworkArgs struct {
	// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringNetwork)(nil)).Elem()
}

func (i PeeringNetworkArgs) ToPeeringNetworkOutput() PeeringNetworkOutput {
	return i.ToPeeringNetworkOutputWithContext(context.Background())
}

func (i PeeringNetworkArgs) ToPeeringNetworkOutputWithContext(ctx context.Context) PeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkOutput)
}

func (i PeeringNetworkArgs) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return i.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i PeeringNetworkArgs) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkOutput).ToPeeringNetworkPtrOutputWithContext(ctx)
}

// PeeringNetworkPtrInput is an input type that accepts PeeringNetworkArgs, PeeringNetworkPtr and PeeringNetworkPtrOutput values.
// You can construct a concrete instance of `PeeringNetworkPtrInput` via:
//
//	        PeeringNetworkArgs{...}
//
//	or:
//
//	        nil
type PeeringNetworkPtrInput interface {
	pulumi.Input

	ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput
	ToPeeringNetworkPtrOutputWithContext(context.Context) PeeringNetworkPtrOutput
}

type peeringNetworkPtrType PeeringNetworkArgs

func PeeringNetworkPtr(v *PeeringNetworkArgs) PeeringNetworkPtrInput {
	return (*peeringNetworkPtrType)(v)
}

func (*peeringNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringNetwork)(nil)).Elem()
}

func (i *peeringNetworkPtrType) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return i.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (i *peeringNetworkPtrType) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringNetworkPtrOutput)
}

type PeeringNetworkOutput struct{ *pulumi.OutputState }

func (PeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringNetwork)(nil)).Elem()
}

func (o PeeringNetworkOutput) ToPeeringNetworkOutput() PeeringNetworkOutput {
	return o
}

func (o PeeringNetworkOutput) ToPeeringNetworkOutputWithContext(ctx context.Context) PeeringNetworkOutput {
	return o
}

func (o PeeringNetworkOutput) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return o.ToPeeringNetworkPtrOutputWithContext(context.Background())
}

func (o PeeringNetworkOutput) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PeeringNetwork) *PeeringNetwork {
		return &v
	}).(PeeringNetworkPtrOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PeeringNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type PeeringNetworkPtrOutput struct{ *pulumi.OutputState }

func (PeeringNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringNetwork)(nil)).Elem()
}

func (o PeeringNetworkPtrOutput) ToPeeringNetworkPtrOutput() PeeringNetworkPtrOutput {
	return o
}

func (o PeeringNetworkPtrOutput) ToPeeringNetworkPtrOutputWithContext(ctx context.Context) PeeringNetworkPtrOutput {
	return o
}

func (o PeeringNetworkPtrOutput) Elem() PeeringNetworkOutput {
	return o.ApplyT(func(v *PeeringNetwork) PeeringNetwork {
		if v != nil {
			return *v
		}
		var ret PeeringNetwork
		return ret
	}).(PeeringNetworkOutput)
}

// The ID of the Network that the Peering belongs to, for example, `n-abc123`.
func (o PeeringNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PeeringNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessAws struct {
	// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (<https://console.aws.amazon.com/billing/home?#/account>) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
}

// PrivateLinkAccessAwsInput is an input type that accepts PrivateLinkAccessAwsArgs and PrivateLinkAccessAwsOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAwsInput` via:
//
//	PrivateLinkAccessAwsArgs{...}
type PrivateLinkAccessAwsInput interface {
	pulumi.Input

	ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput
	ToPrivateLinkAccessAwsOutputWithContext(context.Context) PrivateLinkAccessAwsOutput
}

type PrivateLinkAccessAwsArgs struct {
	// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (<https://console.aws.amazon.com/billing/home?#/account>) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
}

func (PrivateLinkAccessAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAws)(nil)).Elem()
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput {
	return i.ToPrivateLinkAccessAwsOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsOutputWithContext(ctx context.Context) PrivateLinkAccessAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsOutput)
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return i.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAwsArgs) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsOutput).ToPrivateLinkAccessAwsPtrOutputWithContext(ctx)
}

// PrivateLinkAccessAwsPtrInput is an input type that accepts PrivateLinkAccessAwsArgs, PrivateLinkAccessAwsPtr and PrivateLinkAccessAwsPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAwsPtrInput` via:
//
//	        PrivateLinkAccessAwsArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessAwsPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput
	ToPrivateLinkAccessAwsPtrOutputWithContext(context.Context) PrivateLinkAccessAwsPtrOutput
}

type privateLinkAccessAwsPtrType PrivateLinkAccessAwsArgs

func PrivateLinkAccessAwsPtr(v *PrivateLinkAccessAwsArgs) PrivateLinkAccessAwsPtrInput {
	return (*privateLinkAccessAwsPtrType)(v)
}

func (*privateLinkAccessAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAws)(nil)).Elem()
}

func (i *privateLinkAccessAwsPtrType) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return i.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessAwsPtrType) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAwsPtrOutput)
}

type PrivateLinkAccessAwsOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAws)(nil)).Elem()
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsOutput() PrivateLinkAccessAwsOutput {
	return o
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsOutputWithContext(ctx context.Context) PrivateLinkAccessAwsOutput {
	return o
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return o.ToPrivateLinkAccessAwsPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessAwsOutput) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessAws) *PrivateLinkAccessAws {
		return &v
	}).(PrivateLinkAccessAwsPtrOutput)
}

// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (<https://console.aws.amazon.com/billing/home?#/account>) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o PrivateLinkAccessAwsOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessAws) string { return v.Account }).(pulumi.StringOutput)
}

type PrivateLinkAccessAwsPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAws)(nil)).Elem()
}

func (o PrivateLinkAccessAwsPtrOutput) ToPrivateLinkAccessAwsPtrOutput() PrivateLinkAccessAwsPtrOutput {
	return o
}

func (o PrivateLinkAccessAwsPtrOutput) ToPrivateLinkAccessAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAccessAwsPtrOutput {
	return o
}

func (o PrivateLinkAccessAwsPtrOutput) Elem() PrivateLinkAccessAwsOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAws) PrivateLinkAccessAws {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessAws
		return ret
	}).(PrivateLinkAccessAwsOutput)
}

// The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (<https://console.aws.amazon.com/billing/home?#/account>) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o PrivateLinkAccessAwsPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAws) *string {
		if v == nil {
			return nil
		}
		return &v.Account
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessAzure struct {
	// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (<https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade)>. Must be a valid **32 character UUID string**.
	Subscription string `pulumi:"subscription"`
}

// PrivateLinkAccessAzureInput is an input type that accepts PrivateLinkAccessAzureArgs and PrivateLinkAccessAzureOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAzureInput` via:
//
//	PrivateLinkAccessAzureArgs{...}
type PrivateLinkAccessAzureInput interface {
	pulumi.Input

	ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput
	ToPrivateLinkAccessAzureOutputWithContext(context.Context) PrivateLinkAccessAzureOutput
}

type PrivateLinkAccessAzureArgs struct {
	// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (<https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade)>. Must be a valid **32 character UUID string**.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (PrivateLinkAccessAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAzure)(nil)).Elem()
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput {
	return i.ToPrivateLinkAccessAzureOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzureOutputWithContext(ctx context.Context) PrivateLinkAccessAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzureOutput)
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return i.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessAzureArgs) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzureOutput).ToPrivateLinkAccessAzurePtrOutputWithContext(ctx)
}

// PrivateLinkAccessAzurePtrInput is an input type that accepts PrivateLinkAccessAzureArgs, PrivateLinkAccessAzurePtr and PrivateLinkAccessAzurePtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessAzurePtrInput` via:
//
//	        PrivateLinkAccessAzureArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessAzurePtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput
	ToPrivateLinkAccessAzurePtrOutputWithContext(context.Context) PrivateLinkAccessAzurePtrOutput
}

type privateLinkAccessAzurePtrType PrivateLinkAccessAzureArgs

func PrivateLinkAccessAzurePtr(v *PrivateLinkAccessAzureArgs) PrivateLinkAccessAzurePtrInput {
	return (*privateLinkAccessAzurePtrType)(v)
}

func (*privateLinkAccessAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAzure)(nil)).Elem()
}

func (i *privateLinkAccessAzurePtrType) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return i.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessAzurePtrType) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessAzurePtrOutput)
}

type PrivateLinkAccessAzureOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessAzure)(nil)).Elem()
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzureOutput() PrivateLinkAccessAzureOutput {
	return o
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzureOutputWithContext(ctx context.Context) PrivateLinkAccessAzureOutput {
	return o
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return o.ToPrivateLinkAccessAzurePtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessAzureOutput) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessAzure) *PrivateLinkAccessAzure {
		return &v
	}).(PrivateLinkAccessAzurePtrOutput)
}

// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (<https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade)>. Must be a valid **32 character UUID string**.
func (o PrivateLinkAccessAzureOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessAzure) string { return v.Subscription }).(pulumi.StringOutput)
}

type PrivateLinkAccessAzurePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessAzure)(nil)).Elem()
}

func (o PrivateLinkAccessAzurePtrOutput) ToPrivateLinkAccessAzurePtrOutput() PrivateLinkAccessAzurePtrOutput {
	return o
}

func (o PrivateLinkAccessAzurePtrOutput) ToPrivateLinkAccessAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAccessAzurePtrOutput {
	return o
}

func (o PrivateLinkAccessAzurePtrOutput) Elem() PrivateLinkAccessAzureOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAzure) PrivateLinkAccessAzure {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessAzure
		return ret
	}).(PrivateLinkAccessAzureOutput)
}

// The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (<https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade)>. Must be a valid **32 character UUID string**.
func (o PrivateLinkAccessAzurePtrOutput) Subscription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Subscription
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessEnvironment struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// PrivateLinkAccessEnvironmentInput is an input type that accepts PrivateLinkAccessEnvironmentArgs and PrivateLinkAccessEnvironmentOutput values.
// You can construct a concrete instance of `PrivateLinkAccessEnvironmentInput` via:
//
//	PrivateLinkAccessEnvironmentArgs{...}
type PrivateLinkAccessEnvironmentInput interface {
	pulumi.Input

	ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput
	ToPrivateLinkAccessEnvironmentOutputWithContext(context.Context) PrivateLinkAccessEnvironmentOutput
}

type PrivateLinkAccessEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAccessEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput {
	return i.ToPrivateLinkAccessEnvironmentOutputWithContext(context.Background())
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentOutput)
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return i.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessEnvironmentArgs) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentOutput).ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx)
}

// PrivateLinkAccessEnvironmentPtrInput is an input type that accepts PrivateLinkAccessEnvironmentArgs, PrivateLinkAccessEnvironmentPtr and PrivateLinkAccessEnvironmentPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessEnvironmentPtrInput` via:
//
//	        PrivateLinkAccessEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessEnvironmentPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput
	ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Context) PrivateLinkAccessEnvironmentPtrOutput
}

type privateLinkAccessEnvironmentPtrType PrivateLinkAccessEnvironmentArgs

func PrivateLinkAccessEnvironmentPtr(v *PrivateLinkAccessEnvironmentArgs) PrivateLinkAccessEnvironmentPtrInput {
	return (*privateLinkAccessEnvironmentPtrType)(v)
}

func (*privateLinkAccessEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i *privateLinkAccessEnvironmentPtrType) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return i.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessEnvironmentPtrType) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessEnvironmentPtrOutput)
}

type PrivateLinkAccessEnvironmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentOutput() PrivateLinkAccessEnvironmentOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return o.ToPrivateLinkAccessEnvironmentPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessEnvironmentOutput) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessEnvironment) *PrivateLinkAccessEnvironment {
		return &v
	}).(PrivateLinkAccessEnvironmentPtrOutput)
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-abc123`.
func (o PrivateLinkAccessEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAccessEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o PrivateLinkAccessEnvironmentPtrOutput) ToPrivateLinkAccessEnvironmentPtrOutput() PrivateLinkAccessEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentPtrOutput) ToPrivateLinkAccessEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAccessEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAccessEnvironmentPtrOutput) Elem() PrivateLinkAccessEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAccessEnvironment) PrivateLinkAccessEnvironment {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessEnvironment
		return ret
	}).(PrivateLinkAccessEnvironmentOutput)
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-abc123`.
func (o PrivateLinkAccessEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessGcp struct {
	// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	//
	// > **Note:** Exactly one from the `aws`, `azure`, `gcp` configuration blocks must be specified.
	//
	// > **Note:** Learn more about Private Link Access limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html#limitations).
	//
	// > **Note:** Learn more about Private Link Access limitations on Azure [here](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html#limitations).
	Project string `pulumi:"project"`
}

// PrivateLinkAccessGcpInput is an input type that accepts PrivateLinkAccessGcpArgs and PrivateLinkAccessGcpOutput values.
// You can construct a concrete instance of `PrivateLinkAccessGcpInput` via:
//
//	PrivateLinkAccessGcpArgs{...}
type PrivateLinkAccessGcpInput interface {
	pulumi.Input

	ToPrivateLinkAccessGcpOutput() PrivateLinkAccessGcpOutput
	ToPrivateLinkAccessGcpOutputWithContext(context.Context) PrivateLinkAccessGcpOutput
}

type PrivateLinkAccessGcpArgs struct {
	// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	//
	// > **Note:** Exactly one from the `aws`, `azure`, `gcp` configuration blocks must be specified.
	//
	// > **Note:** Learn more about Private Link Access limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html#limitations).
	//
	// > **Note:** Learn more about Private Link Access limitations on Azure [here](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html#limitations).
	Project pulumi.StringInput `pulumi:"project"`
}

func (PrivateLinkAccessGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessGcp)(nil)).Elem()
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpOutput() PrivateLinkAccessGcpOutput {
	return i.ToPrivateLinkAccessGcpOutputWithContext(context.Background())
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpOutputWithContext(ctx context.Context) PrivateLinkAccessGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessGcpOutput)
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return i.ToPrivateLinkAccessGcpPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessGcpArgs) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessGcpOutput).ToPrivateLinkAccessGcpPtrOutputWithContext(ctx)
}

// PrivateLinkAccessGcpPtrInput is an input type that accepts PrivateLinkAccessGcpArgs, PrivateLinkAccessGcpPtr and PrivateLinkAccessGcpPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessGcpPtrInput` via:
//
//	        PrivateLinkAccessGcpArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessGcpPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput
	ToPrivateLinkAccessGcpPtrOutputWithContext(context.Context) PrivateLinkAccessGcpPtrOutput
}

type privateLinkAccessGcpPtrType PrivateLinkAccessGcpArgs

func PrivateLinkAccessGcpPtr(v *PrivateLinkAccessGcpArgs) PrivateLinkAccessGcpPtrInput {
	return (*privateLinkAccessGcpPtrType)(v)
}

func (*privateLinkAccessGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessGcp)(nil)).Elem()
}

func (i *privateLinkAccessGcpPtrType) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return i.ToPrivateLinkAccessGcpPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessGcpPtrType) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessGcpPtrOutput)
}

type PrivateLinkAccessGcpOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessGcp)(nil)).Elem()
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpOutput() PrivateLinkAccessGcpOutput {
	return o
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpOutputWithContext(ctx context.Context) PrivateLinkAccessGcpOutput {
	return o
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return o.ToPrivateLinkAccessGcpPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessGcpOutput) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessGcp) *PrivateLinkAccessGcp {
		return &v
	}).(PrivateLinkAccessGcpPtrOutput)
}

// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
//
// > **Note:** Exactly one from the `aws`, `azure`, `gcp` configuration blocks must be specified.
//
// > **Note:** Learn more about Private Link Access limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html#limitations).
//
// > **Note:** Learn more about Private Link Access limitations on Azure [here](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html#limitations).
func (o PrivateLinkAccessGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessGcp) string { return v.Project }).(pulumi.StringOutput)
}

type PrivateLinkAccessGcpPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessGcp)(nil)).Elem()
}

func (o PrivateLinkAccessGcpPtrOutput) ToPrivateLinkAccessGcpPtrOutput() PrivateLinkAccessGcpPtrOutput {
	return o
}

func (o PrivateLinkAccessGcpPtrOutput) ToPrivateLinkAccessGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAccessGcpPtrOutput {
	return o
}

func (o PrivateLinkAccessGcpPtrOutput) Elem() PrivateLinkAccessGcpOutput {
	return o.ApplyT(func(v *PrivateLinkAccessGcp) PrivateLinkAccessGcp {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessGcp
		return ret
	}).(PrivateLinkAccessGcpOutput)
}

// The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
//
// > **Note:** Exactly one from the `aws`, `azure`, `gcp` configuration blocks must be specified.
//
// > **Note:** Learn more about Private Link Access limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html#limitations).
//
// > **Note:** Learn more about Private Link Access limitations on Azure [here](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html#limitations).
func (o PrivateLinkAccessGcpPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessGcp) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAccessNetwork struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// PrivateLinkAccessNetworkInput is an input type that accepts PrivateLinkAccessNetworkArgs and PrivateLinkAccessNetworkOutput values.
// You can construct a concrete instance of `PrivateLinkAccessNetworkInput` via:
//
//	PrivateLinkAccessNetworkArgs{...}
type PrivateLinkAccessNetworkInput interface {
	pulumi.Input

	ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput
	ToPrivateLinkAccessNetworkOutputWithContext(context.Context) PrivateLinkAccessNetworkOutput
}

type PrivateLinkAccessNetworkArgs struct {
	// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAccessNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessNetwork)(nil)).Elem()
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput {
	return i.ToPrivateLinkAccessNetworkOutputWithContext(context.Background())
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkOutput)
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return i.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAccessNetworkArgs) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkOutput).ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx)
}

// PrivateLinkAccessNetworkPtrInput is an input type that accepts PrivateLinkAccessNetworkArgs, PrivateLinkAccessNetworkPtr and PrivateLinkAccessNetworkPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAccessNetworkPtrInput` via:
//
//	        PrivateLinkAccessNetworkArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAccessNetworkPtrInput interface {
	pulumi.Input

	ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput
	ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Context) PrivateLinkAccessNetworkPtrOutput
}

type privateLinkAccessNetworkPtrType PrivateLinkAccessNetworkArgs

func PrivateLinkAccessNetworkPtr(v *PrivateLinkAccessNetworkArgs) PrivateLinkAccessNetworkPtrInput {
	return (*privateLinkAccessNetworkPtrType)(v)
}

func (*privateLinkAccessNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessNetwork)(nil)).Elem()
}

func (i *privateLinkAccessNetworkPtrType) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return i.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (i *privateLinkAccessNetworkPtrType) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessNetworkPtrOutput)
}

type PrivateLinkAccessNetworkOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAccessNetwork)(nil)).Elem()
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkOutput() PrivateLinkAccessNetworkOutput {
	return o
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkOutput {
	return o
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return o.ToPrivateLinkAccessNetworkPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAccessNetworkOutput) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAccessNetwork) *PrivateLinkAccessNetwork {
		return &v
	}).(PrivateLinkAccessNetworkPtrOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAccessNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAccessNetworkPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccessNetwork)(nil)).Elem()
}

func (o PrivateLinkAccessNetworkPtrOutput) ToPrivateLinkAccessNetworkPtrOutput() PrivateLinkAccessNetworkPtrOutput {
	return o
}

func (o PrivateLinkAccessNetworkPtrOutput) ToPrivateLinkAccessNetworkPtrOutputWithContext(ctx context.Context) PrivateLinkAccessNetworkPtrOutput {
	return o
}

func (o PrivateLinkAccessNetworkPtrOutput) Elem() PrivateLinkAccessNetworkOutput {
	return o.ApplyT(func(v *PrivateLinkAccessNetwork) PrivateLinkAccessNetwork {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAccessNetwork
		return ret
	}).(PrivateLinkAccessNetworkOutput)
}

// The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
func (o PrivateLinkAccessNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccessNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentAw struct {
	// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName *string `pulumi:"vpcEndpointServiceName"`
}

// PrivateLinkAttachmentAwInput is an input type that accepts PrivateLinkAttachmentAwArgs and PrivateLinkAttachmentAwOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentAwInput` via:
//
//	PrivateLinkAttachmentAwArgs{...}
type PrivateLinkAttachmentAwInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentAwOutput() PrivateLinkAttachmentAwOutput
	ToPrivateLinkAttachmentAwOutputWithContext(context.Context) PrivateLinkAttachmentAwOutput
}

type PrivateLinkAttachmentAwArgs struct {
	// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName pulumi.StringPtrInput `pulumi:"vpcEndpointServiceName"`
}

func (PrivateLinkAttachmentAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentAw)(nil)).Elem()
}

func (i PrivateLinkAttachmentAwArgs) ToPrivateLinkAttachmentAwOutput() PrivateLinkAttachmentAwOutput {
	return i.ToPrivateLinkAttachmentAwOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentAwArgs) ToPrivateLinkAttachmentAwOutputWithContext(ctx context.Context) PrivateLinkAttachmentAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentAwOutput)
}

// PrivateLinkAttachmentAwArrayInput is an input type that accepts PrivateLinkAttachmentAwArray and PrivateLinkAttachmentAwArrayOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentAwArrayInput` via:
//
//	PrivateLinkAttachmentAwArray{ PrivateLinkAttachmentAwArgs{...} }
type PrivateLinkAttachmentAwArrayInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentAwArrayOutput() PrivateLinkAttachmentAwArrayOutput
	ToPrivateLinkAttachmentAwArrayOutputWithContext(context.Context) PrivateLinkAttachmentAwArrayOutput
}

type PrivateLinkAttachmentAwArray []PrivateLinkAttachmentAwInput

func (PrivateLinkAttachmentAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkAttachmentAw)(nil)).Elem()
}

func (i PrivateLinkAttachmentAwArray) ToPrivateLinkAttachmentAwArrayOutput() PrivateLinkAttachmentAwArrayOutput {
	return i.ToPrivateLinkAttachmentAwArrayOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentAwArray) ToPrivateLinkAttachmentAwArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentAwArrayOutput)
}

type PrivateLinkAttachmentAwOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentAw)(nil)).Elem()
}

func (o PrivateLinkAttachmentAwOutput) ToPrivateLinkAttachmentAwOutput() PrivateLinkAttachmentAwOutput {
	return o
}

func (o PrivateLinkAttachmentAwOutput) ToPrivateLinkAttachmentAwOutputWithContext(ctx context.Context) PrivateLinkAttachmentAwOutput {
	return o
}

// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
func (o PrivateLinkAttachmentAwOutput) VpcEndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentAw) *string { return v.VpcEndpointServiceName }).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentAwArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkAttachmentAw)(nil)).Elem()
}

func (o PrivateLinkAttachmentAwArrayOutput) ToPrivateLinkAttachmentAwArrayOutput() PrivateLinkAttachmentAwArrayOutput {
	return o
}

func (o PrivateLinkAttachmentAwArrayOutput) ToPrivateLinkAttachmentAwArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentAwArrayOutput {
	return o
}

func (o PrivateLinkAttachmentAwArrayOutput) Index(i pulumi.IntInput) PrivateLinkAttachmentAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkAttachmentAw {
		return vs[0].([]PrivateLinkAttachmentAw)[vs[1].(int)]
	}).(PrivateLinkAttachmentAwOutput)
}

type PrivateLinkAttachmentAzure struct {
	// Azure PrivateLink service alias for the availability zone.
	PrivateLinkServiceAlias *string `pulumi:"privateLinkServiceAlias"`
	// (Required String) Azure Private Link service resource id for the availability zone.
	PrivateLinkServiceResourceId *string `pulumi:"privateLinkServiceResourceId"`
}

// PrivateLinkAttachmentAzureInput is an input type that accepts PrivateLinkAttachmentAzureArgs and PrivateLinkAttachmentAzureOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentAzureInput` via:
//
//	PrivateLinkAttachmentAzureArgs{...}
type PrivateLinkAttachmentAzureInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentAzureOutput() PrivateLinkAttachmentAzureOutput
	ToPrivateLinkAttachmentAzureOutputWithContext(context.Context) PrivateLinkAttachmentAzureOutput
}

type PrivateLinkAttachmentAzureArgs struct {
	// Azure PrivateLink service alias for the availability zone.
	PrivateLinkServiceAlias pulumi.StringPtrInput `pulumi:"privateLinkServiceAlias"`
	// (Required String) Azure Private Link service resource id for the availability zone.
	PrivateLinkServiceResourceId pulumi.StringPtrInput `pulumi:"privateLinkServiceResourceId"`
}

func (PrivateLinkAttachmentAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentAzure)(nil)).Elem()
}

func (i PrivateLinkAttachmentAzureArgs) ToPrivateLinkAttachmentAzureOutput() PrivateLinkAttachmentAzureOutput {
	return i.ToPrivateLinkAttachmentAzureOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentAzureArgs) ToPrivateLinkAttachmentAzureOutputWithContext(ctx context.Context) PrivateLinkAttachmentAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentAzureOutput)
}

// PrivateLinkAttachmentAzureArrayInput is an input type that accepts PrivateLinkAttachmentAzureArray and PrivateLinkAttachmentAzureArrayOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentAzureArrayInput` via:
//
//	PrivateLinkAttachmentAzureArray{ PrivateLinkAttachmentAzureArgs{...} }
type PrivateLinkAttachmentAzureArrayInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentAzureArrayOutput() PrivateLinkAttachmentAzureArrayOutput
	ToPrivateLinkAttachmentAzureArrayOutputWithContext(context.Context) PrivateLinkAttachmentAzureArrayOutput
}

type PrivateLinkAttachmentAzureArray []PrivateLinkAttachmentAzureInput

func (PrivateLinkAttachmentAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkAttachmentAzure)(nil)).Elem()
}

func (i PrivateLinkAttachmentAzureArray) ToPrivateLinkAttachmentAzureArrayOutput() PrivateLinkAttachmentAzureArrayOutput {
	return i.ToPrivateLinkAttachmentAzureArrayOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentAzureArray) ToPrivateLinkAttachmentAzureArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentAzureArrayOutput)
}

type PrivateLinkAttachmentAzureOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentAzure)(nil)).Elem()
}

func (o PrivateLinkAttachmentAzureOutput) ToPrivateLinkAttachmentAzureOutput() PrivateLinkAttachmentAzureOutput {
	return o
}

func (o PrivateLinkAttachmentAzureOutput) ToPrivateLinkAttachmentAzureOutputWithContext(ctx context.Context) PrivateLinkAttachmentAzureOutput {
	return o
}

// Azure PrivateLink service alias for the availability zone.
func (o PrivateLinkAttachmentAzureOutput) PrivateLinkServiceAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentAzure) *string { return v.PrivateLinkServiceAlias }).(pulumi.StringPtrOutput)
}

// (Required String) Azure Private Link service resource id for the availability zone.
func (o PrivateLinkAttachmentAzureOutput) PrivateLinkServiceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentAzure) *string { return v.PrivateLinkServiceResourceId }).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentAzureArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkAttachmentAzure)(nil)).Elem()
}

func (o PrivateLinkAttachmentAzureArrayOutput) ToPrivateLinkAttachmentAzureArrayOutput() PrivateLinkAttachmentAzureArrayOutput {
	return o
}

func (o PrivateLinkAttachmentAzureArrayOutput) ToPrivateLinkAttachmentAzureArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentAzureArrayOutput {
	return o
}

func (o PrivateLinkAttachmentAzureArrayOutput) Index(i pulumi.IntInput) PrivateLinkAttachmentAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkAttachmentAzure {
		return vs[0].([]PrivateLinkAttachmentAzure)[vs[1].(int)]
	}).(PrivateLinkAttachmentAzureOutput)
}

type PrivateLinkAttachmentConnectionAws struct {
	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// PrivateLinkAttachmentConnectionAwsInput is an input type that accepts PrivateLinkAttachmentConnectionAwsArgs and PrivateLinkAttachmentConnectionAwsOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionAwsInput` via:
//
//	PrivateLinkAttachmentConnectionAwsArgs{...}
type PrivateLinkAttachmentConnectionAwsInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionAwsOutput() PrivateLinkAttachmentConnectionAwsOutput
	ToPrivateLinkAttachmentConnectionAwsOutputWithContext(context.Context) PrivateLinkAttachmentConnectionAwsOutput
}

type PrivateLinkAttachmentConnectionAwsArgs struct {
	// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	VpcEndpointId pulumi.StringInput `pulumi:"vpcEndpointId"`
}

func (PrivateLinkAttachmentConnectionAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionAws)(nil)).Elem()
}

func (i PrivateLinkAttachmentConnectionAwsArgs) ToPrivateLinkAttachmentConnectionAwsOutput() PrivateLinkAttachmentConnectionAwsOutput {
	return i.ToPrivateLinkAttachmentConnectionAwsOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionAwsArgs) ToPrivateLinkAttachmentConnectionAwsOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionAwsOutput)
}

func (i PrivateLinkAttachmentConnectionAwsArgs) ToPrivateLinkAttachmentConnectionAwsPtrOutput() PrivateLinkAttachmentConnectionAwsPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionAwsArgs) ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionAwsOutput).ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(ctx)
}

// PrivateLinkAttachmentConnectionAwsPtrInput is an input type that accepts PrivateLinkAttachmentConnectionAwsArgs, PrivateLinkAttachmentConnectionAwsPtr and PrivateLinkAttachmentConnectionAwsPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionAwsPtrInput` via:
//
//	        PrivateLinkAttachmentConnectionAwsArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAttachmentConnectionAwsPtrInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionAwsPtrOutput() PrivateLinkAttachmentConnectionAwsPtrOutput
	ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(context.Context) PrivateLinkAttachmentConnectionAwsPtrOutput
}

type privateLinkAttachmentConnectionAwsPtrType PrivateLinkAttachmentConnectionAwsArgs

func PrivateLinkAttachmentConnectionAwsPtr(v *PrivateLinkAttachmentConnectionAwsArgs) PrivateLinkAttachmentConnectionAwsPtrInput {
	return (*privateLinkAttachmentConnectionAwsPtrType)(v)
}

func (*privateLinkAttachmentConnectionAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionAws)(nil)).Elem()
}

func (i *privateLinkAttachmentConnectionAwsPtrType) ToPrivateLinkAttachmentConnectionAwsPtrOutput() PrivateLinkAttachmentConnectionAwsPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(context.Background())
}

func (i *privateLinkAttachmentConnectionAwsPtrType) ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionAwsPtrOutput)
}

type PrivateLinkAttachmentConnectionAwsOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionAws)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionAwsOutput) ToPrivateLinkAttachmentConnectionAwsOutput() PrivateLinkAttachmentConnectionAwsOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAwsOutput) ToPrivateLinkAttachmentConnectionAwsOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAwsOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAwsOutput) ToPrivateLinkAttachmentConnectionAwsPtrOutput() PrivateLinkAttachmentConnectionAwsPtrOutput {
	return o.ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAttachmentConnectionAwsOutput) ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAttachmentConnectionAws) *PrivateLinkAttachmentConnectionAws {
		return &v
	}).(PrivateLinkAttachmentConnectionAwsPtrOutput)
}

// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
func (o PrivateLinkAttachmentConnectionAwsOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentConnectionAws) string { return v.VpcEndpointId }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentConnectionAwsPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionAws)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionAwsPtrOutput) ToPrivateLinkAttachmentConnectionAwsPtrOutput() PrivateLinkAttachmentConnectionAwsPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAwsPtrOutput) ToPrivateLinkAttachmentConnectionAwsPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAwsPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAwsPtrOutput) Elem() PrivateLinkAttachmentConnectionAwsOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionAws) PrivateLinkAttachmentConnectionAws {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAttachmentConnectionAws
		return ret
	}).(PrivateLinkAttachmentConnectionAwsOutput)
}

// Id of a VPC Endpoint that is connected to the VPC Endpoint service.
func (o PrivateLinkAttachmentConnectionAwsPtrOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionAws) *string {
		if v == nil {
			return nil
		}
		return &v.VpcEndpointId
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentConnectionAzure struct {
	// Resource ID of the Private Endpoint that is connected to the Private Link service.
	PrivateEndpointResourceId string `pulumi:"privateEndpointResourceId"`
}

// PrivateLinkAttachmentConnectionAzureInput is an input type that accepts PrivateLinkAttachmentConnectionAzureArgs and PrivateLinkAttachmentConnectionAzureOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionAzureInput` via:
//
//	PrivateLinkAttachmentConnectionAzureArgs{...}
type PrivateLinkAttachmentConnectionAzureInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionAzureOutput() PrivateLinkAttachmentConnectionAzureOutput
	ToPrivateLinkAttachmentConnectionAzureOutputWithContext(context.Context) PrivateLinkAttachmentConnectionAzureOutput
}

type PrivateLinkAttachmentConnectionAzureArgs struct {
	// Resource ID of the Private Endpoint that is connected to the Private Link service.
	PrivateEndpointResourceId pulumi.StringInput `pulumi:"privateEndpointResourceId"`
}

func (PrivateLinkAttachmentConnectionAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (i PrivateLinkAttachmentConnectionAzureArgs) ToPrivateLinkAttachmentConnectionAzureOutput() PrivateLinkAttachmentConnectionAzureOutput {
	return i.ToPrivateLinkAttachmentConnectionAzureOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionAzureArgs) ToPrivateLinkAttachmentConnectionAzureOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionAzureOutput)
}

func (i PrivateLinkAttachmentConnectionAzureArgs) ToPrivateLinkAttachmentConnectionAzurePtrOutput() PrivateLinkAttachmentConnectionAzurePtrOutput {
	return i.ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionAzureArgs) ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionAzureOutput).ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(ctx)
}

// PrivateLinkAttachmentConnectionAzurePtrInput is an input type that accepts PrivateLinkAttachmentConnectionAzureArgs, PrivateLinkAttachmentConnectionAzurePtr and PrivateLinkAttachmentConnectionAzurePtrOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionAzurePtrInput` via:
//
//	        PrivateLinkAttachmentConnectionAzureArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAttachmentConnectionAzurePtrInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionAzurePtrOutput() PrivateLinkAttachmentConnectionAzurePtrOutput
	ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(context.Context) PrivateLinkAttachmentConnectionAzurePtrOutput
}

type privateLinkAttachmentConnectionAzurePtrType PrivateLinkAttachmentConnectionAzureArgs

func PrivateLinkAttachmentConnectionAzurePtr(v *PrivateLinkAttachmentConnectionAzureArgs) PrivateLinkAttachmentConnectionAzurePtrInput {
	return (*privateLinkAttachmentConnectionAzurePtrType)(v)
}

func (*privateLinkAttachmentConnectionAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (i *privateLinkAttachmentConnectionAzurePtrType) ToPrivateLinkAttachmentConnectionAzurePtrOutput() PrivateLinkAttachmentConnectionAzurePtrOutput {
	return i.ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(context.Background())
}

func (i *privateLinkAttachmentConnectionAzurePtrType) ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionAzurePtrOutput)
}

type PrivateLinkAttachmentConnectionAzureOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionAzureOutput) ToPrivateLinkAttachmentConnectionAzureOutput() PrivateLinkAttachmentConnectionAzureOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAzureOutput) ToPrivateLinkAttachmentConnectionAzureOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAzureOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAzureOutput) ToPrivateLinkAttachmentConnectionAzurePtrOutput() PrivateLinkAttachmentConnectionAzurePtrOutput {
	return o.ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(context.Background())
}

func (o PrivateLinkAttachmentConnectionAzureOutput) ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAttachmentConnectionAzure) *PrivateLinkAttachmentConnectionAzure {
		return &v
	}).(PrivateLinkAttachmentConnectionAzurePtrOutput)
}

// Resource ID of the Private Endpoint that is connected to the Private Link service.
func (o PrivateLinkAttachmentConnectionAzureOutput) PrivateEndpointResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentConnectionAzure) string { return v.PrivateEndpointResourceId }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentConnectionAzurePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionAzurePtrOutput) ToPrivateLinkAttachmentConnectionAzurePtrOutput() PrivateLinkAttachmentConnectionAzurePtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAzurePtrOutput) ToPrivateLinkAttachmentConnectionAzurePtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionAzurePtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionAzurePtrOutput) Elem() PrivateLinkAttachmentConnectionAzureOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionAzure) PrivateLinkAttachmentConnectionAzure {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAttachmentConnectionAzure
		return ret
	}).(PrivateLinkAttachmentConnectionAzureOutput)
}

// Resource ID of the Private Endpoint that is connected to the Private Link service.
func (o PrivateLinkAttachmentConnectionAzurePtrOutput) PrivateEndpointResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionAzure) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateEndpointResourceId
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentConnectionEnvironment struct {
	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
	Id string `pulumi:"id"`
}

// PrivateLinkAttachmentConnectionEnvironmentInput is an input type that accepts PrivateLinkAttachmentConnectionEnvironmentArgs and PrivateLinkAttachmentConnectionEnvironmentOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionEnvironmentInput` via:
//
//	PrivateLinkAttachmentConnectionEnvironmentArgs{...}
type PrivateLinkAttachmentConnectionEnvironmentInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionEnvironmentOutput() PrivateLinkAttachmentConnectionEnvironmentOutput
	ToPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(context.Context) PrivateLinkAttachmentConnectionEnvironmentOutput
}

type PrivateLinkAttachmentConnectionEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAttachmentConnectionEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionEnvironment)(nil)).Elem()
}

func (i PrivateLinkAttachmentConnectionEnvironmentArgs) ToPrivateLinkAttachmentConnectionEnvironmentOutput() PrivateLinkAttachmentConnectionEnvironmentOutput {
	return i.ToPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionEnvironmentArgs) ToPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionEnvironmentOutput)
}

func (i PrivateLinkAttachmentConnectionEnvironmentArgs) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutput() PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionEnvironmentArgs) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionEnvironmentOutput).ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(ctx)
}

// PrivateLinkAttachmentConnectionEnvironmentPtrInput is an input type that accepts PrivateLinkAttachmentConnectionEnvironmentArgs, PrivateLinkAttachmentConnectionEnvironmentPtr and PrivateLinkAttachmentConnectionEnvironmentPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionEnvironmentPtrInput` via:
//
//	        PrivateLinkAttachmentConnectionEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAttachmentConnectionEnvironmentPtrInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionEnvironmentPtrOutput() PrivateLinkAttachmentConnectionEnvironmentPtrOutput
	ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(context.Context) PrivateLinkAttachmentConnectionEnvironmentPtrOutput
}

type privateLinkAttachmentConnectionEnvironmentPtrType PrivateLinkAttachmentConnectionEnvironmentArgs

func PrivateLinkAttachmentConnectionEnvironmentPtr(v *PrivateLinkAttachmentConnectionEnvironmentArgs) PrivateLinkAttachmentConnectionEnvironmentPtrInput {
	return (*privateLinkAttachmentConnectionEnvironmentPtrType)(v)
}

func (*privateLinkAttachmentConnectionEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionEnvironment)(nil)).Elem()
}

func (i *privateLinkAttachmentConnectionEnvironmentPtrType) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutput() PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(context.Background())
}

func (i *privateLinkAttachmentConnectionEnvironmentPtrType) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionEnvironmentPtrOutput)
}

type PrivateLinkAttachmentConnectionEnvironmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionEnvironment)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionEnvironmentOutput) ToPrivateLinkAttachmentConnectionEnvironmentOutput() PrivateLinkAttachmentConnectionEnvironmentOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionEnvironmentOutput) ToPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionEnvironmentOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionEnvironmentOutput) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutput() PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return o.ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAttachmentConnectionEnvironmentOutput) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAttachmentConnectionEnvironment) *PrivateLinkAttachmentConnectionEnvironment {
		return &v
	}).(PrivateLinkAttachmentConnectionEnvironmentPtrOutput)
}

// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
func (o PrivateLinkAttachmentConnectionEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentConnectionEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentConnectionEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionEnvironment)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionEnvironmentPtrOutput) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutput() PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionEnvironmentPtrOutput) ToPrivateLinkAttachmentConnectionEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionEnvironmentPtrOutput) Elem() PrivateLinkAttachmentConnectionEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionEnvironment) PrivateLinkAttachmentConnectionEnvironment {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAttachmentConnectionEnvironment
		return ret
	}).(PrivateLinkAttachmentConnectionEnvironmentOutput)
}

// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
func (o PrivateLinkAttachmentConnectionEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentConnectionGcp struct {
	// Id of the Private Service connection.
	PrivateServiceConnectConnectionId string `pulumi:"privateServiceConnectConnectionId"`
}

// PrivateLinkAttachmentConnectionGcpInput is an input type that accepts PrivateLinkAttachmentConnectionGcpArgs and PrivateLinkAttachmentConnectionGcpOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionGcpInput` via:
//
//	PrivateLinkAttachmentConnectionGcpArgs{...}
type PrivateLinkAttachmentConnectionGcpInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionGcpOutput() PrivateLinkAttachmentConnectionGcpOutput
	ToPrivateLinkAttachmentConnectionGcpOutputWithContext(context.Context) PrivateLinkAttachmentConnectionGcpOutput
}

type PrivateLinkAttachmentConnectionGcpArgs struct {
	// Id of the Private Service connection.
	PrivateServiceConnectConnectionId pulumi.StringInput `pulumi:"privateServiceConnectConnectionId"`
}

func (PrivateLinkAttachmentConnectionGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (i PrivateLinkAttachmentConnectionGcpArgs) ToPrivateLinkAttachmentConnectionGcpOutput() PrivateLinkAttachmentConnectionGcpOutput {
	return i.ToPrivateLinkAttachmentConnectionGcpOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionGcpArgs) ToPrivateLinkAttachmentConnectionGcpOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionGcpOutput)
}

func (i PrivateLinkAttachmentConnectionGcpArgs) ToPrivateLinkAttachmentConnectionGcpPtrOutput() PrivateLinkAttachmentConnectionGcpPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionGcpArgs) ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionGcpOutput).ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(ctx)
}

// PrivateLinkAttachmentConnectionGcpPtrInput is an input type that accepts PrivateLinkAttachmentConnectionGcpArgs, PrivateLinkAttachmentConnectionGcpPtr and PrivateLinkAttachmentConnectionGcpPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionGcpPtrInput` via:
//
//	        PrivateLinkAttachmentConnectionGcpArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAttachmentConnectionGcpPtrInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionGcpPtrOutput() PrivateLinkAttachmentConnectionGcpPtrOutput
	ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(context.Context) PrivateLinkAttachmentConnectionGcpPtrOutput
}

type privateLinkAttachmentConnectionGcpPtrType PrivateLinkAttachmentConnectionGcpArgs

func PrivateLinkAttachmentConnectionGcpPtr(v *PrivateLinkAttachmentConnectionGcpArgs) PrivateLinkAttachmentConnectionGcpPtrInput {
	return (*privateLinkAttachmentConnectionGcpPtrType)(v)
}

func (*privateLinkAttachmentConnectionGcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (i *privateLinkAttachmentConnectionGcpPtrType) ToPrivateLinkAttachmentConnectionGcpPtrOutput() PrivateLinkAttachmentConnectionGcpPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(context.Background())
}

func (i *privateLinkAttachmentConnectionGcpPtrType) ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionGcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionGcpPtrOutput)
}

type PrivateLinkAttachmentConnectionGcpOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionGcpOutput) ToPrivateLinkAttachmentConnectionGcpOutput() PrivateLinkAttachmentConnectionGcpOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionGcpOutput) ToPrivateLinkAttachmentConnectionGcpOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionGcpOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionGcpOutput) ToPrivateLinkAttachmentConnectionGcpPtrOutput() PrivateLinkAttachmentConnectionGcpPtrOutput {
	return o.ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAttachmentConnectionGcpOutput) ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionGcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAttachmentConnectionGcp) *PrivateLinkAttachmentConnectionGcp {
		return &v
	}).(PrivateLinkAttachmentConnectionGcpPtrOutput)
}

// Id of the Private Service connection.
func (o PrivateLinkAttachmentConnectionGcpOutput) PrivateServiceConnectConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentConnectionGcp) string { return v.PrivateServiceConnectConnectionId }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentConnectionGcpPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionGcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionGcpPtrOutput) ToPrivateLinkAttachmentConnectionGcpPtrOutput() PrivateLinkAttachmentConnectionGcpPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionGcpPtrOutput) ToPrivateLinkAttachmentConnectionGcpPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionGcpPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionGcpPtrOutput) Elem() PrivateLinkAttachmentConnectionGcpOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionGcp) PrivateLinkAttachmentConnectionGcp {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAttachmentConnectionGcp
		return ret
	}).(PrivateLinkAttachmentConnectionGcpOutput)
}

// Id of the Private Service connection.
func (o PrivateLinkAttachmentConnectionGcpPtrOutput) PrivateServiceConnectConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionGcp) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateServiceConnectConnectionId
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentConnectionPrivateLinkAttachment struct {
	// The unique identifier for the private link attachment.
	Id string `pulumi:"id"`
}

// PrivateLinkAttachmentConnectionPrivateLinkAttachmentInput is an input type that accepts PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs and PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionPrivateLinkAttachmentInput` via:
//
//	PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{...}
type PrivateLinkAttachmentConnectionPrivateLinkAttachmentInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput
	ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput
}

type PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs struct {
	// The unique identifier for the private link attachment.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (i PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return i.ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput)
}

func (i PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput).ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(ctx)
}

// PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrInput is an input type that accepts PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs, PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtr and PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrInput` via:
//
//	        PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput
	ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput
}

type privateLinkAttachmentConnectionPrivateLinkAttachmentPtrType PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs

func PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtr(v *PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrInput {
	return (*privateLinkAttachmentConnectionPrivateLinkAttachmentPtrType)(v)
}

func (*privateLinkAttachmentConnectionPrivateLinkAttachmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (i *privateLinkAttachmentConnectionPrivateLinkAttachmentPtrType) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return i.ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(context.Background())
}

func (i *privateLinkAttachmentConnectionPrivateLinkAttachmentPtrType) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput)
}

type PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return o.ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAttachmentConnectionPrivateLinkAttachment) *PrivateLinkAttachmentConnectionPrivateLinkAttachment {
		return &v
	}).(PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput)
}

// The unique identifier for the private link attachment.
func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentConnectionPrivateLinkAttachment) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput() PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput) ToPrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput {
	return o
}

func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput) Elem() PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionPrivateLinkAttachment) PrivateLinkAttachmentConnectionPrivateLinkAttachment {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAttachmentConnectionPrivateLinkAttachment
		return ret
	}).(PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput)
}

// The unique identifier for the private link attachment.
func (o PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentConnectionPrivateLinkAttachment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentEnvironment struct {
	// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
	Id string `pulumi:"id"`
}

// PrivateLinkAttachmentEnvironmentInput is an input type that accepts PrivateLinkAttachmentEnvironmentArgs and PrivateLinkAttachmentEnvironmentOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentEnvironmentInput` via:
//
//	PrivateLinkAttachmentEnvironmentArgs{...}
type PrivateLinkAttachmentEnvironmentInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentEnvironmentOutput() PrivateLinkAttachmentEnvironmentOutput
	ToPrivateLinkAttachmentEnvironmentOutputWithContext(context.Context) PrivateLinkAttachmentEnvironmentOutput
}

type PrivateLinkAttachmentEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PrivateLinkAttachmentEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentEnvironment)(nil)).Elem()
}

func (i PrivateLinkAttachmentEnvironmentArgs) ToPrivateLinkAttachmentEnvironmentOutput() PrivateLinkAttachmentEnvironmentOutput {
	return i.ToPrivateLinkAttachmentEnvironmentOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentEnvironmentArgs) ToPrivateLinkAttachmentEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentEnvironmentOutput)
}

func (i PrivateLinkAttachmentEnvironmentArgs) ToPrivateLinkAttachmentEnvironmentPtrOutput() PrivateLinkAttachmentEnvironmentPtrOutput {
	return i.ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentEnvironmentArgs) ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentEnvironmentOutput).ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(ctx)
}

// PrivateLinkAttachmentEnvironmentPtrInput is an input type that accepts PrivateLinkAttachmentEnvironmentArgs, PrivateLinkAttachmentEnvironmentPtr and PrivateLinkAttachmentEnvironmentPtrOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentEnvironmentPtrInput` via:
//
//	        PrivateLinkAttachmentEnvironmentArgs{...}
//
//	or:
//
//	        nil
type PrivateLinkAttachmentEnvironmentPtrInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentEnvironmentPtrOutput() PrivateLinkAttachmentEnvironmentPtrOutput
	ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(context.Context) PrivateLinkAttachmentEnvironmentPtrOutput
}

type privateLinkAttachmentEnvironmentPtrType PrivateLinkAttachmentEnvironmentArgs

func PrivateLinkAttachmentEnvironmentPtr(v *PrivateLinkAttachmentEnvironmentArgs) PrivateLinkAttachmentEnvironmentPtrInput {
	return (*privateLinkAttachmentEnvironmentPtrType)(v)
}

func (*privateLinkAttachmentEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentEnvironment)(nil)).Elem()
}

func (i *privateLinkAttachmentEnvironmentPtrType) ToPrivateLinkAttachmentEnvironmentPtrOutput() PrivateLinkAttachmentEnvironmentPtrOutput {
	return i.ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (i *privateLinkAttachmentEnvironmentPtrType) ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentEnvironmentPtrOutput)
}

type PrivateLinkAttachmentEnvironmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentEnvironment)(nil)).Elem()
}

func (o PrivateLinkAttachmentEnvironmentOutput) ToPrivateLinkAttachmentEnvironmentOutput() PrivateLinkAttachmentEnvironmentOutput {
	return o
}

func (o PrivateLinkAttachmentEnvironmentOutput) ToPrivateLinkAttachmentEnvironmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentEnvironmentOutput {
	return o
}

func (o PrivateLinkAttachmentEnvironmentOutput) ToPrivateLinkAttachmentEnvironmentPtrOutput() PrivateLinkAttachmentEnvironmentPtrOutput {
	return o.ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (o PrivateLinkAttachmentEnvironmentOutput) ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateLinkAttachmentEnvironment) *PrivateLinkAttachmentEnvironment {
		return &v
	}).(PrivateLinkAttachmentEnvironmentPtrOutput)
}

// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
func (o PrivateLinkAttachmentEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachmentEnvironment)(nil)).Elem()
}

func (o PrivateLinkAttachmentEnvironmentPtrOutput) ToPrivateLinkAttachmentEnvironmentPtrOutput() PrivateLinkAttachmentEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAttachmentEnvironmentPtrOutput) ToPrivateLinkAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) PrivateLinkAttachmentEnvironmentPtrOutput {
	return o
}

func (o PrivateLinkAttachmentEnvironmentPtrOutput) Elem() PrivateLinkAttachmentEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentEnvironment) PrivateLinkAttachmentEnvironment {
		if v != nil {
			return *v
		}
		var ret PrivateLinkAttachmentEnvironment
		return ret
	}).(PrivateLinkAttachmentEnvironmentOutput)
}

// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
func (o PrivateLinkAttachmentEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAttachmentEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentGcp struct {
	// Id of a Private Service Connect Service Attachment in Confluent Cloud.
	PrivateServiceConnectServiceAttachment *string `pulumi:"privateServiceConnectServiceAttachment"`
	// Zone associated with the PSC Service attachment.
	Zone *string `pulumi:"zone"`
}

// PrivateLinkAttachmentGcpInput is an input type that accepts PrivateLinkAttachmentGcpArgs and PrivateLinkAttachmentGcpOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentGcpInput` via:
//
//	PrivateLinkAttachmentGcpArgs{...}
type PrivateLinkAttachmentGcpInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentGcpOutput() PrivateLinkAttachmentGcpOutput
	ToPrivateLinkAttachmentGcpOutputWithContext(context.Context) PrivateLinkAttachmentGcpOutput
}

type PrivateLinkAttachmentGcpArgs struct {
	// Id of a Private Service Connect Service Attachment in Confluent Cloud.
	PrivateServiceConnectServiceAttachment pulumi.StringPtrInput `pulumi:"privateServiceConnectServiceAttachment"`
	// Zone associated with the PSC Service attachment.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (PrivateLinkAttachmentGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentGcp)(nil)).Elem()
}

func (i PrivateLinkAttachmentGcpArgs) ToPrivateLinkAttachmentGcpOutput() PrivateLinkAttachmentGcpOutput {
	return i.ToPrivateLinkAttachmentGcpOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentGcpArgs) ToPrivateLinkAttachmentGcpOutputWithContext(ctx context.Context) PrivateLinkAttachmentGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentGcpOutput)
}

// PrivateLinkAttachmentGcpArrayInput is an input type that accepts PrivateLinkAttachmentGcpArray and PrivateLinkAttachmentGcpArrayOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentGcpArrayInput` via:
//
//	PrivateLinkAttachmentGcpArray{ PrivateLinkAttachmentGcpArgs{...} }
type PrivateLinkAttachmentGcpArrayInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentGcpArrayOutput() PrivateLinkAttachmentGcpArrayOutput
	ToPrivateLinkAttachmentGcpArrayOutputWithContext(context.Context) PrivateLinkAttachmentGcpArrayOutput
}

type PrivateLinkAttachmentGcpArray []PrivateLinkAttachmentGcpInput

func (PrivateLinkAttachmentGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkAttachmentGcp)(nil)).Elem()
}

func (i PrivateLinkAttachmentGcpArray) ToPrivateLinkAttachmentGcpArrayOutput() PrivateLinkAttachmentGcpArrayOutput {
	return i.ToPrivateLinkAttachmentGcpArrayOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentGcpArray) ToPrivateLinkAttachmentGcpArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentGcpArrayOutput)
}

type PrivateLinkAttachmentGcpOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkAttachmentGcp)(nil)).Elem()
}

func (o PrivateLinkAttachmentGcpOutput) ToPrivateLinkAttachmentGcpOutput() PrivateLinkAttachmentGcpOutput {
	return o
}

func (o PrivateLinkAttachmentGcpOutput) ToPrivateLinkAttachmentGcpOutputWithContext(ctx context.Context) PrivateLinkAttachmentGcpOutput {
	return o
}

// Id of a Private Service Connect Service Attachment in Confluent Cloud.
func (o PrivateLinkAttachmentGcpOutput) PrivateServiceConnectServiceAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentGcp) *string { return v.PrivateServiceConnectServiceAttachment }).(pulumi.StringPtrOutput)
}

// Zone associated with the PSC Service attachment.
func (o PrivateLinkAttachmentGcpOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkAttachmentGcp) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type PrivateLinkAttachmentGcpArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkAttachmentGcp)(nil)).Elem()
}

func (o PrivateLinkAttachmentGcpArrayOutput) ToPrivateLinkAttachmentGcpArrayOutput() PrivateLinkAttachmentGcpArrayOutput {
	return o
}

func (o PrivateLinkAttachmentGcpArrayOutput) ToPrivateLinkAttachmentGcpArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentGcpArrayOutput {
	return o
}

func (o PrivateLinkAttachmentGcpArrayOutput) Index(i pulumi.IntInput) PrivateLinkAttachmentGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkAttachmentGcp {
		return vs[0].([]PrivateLinkAttachmentGcp)[vs[1].(int)]
	}).(PrivateLinkAttachmentGcpOutput)
}

type SchemaCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// SchemaCredentialsInput is an input type that accepts SchemaCredentialsArgs and SchemaCredentialsOutput values.
// You can construct a concrete instance of `SchemaCredentialsInput` via:
//
//	SchemaCredentialsArgs{...}
type SchemaCredentialsInput interface {
	pulumi.Input

	ToSchemaCredentialsOutput() SchemaCredentialsOutput
	ToSchemaCredentialsOutputWithContext(context.Context) SchemaCredentialsOutput
}

type SchemaCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaCredentials)(nil)).Elem()
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsOutput() SchemaCredentialsOutput {
	return i.ToSchemaCredentialsOutputWithContext(context.Background())
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsOutputWithContext(ctx context.Context) SchemaCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaCredentialsOutput)
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return i.ToSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaCredentialsArgs) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaCredentialsOutput).ToSchemaCredentialsPtrOutputWithContext(ctx)
}

// SchemaCredentialsPtrInput is an input type that accepts SchemaCredentialsArgs, SchemaCredentialsPtr and SchemaCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaCredentialsPtrInput` via:
//
//	        SchemaCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput
	ToSchemaCredentialsPtrOutputWithContext(context.Context) SchemaCredentialsPtrOutput
}

type schemaCredentialsPtrType SchemaCredentialsArgs

func SchemaCredentialsPtr(v *SchemaCredentialsArgs) SchemaCredentialsPtrInput {
	return (*schemaCredentialsPtrType)(v)
}

func (*schemaCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaCredentials)(nil)).Elem()
}

func (i *schemaCredentialsPtrType) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return i.ToSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaCredentialsPtrType) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaCredentialsPtrOutput)
}

type SchemaCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaCredentials)(nil)).Elem()
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsOutput() SchemaCredentialsOutput {
	return o
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsOutputWithContext(ctx context.Context) SchemaCredentialsOutput {
	return o
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return o.ToSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaCredentialsOutput) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaCredentials) *SchemaCredentials {
		return &v
	}).(SchemaCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SchemaCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaCredentials)(nil)).Elem()
}

func (o SchemaCredentialsPtrOutput) ToSchemaCredentialsPtrOutput() SchemaCredentialsPtrOutput {
	return o
}

func (o SchemaCredentialsPtrOutput) ToSchemaCredentialsPtrOutputWithContext(ctx context.Context) SchemaCredentialsPtrOutput {
	return o
}

func (o SchemaCredentialsPtrOutput) Elem() SchemaCredentialsOutput {
	return o.ApplyT(func(v *SchemaCredentials) SchemaCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaCredentials
		return ret
	}).(SchemaCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SchemaCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaExporterCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaExporterCredentialsInput is an input type that accepts SchemaExporterCredentialsArgs and SchemaExporterCredentialsOutput values.
// You can construct a concrete instance of `SchemaExporterCredentialsInput` via:
//
//	SchemaExporterCredentialsArgs{...}
type SchemaExporterCredentialsInput interface {
	pulumi.Input

	ToSchemaExporterCredentialsOutput() SchemaExporterCredentialsOutput
	ToSchemaExporterCredentialsOutputWithContext(context.Context) SchemaExporterCredentialsOutput
}

type SchemaExporterCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaExporterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterCredentials)(nil)).Elem()
}

func (i SchemaExporterCredentialsArgs) ToSchemaExporterCredentialsOutput() SchemaExporterCredentialsOutput {
	return i.ToSchemaExporterCredentialsOutputWithContext(context.Background())
}

func (i SchemaExporterCredentialsArgs) ToSchemaExporterCredentialsOutputWithContext(ctx context.Context) SchemaExporterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterCredentialsOutput)
}

func (i SchemaExporterCredentialsArgs) ToSchemaExporterCredentialsPtrOutput() SchemaExporterCredentialsPtrOutput {
	return i.ToSchemaExporterCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaExporterCredentialsArgs) ToSchemaExporterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterCredentialsOutput).ToSchemaExporterCredentialsPtrOutputWithContext(ctx)
}

// SchemaExporterCredentialsPtrInput is an input type that accepts SchemaExporterCredentialsArgs, SchemaExporterCredentialsPtr and SchemaExporterCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaExporterCredentialsPtrInput` via:
//
//	        SchemaExporterCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaExporterCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaExporterCredentialsPtrOutput() SchemaExporterCredentialsPtrOutput
	ToSchemaExporterCredentialsPtrOutputWithContext(context.Context) SchemaExporterCredentialsPtrOutput
}

type schemaExporterCredentialsPtrType SchemaExporterCredentialsArgs

func SchemaExporterCredentialsPtr(v *SchemaExporterCredentialsArgs) SchemaExporterCredentialsPtrInput {
	return (*schemaExporterCredentialsPtrType)(v)
}

func (*schemaExporterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterCredentials)(nil)).Elem()
}

func (i *schemaExporterCredentialsPtrType) ToSchemaExporterCredentialsPtrOutput() SchemaExporterCredentialsPtrOutput {
	return i.ToSchemaExporterCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaExporterCredentialsPtrType) ToSchemaExporterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterCredentialsPtrOutput)
}

type SchemaExporterCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaExporterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterCredentials)(nil)).Elem()
}

func (o SchemaExporterCredentialsOutput) ToSchemaExporterCredentialsOutput() SchemaExporterCredentialsOutput {
	return o
}

func (o SchemaExporterCredentialsOutput) ToSchemaExporterCredentialsOutputWithContext(ctx context.Context) SchemaExporterCredentialsOutput {
	return o
}

func (o SchemaExporterCredentialsOutput) ToSchemaExporterCredentialsPtrOutput() SchemaExporterCredentialsPtrOutput {
	return o.ToSchemaExporterCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaExporterCredentialsOutput) ToSchemaExporterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaExporterCredentials) *SchemaExporterCredentials {
		return &v
	}).(SchemaExporterCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaExporterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaExporterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaExporterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaExporterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaExporterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaExporterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterCredentials)(nil)).Elem()
}

func (o SchemaExporterCredentialsPtrOutput) ToSchemaExporterCredentialsPtrOutput() SchemaExporterCredentialsPtrOutput {
	return o
}

func (o SchemaExporterCredentialsPtrOutput) ToSchemaExporterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterCredentialsPtrOutput {
	return o
}

func (o SchemaExporterCredentialsPtrOutput) Elem() SchemaExporterCredentialsOutput {
	return o.ApplyT(func(v *SchemaExporterCredentials) SchemaExporterCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaExporterCredentials
		return ret
	}).(SchemaExporterCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaExporterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaExporterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaExporterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaExporterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaExporterDestinationSchemaRegistryCluster struct {
	Credentials SchemaExporterDestinationSchemaRegistryClusterCredentials `pulumi:"credentials"`
	// The REST endpoint of the destination Schema Registry cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint string `pulumi:"restEndpoint"`
}

// SchemaExporterDestinationSchemaRegistryClusterInput is an input type that accepts SchemaExporterDestinationSchemaRegistryClusterArgs and SchemaExporterDestinationSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaExporterDestinationSchemaRegistryClusterInput` via:
//
//	SchemaExporterDestinationSchemaRegistryClusterArgs{...}
type SchemaExporterDestinationSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaExporterDestinationSchemaRegistryClusterOutput() SchemaExporterDestinationSchemaRegistryClusterOutput
	ToSchemaExporterDestinationSchemaRegistryClusterOutputWithContext(context.Context) SchemaExporterDestinationSchemaRegistryClusterOutput
}

type SchemaExporterDestinationSchemaRegistryClusterArgs struct {
	Credentials SchemaExporterDestinationSchemaRegistryClusterCredentialsInput `pulumi:"credentials"`
	// The REST endpoint of the destination Schema Registry cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
	RestEndpoint pulumi.StringInput `pulumi:"restEndpoint"`
}

func (SchemaExporterDestinationSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaExporterDestinationSchemaRegistryClusterArgs) ToSchemaExporterDestinationSchemaRegistryClusterOutput() SchemaExporterDestinationSchemaRegistryClusterOutput {
	return i.ToSchemaExporterDestinationSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaExporterDestinationSchemaRegistryClusterArgs) ToSchemaExporterDestinationSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterDestinationSchemaRegistryClusterOutput)
}

func (i SchemaExporterDestinationSchemaRegistryClusterArgs) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutput() SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return i.ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaExporterDestinationSchemaRegistryClusterArgs) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterDestinationSchemaRegistryClusterOutput).ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaExporterDestinationSchemaRegistryClusterPtrInput is an input type that accepts SchemaExporterDestinationSchemaRegistryClusterArgs, SchemaExporterDestinationSchemaRegistryClusterPtr and SchemaExporterDestinationSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaExporterDestinationSchemaRegistryClusterPtrInput` via:
//
//	        SchemaExporterDestinationSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaExporterDestinationSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaExporterDestinationSchemaRegistryClusterPtrOutput() SchemaExporterDestinationSchemaRegistryClusterPtrOutput
	ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaExporterDestinationSchemaRegistryClusterPtrOutput
}

type schemaExporterDestinationSchemaRegistryClusterPtrType SchemaExporterDestinationSchemaRegistryClusterArgs

func SchemaExporterDestinationSchemaRegistryClusterPtr(v *SchemaExporterDestinationSchemaRegistryClusterArgs) SchemaExporterDestinationSchemaRegistryClusterPtrInput {
	return (*schemaExporterDestinationSchemaRegistryClusterPtrType)(v)
}

func (*schemaExporterDestinationSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterDestinationSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaExporterDestinationSchemaRegistryClusterPtrType) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutput() SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return i.ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaExporterDestinationSchemaRegistryClusterPtrType) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterDestinationSchemaRegistryClusterPtrOutput)
}

type SchemaExporterDestinationSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaExporterDestinationSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaExporterDestinationSchemaRegistryClusterOutput) ToSchemaExporterDestinationSchemaRegistryClusterOutput() SchemaExporterDestinationSchemaRegistryClusterOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterOutput) ToSchemaExporterDestinationSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterOutput) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutput() SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return o.ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaExporterDestinationSchemaRegistryClusterOutput) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaExporterDestinationSchemaRegistryCluster) *SchemaExporterDestinationSchemaRegistryCluster {
		return &v
	}).(SchemaExporterDestinationSchemaRegistryClusterPtrOutput)
}

func (o SchemaExporterDestinationSchemaRegistryClusterOutput) Credentials() SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput {
	return o.ApplyT(func(v SchemaExporterDestinationSchemaRegistryCluster) SchemaExporterDestinationSchemaRegistryClusterCredentials {
		return v.Credentials
	}).(SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput)
}

// The REST endpoint of the destination Schema Registry cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o SchemaExporterDestinationSchemaRegistryClusterOutput) RestEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaExporterDestinationSchemaRegistryCluster) string { return v.RestEndpoint }).(pulumi.StringOutput)
}

type SchemaExporterDestinationSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaExporterDestinationSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterDestinationSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaExporterDestinationSchemaRegistryClusterPtrOutput) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutput() SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterPtrOutput) ToSchemaExporterDestinationSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterPtrOutput) Elem() SchemaExporterDestinationSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaExporterDestinationSchemaRegistryCluster) SchemaExporterDestinationSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaExporterDestinationSchemaRegistryCluster
		return ret
	}).(SchemaExporterDestinationSchemaRegistryClusterOutput)
}

func (o SchemaExporterDestinationSchemaRegistryClusterPtrOutput) Credentials() SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return o.ApplyT(func(v *SchemaExporterDestinationSchemaRegistryCluster) *SchemaExporterDestinationSchemaRegistryClusterCredentials {
		if v == nil {
			return nil
		}
		return &v.Credentials
	}).(SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput)
}

// The REST endpoint of the destination Schema Registry cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
func (o SchemaExporterDestinationSchemaRegistryClusterPtrOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaExporterDestinationSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.RestEndpoint
	}).(pulumi.StringPtrOutput)
}

type SchemaExporterDestinationSchemaRegistryClusterCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaExporterDestinationSchemaRegistryClusterCredentialsInput is an input type that accepts SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs and SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput values.
// You can construct a concrete instance of `SchemaExporterDestinationSchemaRegistryClusterCredentialsInput` via:
//
//	SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs{...}
type SchemaExporterDestinationSchemaRegistryClusterCredentialsInput interface {
	pulumi.Input

	ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput
	ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutputWithContext(context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput
}

type SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryClusterCredentials)(nil)).Elem()
}

func (i SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput {
	return i.ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutputWithContext(context.Background())
}

func (i SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput)
}

func (i SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return i.ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput).ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(ctx)
}

// SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrInput is an input type that accepts SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs, SchemaExporterDestinationSchemaRegistryClusterCredentialsPtr and SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrInput` via:
//
//	        SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput
	ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput
}

type schemaExporterDestinationSchemaRegistryClusterCredentialsPtrType SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs

func SchemaExporterDestinationSchemaRegistryClusterCredentialsPtr(v *SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs) SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrInput {
	return (*schemaExporterDestinationSchemaRegistryClusterCredentialsPtrType)(v)
}

func (*schemaExporterDestinationSchemaRegistryClusterCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterDestinationSchemaRegistryClusterCredentials)(nil)).Elem()
}

func (i *schemaExporterDestinationSchemaRegistryClusterCredentialsPtrType) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return i.ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaExporterDestinationSchemaRegistryClusterCredentialsPtrType) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput)
}

type SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryClusterCredentials)(nil)).Elem()
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return o.ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaExporterDestinationSchemaRegistryClusterCredentials) *SchemaExporterDestinationSchemaRegistryClusterCredentials {
		return &v
	}).(SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaExporterDestinationSchemaRegistryClusterCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaExporterDestinationSchemaRegistryClusterCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterDestinationSchemaRegistryClusterCredentials)(nil)).Elem()
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput() SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput) ToSchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutputWithContext(ctx context.Context) SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput {
	return o
}

func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput) Elem() SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput {
	return o.ApplyT(func(v *SchemaExporterDestinationSchemaRegistryClusterCredentials) SchemaExporterDestinationSchemaRegistryClusterCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaExporterDestinationSchemaRegistryClusterCredentials
		return ret
	}).(SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaExporterDestinationSchemaRegistryClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaExporterDestinationSchemaRegistryClusterCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaExporterSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaExporterSchemaRegistryClusterInput is an input type that accepts SchemaExporterSchemaRegistryClusterArgs and SchemaExporterSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaExporterSchemaRegistryClusterInput` via:
//
//	SchemaExporterSchemaRegistryClusterArgs{...}
type SchemaExporterSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaExporterSchemaRegistryClusterOutput() SchemaExporterSchemaRegistryClusterOutput
	ToSchemaExporterSchemaRegistryClusterOutputWithContext(context.Context) SchemaExporterSchemaRegistryClusterOutput
}

type SchemaExporterSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaExporterSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaExporterSchemaRegistryClusterArgs) ToSchemaExporterSchemaRegistryClusterOutput() SchemaExporterSchemaRegistryClusterOutput {
	return i.ToSchemaExporterSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaExporterSchemaRegistryClusterArgs) ToSchemaExporterSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaExporterSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterSchemaRegistryClusterOutput)
}

func (i SchemaExporterSchemaRegistryClusterArgs) ToSchemaExporterSchemaRegistryClusterPtrOutput() SchemaExporterSchemaRegistryClusterPtrOutput {
	return i.ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaExporterSchemaRegistryClusterArgs) ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterSchemaRegistryClusterOutput).ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaExporterSchemaRegistryClusterPtrInput is an input type that accepts SchemaExporterSchemaRegistryClusterArgs, SchemaExporterSchemaRegistryClusterPtr and SchemaExporterSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaExporterSchemaRegistryClusterPtrInput` via:
//
//	        SchemaExporterSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaExporterSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaExporterSchemaRegistryClusterPtrOutput() SchemaExporterSchemaRegistryClusterPtrOutput
	ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaExporterSchemaRegistryClusterPtrOutput
}

type schemaExporterSchemaRegistryClusterPtrType SchemaExporterSchemaRegistryClusterArgs

func SchemaExporterSchemaRegistryClusterPtr(v *SchemaExporterSchemaRegistryClusterArgs) SchemaExporterSchemaRegistryClusterPtrInput {
	return (*schemaExporterSchemaRegistryClusterPtrType)(v)
}

func (*schemaExporterSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaExporterSchemaRegistryClusterPtrType) ToSchemaExporterSchemaRegistryClusterPtrOutput() SchemaExporterSchemaRegistryClusterPtrOutput {
	return i.ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaExporterSchemaRegistryClusterPtrType) ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaExporterSchemaRegistryClusterPtrOutput)
}

type SchemaExporterSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaExporterSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaExporterSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaExporterSchemaRegistryClusterOutput) ToSchemaExporterSchemaRegistryClusterOutput() SchemaExporterSchemaRegistryClusterOutput {
	return o
}

func (o SchemaExporterSchemaRegistryClusterOutput) ToSchemaExporterSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaExporterSchemaRegistryClusterOutput {
	return o
}

func (o SchemaExporterSchemaRegistryClusterOutput) ToSchemaExporterSchemaRegistryClusterPtrOutput() SchemaExporterSchemaRegistryClusterPtrOutput {
	return o.ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaExporterSchemaRegistryClusterOutput) ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaExporterSchemaRegistryCluster) *SchemaExporterSchemaRegistryCluster {
		return &v
	}).(SchemaExporterSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaExporterSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaExporterSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaExporterSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaExporterSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaExporterSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaExporterSchemaRegistryClusterPtrOutput) ToSchemaExporterSchemaRegistryClusterPtrOutput() SchemaExporterSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaExporterSchemaRegistryClusterPtrOutput) ToSchemaExporterSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaExporterSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaExporterSchemaRegistryClusterPtrOutput) Elem() SchemaExporterSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaExporterSchemaRegistryCluster) SchemaExporterSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaExporterSchemaRegistryCluster
		return ret
	}).(SchemaExporterSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaExporterSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaExporterSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaMetadata struct {
	// The custom properties to set:
	Properties map[string]string `pulumi:"properties"`
	// A list of metadata properties to be encrypted.
	Sensitives []string `pulumi:"sensitives"`
	// The tags to which the rule applies, if any.
	Tags []SchemaMetadataTag `pulumi:"tags"`
}

// SchemaMetadataInput is an input type that accepts SchemaMetadataArgs and SchemaMetadataOutput values.
// You can construct a concrete instance of `SchemaMetadataInput` via:
//
//	SchemaMetadataArgs{...}
type SchemaMetadataInput interface {
	pulumi.Input

	ToSchemaMetadataOutput() SchemaMetadataOutput
	ToSchemaMetadataOutputWithContext(context.Context) SchemaMetadataOutput
}

type SchemaMetadataArgs struct {
	// The custom properties to set:
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// A list of metadata properties to be encrypted.
	Sensitives pulumi.StringArrayInput `pulumi:"sensitives"`
	// The tags to which the rule applies, if any.
	Tags SchemaMetadataTagArrayInput `pulumi:"tags"`
}

func (SchemaMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMetadata)(nil)).Elem()
}

func (i SchemaMetadataArgs) ToSchemaMetadataOutput() SchemaMetadataOutput {
	return i.ToSchemaMetadataOutputWithContext(context.Background())
}

func (i SchemaMetadataArgs) ToSchemaMetadataOutputWithContext(ctx context.Context) SchemaMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaMetadataOutput)
}

func (i SchemaMetadataArgs) ToSchemaMetadataPtrOutput() SchemaMetadataPtrOutput {
	return i.ToSchemaMetadataPtrOutputWithContext(context.Background())
}

func (i SchemaMetadataArgs) ToSchemaMetadataPtrOutputWithContext(ctx context.Context) SchemaMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaMetadataOutput).ToSchemaMetadataPtrOutputWithContext(ctx)
}

// SchemaMetadataPtrInput is an input type that accepts SchemaMetadataArgs, SchemaMetadataPtr and SchemaMetadataPtrOutput values.
// You can construct a concrete instance of `SchemaMetadataPtrInput` via:
//
//	        SchemaMetadataArgs{...}
//
//	or:
//
//	        nil
type SchemaMetadataPtrInput interface {
	pulumi.Input

	ToSchemaMetadataPtrOutput() SchemaMetadataPtrOutput
	ToSchemaMetadataPtrOutputWithContext(context.Context) SchemaMetadataPtrOutput
}

type schemaMetadataPtrType SchemaMetadataArgs

func SchemaMetadataPtr(v *SchemaMetadataArgs) SchemaMetadataPtrInput {
	return (*schemaMetadataPtrType)(v)
}

func (*schemaMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaMetadata)(nil)).Elem()
}

func (i *schemaMetadataPtrType) ToSchemaMetadataPtrOutput() SchemaMetadataPtrOutput {
	return i.ToSchemaMetadataPtrOutputWithContext(context.Background())
}

func (i *schemaMetadataPtrType) ToSchemaMetadataPtrOutputWithContext(ctx context.Context) SchemaMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaMetadataPtrOutput)
}

type SchemaMetadataOutput struct{ *pulumi.OutputState }

func (SchemaMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMetadata)(nil)).Elem()
}

func (o SchemaMetadataOutput) ToSchemaMetadataOutput() SchemaMetadataOutput {
	return o
}

func (o SchemaMetadataOutput) ToSchemaMetadataOutputWithContext(ctx context.Context) SchemaMetadataOutput {
	return o
}

func (o SchemaMetadataOutput) ToSchemaMetadataPtrOutput() SchemaMetadataPtrOutput {
	return o.ToSchemaMetadataPtrOutputWithContext(context.Background())
}

func (o SchemaMetadataOutput) ToSchemaMetadataPtrOutputWithContext(ctx context.Context) SchemaMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaMetadata) *SchemaMetadata {
		return &v
	}).(SchemaMetadataPtrOutput)
}

// The custom properties to set:
func (o SchemaMetadataOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v SchemaMetadata) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// A list of metadata properties to be encrypted.
func (o SchemaMetadataOutput) Sensitives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SchemaMetadata) []string { return v.Sensitives }).(pulumi.StringArrayOutput)
}

// The tags to which the rule applies, if any.
func (o SchemaMetadataOutput) Tags() SchemaMetadataTagArrayOutput {
	return o.ApplyT(func(v SchemaMetadata) []SchemaMetadataTag { return v.Tags }).(SchemaMetadataTagArrayOutput)
}

type SchemaMetadataPtrOutput struct{ *pulumi.OutputState }

func (SchemaMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaMetadata)(nil)).Elem()
}

func (o SchemaMetadataPtrOutput) ToSchemaMetadataPtrOutput() SchemaMetadataPtrOutput {
	return o
}

func (o SchemaMetadataPtrOutput) ToSchemaMetadataPtrOutputWithContext(ctx context.Context) SchemaMetadataPtrOutput {
	return o
}

func (o SchemaMetadataPtrOutput) Elem() SchemaMetadataOutput {
	return o.ApplyT(func(v *SchemaMetadata) SchemaMetadata {
		if v != nil {
			return *v
		}
		var ret SchemaMetadata
		return ret
	}).(SchemaMetadataOutput)
}

// The custom properties to set:
func (o SchemaMetadataPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SchemaMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// A list of metadata properties to be encrypted.
func (o SchemaMetadataPtrOutput) Sensitives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SchemaMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Sensitives
	}).(pulumi.StringArrayOutput)
}

// The tags to which the rule applies, if any.
func (o SchemaMetadataPtrOutput) Tags() SchemaMetadataTagArrayOutput {
	return o.ApplyT(func(v *SchemaMetadata) []SchemaMetadataTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(SchemaMetadataTagArrayOutput)
}

type SchemaMetadataTag struct {
	// The setting name.
	Key *string `pulumi:"key"`
	// The list of tags.
	Values []string `pulumi:"values"`
}

// SchemaMetadataTagInput is an input type that accepts SchemaMetadataTagArgs and SchemaMetadataTagOutput values.
// You can construct a concrete instance of `SchemaMetadataTagInput` via:
//
//	SchemaMetadataTagArgs{...}
type SchemaMetadataTagInput interface {
	pulumi.Input

	ToSchemaMetadataTagOutput() SchemaMetadataTagOutput
	ToSchemaMetadataTagOutputWithContext(context.Context) SchemaMetadataTagOutput
}

type SchemaMetadataTagArgs struct {
	// The setting name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The list of tags.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SchemaMetadataTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMetadataTag)(nil)).Elem()
}

func (i SchemaMetadataTagArgs) ToSchemaMetadataTagOutput() SchemaMetadataTagOutput {
	return i.ToSchemaMetadataTagOutputWithContext(context.Background())
}

func (i SchemaMetadataTagArgs) ToSchemaMetadataTagOutputWithContext(ctx context.Context) SchemaMetadataTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaMetadataTagOutput)
}

// SchemaMetadataTagArrayInput is an input type that accepts SchemaMetadataTagArray and SchemaMetadataTagArrayOutput values.
// You can construct a concrete instance of `SchemaMetadataTagArrayInput` via:
//
//	SchemaMetadataTagArray{ SchemaMetadataTagArgs{...} }
type SchemaMetadataTagArrayInput interface {
	pulumi.Input

	ToSchemaMetadataTagArrayOutput() SchemaMetadataTagArrayOutput
	ToSchemaMetadataTagArrayOutputWithContext(context.Context) SchemaMetadataTagArrayOutput
}

type SchemaMetadataTagArray []SchemaMetadataTagInput

func (SchemaMetadataTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaMetadataTag)(nil)).Elem()
}

func (i SchemaMetadataTagArray) ToSchemaMetadataTagArrayOutput() SchemaMetadataTagArrayOutput {
	return i.ToSchemaMetadataTagArrayOutputWithContext(context.Background())
}

func (i SchemaMetadataTagArray) ToSchemaMetadataTagArrayOutputWithContext(ctx context.Context) SchemaMetadataTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaMetadataTagArrayOutput)
}

type SchemaMetadataTagOutput struct{ *pulumi.OutputState }

func (SchemaMetadataTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaMetadataTag)(nil)).Elem()
}

func (o SchemaMetadataTagOutput) ToSchemaMetadataTagOutput() SchemaMetadataTagOutput {
	return o
}

func (o SchemaMetadataTagOutput) ToSchemaMetadataTagOutputWithContext(ctx context.Context) SchemaMetadataTagOutput {
	return o
}

// The setting name.
func (o SchemaMetadataTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaMetadataTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The list of tags.
func (o SchemaMetadataTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SchemaMetadataTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SchemaMetadataTagArrayOutput struct{ *pulumi.OutputState }

func (SchemaMetadataTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaMetadataTag)(nil)).Elem()
}

func (o SchemaMetadataTagArrayOutput) ToSchemaMetadataTagArrayOutput() SchemaMetadataTagArrayOutput {
	return o
}

func (o SchemaMetadataTagArrayOutput) ToSchemaMetadataTagArrayOutputWithContext(ctx context.Context) SchemaMetadataTagArrayOutput {
	return o
}

func (o SchemaMetadataTagArrayOutput) Index(i pulumi.IntInput) SchemaMetadataTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaMetadataTag {
		return vs[0].([]SchemaMetadataTag)[vs[1].(int)]
	}).(SchemaMetadataTagOutput)
}

type SchemaRegistryClusterConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// SchemaRegistryClusterConfigCredentialsInput is an input type that accepts SchemaRegistryClusterConfigCredentialsArgs and SchemaRegistryClusterConfigCredentialsOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigCredentialsInput` via:
//
//	SchemaRegistryClusterConfigCredentialsArgs{...}
type SchemaRegistryClusterConfigCredentialsInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigCredentialsOutput() SchemaRegistryClusterConfigCredentialsOutput
	ToSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Context) SchemaRegistryClusterConfigCredentialsOutput
}

type SchemaRegistryClusterConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaRegistryClusterConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsOutput() SchemaRegistryClusterConfigCredentialsOutput {
	return i.ToSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigCredentialsOutput)
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigCredentialsArgs) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigCredentialsOutput).ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterConfigCredentialsPtrInput is an input type that accepts SchemaRegistryClusterConfigCredentialsArgs, SchemaRegistryClusterConfigCredentialsPtr and SchemaRegistryClusterConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigCredentialsPtrInput` via:
//
//	        SchemaRegistryClusterConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterConfigCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput
	ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput
}

type schemaRegistryClusterConfigCredentialsPtrType SchemaRegistryClusterConfigCredentialsArgs

func SchemaRegistryClusterConfigCredentialsPtr(v *SchemaRegistryClusterConfigCredentialsArgs) SchemaRegistryClusterConfigCredentialsPtrInput {
	return (*schemaRegistryClusterConfigCredentialsPtrType)(v)
}

func (*schemaRegistryClusterConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i *schemaRegistryClusterConfigCredentialsPtrType) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterConfigCredentialsPtrType) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigCredentialsPtrOutput)
}

type SchemaRegistryClusterConfigCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsOutput() SchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterConfigCredentialsOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterConfigCredentials) *SchemaRegistryClusterConfigCredentials {
		return &v
	}).(SchemaRegistryClusterConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SchemaRegistryClusterConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaRegistryClusterConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigCredentialsPtrOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutput() SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsPtrOutput) ToSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigCredentialsPtrOutput) Elem() SchemaRegistryClusterConfigCredentialsOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigCredentials) SchemaRegistryClusterConfigCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterConfigCredentials
		return ret
	}).(SchemaRegistryClusterConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SchemaRegistryClusterConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaRegistryClusterConfigSchemaRegistryClusterInput is an input type that accepts SchemaRegistryClusterConfigSchemaRegistryClusterArgs and SchemaRegistryClusterConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigSchemaRegistryClusterInput` via:
//
//	SchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
type SchemaRegistryClusterConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigSchemaRegistryClusterOutput() SchemaRegistryClusterConfigSchemaRegistryClusterOutput
	ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterOutput
}

type SchemaRegistryClusterConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutput() SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return i.ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigSchemaRegistryClusterOutput).ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput is an input type that accepts SchemaRegistryClusterConfigSchemaRegistryClusterArgs, SchemaRegistryClusterConfigSchemaRegistryClusterPtr and SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput` via:
//
//	        SchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
	ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
}

type schemaRegistryClusterConfigSchemaRegistryClusterPtrType SchemaRegistryClusterConfigSchemaRegistryClusterArgs

func SchemaRegistryClusterConfigSchemaRegistryClusterPtr(v *SchemaRegistryClusterConfigSchemaRegistryClusterArgs) SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput {
	return (*schemaRegistryClusterConfigSchemaRegistryClusterPtrType)(v)
}

func (*schemaRegistryClusterConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

type SchemaRegistryClusterConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutput() SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterConfigSchemaRegistryCluster) *SchemaRegistryClusterConfigSchemaRegistryCluster {
		return &v
	}).(SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Elem() SchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigSchemaRegistryCluster) SchemaRegistryClusterConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterConfigSchemaRegistryCluster
		return ret
	}).(SchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// SchemaRegistryClusterModeCredentialsInput is an input type that accepts SchemaRegistryClusterModeCredentialsArgs and SchemaRegistryClusterModeCredentialsOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeCredentialsInput` via:
//
//	SchemaRegistryClusterModeCredentialsArgs{...}
type SchemaRegistryClusterModeCredentialsInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeCredentialsOutput() SchemaRegistryClusterModeCredentialsOutput
	ToSchemaRegistryClusterModeCredentialsOutputWithContext(context.Context) SchemaRegistryClusterModeCredentialsOutput
}

type SchemaRegistryClusterModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaRegistryClusterModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsOutput() SchemaRegistryClusterModeCredentialsOutput {
	return i.ToSchemaRegistryClusterModeCredentialsOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeCredentialsOutput)
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeCredentialsArgs) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeCredentialsOutput).ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterModeCredentialsPtrInput is an input type that accepts SchemaRegistryClusterModeCredentialsArgs, SchemaRegistryClusterModeCredentialsPtr and SchemaRegistryClusterModeCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeCredentialsPtrInput` via:
//
//	        SchemaRegistryClusterModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterModeCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput
	ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Context) SchemaRegistryClusterModeCredentialsPtrOutput
}

type schemaRegistryClusterModeCredentialsPtrType SchemaRegistryClusterModeCredentialsArgs

func SchemaRegistryClusterModeCredentialsPtr(v *SchemaRegistryClusterModeCredentialsArgs) SchemaRegistryClusterModeCredentialsPtrInput {
	return (*schemaRegistryClusterModeCredentialsPtrType)(v)
}

func (*schemaRegistryClusterModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i *schemaRegistryClusterModeCredentialsPtrType) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterModeCredentialsPtrType) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeCredentialsPtrOutput)
}

type SchemaRegistryClusterModeCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsOutput() SchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterModeCredentialsOutput) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterModeCredentials) *SchemaRegistryClusterModeCredentials {
		return &v
	}).(SchemaRegistryClusterModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SchemaRegistryClusterModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaRegistryClusterModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o SchemaRegistryClusterModeCredentialsPtrOutput) ToSchemaRegistryClusterModeCredentialsPtrOutput() SchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsPtrOutput) ToSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeCredentialsPtrOutput) Elem() SchemaRegistryClusterModeCredentialsOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeCredentials) SchemaRegistryClusterModeCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterModeCredentials
		return ret
	}).(SchemaRegistryClusterModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryClusterModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SchemaRegistryClusterModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryClusterModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaRegistryClusterModeSchemaRegistryClusterInput is an input type that accepts SchemaRegistryClusterModeSchemaRegistryClusterArgs and SchemaRegistryClusterModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeSchemaRegistryClusterInput` via:
//
//	SchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
type SchemaRegistryClusterModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeSchemaRegistryClusterOutput() SchemaRegistryClusterModeSchemaRegistryClusterOutput
	ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Context) SchemaRegistryClusterModeSchemaRegistryClusterOutput
}

type SchemaRegistryClusterModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryClusterModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterOutput() SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return i.ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryClusterModeSchemaRegistryClusterArgs) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeSchemaRegistryClusterOutput).ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaRegistryClusterModeSchemaRegistryClusterPtrInput is an input type that accepts SchemaRegistryClusterModeSchemaRegistryClusterArgs, SchemaRegistryClusterModeSchemaRegistryClusterPtr and SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryClusterModeSchemaRegistryClusterPtrInput` via:
//
//	        SchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryClusterModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
	ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
}

type schemaRegistryClusterModeSchemaRegistryClusterPtrType SchemaRegistryClusterModeSchemaRegistryClusterArgs

func SchemaRegistryClusterModeSchemaRegistryClusterPtr(v *SchemaRegistryClusterModeSchemaRegistryClusterArgs) SchemaRegistryClusterModeSchemaRegistryClusterPtrInput {
	return (*schemaRegistryClusterModeSchemaRegistryClusterPtrType)(v)
}

func (*schemaRegistryClusterModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaRegistryClusterModeSchemaRegistryClusterPtrType) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryClusterModeSchemaRegistryClusterPtrType) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

type SchemaRegistryClusterModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterOutput() SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryClusterModeSchemaRegistryCluster) *SchemaRegistryClusterModeSchemaRegistryCluster {
		return &v
	}).(SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryClusterModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Elem() SchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeSchemaRegistryCluster) SchemaRegistryClusterModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryClusterModeSchemaRegistryCluster
		return ret
	}).(SchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryClusterModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryDekCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaRegistryDekCredentialsInput is an input type that accepts SchemaRegistryDekCredentialsArgs and SchemaRegistryDekCredentialsOutput values.
// You can construct a concrete instance of `SchemaRegistryDekCredentialsInput` via:
//
//	SchemaRegistryDekCredentialsArgs{...}
type SchemaRegistryDekCredentialsInput interface {
	pulumi.Input

	ToSchemaRegistryDekCredentialsOutput() SchemaRegistryDekCredentialsOutput
	ToSchemaRegistryDekCredentialsOutputWithContext(context.Context) SchemaRegistryDekCredentialsOutput
}

type SchemaRegistryDekCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaRegistryDekCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryDekCredentials)(nil)).Elem()
}

func (i SchemaRegistryDekCredentialsArgs) ToSchemaRegistryDekCredentialsOutput() SchemaRegistryDekCredentialsOutput {
	return i.ToSchemaRegistryDekCredentialsOutputWithContext(context.Background())
}

func (i SchemaRegistryDekCredentialsArgs) ToSchemaRegistryDekCredentialsOutputWithContext(ctx context.Context) SchemaRegistryDekCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryDekCredentialsOutput)
}

func (i SchemaRegistryDekCredentialsArgs) ToSchemaRegistryDekCredentialsPtrOutput() SchemaRegistryDekCredentialsPtrOutput {
	return i.ToSchemaRegistryDekCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryDekCredentialsArgs) ToSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryDekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryDekCredentialsOutput).ToSchemaRegistryDekCredentialsPtrOutputWithContext(ctx)
}

// SchemaRegistryDekCredentialsPtrInput is an input type that accepts SchemaRegistryDekCredentialsArgs, SchemaRegistryDekCredentialsPtr and SchemaRegistryDekCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryDekCredentialsPtrInput` via:
//
//	        SchemaRegistryDekCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryDekCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaRegistryDekCredentialsPtrOutput() SchemaRegistryDekCredentialsPtrOutput
	ToSchemaRegistryDekCredentialsPtrOutputWithContext(context.Context) SchemaRegistryDekCredentialsPtrOutput
}

type schemaRegistryDekCredentialsPtrType SchemaRegistryDekCredentialsArgs

func SchemaRegistryDekCredentialsPtr(v *SchemaRegistryDekCredentialsArgs) SchemaRegistryDekCredentialsPtrInput {
	return (*schemaRegistryDekCredentialsPtrType)(v)
}

func (*schemaRegistryDekCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryDekCredentials)(nil)).Elem()
}

func (i *schemaRegistryDekCredentialsPtrType) ToSchemaRegistryDekCredentialsPtrOutput() SchemaRegistryDekCredentialsPtrOutput {
	return i.ToSchemaRegistryDekCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryDekCredentialsPtrType) ToSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryDekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryDekCredentialsPtrOutput)
}

type SchemaRegistryDekCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaRegistryDekCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryDekCredentials)(nil)).Elem()
}

func (o SchemaRegistryDekCredentialsOutput) ToSchemaRegistryDekCredentialsOutput() SchemaRegistryDekCredentialsOutput {
	return o
}

func (o SchemaRegistryDekCredentialsOutput) ToSchemaRegistryDekCredentialsOutputWithContext(ctx context.Context) SchemaRegistryDekCredentialsOutput {
	return o
}

func (o SchemaRegistryDekCredentialsOutput) ToSchemaRegistryDekCredentialsPtrOutput() SchemaRegistryDekCredentialsPtrOutput {
	return o.ToSchemaRegistryDekCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryDekCredentialsOutput) ToSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryDekCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryDekCredentials) *SchemaRegistryDekCredentials {
		return &v
	}).(SchemaRegistryDekCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryDekCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryDekCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryDekCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryDekCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaRegistryDekCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryDekCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryDekCredentials)(nil)).Elem()
}

func (o SchemaRegistryDekCredentialsPtrOutput) ToSchemaRegistryDekCredentialsPtrOutput() SchemaRegistryDekCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryDekCredentialsPtrOutput) ToSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryDekCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryDekCredentialsPtrOutput) Elem() SchemaRegistryDekCredentialsOutput {
	return o.ApplyT(func(v *SchemaRegistryDekCredentials) SchemaRegistryDekCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryDekCredentials
		return ret
	}).(SchemaRegistryDekCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryDekCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryDekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryDekCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryDekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryDekSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaRegistryDekSchemaRegistryClusterInput is an input type that accepts SchemaRegistryDekSchemaRegistryClusterArgs and SchemaRegistryDekSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaRegistryDekSchemaRegistryClusterInput` via:
//
//	SchemaRegistryDekSchemaRegistryClusterArgs{...}
type SchemaRegistryDekSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaRegistryDekSchemaRegistryClusterOutput() SchemaRegistryDekSchemaRegistryClusterOutput
	ToSchemaRegistryDekSchemaRegistryClusterOutputWithContext(context.Context) SchemaRegistryDekSchemaRegistryClusterOutput
}

type SchemaRegistryDekSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryDekSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaRegistryDekSchemaRegistryClusterArgs) ToSchemaRegistryDekSchemaRegistryClusterOutput() SchemaRegistryDekSchemaRegistryClusterOutput {
	return i.ToSchemaRegistryDekSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaRegistryDekSchemaRegistryClusterArgs) ToSchemaRegistryDekSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryDekSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryDekSchemaRegistryClusterOutput)
}

func (i SchemaRegistryDekSchemaRegistryClusterArgs) ToSchemaRegistryDekSchemaRegistryClusterPtrOutput() SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryDekSchemaRegistryClusterArgs) ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryDekSchemaRegistryClusterOutput).ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaRegistryDekSchemaRegistryClusterPtrInput is an input type that accepts SchemaRegistryDekSchemaRegistryClusterArgs, SchemaRegistryDekSchemaRegistryClusterPtr and SchemaRegistryDekSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryDekSchemaRegistryClusterPtrInput` via:
//
//	        SchemaRegistryDekSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryDekSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaRegistryDekSchemaRegistryClusterPtrOutput() SchemaRegistryDekSchemaRegistryClusterPtrOutput
	ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaRegistryDekSchemaRegistryClusterPtrOutput
}

type schemaRegistryDekSchemaRegistryClusterPtrType SchemaRegistryDekSchemaRegistryClusterArgs

func SchemaRegistryDekSchemaRegistryClusterPtr(v *SchemaRegistryDekSchemaRegistryClusterArgs) SchemaRegistryDekSchemaRegistryClusterPtrInput {
	return (*schemaRegistryDekSchemaRegistryClusterPtrType)(v)
}

func (*schemaRegistryDekSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaRegistryDekSchemaRegistryClusterPtrType) ToSchemaRegistryDekSchemaRegistryClusterPtrOutput() SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryDekSchemaRegistryClusterPtrType) ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryDekSchemaRegistryClusterPtrOutput)
}

type SchemaRegistryDekSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaRegistryDekSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryDekSchemaRegistryClusterOutput) ToSchemaRegistryDekSchemaRegistryClusterOutput() SchemaRegistryDekSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryDekSchemaRegistryClusterOutput) ToSchemaRegistryDekSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryDekSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryDekSchemaRegistryClusterOutput) ToSchemaRegistryDekSchemaRegistryClusterPtrOutput() SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o.ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryDekSchemaRegistryClusterOutput) ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryDekSchemaRegistryCluster) *SchemaRegistryDekSchemaRegistryCluster {
		return &v
	}).(SchemaRegistryDekSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryDekSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryDekSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryDekSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryDekSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryDekSchemaRegistryClusterPtrOutput) ToSchemaRegistryDekSchemaRegistryClusterPtrOutput() SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryDekSchemaRegistryClusterPtrOutput) ToSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryDekSchemaRegistryClusterPtrOutput) Elem() SchemaRegistryDekSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaRegistryDekSchemaRegistryCluster) SchemaRegistryDekSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryDekSchemaRegistryCluster
		return ret
	}).(SchemaRegistryDekSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryDekSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryDekSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryKekCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// SchemaRegistryKekCredentialsInput is an input type that accepts SchemaRegistryKekCredentialsArgs and SchemaRegistryKekCredentialsOutput values.
// You can construct a concrete instance of `SchemaRegistryKekCredentialsInput` via:
//
//	SchemaRegistryKekCredentialsArgs{...}
type SchemaRegistryKekCredentialsInput interface {
	pulumi.Input

	ToSchemaRegistryKekCredentialsOutput() SchemaRegistryKekCredentialsOutput
	ToSchemaRegistryKekCredentialsOutputWithContext(context.Context) SchemaRegistryKekCredentialsOutput
}

type SchemaRegistryKekCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SchemaRegistryKekCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryKekCredentials)(nil)).Elem()
}

func (i SchemaRegistryKekCredentialsArgs) ToSchemaRegistryKekCredentialsOutput() SchemaRegistryKekCredentialsOutput {
	return i.ToSchemaRegistryKekCredentialsOutputWithContext(context.Background())
}

func (i SchemaRegistryKekCredentialsArgs) ToSchemaRegistryKekCredentialsOutputWithContext(ctx context.Context) SchemaRegistryKekCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryKekCredentialsOutput)
}

func (i SchemaRegistryKekCredentialsArgs) ToSchemaRegistryKekCredentialsPtrOutput() SchemaRegistryKekCredentialsPtrOutput {
	return i.ToSchemaRegistryKekCredentialsPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryKekCredentialsArgs) ToSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryKekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryKekCredentialsOutput).ToSchemaRegistryKekCredentialsPtrOutputWithContext(ctx)
}

// SchemaRegistryKekCredentialsPtrInput is an input type that accepts SchemaRegistryKekCredentialsArgs, SchemaRegistryKekCredentialsPtr and SchemaRegistryKekCredentialsPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryKekCredentialsPtrInput` via:
//
//	        SchemaRegistryKekCredentialsArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryKekCredentialsPtrInput interface {
	pulumi.Input

	ToSchemaRegistryKekCredentialsPtrOutput() SchemaRegistryKekCredentialsPtrOutput
	ToSchemaRegistryKekCredentialsPtrOutputWithContext(context.Context) SchemaRegistryKekCredentialsPtrOutput
}

type schemaRegistryKekCredentialsPtrType SchemaRegistryKekCredentialsArgs

func SchemaRegistryKekCredentialsPtr(v *SchemaRegistryKekCredentialsArgs) SchemaRegistryKekCredentialsPtrInput {
	return (*schemaRegistryKekCredentialsPtrType)(v)
}

func (*schemaRegistryKekCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryKekCredentials)(nil)).Elem()
}

func (i *schemaRegistryKekCredentialsPtrType) ToSchemaRegistryKekCredentialsPtrOutput() SchemaRegistryKekCredentialsPtrOutput {
	return i.ToSchemaRegistryKekCredentialsPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryKekCredentialsPtrType) ToSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryKekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryKekCredentialsPtrOutput)
}

type SchemaRegistryKekCredentialsOutput struct{ *pulumi.OutputState }

func (SchemaRegistryKekCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryKekCredentials)(nil)).Elem()
}

func (o SchemaRegistryKekCredentialsOutput) ToSchemaRegistryKekCredentialsOutput() SchemaRegistryKekCredentialsOutput {
	return o
}

func (o SchemaRegistryKekCredentialsOutput) ToSchemaRegistryKekCredentialsOutputWithContext(ctx context.Context) SchemaRegistryKekCredentialsOutput {
	return o
}

func (o SchemaRegistryKekCredentialsOutput) ToSchemaRegistryKekCredentialsPtrOutput() SchemaRegistryKekCredentialsPtrOutput {
	return o.ToSchemaRegistryKekCredentialsPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryKekCredentialsOutput) ToSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryKekCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryKekCredentials) *SchemaRegistryKekCredentials {
		return &v
	}).(SchemaRegistryKekCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryKekCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryKekCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryKekCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryKekCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SchemaRegistryKekCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryKekCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryKekCredentials)(nil)).Elem()
}

func (o SchemaRegistryKekCredentialsPtrOutput) ToSchemaRegistryKekCredentialsPtrOutput() SchemaRegistryKekCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryKekCredentialsPtrOutput) ToSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) SchemaRegistryKekCredentialsPtrOutput {
	return o
}

func (o SchemaRegistryKekCredentialsPtrOutput) Elem() SchemaRegistryKekCredentialsOutput {
	return o.ApplyT(func(v *SchemaRegistryKekCredentials) SchemaRegistryKekCredentials {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryKekCredentials
		return ret
	}).(SchemaRegistryKekCredentialsOutput)
}

// The Schema Registry API Key.
func (o SchemaRegistryKekCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryKekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o SchemaRegistryKekCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryKekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SchemaRegistryKekSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaRegistryKekSchemaRegistryClusterInput is an input type that accepts SchemaRegistryKekSchemaRegistryClusterArgs and SchemaRegistryKekSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaRegistryKekSchemaRegistryClusterInput` via:
//
//	SchemaRegistryKekSchemaRegistryClusterArgs{...}
type SchemaRegistryKekSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaRegistryKekSchemaRegistryClusterOutput() SchemaRegistryKekSchemaRegistryClusterOutput
	ToSchemaRegistryKekSchemaRegistryClusterOutputWithContext(context.Context) SchemaRegistryKekSchemaRegistryClusterOutput
}

type SchemaRegistryKekSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaRegistryKekSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaRegistryKekSchemaRegistryClusterArgs) ToSchemaRegistryKekSchemaRegistryClusterOutput() SchemaRegistryKekSchemaRegistryClusterOutput {
	return i.ToSchemaRegistryKekSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaRegistryKekSchemaRegistryClusterArgs) ToSchemaRegistryKekSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryKekSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryKekSchemaRegistryClusterOutput)
}

func (i SchemaRegistryKekSchemaRegistryClusterArgs) ToSchemaRegistryKekSchemaRegistryClusterPtrOutput() SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaRegistryKekSchemaRegistryClusterArgs) ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryKekSchemaRegistryClusterOutput).ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaRegistryKekSchemaRegistryClusterPtrInput is an input type that accepts SchemaRegistryKekSchemaRegistryClusterArgs, SchemaRegistryKekSchemaRegistryClusterPtr and SchemaRegistryKekSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaRegistryKekSchemaRegistryClusterPtrInput` via:
//
//	        SchemaRegistryKekSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaRegistryKekSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaRegistryKekSchemaRegistryClusterPtrOutput() SchemaRegistryKekSchemaRegistryClusterPtrOutput
	ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaRegistryKekSchemaRegistryClusterPtrOutput
}

type schemaRegistryKekSchemaRegistryClusterPtrType SchemaRegistryKekSchemaRegistryClusterArgs

func SchemaRegistryKekSchemaRegistryClusterPtr(v *SchemaRegistryKekSchemaRegistryClusterArgs) SchemaRegistryKekSchemaRegistryClusterPtrInput {
	return (*schemaRegistryKekSchemaRegistryClusterPtrType)(v)
}

func (*schemaRegistryKekSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaRegistryKekSchemaRegistryClusterPtrType) ToSchemaRegistryKekSchemaRegistryClusterPtrOutput() SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return i.ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaRegistryKekSchemaRegistryClusterPtrType) ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRegistryKekSchemaRegistryClusterPtrOutput)
}

type SchemaRegistryKekSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaRegistryKekSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryKekSchemaRegistryClusterOutput) ToSchemaRegistryKekSchemaRegistryClusterOutput() SchemaRegistryKekSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryKekSchemaRegistryClusterOutput) ToSchemaRegistryKekSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaRegistryKekSchemaRegistryClusterOutput {
	return o
}

func (o SchemaRegistryKekSchemaRegistryClusterOutput) ToSchemaRegistryKekSchemaRegistryClusterPtrOutput() SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o.ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaRegistryKekSchemaRegistryClusterOutput) ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRegistryKekSchemaRegistryCluster) *SchemaRegistryKekSchemaRegistryCluster {
		return &v
	}).(SchemaRegistryKekSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryKekSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaRegistryKekSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaRegistryKekSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaRegistryKekSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaRegistryKekSchemaRegistryClusterPtrOutput) ToSchemaRegistryKekSchemaRegistryClusterPtrOutput() SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryKekSchemaRegistryClusterPtrOutput) ToSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaRegistryKekSchemaRegistryClusterPtrOutput) Elem() SchemaRegistryKekSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaRegistryKekSchemaRegistryCluster) SchemaRegistryKekSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaRegistryKekSchemaRegistryCluster
		return ret
	}).(SchemaRegistryKekSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaRegistryKekSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaRegistryKekSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SchemaRuleset struct {
	DomainRules    []SchemaRulesetDomainRule    `pulumi:"domainRules"`
	MigrationRules []SchemaRulesetMigrationRule `pulumi:"migrationRules"`
}

// SchemaRulesetInput is an input type that accepts SchemaRulesetArgs and SchemaRulesetOutput values.
// You can construct a concrete instance of `SchemaRulesetInput` via:
//
//	SchemaRulesetArgs{...}
type SchemaRulesetInput interface {
	pulumi.Input

	ToSchemaRulesetOutput() SchemaRulesetOutput
	ToSchemaRulesetOutputWithContext(context.Context) SchemaRulesetOutput
}

type SchemaRulesetArgs struct {
	DomainRules    SchemaRulesetDomainRuleArrayInput    `pulumi:"domainRules"`
	MigrationRules SchemaRulesetMigrationRuleArrayInput `pulumi:"migrationRules"`
}

func (SchemaRulesetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRuleset)(nil)).Elem()
}

func (i SchemaRulesetArgs) ToSchemaRulesetOutput() SchemaRulesetOutput {
	return i.ToSchemaRulesetOutputWithContext(context.Background())
}

func (i SchemaRulesetArgs) ToSchemaRulesetOutputWithContext(ctx context.Context) SchemaRulesetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetOutput)
}

func (i SchemaRulesetArgs) ToSchemaRulesetPtrOutput() SchemaRulesetPtrOutput {
	return i.ToSchemaRulesetPtrOutputWithContext(context.Background())
}

func (i SchemaRulesetArgs) ToSchemaRulesetPtrOutputWithContext(ctx context.Context) SchemaRulesetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetOutput).ToSchemaRulesetPtrOutputWithContext(ctx)
}

// SchemaRulesetPtrInput is an input type that accepts SchemaRulesetArgs, SchemaRulesetPtr and SchemaRulesetPtrOutput values.
// You can construct a concrete instance of `SchemaRulesetPtrInput` via:
//
//	        SchemaRulesetArgs{...}
//
//	or:
//
//	        nil
type SchemaRulesetPtrInput interface {
	pulumi.Input

	ToSchemaRulesetPtrOutput() SchemaRulesetPtrOutput
	ToSchemaRulesetPtrOutputWithContext(context.Context) SchemaRulesetPtrOutput
}

type schemaRulesetPtrType SchemaRulesetArgs

func SchemaRulesetPtr(v *SchemaRulesetArgs) SchemaRulesetPtrInput {
	return (*schemaRulesetPtrType)(v)
}

func (*schemaRulesetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRuleset)(nil)).Elem()
}

func (i *schemaRulesetPtrType) ToSchemaRulesetPtrOutput() SchemaRulesetPtrOutput {
	return i.ToSchemaRulesetPtrOutputWithContext(context.Background())
}

func (i *schemaRulesetPtrType) ToSchemaRulesetPtrOutputWithContext(ctx context.Context) SchemaRulesetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetPtrOutput)
}

type SchemaRulesetOutput struct{ *pulumi.OutputState }

func (SchemaRulesetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRuleset)(nil)).Elem()
}

func (o SchemaRulesetOutput) ToSchemaRulesetOutput() SchemaRulesetOutput {
	return o
}

func (o SchemaRulesetOutput) ToSchemaRulesetOutputWithContext(ctx context.Context) SchemaRulesetOutput {
	return o
}

func (o SchemaRulesetOutput) ToSchemaRulesetPtrOutput() SchemaRulesetPtrOutput {
	return o.ToSchemaRulesetPtrOutputWithContext(context.Background())
}

func (o SchemaRulesetOutput) ToSchemaRulesetPtrOutputWithContext(ctx context.Context) SchemaRulesetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaRuleset) *SchemaRuleset {
		return &v
	}).(SchemaRulesetPtrOutput)
}

func (o SchemaRulesetOutput) DomainRules() SchemaRulesetDomainRuleArrayOutput {
	return o.ApplyT(func(v SchemaRuleset) []SchemaRulesetDomainRule { return v.DomainRules }).(SchemaRulesetDomainRuleArrayOutput)
}

func (o SchemaRulesetOutput) MigrationRules() SchemaRulesetMigrationRuleArrayOutput {
	return o.ApplyT(func(v SchemaRuleset) []SchemaRulesetMigrationRule { return v.MigrationRules }).(SchemaRulesetMigrationRuleArrayOutput)
}

type SchemaRulesetPtrOutput struct{ *pulumi.OutputState }

func (SchemaRulesetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaRuleset)(nil)).Elem()
}

func (o SchemaRulesetPtrOutput) ToSchemaRulesetPtrOutput() SchemaRulesetPtrOutput {
	return o
}

func (o SchemaRulesetPtrOutput) ToSchemaRulesetPtrOutputWithContext(ctx context.Context) SchemaRulesetPtrOutput {
	return o
}

func (o SchemaRulesetPtrOutput) Elem() SchemaRulesetOutput {
	return o.ApplyT(func(v *SchemaRuleset) SchemaRuleset {
		if v != nil {
			return *v
		}
		var ret SchemaRuleset
		return ret
	}).(SchemaRulesetOutput)
}

func (o SchemaRulesetPtrOutput) DomainRules() SchemaRulesetDomainRuleArrayOutput {
	return o.ApplyT(func(v *SchemaRuleset) []SchemaRulesetDomainRule {
		if v == nil {
			return nil
		}
		return v.DomainRules
	}).(SchemaRulesetDomainRuleArrayOutput)
}

func (o SchemaRulesetPtrOutput) MigrationRules() SchemaRulesetMigrationRuleArrayOutput {
	return o.ApplyT(func(v *SchemaRuleset) []SchemaRulesetMigrationRule {
		if v == nil {
			return nil
		}
		return v.MigrationRules
	}).(SchemaRulesetMigrationRuleArrayOutput)
}

type SchemaRulesetDomainRule struct {
	// An optional description of the rule.
	Doc *string `pulumi:"doc"`
	// The body of the rule, which is optional.
	Expr *string `pulumi:"expr"`
	// The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`.
	Kind *string `pulumi:"kind"`
	// The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
	Mode *string `pulumi:"mode"`
	// A user-defined name that can be used to reference the rule.
	Name *string `pulumi:"name"`
	// An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure *string `pulumi:"onFailure"`
	// An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
	OnSuccess *string `pulumi:"onSuccess"`
	// A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	//
	// > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
	//
	// > **Note:** `ruleset` and `metadata` attributes are available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.**Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
	Params map[string]string `pulumi:"params"`
	// The tags to which the rule applies, if any.
	Tags []string `pulumi:"tags"`
	// The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type *string `pulumi:"type"`
}

// SchemaRulesetDomainRuleInput is an input type that accepts SchemaRulesetDomainRuleArgs and SchemaRulesetDomainRuleOutput values.
// You can construct a concrete instance of `SchemaRulesetDomainRuleInput` via:
//
//	SchemaRulesetDomainRuleArgs{...}
type SchemaRulesetDomainRuleInput interface {
	pulumi.Input

	ToSchemaRulesetDomainRuleOutput() SchemaRulesetDomainRuleOutput
	ToSchemaRulesetDomainRuleOutputWithContext(context.Context) SchemaRulesetDomainRuleOutput
}

type SchemaRulesetDomainRuleArgs struct {
	// An optional description of the rule.
	Doc pulumi.StringPtrInput `pulumi:"doc"`
	// The body of the rule, which is optional.
	Expr pulumi.StringPtrInput `pulumi:"expr"`
	// The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// A user-defined name that can be used to reference the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure pulumi.StringPtrInput `pulumi:"onFailure"`
	// An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
	OnSuccess pulumi.StringPtrInput `pulumi:"onSuccess"`
	// A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	//
	// > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
	//
	// > **Note:** `ruleset` and `metadata` attributes are available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.**Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
	Params pulumi.StringMapInput `pulumi:"params"`
	// The tags to which the rule applies, if any.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SchemaRulesetDomainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRulesetDomainRule)(nil)).Elem()
}

func (i SchemaRulesetDomainRuleArgs) ToSchemaRulesetDomainRuleOutput() SchemaRulesetDomainRuleOutput {
	return i.ToSchemaRulesetDomainRuleOutputWithContext(context.Background())
}

func (i SchemaRulesetDomainRuleArgs) ToSchemaRulesetDomainRuleOutputWithContext(ctx context.Context) SchemaRulesetDomainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetDomainRuleOutput)
}

// SchemaRulesetDomainRuleArrayInput is an input type that accepts SchemaRulesetDomainRuleArray and SchemaRulesetDomainRuleArrayOutput values.
// You can construct a concrete instance of `SchemaRulesetDomainRuleArrayInput` via:
//
//	SchemaRulesetDomainRuleArray{ SchemaRulesetDomainRuleArgs{...} }
type SchemaRulesetDomainRuleArrayInput interface {
	pulumi.Input

	ToSchemaRulesetDomainRuleArrayOutput() SchemaRulesetDomainRuleArrayOutput
	ToSchemaRulesetDomainRuleArrayOutputWithContext(context.Context) SchemaRulesetDomainRuleArrayOutput
}

type SchemaRulesetDomainRuleArray []SchemaRulesetDomainRuleInput

func (SchemaRulesetDomainRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaRulesetDomainRule)(nil)).Elem()
}

func (i SchemaRulesetDomainRuleArray) ToSchemaRulesetDomainRuleArrayOutput() SchemaRulesetDomainRuleArrayOutput {
	return i.ToSchemaRulesetDomainRuleArrayOutputWithContext(context.Background())
}

func (i SchemaRulesetDomainRuleArray) ToSchemaRulesetDomainRuleArrayOutputWithContext(ctx context.Context) SchemaRulesetDomainRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetDomainRuleArrayOutput)
}

type SchemaRulesetDomainRuleOutput struct{ *pulumi.OutputState }

func (SchemaRulesetDomainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRulesetDomainRule)(nil)).Elem()
}

func (o SchemaRulesetDomainRuleOutput) ToSchemaRulesetDomainRuleOutput() SchemaRulesetDomainRuleOutput {
	return o
}

func (o SchemaRulesetDomainRuleOutput) ToSchemaRulesetDomainRuleOutputWithContext(ctx context.Context) SchemaRulesetDomainRuleOutput {
	return o
}

// An optional description of the rule.
func (o SchemaRulesetDomainRuleOutput) Doc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.Doc }).(pulumi.StringPtrOutput)
}

// The body of the rule, which is optional.
func (o SchemaRulesetDomainRuleOutput) Expr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.Expr }).(pulumi.StringPtrOutput)
}

// The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`.
func (o SchemaRulesetDomainRuleOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
func (o SchemaRulesetDomainRuleOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// A user-defined name that can be used to reference the rule.
func (o SchemaRulesetDomainRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
func (o SchemaRulesetDomainRuleOutput) OnFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.OnFailure }).(pulumi.StringPtrOutput)
}

// An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
func (o SchemaRulesetDomainRuleOutput) OnSuccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.OnSuccess }).(pulumi.StringPtrOutput)
}

// A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
//
// > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
//
// > **Note:** `ruleset` and `metadata` attributes are available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.**Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
func (o SchemaRulesetDomainRuleOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) map[string]string { return v.Params }).(pulumi.StringMapOutput)
}

// The tags to which the rule applies, if any.
func (o SchemaRulesetDomainRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
func (o SchemaRulesetDomainRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetDomainRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SchemaRulesetDomainRuleArrayOutput struct{ *pulumi.OutputState }

func (SchemaRulesetDomainRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaRulesetDomainRule)(nil)).Elem()
}

func (o SchemaRulesetDomainRuleArrayOutput) ToSchemaRulesetDomainRuleArrayOutput() SchemaRulesetDomainRuleArrayOutput {
	return o
}

func (o SchemaRulesetDomainRuleArrayOutput) ToSchemaRulesetDomainRuleArrayOutputWithContext(ctx context.Context) SchemaRulesetDomainRuleArrayOutput {
	return o
}

func (o SchemaRulesetDomainRuleArrayOutput) Index(i pulumi.IntInput) SchemaRulesetDomainRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaRulesetDomainRule {
		return vs[0].([]SchemaRulesetDomainRule)[vs[1].(int)]
	}).(SchemaRulesetDomainRuleOutput)
}

type SchemaRulesetMigrationRule struct {
	// An optional description of the rule.
	Doc *string `pulumi:"doc"`
	// The body of the rule, which is optional.
	Expr *string `pulumi:"expr"`
	// The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`.
	Kind *string `pulumi:"kind"`
	// The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
	Mode *string `pulumi:"mode"`
	Name *string `pulumi:"name"`
	// An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure *string `pulumi:"onFailure"`
	// An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
	OnSuccess *string `pulumi:"onSuccess"`
	// A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	//
	// > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
	//
	// > **Note:** `ruleset` and `metadata` attributes are available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.**Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
	Params map[string]string `pulumi:"params"`
	// The tags to which the rule applies, if any.
	Tags []string `pulumi:"tags"`
	// The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type *string `pulumi:"type"`
}

// SchemaRulesetMigrationRuleInput is an input type that accepts SchemaRulesetMigrationRuleArgs and SchemaRulesetMigrationRuleOutput values.
// You can construct a concrete instance of `SchemaRulesetMigrationRuleInput` via:
//
//	SchemaRulesetMigrationRuleArgs{...}
type SchemaRulesetMigrationRuleInput interface {
	pulumi.Input

	ToSchemaRulesetMigrationRuleOutput() SchemaRulesetMigrationRuleOutput
	ToSchemaRulesetMigrationRuleOutputWithContext(context.Context) SchemaRulesetMigrationRuleOutput
}

type SchemaRulesetMigrationRuleArgs struct {
	// An optional description of the rule.
	Doc pulumi.StringPtrInput `pulumi:"doc"`
	// The body of the rule, which is optional.
	Expr pulumi.StringPtrInput `pulumi:"expr"`
	// The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure pulumi.StringPtrInput `pulumi:"onFailure"`
	// An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
	OnSuccess pulumi.StringPtrInput `pulumi:"onSuccess"`
	// A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	//
	// > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
	//
	// > **Note:** `ruleset` and `metadata` attributes are available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.**Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
	Params pulumi.StringMapInput `pulumi:"params"`
	// The tags to which the rule applies, if any.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (SchemaRulesetMigrationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRulesetMigrationRule)(nil)).Elem()
}

func (i SchemaRulesetMigrationRuleArgs) ToSchemaRulesetMigrationRuleOutput() SchemaRulesetMigrationRuleOutput {
	return i.ToSchemaRulesetMigrationRuleOutputWithContext(context.Background())
}

func (i SchemaRulesetMigrationRuleArgs) ToSchemaRulesetMigrationRuleOutputWithContext(ctx context.Context) SchemaRulesetMigrationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetMigrationRuleOutput)
}

// SchemaRulesetMigrationRuleArrayInput is an input type that accepts SchemaRulesetMigrationRuleArray and SchemaRulesetMigrationRuleArrayOutput values.
// You can construct a concrete instance of `SchemaRulesetMigrationRuleArrayInput` via:
//
//	SchemaRulesetMigrationRuleArray{ SchemaRulesetMigrationRuleArgs{...} }
type SchemaRulesetMigrationRuleArrayInput interface {
	pulumi.Input

	ToSchemaRulesetMigrationRuleArrayOutput() SchemaRulesetMigrationRuleArrayOutput
	ToSchemaRulesetMigrationRuleArrayOutputWithContext(context.Context) SchemaRulesetMigrationRuleArrayOutput
}

type SchemaRulesetMigrationRuleArray []SchemaRulesetMigrationRuleInput

func (SchemaRulesetMigrationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaRulesetMigrationRule)(nil)).Elem()
}

func (i SchemaRulesetMigrationRuleArray) ToSchemaRulesetMigrationRuleArrayOutput() SchemaRulesetMigrationRuleArrayOutput {
	return i.ToSchemaRulesetMigrationRuleArrayOutputWithContext(context.Background())
}

func (i SchemaRulesetMigrationRuleArray) ToSchemaRulesetMigrationRuleArrayOutputWithContext(ctx context.Context) SchemaRulesetMigrationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaRulesetMigrationRuleArrayOutput)
}

type SchemaRulesetMigrationRuleOutput struct{ *pulumi.OutputState }

func (SchemaRulesetMigrationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaRulesetMigrationRule)(nil)).Elem()
}

func (o SchemaRulesetMigrationRuleOutput) ToSchemaRulesetMigrationRuleOutput() SchemaRulesetMigrationRuleOutput {
	return o
}

func (o SchemaRulesetMigrationRuleOutput) ToSchemaRulesetMigrationRuleOutputWithContext(ctx context.Context) SchemaRulesetMigrationRuleOutput {
	return o
}

// An optional description of the rule.
func (o SchemaRulesetMigrationRuleOutput) Doc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.Doc }).(pulumi.StringPtrOutput)
}

// The body of the rule, which is optional.
func (o SchemaRulesetMigrationRuleOutput) Expr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.Expr }).(pulumi.StringPtrOutput)
}

// The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`.
func (o SchemaRulesetMigrationRuleOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
func (o SchemaRulesetMigrationRuleOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o SchemaRulesetMigrationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
func (o SchemaRulesetMigrationRuleOutput) OnFailure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.OnFailure }).(pulumi.StringPtrOutput)
}

// An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
func (o SchemaRulesetMigrationRuleOutput) OnSuccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.OnSuccess }).(pulumi.StringPtrOutput)
}

// A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
//
// > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
//
// > **Note:** `ruleset` and `metadata` attributes are available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.**Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
func (o SchemaRulesetMigrationRuleOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) map[string]string { return v.Params }).(pulumi.StringMapOutput)
}

// The tags to which the rule applies, if any.
func (o SchemaRulesetMigrationRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
func (o SchemaRulesetMigrationRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SchemaRulesetMigrationRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SchemaRulesetMigrationRuleArrayOutput struct{ *pulumi.OutputState }

func (SchemaRulesetMigrationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaRulesetMigrationRule)(nil)).Elem()
}

func (o SchemaRulesetMigrationRuleArrayOutput) ToSchemaRulesetMigrationRuleArrayOutput() SchemaRulesetMigrationRuleArrayOutput {
	return o
}

func (o SchemaRulesetMigrationRuleArrayOutput) ToSchemaRulesetMigrationRuleArrayOutputWithContext(ctx context.Context) SchemaRulesetMigrationRuleArrayOutput {
	return o
}

func (o SchemaRulesetMigrationRuleArrayOutput) Index(i pulumi.IntInput) SchemaRulesetMigrationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaRulesetMigrationRule {
		return vs[0].([]SchemaRulesetMigrationRule)[vs[1].(int)]
	}).(SchemaRulesetMigrationRuleOutput)
}

type SchemaSchemaReference struct {
	// The name of the subject, representing the subject under which the referenced schema is registered.
	Name string `pulumi:"name"`
	// The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName string `pulumi:"subjectName"`
	// The version, representing the exact version of the schema under the registered subject.
	Version int `pulumi:"version"`
}

// SchemaSchemaReferenceInput is an input type that accepts SchemaSchemaReferenceArgs and SchemaSchemaReferenceOutput values.
// You can construct a concrete instance of `SchemaSchemaReferenceInput` via:
//
//	SchemaSchemaReferenceArgs{...}
type SchemaSchemaReferenceInput interface {
	pulumi.Input

	ToSchemaSchemaReferenceOutput() SchemaSchemaReferenceOutput
	ToSchemaSchemaReferenceOutputWithContext(context.Context) SchemaSchemaReferenceOutput
}

type SchemaSchemaReferenceArgs struct {
	// The name of the subject, representing the subject under which the referenced schema is registered.
	Name pulumi.StringInput `pulumi:"name"`
	// The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// The version, representing the exact version of the schema under the registered subject.
	Version pulumi.IntInput `pulumi:"version"`
}

func (SchemaSchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaReference)(nil)).Elem()
}

func (i SchemaSchemaReferenceArgs) ToSchemaSchemaReferenceOutput() SchemaSchemaReferenceOutput {
	return i.ToSchemaSchemaReferenceOutputWithContext(context.Background())
}

func (i SchemaSchemaReferenceArgs) ToSchemaSchemaReferenceOutputWithContext(ctx context.Context) SchemaSchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaReferenceOutput)
}

// SchemaSchemaReferenceArrayInput is an input type that accepts SchemaSchemaReferenceArray and SchemaSchemaReferenceArrayOutput values.
// You can construct a concrete instance of `SchemaSchemaReferenceArrayInput` via:
//
//	SchemaSchemaReferenceArray{ SchemaSchemaReferenceArgs{...} }
type SchemaSchemaReferenceArrayInput interface {
	pulumi.Input

	ToSchemaSchemaReferenceArrayOutput() SchemaSchemaReferenceArrayOutput
	ToSchemaSchemaReferenceArrayOutputWithContext(context.Context) SchemaSchemaReferenceArrayOutput
}

type SchemaSchemaReferenceArray []SchemaSchemaReferenceInput

func (SchemaSchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaSchemaReference)(nil)).Elem()
}

func (i SchemaSchemaReferenceArray) ToSchemaSchemaReferenceArrayOutput() SchemaSchemaReferenceArrayOutput {
	return i.ToSchemaSchemaReferenceArrayOutputWithContext(context.Background())
}

func (i SchemaSchemaReferenceArray) ToSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) SchemaSchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaReferenceArrayOutput)
}

type SchemaSchemaReferenceOutput struct{ *pulumi.OutputState }

func (SchemaSchemaReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaReference)(nil)).Elem()
}

func (o SchemaSchemaReferenceOutput) ToSchemaSchemaReferenceOutput() SchemaSchemaReferenceOutput {
	return o
}

func (o SchemaSchemaReferenceOutput) ToSchemaSchemaReferenceOutputWithContext(ctx context.Context) SchemaSchemaReferenceOutput {
	return o
}

// The name of the subject, representing the subject under which the referenced schema is registered.
func (o SchemaSchemaReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaSchemaReference) string { return v.Name }).(pulumi.StringOutput)
}

// The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
func (o SchemaSchemaReferenceOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaSchemaReference) string { return v.SubjectName }).(pulumi.StringOutput)
}

// The version, representing the exact version of the schema under the registered subject.
func (o SchemaSchemaReferenceOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v SchemaSchemaReference) int { return v.Version }).(pulumi.IntOutput)
}

type SchemaSchemaReferenceArrayOutput struct{ *pulumi.OutputState }

func (SchemaSchemaReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SchemaSchemaReference)(nil)).Elem()
}

func (o SchemaSchemaReferenceArrayOutput) ToSchemaSchemaReferenceArrayOutput() SchemaSchemaReferenceArrayOutput {
	return o
}

func (o SchemaSchemaReferenceArrayOutput) ToSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) SchemaSchemaReferenceArrayOutput {
	return o
}

func (o SchemaSchemaReferenceArrayOutput) Index(i pulumi.IntInput) SchemaSchemaReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SchemaSchemaReference {
		return vs[0].([]SchemaSchemaReference)[vs[1].(int)]
	}).(SchemaSchemaReferenceOutput)
}

type SchemaSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SchemaSchemaRegistryClusterInput is an input type that accepts SchemaSchemaRegistryClusterArgs and SchemaSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SchemaSchemaRegistryClusterInput` via:
//
//	SchemaSchemaRegistryClusterArgs{...}
type SchemaSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSchemaSchemaRegistryClusterOutput() SchemaSchemaRegistryClusterOutput
	ToSchemaSchemaRegistryClusterOutputWithContext(context.Context) SchemaSchemaRegistryClusterOutput
}

type SchemaSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SchemaSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterOutput() SchemaSchemaRegistryClusterOutput {
	return i.ToSchemaSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaRegistryClusterOutput)
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return i.ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SchemaSchemaRegistryClusterArgs) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaRegistryClusterOutput).ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SchemaSchemaRegistryClusterPtrInput is an input type that accepts SchemaSchemaRegistryClusterArgs, SchemaSchemaRegistryClusterPtr and SchemaSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SchemaSchemaRegistryClusterPtrInput` via:
//
//	        SchemaSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SchemaSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput
	ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Context) SchemaSchemaRegistryClusterPtrOutput
}

type schemaSchemaRegistryClusterPtrType SchemaSchemaRegistryClusterArgs

func SchemaSchemaRegistryClusterPtr(v *SchemaSchemaRegistryClusterArgs) SchemaSchemaRegistryClusterPtrInput {
	return (*schemaSchemaRegistryClusterPtrType)(v)
}

func (*schemaSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i *schemaSchemaRegistryClusterPtrType) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return i.ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *schemaSchemaRegistryClusterPtrType) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SchemaSchemaRegistryClusterPtrOutput)
}

type SchemaSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SchemaSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterOutput() SchemaSchemaRegistryClusterOutput {
	return o
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterOutput {
	return o
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return o.ToSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SchemaSchemaRegistryClusterOutput) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SchemaSchemaRegistryCluster) *SchemaSchemaRegistryCluster {
		return &v
	}).(SchemaSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SchemaSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SchemaSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SchemaSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o SchemaSchemaRegistryClusterPtrOutput) ToSchemaSchemaRegistryClusterPtrOutput() SchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaSchemaRegistryClusterPtrOutput) ToSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o SchemaSchemaRegistryClusterPtrOutput) Elem() SchemaSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SchemaSchemaRegistryCluster) SchemaSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SchemaSchemaRegistryCluster
		return ret
	}).(SchemaSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SchemaSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SchemaSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SubjectConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// SubjectConfigCredentialsInput is an input type that accepts SubjectConfigCredentialsArgs and SubjectConfigCredentialsOutput values.
// You can construct a concrete instance of `SubjectConfigCredentialsInput` via:
//
//	SubjectConfigCredentialsArgs{...}
type SubjectConfigCredentialsInput interface {
	pulumi.Input

	ToSubjectConfigCredentialsOutput() SubjectConfigCredentialsOutput
	ToSubjectConfigCredentialsOutputWithContext(context.Context) SubjectConfigCredentialsOutput
}

type SubjectConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SubjectConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigCredentials)(nil)).Elem()
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsOutput() SubjectConfigCredentialsOutput {
	return i.ToSubjectConfigCredentialsOutputWithContext(context.Background())
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsOutputWithContext(ctx context.Context) SubjectConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigCredentialsOutput)
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return i.ToSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i SubjectConfigCredentialsArgs) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigCredentialsOutput).ToSubjectConfigCredentialsPtrOutputWithContext(ctx)
}

// SubjectConfigCredentialsPtrInput is an input type that accepts SubjectConfigCredentialsArgs, SubjectConfigCredentialsPtr and SubjectConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `SubjectConfigCredentialsPtrInput` via:
//
//	        SubjectConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type SubjectConfigCredentialsPtrInput interface {
	pulumi.Input

	ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput
	ToSubjectConfigCredentialsPtrOutputWithContext(context.Context) SubjectConfigCredentialsPtrOutput
}

type subjectConfigCredentialsPtrType SubjectConfigCredentialsArgs

func SubjectConfigCredentialsPtr(v *SubjectConfigCredentialsArgs) SubjectConfigCredentialsPtrInput {
	return (*subjectConfigCredentialsPtrType)(v)
}

func (*subjectConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigCredentials)(nil)).Elem()
}

func (i *subjectConfigCredentialsPtrType) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return i.ToSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *subjectConfigCredentialsPtrType) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigCredentialsPtrOutput)
}

type SubjectConfigCredentialsOutput struct{ *pulumi.OutputState }

func (SubjectConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigCredentials)(nil)).Elem()
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsOutput() SubjectConfigCredentialsOutput {
	return o
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsOutputWithContext(ctx context.Context) SubjectConfigCredentialsOutput {
	return o
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return o.ToSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o SubjectConfigCredentialsOutput) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectConfigCredentials) *SubjectConfigCredentials {
		return &v
	}).(SubjectConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SubjectConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SubjectConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SubjectConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SubjectConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigCredentials)(nil)).Elem()
}

func (o SubjectConfigCredentialsPtrOutput) ToSubjectConfigCredentialsPtrOutput() SubjectConfigCredentialsPtrOutput {
	return o
}

func (o SubjectConfigCredentialsPtrOutput) ToSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) SubjectConfigCredentialsPtrOutput {
	return o
}

func (o SubjectConfigCredentialsPtrOutput) Elem() SubjectConfigCredentialsOutput {
	return o.ApplyT(func(v *SubjectConfigCredentials) SubjectConfigCredentials {
		if v != nil {
			return *v
		}
		var ret SubjectConfigCredentials
		return ret
	}).(SubjectConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o SubjectConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SubjectConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SubjectConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SubjectConfigSchemaRegistryClusterInput is an input type that accepts SubjectConfigSchemaRegistryClusterArgs and SubjectConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SubjectConfigSchemaRegistryClusterInput` via:
//
//	SubjectConfigSchemaRegistryClusterArgs{...}
type SubjectConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSubjectConfigSchemaRegistryClusterOutput() SubjectConfigSchemaRegistryClusterOutput
	ToSubjectConfigSchemaRegistryClusterOutputWithContext(context.Context) SubjectConfigSchemaRegistryClusterOutput
}

type SubjectConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SubjectConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterOutput() SubjectConfigSchemaRegistryClusterOutput {
	return i.ToSubjectConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigSchemaRegistryClusterOutput)
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SubjectConfigSchemaRegistryClusterArgs) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigSchemaRegistryClusterOutput).ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SubjectConfigSchemaRegistryClusterPtrInput is an input type that accepts SubjectConfigSchemaRegistryClusterArgs, SubjectConfigSchemaRegistryClusterPtr and SubjectConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SubjectConfigSchemaRegistryClusterPtrInput` via:
//
//	        SubjectConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SubjectConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput
	ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) SubjectConfigSchemaRegistryClusterPtrOutput
}

type subjectConfigSchemaRegistryClusterPtrType SubjectConfigSchemaRegistryClusterArgs

func SubjectConfigSchemaRegistryClusterPtr(v *SubjectConfigSchemaRegistryClusterArgs) SubjectConfigSchemaRegistryClusterPtrInput {
	return (*subjectConfigSchemaRegistryClusterPtrType)(v)
}

func (*subjectConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *subjectConfigSchemaRegistryClusterPtrType) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *subjectConfigSchemaRegistryClusterPtrType) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectConfigSchemaRegistryClusterPtrOutput)
}

type SubjectConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SubjectConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterOutput() SubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SubjectConfigSchemaRegistryClusterOutput) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectConfigSchemaRegistryCluster) *SubjectConfigSchemaRegistryCluster {
		return &v
	}).(SubjectConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SubjectConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SubjectConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectConfigSchemaRegistryClusterPtrOutput) ToSubjectConfigSchemaRegistryClusterPtrOutput() SubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterPtrOutput) ToSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectConfigSchemaRegistryClusterPtrOutput) Elem() SubjectConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SubjectConfigSchemaRegistryCluster) SubjectConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SubjectConfigSchemaRegistryCluster
		return ret
	}).(SubjectConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type SubjectModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// SubjectModeCredentialsInput is an input type that accepts SubjectModeCredentialsArgs and SubjectModeCredentialsOutput values.
// You can construct a concrete instance of `SubjectModeCredentialsInput` via:
//
//	SubjectModeCredentialsArgs{...}
type SubjectModeCredentialsInput interface {
	pulumi.Input

	ToSubjectModeCredentialsOutput() SubjectModeCredentialsOutput
	ToSubjectModeCredentialsOutputWithContext(context.Context) SubjectModeCredentialsOutput
}

type SubjectModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (SubjectModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeCredentials)(nil)).Elem()
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsOutput() SubjectModeCredentialsOutput {
	return i.ToSubjectModeCredentialsOutputWithContext(context.Background())
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsOutputWithContext(ctx context.Context) SubjectModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeCredentialsOutput)
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return i.ToSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i SubjectModeCredentialsArgs) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeCredentialsOutput).ToSubjectModeCredentialsPtrOutputWithContext(ctx)
}

// SubjectModeCredentialsPtrInput is an input type that accepts SubjectModeCredentialsArgs, SubjectModeCredentialsPtr and SubjectModeCredentialsPtrOutput values.
// You can construct a concrete instance of `SubjectModeCredentialsPtrInput` via:
//
//	        SubjectModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type SubjectModeCredentialsPtrInput interface {
	pulumi.Input

	ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput
	ToSubjectModeCredentialsPtrOutputWithContext(context.Context) SubjectModeCredentialsPtrOutput
}

type subjectModeCredentialsPtrType SubjectModeCredentialsArgs

func SubjectModeCredentialsPtr(v *SubjectModeCredentialsArgs) SubjectModeCredentialsPtrInput {
	return (*subjectModeCredentialsPtrType)(v)
}

func (*subjectModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeCredentials)(nil)).Elem()
}

func (i *subjectModeCredentialsPtrType) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return i.ToSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *subjectModeCredentialsPtrType) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeCredentialsPtrOutput)
}

type SubjectModeCredentialsOutput struct{ *pulumi.OutputState }

func (SubjectModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeCredentials)(nil)).Elem()
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsOutput() SubjectModeCredentialsOutput {
	return o
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsOutputWithContext(ctx context.Context) SubjectModeCredentialsOutput {
	return o
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return o.ToSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (o SubjectModeCredentialsOutput) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectModeCredentials) *SubjectModeCredentials {
		return &v
	}).(SubjectModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o SubjectModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SubjectModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type SubjectModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (SubjectModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeCredentials)(nil)).Elem()
}

func (o SubjectModeCredentialsPtrOutput) ToSubjectModeCredentialsPtrOutput() SubjectModeCredentialsPtrOutput {
	return o
}

func (o SubjectModeCredentialsPtrOutput) ToSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) SubjectModeCredentialsPtrOutput {
	return o
}

func (o SubjectModeCredentialsPtrOutput) Elem() SubjectModeCredentialsOutput {
	return o.ApplyT(func(v *SubjectModeCredentials) SubjectModeCredentials {
		if v != nil {
			return *v
		}
		var ret SubjectModeCredentials
		return ret
	}).(SubjectModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o SubjectModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o SubjectModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type SubjectModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// SubjectModeSchemaRegistryClusterInput is an input type that accepts SubjectModeSchemaRegistryClusterArgs and SubjectModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `SubjectModeSchemaRegistryClusterInput` via:
//
//	SubjectModeSchemaRegistryClusterArgs{...}
type SubjectModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToSubjectModeSchemaRegistryClusterOutput() SubjectModeSchemaRegistryClusterOutput
	ToSubjectModeSchemaRegistryClusterOutputWithContext(context.Context) SubjectModeSchemaRegistryClusterOutput
}

type SubjectModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (SubjectModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterOutput() SubjectModeSchemaRegistryClusterOutput {
	return i.ToSubjectModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeSchemaRegistryClusterOutput)
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i SubjectModeSchemaRegistryClusterArgs) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeSchemaRegistryClusterOutput).ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// SubjectModeSchemaRegistryClusterPtrInput is an input type that accepts SubjectModeSchemaRegistryClusterArgs, SubjectModeSchemaRegistryClusterPtr and SubjectModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `SubjectModeSchemaRegistryClusterPtrInput` via:
//
//	        SubjectModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type SubjectModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput
	ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Context) SubjectModeSchemaRegistryClusterPtrOutput
}

type subjectModeSchemaRegistryClusterPtrType SubjectModeSchemaRegistryClusterArgs

func SubjectModeSchemaRegistryClusterPtr(v *SubjectModeSchemaRegistryClusterArgs) SubjectModeSchemaRegistryClusterPtrInput {
	return (*subjectModeSchemaRegistryClusterPtrType)(v)
}

func (*subjectModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *subjectModeSchemaRegistryClusterPtrType) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *subjectModeSchemaRegistryClusterPtrType) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubjectModeSchemaRegistryClusterPtrOutput)
}

type SubjectModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (SubjectModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterOutput() SubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return o.ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o SubjectModeSchemaRegistryClusterOutput) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubjectModeSchemaRegistryCluster) *SubjectModeSchemaRegistryCluster {
		return &v
	}).(SubjectModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v SubjectModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type SubjectModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (SubjectModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o SubjectModeSchemaRegistryClusterPtrOutput) ToSubjectModeSchemaRegistryClusterPtrOutput() SubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterPtrOutput) ToSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) SubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o SubjectModeSchemaRegistryClusterPtrOutput) Elem() SubjectModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *SubjectModeSchemaRegistryCluster) SubjectModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret SubjectModeSchemaRegistryCluster
		return ret
	}).(SubjectModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o SubjectModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubjectModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TagBindingCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// TagBindingCredentialsInput is an input type that accepts TagBindingCredentialsArgs and TagBindingCredentialsOutput values.
// You can construct a concrete instance of `TagBindingCredentialsInput` via:
//
//	TagBindingCredentialsArgs{...}
type TagBindingCredentialsInput interface {
	pulumi.Input

	ToTagBindingCredentialsOutput() TagBindingCredentialsOutput
	ToTagBindingCredentialsOutputWithContext(context.Context) TagBindingCredentialsOutput
}

type TagBindingCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (TagBindingCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagBindingCredentials)(nil)).Elem()
}

func (i TagBindingCredentialsArgs) ToTagBindingCredentialsOutput() TagBindingCredentialsOutput {
	return i.ToTagBindingCredentialsOutputWithContext(context.Background())
}

func (i TagBindingCredentialsArgs) ToTagBindingCredentialsOutputWithContext(ctx context.Context) TagBindingCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagBindingCredentialsOutput)
}

func (i TagBindingCredentialsArgs) ToTagBindingCredentialsPtrOutput() TagBindingCredentialsPtrOutput {
	return i.ToTagBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i TagBindingCredentialsArgs) ToTagBindingCredentialsPtrOutputWithContext(ctx context.Context) TagBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagBindingCredentialsOutput).ToTagBindingCredentialsPtrOutputWithContext(ctx)
}

// TagBindingCredentialsPtrInput is an input type that accepts TagBindingCredentialsArgs, TagBindingCredentialsPtr and TagBindingCredentialsPtrOutput values.
// You can construct a concrete instance of `TagBindingCredentialsPtrInput` via:
//
//	        TagBindingCredentialsArgs{...}
//
//	or:
//
//	        nil
type TagBindingCredentialsPtrInput interface {
	pulumi.Input

	ToTagBindingCredentialsPtrOutput() TagBindingCredentialsPtrOutput
	ToTagBindingCredentialsPtrOutputWithContext(context.Context) TagBindingCredentialsPtrOutput
}

type tagBindingCredentialsPtrType TagBindingCredentialsArgs

func TagBindingCredentialsPtr(v *TagBindingCredentialsArgs) TagBindingCredentialsPtrInput {
	return (*tagBindingCredentialsPtrType)(v)
}

func (*tagBindingCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagBindingCredentials)(nil)).Elem()
}

func (i *tagBindingCredentialsPtrType) ToTagBindingCredentialsPtrOutput() TagBindingCredentialsPtrOutput {
	return i.ToTagBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i *tagBindingCredentialsPtrType) ToTagBindingCredentialsPtrOutputWithContext(ctx context.Context) TagBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagBindingCredentialsPtrOutput)
}

type TagBindingCredentialsOutput struct{ *pulumi.OutputState }

func (TagBindingCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagBindingCredentials)(nil)).Elem()
}

func (o TagBindingCredentialsOutput) ToTagBindingCredentialsOutput() TagBindingCredentialsOutput {
	return o
}

func (o TagBindingCredentialsOutput) ToTagBindingCredentialsOutputWithContext(ctx context.Context) TagBindingCredentialsOutput {
	return o
}

func (o TagBindingCredentialsOutput) ToTagBindingCredentialsPtrOutput() TagBindingCredentialsPtrOutput {
	return o.ToTagBindingCredentialsPtrOutputWithContext(context.Background())
}

func (o TagBindingCredentialsOutput) ToTagBindingCredentialsPtrOutputWithContext(ctx context.Context) TagBindingCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagBindingCredentials) *TagBindingCredentials {
		return &v
	}).(TagBindingCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o TagBindingCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TagBindingCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o TagBindingCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v TagBindingCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type TagBindingCredentialsPtrOutput struct{ *pulumi.OutputState }

func (TagBindingCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagBindingCredentials)(nil)).Elem()
}

func (o TagBindingCredentialsPtrOutput) ToTagBindingCredentialsPtrOutput() TagBindingCredentialsPtrOutput {
	return o
}

func (o TagBindingCredentialsPtrOutput) ToTagBindingCredentialsPtrOutputWithContext(ctx context.Context) TagBindingCredentialsPtrOutput {
	return o
}

func (o TagBindingCredentialsPtrOutput) Elem() TagBindingCredentialsOutput {
	return o.ApplyT(func(v *TagBindingCredentials) TagBindingCredentials {
		if v != nil {
			return *v
		}
		var ret TagBindingCredentials
		return ret
	}).(TagBindingCredentialsOutput)
}

// The Schema Registry API Key.
func (o TagBindingCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o TagBindingCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type TagBindingSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// TagBindingSchemaRegistryClusterInput is an input type that accepts TagBindingSchemaRegistryClusterArgs and TagBindingSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `TagBindingSchemaRegistryClusterInput` via:
//
//	TagBindingSchemaRegistryClusterArgs{...}
type TagBindingSchemaRegistryClusterInput interface {
	pulumi.Input

	ToTagBindingSchemaRegistryClusterOutput() TagBindingSchemaRegistryClusterOutput
	ToTagBindingSchemaRegistryClusterOutputWithContext(context.Context) TagBindingSchemaRegistryClusterOutput
}

type TagBindingSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TagBindingSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i TagBindingSchemaRegistryClusterArgs) ToTagBindingSchemaRegistryClusterOutput() TagBindingSchemaRegistryClusterOutput {
	return i.ToTagBindingSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i TagBindingSchemaRegistryClusterArgs) ToTagBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) TagBindingSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagBindingSchemaRegistryClusterOutput)
}

func (i TagBindingSchemaRegistryClusterArgs) ToTagBindingSchemaRegistryClusterPtrOutput() TagBindingSchemaRegistryClusterPtrOutput {
	return i.ToTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i TagBindingSchemaRegistryClusterArgs) ToTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagBindingSchemaRegistryClusterOutput).ToTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// TagBindingSchemaRegistryClusterPtrInput is an input type that accepts TagBindingSchemaRegistryClusterArgs, TagBindingSchemaRegistryClusterPtr and TagBindingSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `TagBindingSchemaRegistryClusterPtrInput` via:
//
//	        TagBindingSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type TagBindingSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToTagBindingSchemaRegistryClusterPtrOutput() TagBindingSchemaRegistryClusterPtrOutput
	ToTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Context) TagBindingSchemaRegistryClusterPtrOutput
}

type tagBindingSchemaRegistryClusterPtrType TagBindingSchemaRegistryClusterArgs

func TagBindingSchemaRegistryClusterPtr(v *TagBindingSchemaRegistryClusterArgs) TagBindingSchemaRegistryClusterPtrInput {
	return (*tagBindingSchemaRegistryClusterPtrType)(v)
}

func (*tagBindingSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i *tagBindingSchemaRegistryClusterPtrType) ToTagBindingSchemaRegistryClusterPtrOutput() TagBindingSchemaRegistryClusterPtrOutput {
	return i.ToTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *tagBindingSchemaRegistryClusterPtrType) ToTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagBindingSchemaRegistryClusterPtrOutput)
}

type TagBindingSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (TagBindingSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o TagBindingSchemaRegistryClusterOutput) ToTagBindingSchemaRegistryClusterOutput() TagBindingSchemaRegistryClusterOutput {
	return o
}

func (o TagBindingSchemaRegistryClusterOutput) ToTagBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) TagBindingSchemaRegistryClusterOutput {
	return o
}

func (o TagBindingSchemaRegistryClusterOutput) ToTagBindingSchemaRegistryClusterPtrOutput() TagBindingSchemaRegistryClusterPtrOutput {
	return o.ToTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o TagBindingSchemaRegistryClusterOutput) ToTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagBindingSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagBindingSchemaRegistryCluster) *TagBindingSchemaRegistryCluster {
		return &v
	}).(TagBindingSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o TagBindingSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TagBindingSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type TagBindingSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (TagBindingSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o TagBindingSchemaRegistryClusterPtrOutput) ToTagBindingSchemaRegistryClusterPtrOutput() TagBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o TagBindingSchemaRegistryClusterPtrOutput) ToTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o TagBindingSchemaRegistryClusterPtrOutput) Elem() TagBindingSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *TagBindingSchemaRegistryCluster) TagBindingSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret TagBindingSchemaRegistryCluster
		return ret
	}).(TagBindingSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o TagBindingSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagBindingSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TagCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// TagCredentialsInput is an input type that accepts TagCredentialsArgs and TagCredentialsOutput values.
// You can construct a concrete instance of `TagCredentialsInput` via:
//
//	TagCredentialsArgs{...}
type TagCredentialsInput interface {
	pulumi.Input

	ToTagCredentialsOutput() TagCredentialsOutput
	ToTagCredentialsOutputWithContext(context.Context) TagCredentialsOutput
}

type TagCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (TagCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCredentials)(nil)).Elem()
}

func (i TagCredentialsArgs) ToTagCredentialsOutput() TagCredentialsOutput {
	return i.ToTagCredentialsOutputWithContext(context.Background())
}

func (i TagCredentialsArgs) ToTagCredentialsOutputWithContext(ctx context.Context) TagCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCredentialsOutput)
}

func (i TagCredentialsArgs) ToTagCredentialsPtrOutput() TagCredentialsPtrOutput {
	return i.ToTagCredentialsPtrOutputWithContext(context.Background())
}

func (i TagCredentialsArgs) ToTagCredentialsPtrOutputWithContext(ctx context.Context) TagCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCredentialsOutput).ToTagCredentialsPtrOutputWithContext(ctx)
}

// TagCredentialsPtrInput is an input type that accepts TagCredentialsArgs, TagCredentialsPtr and TagCredentialsPtrOutput values.
// You can construct a concrete instance of `TagCredentialsPtrInput` via:
//
//	        TagCredentialsArgs{...}
//
//	or:
//
//	        nil
type TagCredentialsPtrInput interface {
	pulumi.Input

	ToTagCredentialsPtrOutput() TagCredentialsPtrOutput
	ToTagCredentialsPtrOutputWithContext(context.Context) TagCredentialsPtrOutput
}

type tagCredentialsPtrType TagCredentialsArgs

func TagCredentialsPtr(v *TagCredentialsArgs) TagCredentialsPtrInput {
	return (*tagCredentialsPtrType)(v)
}

func (*tagCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagCredentials)(nil)).Elem()
}

func (i *tagCredentialsPtrType) ToTagCredentialsPtrOutput() TagCredentialsPtrOutput {
	return i.ToTagCredentialsPtrOutputWithContext(context.Background())
}

func (i *tagCredentialsPtrType) ToTagCredentialsPtrOutputWithContext(ctx context.Context) TagCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagCredentialsPtrOutput)
}

type TagCredentialsOutput struct{ *pulumi.OutputState }

func (TagCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagCredentials)(nil)).Elem()
}

func (o TagCredentialsOutput) ToTagCredentialsOutput() TagCredentialsOutput {
	return o
}

func (o TagCredentialsOutput) ToTagCredentialsOutputWithContext(ctx context.Context) TagCredentialsOutput {
	return o
}

func (o TagCredentialsOutput) ToTagCredentialsPtrOutput() TagCredentialsPtrOutput {
	return o.ToTagCredentialsPtrOutputWithContext(context.Background())
}

func (o TagCredentialsOutput) ToTagCredentialsPtrOutputWithContext(ctx context.Context) TagCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagCredentials) *TagCredentials {
		return &v
	}).(TagCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o TagCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TagCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o TagCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v TagCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type TagCredentialsPtrOutput struct{ *pulumi.OutputState }

func (TagCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagCredentials)(nil)).Elem()
}

func (o TagCredentialsPtrOutput) ToTagCredentialsPtrOutput() TagCredentialsPtrOutput {
	return o
}

func (o TagCredentialsPtrOutput) ToTagCredentialsPtrOutputWithContext(ctx context.Context) TagCredentialsPtrOutput {
	return o
}

func (o TagCredentialsPtrOutput) Elem() TagCredentialsOutput {
	return o.ApplyT(func(v *TagCredentials) TagCredentials {
		if v != nil {
			return *v
		}
		var ret TagCredentials
		return ret
	}).(TagCredentialsOutput)
}

// The Schema Registry API Key.
func (o TagCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o TagCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type TagSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// TagSchemaRegistryClusterInput is an input type that accepts TagSchemaRegistryClusterArgs and TagSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `TagSchemaRegistryClusterInput` via:
//
//	TagSchemaRegistryClusterArgs{...}
type TagSchemaRegistryClusterInput interface {
	pulumi.Input

	ToTagSchemaRegistryClusterOutput() TagSchemaRegistryClusterOutput
	ToTagSchemaRegistryClusterOutputWithContext(context.Context) TagSchemaRegistryClusterOutput
}

type TagSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TagSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagSchemaRegistryCluster)(nil)).Elem()
}

func (i TagSchemaRegistryClusterArgs) ToTagSchemaRegistryClusterOutput() TagSchemaRegistryClusterOutput {
	return i.ToTagSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i TagSchemaRegistryClusterArgs) ToTagSchemaRegistryClusterOutputWithContext(ctx context.Context) TagSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSchemaRegistryClusterOutput)
}

func (i TagSchemaRegistryClusterArgs) ToTagSchemaRegistryClusterPtrOutput() TagSchemaRegistryClusterPtrOutput {
	return i.ToTagSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i TagSchemaRegistryClusterArgs) ToTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSchemaRegistryClusterOutput).ToTagSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// TagSchemaRegistryClusterPtrInput is an input type that accepts TagSchemaRegistryClusterArgs, TagSchemaRegistryClusterPtr and TagSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `TagSchemaRegistryClusterPtrInput` via:
//
//	        TagSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type TagSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToTagSchemaRegistryClusterPtrOutput() TagSchemaRegistryClusterPtrOutput
	ToTagSchemaRegistryClusterPtrOutputWithContext(context.Context) TagSchemaRegistryClusterPtrOutput
}

type tagSchemaRegistryClusterPtrType TagSchemaRegistryClusterArgs

func TagSchemaRegistryClusterPtr(v *TagSchemaRegistryClusterArgs) TagSchemaRegistryClusterPtrInput {
	return (*tagSchemaRegistryClusterPtrType)(v)
}

func (*tagSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSchemaRegistryCluster)(nil)).Elem()
}

func (i *tagSchemaRegistryClusterPtrType) ToTagSchemaRegistryClusterPtrOutput() TagSchemaRegistryClusterPtrOutput {
	return i.ToTagSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *tagSchemaRegistryClusterPtrType) ToTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagSchemaRegistryClusterPtrOutput)
}

type TagSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (TagSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagSchemaRegistryCluster)(nil)).Elem()
}

func (o TagSchemaRegistryClusterOutput) ToTagSchemaRegistryClusterOutput() TagSchemaRegistryClusterOutput {
	return o
}

func (o TagSchemaRegistryClusterOutput) ToTagSchemaRegistryClusterOutputWithContext(ctx context.Context) TagSchemaRegistryClusterOutput {
	return o
}

func (o TagSchemaRegistryClusterOutput) ToTagSchemaRegistryClusterPtrOutput() TagSchemaRegistryClusterPtrOutput {
	return o.ToTagSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o TagSchemaRegistryClusterOutput) ToTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TagSchemaRegistryCluster) *TagSchemaRegistryCluster {
		return &v
	}).(TagSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o TagSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TagSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type TagSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (TagSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagSchemaRegistryCluster)(nil)).Elem()
}

func (o TagSchemaRegistryClusterPtrOutput) ToTagSchemaRegistryClusterPtrOutput() TagSchemaRegistryClusterPtrOutput {
	return o
}

func (o TagSchemaRegistryClusterPtrOutput) ToTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) TagSchemaRegistryClusterPtrOutput {
	return o
}

func (o TagSchemaRegistryClusterPtrOutput) Elem() TagSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *TagSchemaRegistryCluster) TagSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret TagSchemaRegistryCluster
		return ret
	}).(TagSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o TagSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TransitGatewayAttachmentAws struct {
	// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn string `pulumi:"ramResourceShareArn"`
	// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	//
	// > **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
	Routes []string `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
	// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// TransitGatewayAttachmentAwsInput is an input type that accepts TransitGatewayAttachmentAwsArgs and TransitGatewayAttachmentAwsOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentAwsInput` via:
//
//	TransitGatewayAttachmentAwsArgs{...}
type TransitGatewayAttachmentAwsInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentAwsOutput() TransitGatewayAttachmentAwsOutput
	ToTransitGatewayAttachmentAwsOutputWithContext(context.Context) TransitGatewayAttachmentAwsOutput
}

type TransitGatewayAttachmentAwsArgs struct {
	// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn pulumi.StringInput `pulumi:"ramResourceShareArn"`
	// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	//
	// > **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId pulumi.StringPtrInput `pulumi:"transitGatewayAttachmentId"`
	// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
}

func (TransitGatewayAttachmentAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentAws)(nil)).Elem()
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsOutput() TransitGatewayAttachmentAwsOutput {
	return i.ToTransitGatewayAttachmentAwsOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentAwsOutput)
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return i.ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentAwsArgs) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentAwsOutput).ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx)
}

// TransitGatewayAttachmentAwsPtrInput is an input type that accepts TransitGatewayAttachmentAwsArgs, TransitGatewayAttachmentAwsPtr and TransitGatewayAttachmentAwsPtrOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentAwsPtrInput` via:
//
//	        TransitGatewayAttachmentAwsArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayAttachmentAwsPtrInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput
	ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Context) TransitGatewayAttachmentAwsPtrOutput
}

type transitGatewayAttachmentAwsPtrType TransitGatewayAttachmentAwsArgs

func TransitGatewayAttachmentAwsPtr(v *TransitGatewayAttachmentAwsArgs) TransitGatewayAttachmentAwsPtrInput {
	return (*transitGatewayAttachmentAwsPtrType)(v)
}

func (*transitGatewayAttachmentAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentAws)(nil)).Elem()
}

func (i *transitGatewayAttachmentAwsPtrType) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return i.ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Background())
}

func (i *transitGatewayAttachmentAwsPtrType) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentAwsPtrOutput)
}

type TransitGatewayAttachmentAwsOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentAws)(nil)).Elem()
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsOutput() TransitGatewayAttachmentAwsOutput {
	return o
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsOutput {
	return o
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return o.ToTransitGatewayAttachmentAwsPtrOutputWithContext(context.Background())
}

func (o TransitGatewayAttachmentAwsOutput) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayAttachmentAws) *TransitGatewayAttachmentAws {
		return &v
	}).(TransitGatewayAttachmentAwsPtrOutput)
}

// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
func (o TransitGatewayAttachmentAwsOutput) RamResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) string { return v.RamResourceShareArn }).(pulumi.StringOutput)
}

// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
//
// > **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
func (o TransitGatewayAttachmentAwsOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
func (o TransitGatewayAttachmentAwsOutput) TransitGatewayAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) *string { return v.TransitGatewayAttachmentId }).(pulumi.StringPtrOutput)
}

// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
func (o TransitGatewayAttachmentAwsOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentAws) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

type TransitGatewayAttachmentAwsPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentAws)(nil)).Elem()
}

func (o TransitGatewayAttachmentAwsPtrOutput) ToTransitGatewayAttachmentAwsPtrOutput() TransitGatewayAttachmentAwsPtrOutput {
	return o
}

func (o TransitGatewayAttachmentAwsPtrOutput) ToTransitGatewayAttachmentAwsPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentAwsPtrOutput {
	return o
}

func (o TransitGatewayAttachmentAwsPtrOutput) Elem() TransitGatewayAttachmentAwsOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) TransitGatewayAttachmentAws {
		if v != nil {
			return *v
		}
		var ret TransitGatewayAttachmentAws
		return ret
	}).(TransitGatewayAttachmentAwsOutput)
}

// The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
func (o TransitGatewayAttachmentAwsPtrOutput) RamResourceShareArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) *string {
		if v == nil {
			return nil
		}
		return &v.RamResourceShareArn
	}).(pulumi.StringPtrOutput)
}

// List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
//
// > **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
func (o TransitGatewayAttachmentAwsPtrOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) []string {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(pulumi.StringArrayOutput)
}

// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
func (o TransitGatewayAttachmentAwsPtrOutput) TransitGatewayAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) *string {
		if v == nil {
			return nil
		}
		return v.TransitGatewayAttachmentId
	}).(pulumi.StringPtrOutput)
}

// The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
func (o TransitGatewayAttachmentAwsPtrOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentAws) *string {
		if v == nil {
			return nil
		}
		return &v.TransitGatewayId
	}).(pulumi.StringPtrOutput)
}

type TransitGatewayAttachmentEnvironment struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
}

// TransitGatewayAttachmentEnvironmentInput is an input type that accepts TransitGatewayAttachmentEnvironmentArgs and TransitGatewayAttachmentEnvironmentOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentEnvironmentInput` via:
//
//	TransitGatewayAttachmentEnvironmentArgs{...}
type TransitGatewayAttachmentEnvironmentInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentEnvironmentOutput() TransitGatewayAttachmentEnvironmentOutput
	ToTransitGatewayAttachmentEnvironmentOutputWithContext(context.Context) TransitGatewayAttachmentEnvironmentOutput
}

type TransitGatewayAttachmentEnvironmentArgs struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TransitGatewayAttachmentEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentOutput() TransitGatewayAttachmentEnvironmentOutput {
	return i.ToTransitGatewayAttachmentEnvironmentOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentEnvironmentOutput)
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return i.ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentEnvironmentArgs) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentEnvironmentOutput).ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx)
}

// TransitGatewayAttachmentEnvironmentPtrInput is an input type that accepts TransitGatewayAttachmentEnvironmentArgs, TransitGatewayAttachmentEnvironmentPtr and TransitGatewayAttachmentEnvironmentPtrOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentEnvironmentPtrInput` via:
//
//	        TransitGatewayAttachmentEnvironmentArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayAttachmentEnvironmentPtrInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput
	ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Context) TransitGatewayAttachmentEnvironmentPtrOutput
}

type transitGatewayAttachmentEnvironmentPtrType TransitGatewayAttachmentEnvironmentArgs

func TransitGatewayAttachmentEnvironmentPtr(v *TransitGatewayAttachmentEnvironmentArgs) TransitGatewayAttachmentEnvironmentPtrInput {
	return (*transitGatewayAttachmentEnvironmentPtrType)(v)
}

func (*transitGatewayAttachmentEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (i *transitGatewayAttachmentEnvironmentPtrType) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return i.ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (i *transitGatewayAttachmentEnvironmentPtrType) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentEnvironmentPtrOutput)
}

type TransitGatewayAttachmentEnvironmentOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentOutput() TransitGatewayAttachmentEnvironmentOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return o.ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(context.Background())
}

func (o TransitGatewayAttachmentEnvironmentOutput) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayAttachmentEnvironment) *TransitGatewayAttachmentEnvironment {
		return &v
	}).(TransitGatewayAttachmentEnvironmentPtrOutput)
}

// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-abc123`.
func (o TransitGatewayAttachmentEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type TransitGatewayAttachmentEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (o TransitGatewayAttachmentEnvironmentPtrOutput) ToTransitGatewayAttachmentEnvironmentPtrOutput() TransitGatewayAttachmentEnvironmentPtrOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentPtrOutput) ToTransitGatewayAttachmentEnvironmentPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentEnvironmentPtrOutput {
	return o
}

func (o TransitGatewayAttachmentEnvironmentPtrOutput) Elem() TransitGatewayAttachmentEnvironmentOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentEnvironment) TransitGatewayAttachmentEnvironment {
		if v != nil {
			return *v
		}
		var ret TransitGatewayAttachmentEnvironment
		return ret
	}).(TransitGatewayAttachmentEnvironmentOutput)
}

// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-abc123`.
func (o TransitGatewayAttachmentEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type TransitGatewayAttachmentNetwork struct {
	// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// TransitGatewayAttachmentNetworkInput is an input type that accepts TransitGatewayAttachmentNetworkArgs and TransitGatewayAttachmentNetworkOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentNetworkInput` via:
//
//	TransitGatewayAttachmentNetworkArgs{...}
type TransitGatewayAttachmentNetworkInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentNetworkOutput() TransitGatewayAttachmentNetworkOutput
	ToTransitGatewayAttachmentNetworkOutputWithContext(context.Context) TransitGatewayAttachmentNetworkOutput
}

type TransitGatewayAttachmentNetworkArgs struct {
	// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TransitGatewayAttachmentNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkOutput() TransitGatewayAttachmentNetworkOutput {
	return i.ToTransitGatewayAttachmentNetworkOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentNetworkOutput)
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return i.ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Background())
}

func (i TransitGatewayAttachmentNetworkArgs) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentNetworkOutput).ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx)
}

// TransitGatewayAttachmentNetworkPtrInput is an input type that accepts TransitGatewayAttachmentNetworkArgs, TransitGatewayAttachmentNetworkPtr and TransitGatewayAttachmentNetworkPtrOutput values.
// You can construct a concrete instance of `TransitGatewayAttachmentNetworkPtrInput` via:
//
//	        TransitGatewayAttachmentNetworkArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayAttachmentNetworkPtrInput interface {
	pulumi.Input

	ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput
	ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Context) TransitGatewayAttachmentNetworkPtrOutput
}

type transitGatewayAttachmentNetworkPtrType TransitGatewayAttachmentNetworkArgs

func TransitGatewayAttachmentNetworkPtr(v *TransitGatewayAttachmentNetworkArgs) TransitGatewayAttachmentNetworkPtrInput {
	return (*transitGatewayAttachmentNetworkPtrType)(v)
}

func (*transitGatewayAttachmentNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i *transitGatewayAttachmentNetworkPtrType) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return i.ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Background())
}

func (i *transitGatewayAttachmentNetworkPtrType) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayAttachmentNetworkPtrOutput)
}

type TransitGatewayAttachmentNetworkOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkOutput() TransitGatewayAttachmentNetworkOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return o.ToTransitGatewayAttachmentNetworkPtrOutputWithContext(context.Background())
}

func (o TransitGatewayAttachmentNetworkOutput) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayAttachmentNetwork) *TransitGatewayAttachmentNetwork {
		return &v
	}).(TransitGatewayAttachmentNetworkPtrOutput)
}

// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
func (o TransitGatewayAttachmentNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayAttachmentNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type TransitGatewayAttachmentNetworkPtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayAttachmentNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o TransitGatewayAttachmentNetworkPtrOutput) ToTransitGatewayAttachmentNetworkPtrOutput() TransitGatewayAttachmentNetworkPtrOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkPtrOutput) ToTransitGatewayAttachmentNetworkPtrOutputWithContext(ctx context.Context) TransitGatewayAttachmentNetworkPtrOutput {
	return o
}

func (o TransitGatewayAttachmentNetworkPtrOutput) Elem() TransitGatewayAttachmentNetworkOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentNetwork) TransitGatewayAttachmentNetwork {
		if v != nil {
			return *v
		}
		var ret TransitGatewayAttachmentNetwork
		return ret
	}).(TransitGatewayAttachmentNetworkOutput)
}

// The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
func (o TransitGatewayAttachmentNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayAttachmentNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetAccessPointAwsEgressPrivateLinkEndpoint struct {
	// (Required Boolean) Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
	EnableHighAvailability bool `pulumi:"enableHighAvailability"`
	// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
	VpcEndpointDnsName string `pulumi:"vpcEndpointDnsName"`
	// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
	// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName string `pulumi:"vpcEndpointServiceName"`
}

// GetAccessPointAwsEgressPrivateLinkEndpointInput is an input type that accepts GetAccessPointAwsEgressPrivateLinkEndpointArgs and GetAccessPointAwsEgressPrivateLinkEndpointOutput values.
// You can construct a concrete instance of `GetAccessPointAwsEgressPrivateLinkEndpointInput` via:
//
//	GetAccessPointAwsEgressPrivateLinkEndpointArgs{...}
type GetAccessPointAwsEgressPrivateLinkEndpointInput interface {
	pulumi.Input

	ToGetAccessPointAwsEgressPrivateLinkEndpointOutput() GetAccessPointAwsEgressPrivateLinkEndpointOutput
	ToGetAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(context.Context) GetAccessPointAwsEgressPrivateLinkEndpointOutput
}

type GetAccessPointAwsEgressPrivateLinkEndpointArgs struct {
	// (Required Boolean) Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
	EnableHighAvailability pulumi.BoolInput `pulumi:"enableHighAvailability"`
	// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
	VpcEndpointDnsName pulumi.StringInput `pulumi:"vpcEndpointDnsName"`
	// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
	VpcEndpointId pulumi.StringInput `pulumi:"vpcEndpointId"`
	// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName pulumi.StringInput `pulumi:"vpcEndpointServiceName"`
}

func (GetAccessPointAwsEgressPrivateLinkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i GetAccessPointAwsEgressPrivateLinkEndpointArgs) ToGetAccessPointAwsEgressPrivateLinkEndpointOutput() GetAccessPointAwsEgressPrivateLinkEndpointOutput {
	return i.ToGetAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(context.Background())
}

func (i GetAccessPointAwsEgressPrivateLinkEndpointArgs) ToGetAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) GetAccessPointAwsEgressPrivateLinkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointAwsEgressPrivateLinkEndpointOutput)
}

// GetAccessPointAwsEgressPrivateLinkEndpointArrayInput is an input type that accepts GetAccessPointAwsEgressPrivateLinkEndpointArray and GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput values.
// You can construct a concrete instance of `GetAccessPointAwsEgressPrivateLinkEndpointArrayInput` via:
//
//	GetAccessPointAwsEgressPrivateLinkEndpointArray{ GetAccessPointAwsEgressPrivateLinkEndpointArgs{...} }
type GetAccessPointAwsEgressPrivateLinkEndpointArrayInput interface {
	pulumi.Input

	ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutput() GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput
	ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutputWithContext(context.Context) GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput
}

type GetAccessPointAwsEgressPrivateLinkEndpointArray []GetAccessPointAwsEgressPrivateLinkEndpointInput

func (GetAccessPointAwsEgressPrivateLinkEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i GetAccessPointAwsEgressPrivateLinkEndpointArray) ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutput() GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput {
	return i.ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutputWithContext(context.Background())
}

func (i GetAccessPointAwsEgressPrivateLinkEndpointArray) ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutputWithContext(ctx context.Context) GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput)
}

type GetAccessPointAwsEgressPrivateLinkEndpointOutput struct{ *pulumi.OutputState }

func (GetAccessPointAwsEgressPrivateLinkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o GetAccessPointAwsEgressPrivateLinkEndpointOutput) ToGetAccessPointAwsEgressPrivateLinkEndpointOutput() GetAccessPointAwsEgressPrivateLinkEndpointOutput {
	return o
}

func (o GetAccessPointAwsEgressPrivateLinkEndpointOutput) ToGetAccessPointAwsEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) GetAccessPointAwsEgressPrivateLinkEndpointOutput {
	return o
}

// (Required Boolean) Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
func (o GetAccessPointAwsEgressPrivateLinkEndpointOutput) EnableHighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAccessPointAwsEgressPrivateLinkEndpoint) bool { return v.EnableHighAvailability }).(pulumi.BoolOutput)
}

// (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
func (o GetAccessPointAwsEgressPrivateLinkEndpointOutput) VpcEndpointDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAwsEgressPrivateLinkEndpoint) string { return v.VpcEndpointDnsName }).(pulumi.StringOutput)
}

// (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
func (o GetAccessPointAwsEgressPrivateLinkEndpointOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAwsEgressPrivateLinkEndpoint) string { return v.VpcEndpointId }).(pulumi.StringOutput)
}

// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
func (o GetAccessPointAwsEgressPrivateLinkEndpointOutput) VpcEndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAwsEgressPrivateLinkEndpoint) string { return v.VpcEndpointServiceName }).(pulumi.StringOutput)
}

type GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointAwsEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput) ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutput() GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput {
	return o
}

func (o GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput) ToGetAccessPointAwsEgressPrivateLinkEndpointArrayOutputWithContext(ctx context.Context) GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput {
	return o
}

func (o GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput) Index(i pulumi.IntInput) GetAccessPointAwsEgressPrivateLinkEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointAwsEgressPrivateLinkEndpoint {
		return vs[0].([]GetAccessPointAwsEgressPrivateLinkEndpoint)[vs[1].(int)]
	}).(GetAccessPointAwsEgressPrivateLinkEndpointOutput)
}

type GetAccessPointAzureEgressPrivateLinkEndpoint struct {
	// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
	PrivateEndpointCustomDnsConfigDomains []string `pulumi:"privateEndpointCustomDnsConfigDomains"`
	// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointDomain string `pulumi:"privateEndpointDomain"`
	// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointIpAddress string `pulumi:"privateEndpointIpAddress"`
	// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointResourceId string `pulumi:"privateEndpointResourceId"`
	// (Required String) Resource ID of the Azure Private Link service.
	PrivateLinkServiceResourceId string `pulumi:"privateLinkServiceResourceId"`
	// (Required String) Name of the subresource for the Private Endpoint to connect to.
	PrivateLinkSubresourceName string `pulumi:"privateLinkSubresourceName"`
}

// GetAccessPointAzureEgressPrivateLinkEndpointInput is an input type that accepts GetAccessPointAzureEgressPrivateLinkEndpointArgs and GetAccessPointAzureEgressPrivateLinkEndpointOutput values.
// You can construct a concrete instance of `GetAccessPointAzureEgressPrivateLinkEndpointInput` via:
//
//	GetAccessPointAzureEgressPrivateLinkEndpointArgs{...}
type GetAccessPointAzureEgressPrivateLinkEndpointInput interface {
	pulumi.Input

	ToGetAccessPointAzureEgressPrivateLinkEndpointOutput() GetAccessPointAzureEgressPrivateLinkEndpointOutput
	ToGetAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(context.Context) GetAccessPointAzureEgressPrivateLinkEndpointOutput
}

type GetAccessPointAzureEgressPrivateLinkEndpointArgs struct {
	// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
	PrivateEndpointCustomDnsConfigDomains pulumi.StringArrayInput `pulumi:"privateEndpointCustomDnsConfigDomains"`
	// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointDomain pulumi.StringInput `pulumi:"privateEndpointDomain"`
	// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointIpAddress pulumi.StringInput `pulumi:"privateEndpointIpAddress"`
	// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
	PrivateEndpointResourceId pulumi.StringInput `pulumi:"privateEndpointResourceId"`
	// (Required String) Resource ID of the Azure Private Link service.
	PrivateLinkServiceResourceId pulumi.StringInput `pulumi:"privateLinkServiceResourceId"`
	// (Required String) Name of the subresource for the Private Endpoint to connect to.
	PrivateLinkSubresourceName pulumi.StringInput `pulumi:"privateLinkSubresourceName"`
}

func (GetAccessPointAzureEgressPrivateLinkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i GetAccessPointAzureEgressPrivateLinkEndpointArgs) ToGetAccessPointAzureEgressPrivateLinkEndpointOutput() GetAccessPointAzureEgressPrivateLinkEndpointOutput {
	return i.ToGetAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(context.Background())
}

func (i GetAccessPointAzureEgressPrivateLinkEndpointArgs) ToGetAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) GetAccessPointAzureEgressPrivateLinkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointAzureEgressPrivateLinkEndpointOutput)
}

// GetAccessPointAzureEgressPrivateLinkEndpointArrayInput is an input type that accepts GetAccessPointAzureEgressPrivateLinkEndpointArray and GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput values.
// You can construct a concrete instance of `GetAccessPointAzureEgressPrivateLinkEndpointArrayInput` via:
//
//	GetAccessPointAzureEgressPrivateLinkEndpointArray{ GetAccessPointAzureEgressPrivateLinkEndpointArgs{...} }
type GetAccessPointAzureEgressPrivateLinkEndpointArrayInput interface {
	pulumi.Input

	ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutput() GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput
	ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutputWithContext(context.Context) GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput
}

type GetAccessPointAzureEgressPrivateLinkEndpointArray []GetAccessPointAzureEgressPrivateLinkEndpointInput

func (GetAccessPointAzureEgressPrivateLinkEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (i GetAccessPointAzureEgressPrivateLinkEndpointArray) ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutput() GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput {
	return i.ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutputWithContext(context.Background())
}

func (i GetAccessPointAzureEgressPrivateLinkEndpointArray) ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutputWithContext(ctx context.Context) GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput)
}

type GetAccessPointAzureEgressPrivateLinkEndpointOutput struct{ *pulumi.OutputState }

func (GetAccessPointAzureEgressPrivateLinkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) ToGetAccessPointAzureEgressPrivateLinkEndpointOutput() GetAccessPointAzureEgressPrivateLinkEndpointOutput {
	return o
}

func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) ToGetAccessPointAzureEgressPrivateLinkEndpointOutputWithContext(ctx context.Context) GetAccessPointAzureEgressPrivateLinkEndpointOutput {
	return o
}

// (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointCustomDnsConfigDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAccessPointAzureEgressPrivateLinkEndpoint) []string {
		return v.PrivateEndpointCustomDnsConfigDomains
	}).(pulumi.StringArrayOutput)
}

// (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAzureEgressPrivateLinkEndpoint) string { return v.PrivateEndpointDomain }).(pulumi.StringOutput)
}

// (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAzureEgressPrivateLinkEndpoint) string { return v.PrivateEndpointIpAddress }).(pulumi.StringOutput)
}

// (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) PrivateEndpointResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAzureEgressPrivateLinkEndpoint) string { return v.PrivateEndpointResourceId }).(pulumi.StringOutput)
}

// (Required String) Resource ID of the Azure Private Link service.
func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) PrivateLinkServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAzureEgressPrivateLinkEndpoint) string { return v.PrivateLinkServiceResourceId }).(pulumi.StringOutput)
}

// (Required String) Name of the subresource for the Private Endpoint to connect to.
func (o GetAccessPointAzureEgressPrivateLinkEndpointOutput) PrivateLinkSubresourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointAzureEgressPrivateLinkEndpoint) string { return v.PrivateLinkSubresourceName }).(pulumi.StringOutput)
}

type GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointAzureEgressPrivateLinkEndpoint)(nil)).Elem()
}

func (o GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput) ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutput() GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput {
	return o
}

func (o GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput) ToGetAccessPointAzureEgressPrivateLinkEndpointArrayOutputWithContext(ctx context.Context) GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput {
	return o
}

func (o GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput) Index(i pulumi.IntInput) GetAccessPointAzureEgressPrivateLinkEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointAzureEgressPrivateLinkEndpoint {
		return vs[0].([]GetAccessPointAzureEgressPrivateLinkEndpoint)[vs[1].(int)]
	}).(GetAccessPointAzureEgressPrivateLinkEndpointOutput)
}

type GetAccessPointEnvironment struct {
	// The ID of the Environment that the Access Point belongs to, for example, `env-123abc`.
	Id string `pulumi:"id"`
}

// GetAccessPointEnvironmentInput is an input type that accepts GetAccessPointEnvironmentArgs and GetAccessPointEnvironmentOutput values.
// You can construct a concrete instance of `GetAccessPointEnvironmentInput` via:
//
//	GetAccessPointEnvironmentArgs{...}
type GetAccessPointEnvironmentInput interface {
	pulumi.Input

	ToGetAccessPointEnvironmentOutput() GetAccessPointEnvironmentOutput
	ToGetAccessPointEnvironmentOutputWithContext(context.Context) GetAccessPointEnvironmentOutput
}

type GetAccessPointEnvironmentArgs struct {
	// The ID of the Environment that the Access Point belongs to, for example, `env-123abc`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAccessPointEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointEnvironment)(nil)).Elem()
}

func (i GetAccessPointEnvironmentArgs) ToGetAccessPointEnvironmentOutput() GetAccessPointEnvironmentOutput {
	return i.ToGetAccessPointEnvironmentOutputWithContext(context.Background())
}

func (i GetAccessPointEnvironmentArgs) ToGetAccessPointEnvironmentOutputWithContext(ctx context.Context) GetAccessPointEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointEnvironmentOutput)
}

type GetAccessPointEnvironmentOutput struct{ *pulumi.OutputState }

func (GetAccessPointEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointEnvironment)(nil)).Elem()
}

func (o GetAccessPointEnvironmentOutput) ToGetAccessPointEnvironmentOutput() GetAccessPointEnvironmentOutput {
	return o
}

func (o GetAccessPointEnvironmentOutput) ToGetAccessPointEnvironmentOutputWithContext(ctx context.Context) GetAccessPointEnvironmentOutput {
	return o
}

// The ID of the Environment that the Access Point belongs to, for example, `env-123abc`.
func (o GetAccessPointEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetAccessPointGateway struct {
	// The ID of the Access Point, for example, `ap-abc123`.
	Id string `pulumi:"id"`
}

// GetAccessPointGatewayInput is an input type that accepts GetAccessPointGatewayArgs and GetAccessPointGatewayOutput values.
// You can construct a concrete instance of `GetAccessPointGatewayInput` via:
//
//	GetAccessPointGatewayArgs{...}
type GetAccessPointGatewayInput interface {
	pulumi.Input

	ToGetAccessPointGatewayOutput() GetAccessPointGatewayOutput
	ToGetAccessPointGatewayOutputWithContext(context.Context) GetAccessPointGatewayOutput
}

type GetAccessPointGatewayArgs struct {
	// The ID of the Access Point, for example, `ap-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAccessPointGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointGateway)(nil)).Elem()
}

func (i GetAccessPointGatewayArgs) ToGetAccessPointGatewayOutput() GetAccessPointGatewayOutput {
	return i.ToGetAccessPointGatewayOutputWithContext(context.Background())
}

func (i GetAccessPointGatewayArgs) ToGetAccessPointGatewayOutputWithContext(ctx context.Context) GetAccessPointGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointGatewayOutput)
}

// GetAccessPointGatewayArrayInput is an input type that accepts GetAccessPointGatewayArray and GetAccessPointGatewayArrayOutput values.
// You can construct a concrete instance of `GetAccessPointGatewayArrayInput` via:
//
//	GetAccessPointGatewayArray{ GetAccessPointGatewayArgs{...} }
type GetAccessPointGatewayArrayInput interface {
	pulumi.Input

	ToGetAccessPointGatewayArrayOutput() GetAccessPointGatewayArrayOutput
	ToGetAccessPointGatewayArrayOutputWithContext(context.Context) GetAccessPointGatewayArrayOutput
}

type GetAccessPointGatewayArray []GetAccessPointGatewayInput

func (GetAccessPointGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointGateway)(nil)).Elem()
}

func (i GetAccessPointGatewayArray) ToGetAccessPointGatewayArrayOutput() GetAccessPointGatewayArrayOutput {
	return i.ToGetAccessPointGatewayArrayOutputWithContext(context.Background())
}

func (i GetAccessPointGatewayArray) ToGetAccessPointGatewayArrayOutputWithContext(ctx context.Context) GetAccessPointGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointGatewayArrayOutput)
}

type GetAccessPointGatewayOutput struct{ *pulumi.OutputState }

func (GetAccessPointGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointGateway)(nil)).Elem()
}

func (o GetAccessPointGatewayOutput) ToGetAccessPointGatewayOutput() GetAccessPointGatewayOutput {
	return o
}

func (o GetAccessPointGatewayOutput) ToGetAccessPointGatewayOutputWithContext(ctx context.Context) GetAccessPointGatewayOutput {
	return o
}

// The ID of the Access Point, for example, `ap-abc123`.
func (o GetAccessPointGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointGateway) string { return v.Id }).(pulumi.StringOutput)
}

type GetAccessPointGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointGateway)(nil)).Elem()
}

func (o GetAccessPointGatewayArrayOutput) ToGetAccessPointGatewayArrayOutput() GetAccessPointGatewayArrayOutput {
	return o
}

func (o GetAccessPointGatewayArrayOutput) ToGetAccessPointGatewayArrayOutputWithContext(ctx context.Context) GetAccessPointGatewayArrayOutput {
	return o
}

func (o GetAccessPointGatewayArrayOutput) Index(i pulumi.IntInput) GetAccessPointGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointGateway {
		return vs[0].([]GetAccessPointGateway)[vs[1].(int)]
	}).(GetAccessPointGatewayOutput)
}

type GetBusinessMetadataAttributeDefinition struct {
	// (Optional String) The default value of this attribute.
	DefaultValue string `pulumi:"defaultValue"`
	// (Optional String) The description of this attribute.
	Description string `pulumi:"description"`
	// (Optional Boolean) An optional flag to control whether the attribute should be optional or required.
	IsOptional bool `pulumi:"isOptional"`
	// The name of the Business Metadata, for example, `PII`. The name must not be empty and consist of a letter followed by a sequence of letter, number, space, or _ characters.
	//
	// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
	Name string `pulumi:"name"`
	// (Optional Map) Block for the attribute options:
	// - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
	// - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
	Options map[string]string `pulumi:"options"`
	// (Required String) The type of the attribute, it always returns `string`.
	Type string `pulumi:"type"`
}

// GetBusinessMetadataAttributeDefinitionInput is an input type that accepts GetBusinessMetadataAttributeDefinitionArgs and GetBusinessMetadataAttributeDefinitionOutput values.
// You can construct a concrete instance of `GetBusinessMetadataAttributeDefinitionInput` via:
//
//	GetBusinessMetadataAttributeDefinitionArgs{...}
type GetBusinessMetadataAttributeDefinitionInput interface {
	pulumi.Input

	ToGetBusinessMetadataAttributeDefinitionOutput() GetBusinessMetadataAttributeDefinitionOutput
	ToGetBusinessMetadataAttributeDefinitionOutputWithContext(context.Context) GetBusinessMetadataAttributeDefinitionOutput
}

type GetBusinessMetadataAttributeDefinitionArgs struct {
	// (Optional String) The default value of this attribute.
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// (Optional String) The description of this attribute.
	Description pulumi.StringInput `pulumi:"description"`
	// (Optional Boolean) An optional flag to control whether the attribute should be optional or required.
	IsOptional pulumi.BoolInput `pulumi:"isOptional"`
	// The name of the Business Metadata, for example, `PII`. The name must not be empty and consist of a letter followed by a sequence of letter, number, space, or _ characters.
	//
	// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional Map) Block for the attribute options:
	// - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
	// - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
	Options pulumi.StringMapInput `pulumi:"options"`
	// (Required String) The type of the attribute, it always returns `string`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBusinessMetadataAttributeDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (i GetBusinessMetadataAttributeDefinitionArgs) ToGetBusinessMetadataAttributeDefinitionOutput() GetBusinessMetadataAttributeDefinitionOutput {
	return i.ToGetBusinessMetadataAttributeDefinitionOutputWithContext(context.Background())
}

func (i GetBusinessMetadataAttributeDefinitionArgs) ToGetBusinessMetadataAttributeDefinitionOutputWithContext(ctx context.Context) GetBusinessMetadataAttributeDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataAttributeDefinitionOutput)
}

// GetBusinessMetadataAttributeDefinitionArrayInput is an input type that accepts GetBusinessMetadataAttributeDefinitionArray and GetBusinessMetadataAttributeDefinitionArrayOutput values.
// You can construct a concrete instance of `GetBusinessMetadataAttributeDefinitionArrayInput` via:
//
//	GetBusinessMetadataAttributeDefinitionArray{ GetBusinessMetadataAttributeDefinitionArgs{...} }
type GetBusinessMetadataAttributeDefinitionArrayInput interface {
	pulumi.Input

	ToGetBusinessMetadataAttributeDefinitionArrayOutput() GetBusinessMetadataAttributeDefinitionArrayOutput
	ToGetBusinessMetadataAttributeDefinitionArrayOutputWithContext(context.Context) GetBusinessMetadataAttributeDefinitionArrayOutput
}

type GetBusinessMetadataAttributeDefinitionArray []GetBusinessMetadataAttributeDefinitionInput

func (GetBusinessMetadataAttributeDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (i GetBusinessMetadataAttributeDefinitionArray) ToGetBusinessMetadataAttributeDefinitionArrayOutput() GetBusinessMetadataAttributeDefinitionArrayOutput {
	return i.ToGetBusinessMetadataAttributeDefinitionArrayOutputWithContext(context.Background())
}

func (i GetBusinessMetadataAttributeDefinitionArray) ToGetBusinessMetadataAttributeDefinitionArrayOutputWithContext(ctx context.Context) GetBusinessMetadataAttributeDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataAttributeDefinitionArrayOutput)
}

type GetBusinessMetadataAttributeDefinitionOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataAttributeDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (o GetBusinessMetadataAttributeDefinitionOutput) ToGetBusinessMetadataAttributeDefinitionOutput() GetBusinessMetadataAttributeDefinitionOutput {
	return o
}

func (o GetBusinessMetadataAttributeDefinitionOutput) ToGetBusinessMetadataAttributeDefinitionOutputWithContext(ctx context.Context) GetBusinessMetadataAttributeDefinitionOutput {
	return o
}

// (Optional String) The default value of this attribute.
func (o GetBusinessMetadataAttributeDefinitionOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataAttributeDefinition) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// (Optional String) The description of this attribute.
func (o GetBusinessMetadataAttributeDefinitionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataAttributeDefinition) string { return v.Description }).(pulumi.StringOutput)
}

// (Optional Boolean) An optional flag to control whether the attribute should be optional or required.
func (o GetBusinessMetadataAttributeDefinitionOutput) IsOptional() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBusinessMetadataAttributeDefinition) bool { return v.IsOptional }).(pulumi.BoolOutput)
}

// The name of the Business Metadata, for example, `PII`. The name must not be empty and consist of a letter followed by a sequence of letter, number, space, or _ characters.
//
// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
func (o GetBusinessMetadataAttributeDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataAttributeDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional Map) Block for the attribute options:
// - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
// - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
func (o GetBusinessMetadataAttributeDefinitionOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetBusinessMetadataAttributeDefinition) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// (Required String) The type of the attribute, it always returns `string`.
func (o GetBusinessMetadataAttributeDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataAttributeDefinition) string { return v.Type }).(pulumi.StringOutput)
}

type GetBusinessMetadataAttributeDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataAttributeDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBusinessMetadataAttributeDefinition)(nil)).Elem()
}

func (o GetBusinessMetadataAttributeDefinitionArrayOutput) ToGetBusinessMetadataAttributeDefinitionArrayOutput() GetBusinessMetadataAttributeDefinitionArrayOutput {
	return o
}

func (o GetBusinessMetadataAttributeDefinitionArrayOutput) ToGetBusinessMetadataAttributeDefinitionArrayOutputWithContext(ctx context.Context) GetBusinessMetadataAttributeDefinitionArrayOutput {
	return o
}

func (o GetBusinessMetadataAttributeDefinitionArrayOutput) Index(i pulumi.IntInput) GetBusinessMetadataAttributeDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBusinessMetadataAttributeDefinition {
		return vs[0].([]GetBusinessMetadataAttributeDefinition)[vs[1].(int)]
	}).(GetBusinessMetadataAttributeDefinitionOutput)
}

type GetBusinessMetadataBindingCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	//
	// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
	Secret string `pulumi:"secret"`
}

// GetBusinessMetadataBindingCredentialsInput is an input type that accepts GetBusinessMetadataBindingCredentialsArgs and GetBusinessMetadataBindingCredentialsOutput values.
// You can construct a concrete instance of `GetBusinessMetadataBindingCredentialsInput` via:
//
//	GetBusinessMetadataBindingCredentialsArgs{...}
type GetBusinessMetadataBindingCredentialsInput interface {
	pulumi.Input

	ToGetBusinessMetadataBindingCredentialsOutput() GetBusinessMetadataBindingCredentialsOutput
	ToGetBusinessMetadataBindingCredentialsOutputWithContext(context.Context) GetBusinessMetadataBindingCredentialsOutput
}

type GetBusinessMetadataBindingCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	//
	// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetBusinessMetadataBindingCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataBindingCredentials)(nil)).Elem()
}

func (i GetBusinessMetadataBindingCredentialsArgs) ToGetBusinessMetadataBindingCredentialsOutput() GetBusinessMetadataBindingCredentialsOutput {
	return i.ToGetBusinessMetadataBindingCredentialsOutputWithContext(context.Background())
}

func (i GetBusinessMetadataBindingCredentialsArgs) ToGetBusinessMetadataBindingCredentialsOutputWithContext(ctx context.Context) GetBusinessMetadataBindingCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataBindingCredentialsOutput)
}

func (i GetBusinessMetadataBindingCredentialsArgs) ToGetBusinessMetadataBindingCredentialsPtrOutput() GetBusinessMetadataBindingCredentialsPtrOutput {
	return i.ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i GetBusinessMetadataBindingCredentialsArgs) ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataBindingCredentialsOutput).ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx)
}

// GetBusinessMetadataBindingCredentialsPtrInput is an input type that accepts GetBusinessMetadataBindingCredentialsArgs, GetBusinessMetadataBindingCredentialsPtr and GetBusinessMetadataBindingCredentialsPtrOutput values.
// You can construct a concrete instance of `GetBusinessMetadataBindingCredentialsPtrInput` via:
//
//	        GetBusinessMetadataBindingCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetBusinessMetadataBindingCredentialsPtrInput interface {
	pulumi.Input

	ToGetBusinessMetadataBindingCredentialsPtrOutput() GetBusinessMetadataBindingCredentialsPtrOutput
	ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Context) GetBusinessMetadataBindingCredentialsPtrOutput
}

type getBusinessMetadataBindingCredentialsPtrType GetBusinessMetadataBindingCredentialsArgs

func GetBusinessMetadataBindingCredentialsPtr(v *GetBusinessMetadataBindingCredentialsArgs) GetBusinessMetadataBindingCredentialsPtrInput {
	return (*getBusinessMetadataBindingCredentialsPtrType)(v)
}

func (*getBusinessMetadataBindingCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataBindingCredentials)(nil)).Elem()
}

func (i *getBusinessMetadataBindingCredentialsPtrType) ToGetBusinessMetadataBindingCredentialsPtrOutput() GetBusinessMetadataBindingCredentialsPtrOutput {
	return i.ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i *getBusinessMetadataBindingCredentialsPtrType) ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataBindingCredentialsPtrOutput)
}

type GetBusinessMetadataBindingCredentialsOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataBindingCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataBindingCredentials)(nil)).Elem()
}

func (o GetBusinessMetadataBindingCredentialsOutput) ToGetBusinessMetadataBindingCredentialsOutput() GetBusinessMetadataBindingCredentialsOutput {
	return o
}

func (o GetBusinessMetadataBindingCredentialsOutput) ToGetBusinessMetadataBindingCredentialsOutputWithContext(ctx context.Context) GetBusinessMetadataBindingCredentialsOutput {
	return o
}

func (o GetBusinessMetadataBindingCredentialsOutput) ToGetBusinessMetadataBindingCredentialsPtrOutput() GetBusinessMetadataBindingCredentialsPtrOutput {
	return o.ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(context.Background())
}

func (o GetBusinessMetadataBindingCredentialsOutput) ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBusinessMetadataBindingCredentials) *GetBusinessMetadataBindingCredentials {
		return &v
	}).(GetBusinessMetadataBindingCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetBusinessMetadataBindingCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataBindingCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
//
// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
func (o GetBusinessMetadataBindingCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataBindingCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetBusinessMetadataBindingCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataBindingCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataBindingCredentials)(nil)).Elem()
}

func (o GetBusinessMetadataBindingCredentialsPtrOutput) ToGetBusinessMetadataBindingCredentialsPtrOutput() GetBusinessMetadataBindingCredentialsPtrOutput {
	return o
}

func (o GetBusinessMetadataBindingCredentialsPtrOutput) ToGetBusinessMetadataBindingCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingCredentialsPtrOutput {
	return o
}

func (o GetBusinessMetadataBindingCredentialsPtrOutput) Elem() GetBusinessMetadataBindingCredentialsOutput {
	return o.ApplyT(func(v *GetBusinessMetadataBindingCredentials) GetBusinessMetadataBindingCredentials {
		if v != nil {
			return *v
		}
		var ret GetBusinessMetadataBindingCredentials
		return ret
	}).(GetBusinessMetadataBindingCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetBusinessMetadataBindingCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBusinessMetadataBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
//
// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
func (o GetBusinessMetadataBindingCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBusinessMetadataBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetBusinessMetadataBindingSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetBusinessMetadataBindingSchemaRegistryClusterInput is an input type that accepts GetBusinessMetadataBindingSchemaRegistryClusterArgs and GetBusinessMetadataBindingSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetBusinessMetadataBindingSchemaRegistryClusterInput` via:
//
//	GetBusinessMetadataBindingSchemaRegistryClusterArgs{...}
type GetBusinessMetadataBindingSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetBusinessMetadataBindingSchemaRegistryClusterOutput() GetBusinessMetadataBindingSchemaRegistryClusterOutput
	ToGetBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(context.Context) GetBusinessMetadataBindingSchemaRegistryClusterOutput
}

type GetBusinessMetadataBindingSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetBusinessMetadataBindingSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i GetBusinessMetadataBindingSchemaRegistryClusterArgs) ToGetBusinessMetadataBindingSchemaRegistryClusterOutput() GetBusinessMetadataBindingSchemaRegistryClusterOutput {
	return i.ToGetBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetBusinessMetadataBindingSchemaRegistryClusterArgs) ToGetBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) GetBusinessMetadataBindingSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataBindingSchemaRegistryClusterOutput)
}

func (i GetBusinessMetadataBindingSchemaRegistryClusterArgs) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutput() GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return i.ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetBusinessMetadataBindingSchemaRegistryClusterArgs) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataBindingSchemaRegistryClusterOutput).ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetBusinessMetadataBindingSchemaRegistryClusterPtrInput is an input type that accepts GetBusinessMetadataBindingSchemaRegistryClusterArgs, GetBusinessMetadataBindingSchemaRegistryClusterPtr and GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetBusinessMetadataBindingSchemaRegistryClusterPtrInput` via:
//
//	        GetBusinessMetadataBindingSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetBusinessMetadataBindingSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutput() GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput
	ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Context) GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput
}

type getBusinessMetadataBindingSchemaRegistryClusterPtrType GetBusinessMetadataBindingSchemaRegistryClusterArgs

func GetBusinessMetadataBindingSchemaRegistryClusterPtr(v *GetBusinessMetadataBindingSchemaRegistryClusterArgs) GetBusinessMetadataBindingSchemaRegistryClusterPtrInput {
	return (*getBusinessMetadataBindingSchemaRegistryClusterPtrType)(v)
}

func (*getBusinessMetadataBindingSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i *getBusinessMetadataBindingSchemaRegistryClusterPtrType) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutput() GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return i.ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getBusinessMetadataBindingSchemaRegistryClusterPtrType) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput)
}

type GetBusinessMetadataBindingSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataBindingSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterOutput) ToGetBusinessMetadataBindingSchemaRegistryClusterOutput() GetBusinessMetadataBindingSchemaRegistryClusterOutput {
	return o
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterOutput) ToGetBusinessMetadataBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) GetBusinessMetadataBindingSchemaRegistryClusterOutput {
	return o
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterOutput) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutput() GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o.ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterOutput) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBusinessMetadataBindingSchemaRegistryCluster) *GetBusinessMetadataBindingSchemaRegistryCluster {
		return &v
	}).(GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetBusinessMetadataBindingSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataBindingSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutput() GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput) ToGetBusinessMetadataBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput) Elem() GetBusinessMetadataBindingSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetBusinessMetadataBindingSchemaRegistryCluster) GetBusinessMetadataBindingSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetBusinessMetadataBindingSchemaRegistryCluster
		return ret
	}).(GetBusinessMetadataBindingSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBusinessMetadataBindingSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetBusinessMetadataCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetBusinessMetadataCredentialsInput is an input type that accepts GetBusinessMetadataCredentialsArgs and GetBusinessMetadataCredentialsOutput values.
// You can construct a concrete instance of `GetBusinessMetadataCredentialsInput` via:
//
//	GetBusinessMetadataCredentialsArgs{...}
type GetBusinessMetadataCredentialsInput interface {
	pulumi.Input

	ToGetBusinessMetadataCredentialsOutput() GetBusinessMetadataCredentialsOutput
	ToGetBusinessMetadataCredentialsOutputWithContext(context.Context) GetBusinessMetadataCredentialsOutput
}

type GetBusinessMetadataCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetBusinessMetadataCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataCredentials)(nil)).Elem()
}

func (i GetBusinessMetadataCredentialsArgs) ToGetBusinessMetadataCredentialsOutput() GetBusinessMetadataCredentialsOutput {
	return i.ToGetBusinessMetadataCredentialsOutputWithContext(context.Background())
}

func (i GetBusinessMetadataCredentialsArgs) ToGetBusinessMetadataCredentialsOutputWithContext(ctx context.Context) GetBusinessMetadataCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataCredentialsOutput)
}

func (i GetBusinessMetadataCredentialsArgs) ToGetBusinessMetadataCredentialsPtrOutput() GetBusinessMetadataCredentialsPtrOutput {
	return i.ToGetBusinessMetadataCredentialsPtrOutputWithContext(context.Background())
}

func (i GetBusinessMetadataCredentialsArgs) ToGetBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataCredentialsOutput).ToGetBusinessMetadataCredentialsPtrOutputWithContext(ctx)
}

// GetBusinessMetadataCredentialsPtrInput is an input type that accepts GetBusinessMetadataCredentialsArgs, GetBusinessMetadataCredentialsPtr and GetBusinessMetadataCredentialsPtrOutput values.
// You can construct a concrete instance of `GetBusinessMetadataCredentialsPtrInput` via:
//
//	        GetBusinessMetadataCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetBusinessMetadataCredentialsPtrInput interface {
	pulumi.Input

	ToGetBusinessMetadataCredentialsPtrOutput() GetBusinessMetadataCredentialsPtrOutput
	ToGetBusinessMetadataCredentialsPtrOutputWithContext(context.Context) GetBusinessMetadataCredentialsPtrOutput
}

type getBusinessMetadataCredentialsPtrType GetBusinessMetadataCredentialsArgs

func GetBusinessMetadataCredentialsPtr(v *GetBusinessMetadataCredentialsArgs) GetBusinessMetadataCredentialsPtrInput {
	return (*getBusinessMetadataCredentialsPtrType)(v)
}

func (*getBusinessMetadataCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataCredentials)(nil)).Elem()
}

func (i *getBusinessMetadataCredentialsPtrType) ToGetBusinessMetadataCredentialsPtrOutput() GetBusinessMetadataCredentialsPtrOutput {
	return i.ToGetBusinessMetadataCredentialsPtrOutputWithContext(context.Background())
}

func (i *getBusinessMetadataCredentialsPtrType) ToGetBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataCredentialsPtrOutput)
}

type GetBusinessMetadataCredentialsOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataCredentials)(nil)).Elem()
}

func (o GetBusinessMetadataCredentialsOutput) ToGetBusinessMetadataCredentialsOutput() GetBusinessMetadataCredentialsOutput {
	return o
}

func (o GetBusinessMetadataCredentialsOutput) ToGetBusinessMetadataCredentialsOutputWithContext(ctx context.Context) GetBusinessMetadataCredentialsOutput {
	return o
}

func (o GetBusinessMetadataCredentialsOutput) ToGetBusinessMetadataCredentialsPtrOutput() GetBusinessMetadataCredentialsPtrOutput {
	return o.ToGetBusinessMetadataCredentialsPtrOutputWithContext(context.Background())
}

func (o GetBusinessMetadataCredentialsOutput) ToGetBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBusinessMetadataCredentials) *GetBusinessMetadataCredentials {
		return &v
	}).(GetBusinessMetadataCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetBusinessMetadataCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetBusinessMetadataCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetBusinessMetadataCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataCredentials)(nil)).Elem()
}

func (o GetBusinessMetadataCredentialsPtrOutput) ToGetBusinessMetadataCredentialsPtrOutput() GetBusinessMetadataCredentialsPtrOutput {
	return o
}

func (o GetBusinessMetadataCredentialsPtrOutput) ToGetBusinessMetadataCredentialsPtrOutputWithContext(ctx context.Context) GetBusinessMetadataCredentialsPtrOutput {
	return o
}

func (o GetBusinessMetadataCredentialsPtrOutput) Elem() GetBusinessMetadataCredentialsOutput {
	return o.ApplyT(func(v *GetBusinessMetadataCredentials) GetBusinessMetadataCredentials {
		if v != nil {
			return *v
		}
		var ret GetBusinessMetadataCredentials
		return ret
	}).(GetBusinessMetadataCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetBusinessMetadataCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBusinessMetadataCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetBusinessMetadataCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBusinessMetadataCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetBusinessMetadataSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetBusinessMetadataSchemaRegistryClusterInput is an input type that accepts GetBusinessMetadataSchemaRegistryClusterArgs and GetBusinessMetadataSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetBusinessMetadataSchemaRegistryClusterInput` via:
//
//	GetBusinessMetadataSchemaRegistryClusterArgs{...}
type GetBusinessMetadataSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetBusinessMetadataSchemaRegistryClusterOutput() GetBusinessMetadataSchemaRegistryClusterOutput
	ToGetBusinessMetadataSchemaRegistryClusterOutputWithContext(context.Context) GetBusinessMetadataSchemaRegistryClusterOutput
}

type GetBusinessMetadataSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetBusinessMetadataSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (i GetBusinessMetadataSchemaRegistryClusterArgs) ToGetBusinessMetadataSchemaRegistryClusterOutput() GetBusinessMetadataSchemaRegistryClusterOutput {
	return i.ToGetBusinessMetadataSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetBusinessMetadataSchemaRegistryClusterArgs) ToGetBusinessMetadataSchemaRegistryClusterOutputWithContext(ctx context.Context) GetBusinessMetadataSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataSchemaRegistryClusterOutput)
}

func (i GetBusinessMetadataSchemaRegistryClusterArgs) ToGetBusinessMetadataSchemaRegistryClusterPtrOutput() GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return i.ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetBusinessMetadataSchemaRegistryClusterArgs) ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataSchemaRegistryClusterOutput).ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetBusinessMetadataSchemaRegistryClusterPtrInput is an input type that accepts GetBusinessMetadataSchemaRegistryClusterArgs, GetBusinessMetadataSchemaRegistryClusterPtr and GetBusinessMetadataSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetBusinessMetadataSchemaRegistryClusterPtrInput` via:
//
//	        GetBusinessMetadataSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetBusinessMetadataSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetBusinessMetadataSchemaRegistryClusterPtrOutput() GetBusinessMetadataSchemaRegistryClusterPtrOutput
	ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Context) GetBusinessMetadataSchemaRegistryClusterPtrOutput
}

type getBusinessMetadataSchemaRegistryClusterPtrType GetBusinessMetadataSchemaRegistryClusterArgs

func GetBusinessMetadataSchemaRegistryClusterPtr(v *GetBusinessMetadataSchemaRegistryClusterArgs) GetBusinessMetadataSchemaRegistryClusterPtrInput {
	return (*getBusinessMetadataSchemaRegistryClusterPtrType)(v)
}

func (*getBusinessMetadataSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (i *getBusinessMetadataSchemaRegistryClusterPtrType) ToGetBusinessMetadataSchemaRegistryClusterPtrOutput() GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return i.ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getBusinessMetadataSchemaRegistryClusterPtrType) ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBusinessMetadataSchemaRegistryClusterPtrOutput)
}

type GetBusinessMetadataSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (o GetBusinessMetadataSchemaRegistryClusterOutput) ToGetBusinessMetadataSchemaRegistryClusterOutput() GetBusinessMetadataSchemaRegistryClusterOutput {
	return o
}

func (o GetBusinessMetadataSchemaRegistryClusterOutput) ToGetBusinessMetadataSchemaRegistryClusterOutputWithContext(ctx context.Context) GetBusinessMetadataSchemaRegistryClusterOutput {
	return o
}

func (o GetBusinessMetadataSchemaRegistryClusterOutput) ToGetBusinessMetadataSchemaRegistryClusterPtrOutput() GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return o.ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetBusinessMetadataSchemaRegistryClusterOutput) ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetBusinessMetadataSchemaRegistryCluster) *GetBusinessMetadataSchemaRegistryCluster {
		return &v
	}).(GetBusinessMetadataSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetBusinessMetadataSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBusinessMetadataSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetBusinessMetadataSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetBusinessMetadataSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetBusinessMetadataSchemaRegistryCluster)(nil)).Elem()
}

func (o GetBusinessMetadataSchemaRegistryClusterPtrOutput) ToGetBusinessMetadataSchemaRegistryClusterPtrOutput() GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetBusinessMetadataSchemaRegistryClusterPtrOutput) ToGetBusinessMetadataSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetBusinessMetadataSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetBusinessMetadataSchemaRegistryClusterPtrOutput) Elem() GetBusinessMetadataSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetBusinessMetadataSchemaRegistryCluster) GetBusinessMetadataSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetBusinessMetadataSchemaRegistryCluster
		return ret
	}).(GetBusinessMetadataSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetBusinessMetadataSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetBusinessMetadataSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetByokKeyAw struct {
	// (Required String) The Amazon Resource Name (ARN) of an AWS KMS key.
	KeyArn string `pulumi:"keyArn"`
	// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment combination.
	Roles []string `pulumi:"roles"`
}

// GetByokKeyAwInput is an input type that accepts GetByokKeyAwArgs and GetByokKeyAwOutput values.
// You can construct a concrete instance of `GetByokKeyAwInput` via:
//
//	GetByokKeyAwArgs{...}
type GetByokKeyAwInput interface {
	pulumi.Input

	ToGetByokKeyAwOutput() GetByokKeyAwOutput
	ToGetByokKeyAwOutputWithContext(context.Context) GetByokKeyAwOutput
}

type GetByokKeyAwArgs struct {
	// (Required String) The Amazon Resource Name (ARN) of an AWS KMS key.
	KeyArn pulumi.StringInput `pulumi:"keyArn"`
	// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment combination.
	Roles pulumi.StringArrayInput `pulumi:"roles"`
}

func (GetByokKeyAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetByokKeyAw)(nil)).Elem()
}

func (i GetByokKeyAwArgs) ToGetByokKeyAwOutput() GetByokKeyAwOutput {
	return i.ToGetByokKeyAwOutputWithContext(context.Background())
}

func (i GetByokKeyAwArgs) ToGetByokKeyAwOutputWithContext(ctx context.Context) GetByokKeyAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetByokKeyAwOutput)
}

// GetByokKeyAwArrayInput is an input type that accepts GetByokKeyAwArray and GetByokKeyAwArrayOutput values.
// You can construct a concrete instance of `GetByokKeyAwArrayInput` via:
//
//	GetByokKeyAwArray{ GetByokKeyAwArgs{...} }
type GetByokKeyAwArrayInput interface {
	pulumi.Input

	ToGetByokKeyAwArrayOutput() GetByokKeyAwArrayOutput
	ToGetByokKeyAwArrayOutputWithContext(context.Context) GetByokKeyAwArrayOutput
}

type GetByokKeyAwArray []GetByokKeyAwInput

func (GetByokKeyAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetByokKeyAw)(nil)).Elem()
}

func (i GetByokKeyAwArray) ToGetByokKeyAwArrayOutput() GetByokKeyAwArrayOutput {
	return i.ToGetByokKeyAwArrayOutputWithContext(context.Background())
}

func (i GetByokKeyAwArray) ToGetByokKeyAwArrayOutputWithContext(ctx context.Context) GetByokKeyAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetByokKeyAwArrayOutput)
}

type GetByokKeyAwOutput struct{ *pulumi.OutputState }

func (GetByokKeyAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetByokKeyAw)(nil)).Elem()
}

func (o GetByokKeyAwOutput) ToGetByokKeyAwOutput() GetByokKeyAwOutput {
	return o
}

func (o GetByokKeyAwOutput) ToGetByokKeyAwOutputWithContext(ctx context.Context) GetByokKeyAwOutput {
	return o
}

// (Required String) The Amazon Resource Name (ARN) of an AWS KMS key.
func (o GetByokKeyAwOutput) KeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyAw) string { return v.KeyArn }).(pulumi.StringOutput)
}

// (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment combination.
func (o GetByokKeyAwOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetByokKeyAw) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

type GetByokKeyAwArrayOutput struct{ *pulumi.OutputState }

func (GetByokKeyAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetByokKeyAw)(nil)).Elem()
}

func (o GetByokKeyAwArrayOutput) ToGetByokKeyAwArrayOutput() GetByokKeyAwArrayOutput {
	return o
}

func (o GetByokKeyAwArrayOutput) ToGetByokKeyAwArrayOutputWithContext(ctx context.Context) GetByokKeyAwArrayOutput {
	return o
}

func (o GetByokKeyAwArrayOutput) Index(i pulumi.IntInput) GetByokKeyAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetByokKeyAw {
		return vs[0].([]GetByokKeyAw)[vs[1].(int)]
	}).(GetByokKeyAwOutput)
}

type GetByokKeyAzure struct {
	// (Optional String) The Application ID created for this key-environment combination.
	ApplicationId string `pulumi:"applicationId"`
	// (Required String) The unique Key Object Identifier URL of an Azure Key Vault key.
	KeyIdentifier string `pulumi:"keyIdentifier"`
	// (Required String) Key Vault ID containing the key.
	KeyVaultId string `pulumi:"keyVaultId"`
	// (Required String) Tenant ID (uuid) hosting the Key Vault containing the key.
	TenantId string `pulumi:"tenantId"`
}

// GetByokKeyAzureInput is an input type that accepts GetByokKeyAzureArgs and GetByokKeyAzureOutput values.
// You can construct a concrete instance of `GetByokKeyAzureInput` via:
//
//	GetByokKeyAzureArgs{...}
type GetByokKeyAzureInput interface {
	pulumi.Input

	ToGetByokKeyAzureOutput() GetByokKeyAzureOutput
	ToGetByokKeyAzureOutputWithContext(context.Context) GetByokKeyAzureOutput
}

type GetByokKeyAzureArgs struct {
	// (Optional String) The Application ID created for this key-environment combination.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// (Required String) The unique Key Object Identifier URL of an Azure Key Vault key.
	KeyIdentifier pulumi.StringInput `pulumi:"keyIdentifier"`
	// (Required String) Key Vault ID containing the key.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// (Required String) Tenant ID (uuid) hosting the Key Vault containing the key.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetByokKeyAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetByokKeyAzure)(nil)).Elem()
}

func (i GetByokKeyAzureArgs) ToGetByokKeyAzureOutput() GetByokKeyAzureOutput {
	return i.ToGetByokKeyAzureOutputWithContext(context.Background())
}

func (i GetByokKeyAzureArgs) ToGetByokKeyAzureOutputWithContext(ctx context.Context) GetByokKeyAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetByokKeyAzureOutput)
}

// GetByokKeyAzureArrayInput is an input type that accepts GetByokKeyAzureArray and GetByokKeyAzureArrayOutput values.
// You can construct a concrete instance of `GetByokKeyAzureArrayInput` via:
//
//	GetByokKeyAzureArray{ GetByokKeyAzureArgs{...} }
type GetByokKeyAzureArrayInput interface {
	pulumi.Input

	ToGetByokKeyAzureArrayOutput() GetByokKeyAzureArrayOutput
	ToGetByokKeyAzureArrayOutputWithContext(context.Context) GetByokKeyAzureArrayOutput
}

type GetByokKeyAzureArray []GetByokKeyAzureInput

func (GetByokKeyAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetByokKeyAzure)(nil)).Elem()
}

func (i GetByokKeyAzureArray) ToGetByokKeyAzureArrayOutput() GetByokKeyAzureArrayOutput {
	return i.ToGetByokKeyAzureArrayOutputWithContext(context.Background())
}

func (i GetByokKeyAzureArray) ToGetByokKeyAzureArrayOutputWithContext(ctx context.Context) GetByokKeyAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetByokKeyAzureArrayOutput)
}

type GetByokKeyAzureOutput struct{ *pulumi.OutputState }

func (GetByokKeyAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetByokKeyAzure)(nil)).Elem()
}

func (o GetByokKeyAzureOutput) ToGetByokKeyAzureOutput() GetByokKeyAzureOutput {
	return o
}

func (o GetByokKeyAzureOutput) ToGetByokKeyAzureOutputWithContext(ctx context.Context) GetByokKeyAzureOutput {
	return o
}

// (Optional String) The Application ID created for this key-environment combination.
func (o GetByokKeyAzureOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyAzure) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// (Required String) The unique Key Object Identifier URL of an Azure Key Vault key.
func (o GetByokKeyAzureOutput) KeyIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyAzure) string { return v.KeyIdentifier }).(pulumi.StringOutput)
}

// (Required String) Key Vault ID containing the key.
func (o GetByokKeyAzureOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyAzure) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// (Required String) Tenant ID (uuid) hosting the Key Vault containing the key.
func (o GetByokKeyAzureOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyAzure) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetByokKeyAzureArrayOutput struct{ *pulumi.OutputState }

func (GetByokKeyAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetByokKeyAzure)(nil)).Elem()
}

func (o GetByokKeyAzureArrayOutput) ToGetByokKeyAzureArrayOutput() GetByokKeyAzureArrayOutput {
	return o
}

func (o GetByokKeyAzureArrayOutput) ToGetByokKeyAzureArrayOutputWithContext(ctx context.Context) GetByokKeyAzureArrayOutput {
	return o
}

func (o GetByokKeyAzureArrayOutput) Index(i pulumi.IntInput) GetByokKeyAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetByokKeyAzure {
		return vs[0].([]GetByokKeyAzure)[vs[1].(int)]
	}).(GetByokKeyAzureOutput)
}

type GetByokKeyGcp struct {
	// (Required String) The Google Cloud Platform key ID.
	KeyId string `pulumi:"keyId"`
	// (Optional String) The Google security group created for this key.
	SecurityGroup string `pulumi:"securityGroup"`
}

// GetByokKeyGcpInput is an input type that accepts GetByokKeyGcpArgs and GetByokKeyGcpOutput values.
// You can construct a concrete instance of `GetByokKeyGcpInput` via:
//
//	GetByokKeyGcpArgs{...}
type GetByokKeyGcpInput interface {
	pulumi.Input

	ToGetByokKeyGcpOutput() GetByokKeyGcpOutput
	ToGetByokKeyGcpOutputWithContext(context.Context) GetByokKeyGcpOutput
}

type GetByokKeyGcpArgs struct {
	// (Required String) The Google Cloud Platform key ID.
	KeyId pulumi.StringInput `pulumi:"keyId"`
	// (Optional String) The Google security group created for this key.
	SecurityGroup pulumi.StringInput `pulumi:"securityGroup"`
}

func (GetByokKeyGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetByokKeyGcp)(nil)).Elem()
}

func (i GetByokKeyGcpArgs) ToGetByokKeyGcpOutput() GetByokKeyGcpOutput {
	return i.ToGetByokKeyGcpOutputWithContext(context.Background())
}

func (i GetByokKeyGcpArgs) ToGetByokKeyGcpOutputWithContext(ctx context.Context) GetByokKeyGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetByokKeyGcpOutput)
}

// GetByokKeyGcpArrayInput is an input type that accepts GetByokKeyGcpArray and GetByokKeyGcpArrayOutput values.
// You can construct a concrete instance of `GetByokKeyGcpArrayInput` via:
//
//	GetByokKeyGcpArray{ GetByokKeyGcpArgs{...} }
type GetByokKeyGcpArrayInput interface {
	pulumi.Input

	ToGetByokKeyGcpArrayOutput() GetByokKeyGcpArrayOutput
	ToGetByokKeyGcpArrayOutputWithContext(context.Context) GetByokKeyGcpArrayOutput
}

type GetByokKeyGcpArray []GetByokKeyGcpInput

func (GetByokKeyGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetByokKeyGcp)(nil)).Elem()
}

func (i GetByokKeyGcpArray) ToGetByokKeyGcpArrayOutput() GetByokKeyGcpArrayOutput {
	return i.ToGetByokKeyGcpArrayOutputWithContext(context.Background())
}

func (i GetByokKeyGcpArray) ToGetByokKeyGcpArrayOutputWithContext(ctx context.Context) GetByokKeyGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetByokKeyGcpArrayOutput)
}

type GetByokKeyGcpOutput struct{ *pulumi.OutputState }

func (GetByokKeyGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetByokKeyGcp)(nil)).Elem()
}

func (o GetByokKeyGcpOutput) ToGetByokKeyGcpOutput() GetByokKeyGcpOutput {
	return o
}

func (o GetByokKeyGcpOutput) ToGetByokKeyGcpOutputWithContext(ctx context.Context) GetByokKeyGcpOutput {
	return o
}

// (Required String) The Google Cloud Platform key ID.
func (o GetByokKeyGcpOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyGcp) string { return v.KeyId }).(pulumi.StringOutput)
}

// (Optional String) The Google security group created for this key.
func (o GetByokKeyGcpOutput) SecurityGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetByokKeyGcp) string { return v.SecurityGroup }).(pulumi.StringOutput)
}

type GetByokKeyGcpArrayOutput struct{ *pulumi.OutputState }

func (GetByokKeyGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetByokKeyGcp)(nil)).Elem()
}

func (o GetByokKeyGcpArrayOutput) ToGetByokKeyGcpArrayOutput() GetByokKeyGcpArrayOutput {
	return o
}

func (o GetByokKeyGcpArrayOutput) ToGetByokKeyGcpArrayOutputWithContext(ctx context.Context) GetByokKeyGcpArrayOutput {
	return o
}

func (o GetByokKeyGcpArrayOutput) Index(i pulumi.IntInput) GetByokKeyGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetByokKeyGcp {
		return vs[0].([]GetByokKeyGcp)[vs[1].(int)]
	}).(GetByokKeyGcpOutput)
}

type GetDnsRecordEnvironment struct {
	// The ID of the Environment that the DNS Record belongs to, for example, `env-123abc`.
	Id string `pulumi:"id"`
}

// GetDnsRecordEnvironmentInput is an input type that accepts GetDnsRecordEnvironmentArgs and GetDnsRecordEnvironmentOutput values.
// You can construct a concrete instance of `GetDnsRecordEnvironmentInput` via:
//
//	GetDnsRecordEnvironmentArgs{...}
type GetDnsRecordEnvironmentInput interface {
	pulumi.Input

	ToGetDnsRecordEnvironmentOutput() GetDnsRecordEnvironmentOutput
	ToGetDnsRecordEnvironmentOutputWithContext(context.Context) GetDnsRecordEnvironmentOutput
}

type GetDnsRecordEnvironmentArgs struct {
	// The ID of the Environment that the DNS Record belongs to, for example, `env-123abc`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDnsRecordEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsRecordEnvironment)(nil)).Elem()
}

func (i GetDnsRecordEnvironmentArgs) ToGetDnsRecordEnvironmentOutput() GetDnsRecordEnvironmentOutput {
	return i.ToGetDnsRecordEnvironmentOutputWithContext(context.Background())
}

func (i GetDnsRecordEnvironmentArgs) ToGetDnsRecordEnvironmentOutputWithContext(ctx context.Context) GetDnsRecordEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsRecordEnvironmentOutput)
}

type GetDnsRecordEnvironmentOutput struct{ *pulumi.OutputState }

func (GetDnsRecordEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsRecordEnvironment)(nil)).Elem()
}

func (o GetDnsRecordEnvironmentOutput) ToGetDnsRecordEnvironmentOutput() GetDnsRecordEnvironmentOutput {
	return o
}

func (o GetDnsRecordEnvironmentOutput) ToGetDnsRecordEnvironmentOutputWithContext(ctx context.Context) GetDnsRecordEnvironmentOutput {
	return o
}

// The ID of the Environment that the DNS Record belongs to, for example, `env-123abc`.
func (o GetDnsRecordEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsRecordEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetDnsRecordGateway struct {
	// The ID of the DNS Record, for example, `dnsrec-abc123`.
	Id string `pulumi:"id"`
}

// GetDnsRecordGatewayInput is an input type that accepts GetDnsRecordGatewayArgs and GetDnsRecordGatewayOutput values.
// You can construct a concrete instance of `GetDnsRecordGatewayInput` via:
//
//	GetDnsRecordGatewayArgs{...}
type GetDnsRecordGatewayInput interface {
	pulumi.Input

	ToGetDnsRecordGatewayOutput() GetDnsRecordGatewayOutput
	ToGetDnsRecordGatewayOutputWithContext(context.Context) GetDnsRecordGatewayOutput
}

type GetDnsRecordGatewayArgs struct {
	// The ID of the DNS Record, for example, `dnsrec-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDnsRecordGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsRecordGateway)(nil)).Elem()
}

func (i GetDnsRecordGatewayArgs) ToGetDnsRecordGatewayOutput() GetDnsRecordGatewayOutput {
	return i.ToGetDnsRecordGatewayOutputWithContext(context.Background())
}

func (i GetDnsRecordGatewayArgs) ToGetDnsRecordGatewayOutputWithContext(ctx context.Context) GetDnsRecordGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsRecordGatewayOutput)
}

// GetDnsRecordGatewayArrayInput is an input type that accepts GetDnsRecordGatewayArray and GetDnsRecordGatewayArrayOutput values.
// You can construct a concrete instance of `GetDnsRecordGatewayArrayInput` via:
//
//	GetDnsRecordGatewayArray{ GetDnsRecordGatewayArgs{...} }
type GetDnsRecordGatewayArrayInput interface {
	pulumi.Input

	ToGetDnsRecordGatewayArrayOutput() GetDnsRecordGatewayArrayOutput
	ToGetDnsRecordGatewayArrayOutputWithContext(context.Context) GetDnsRecordGatewayArrayOutput
}

type GetDnsRecordGatewayArray []GetDnsRecordGatewayInput

func (GetDnsRecordGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsRecordGateway)(nil)).Elem()
}

func (i GetDnsRecordGatewayArray) ToGetDnsRecordGatewayArrayOutput() GetDnsRecordGatewayArrayOutput {
	return i.ToGetDnsRecordGatewayArrayOutputWithContext(context.Background())
}

func (i GetDnsRecordGatewayArray) ToGetDnsRecordGatewayArrayOutputWithContext(ctx context.Context) GetDnsRecordGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsRecordGatewayArrayOutput)
}

type GetDnsRecordGatewayOutput struct{ *pulumi.OutputState }

func (GetDnsRecordGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsRecordGateway)(nil)).Elem()
}

func (o GetDnsRecordGatewayOutput) ToGetDnsRecordGatewayOutput() GetDnsRecordGatewayOutput {
	return o
}

func (o GetDnsRecordGatewayOutput) ToGetDnsRecordGatewayOutputWithContext(ctx context.Context) GetDnsRecordGatewayOutput {
	return o
}

// The ID of the DNS Record, for example, `dnsrec-abc123`.
func (o GetDnsRecordGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsRecordGateway) string { return v.Id }).(pulumi.StringOutput)
}

type GetDnsRecordGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetDnsRecordGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsRecordGateway)(nil)).Elem()
}

func (o GetDnsRecordGatewayArrayOutput) ToGetDnsRecordGatewayArrayOutput() GetDnsRecordGatewayArrayOutput {
	return o
}

func (o GetDnsRecordGatewayArrayOutput) ToGetDnsRecordGatewayArrayOutputWithContext(ctx context.Context) GetDnsRecordGatewayArrayOutput {
	return o
}

func (o GetDnsRecordGatewayArrayOutput) Index(i pulumi.IntInput) GetDnsRecordGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDnsRecordGateway {
		return vs[0].([]GetDnsRecordGateway)[vs[1].(int)]
	}).(GetDnsRecordGatewayOutput)
}

type GetDnsRecordPrivateLinkAccessPoint struct {
	// The ID of the DNS Record, for example, `dnsrec-abc123`.
	Id string `pulumi:"id"`
}

// GetDnsRecordPrivateLinkAccessPointInput is an input type that accepts GetDnsRecordPrivateLinkAccessPointArgs and GetDnsRecordPrivateLinkAccessPointOutput values.
// You can construct a concrete instance of `GetDnsRecordPrivateLinkAccessPointInput` via:
//
//	GetDnsRecordPrivateLinkAccessPointArgs{...}
type GetDnsRecordPrivateLinkAccessPointInput interface {
	pulumi.Input

	ToGetDnsRecordPrivateLinkAccessPointOutput() GetDnsRecordPrivateLinkAccessPointOutput
	ToGetDnsRecordPrivateLinkAccessPointOutputWithContext(context.Context) GetDnsRecordPrivateLinkAccessPointOutput
}

type GetDnsRecordPrivateLinkAccessPointArgs struct {
	// The ID of the DNS Record, for example, `dnsrec-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDnsRecordPrivateLinkAccessPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (i GetDnsRecordPrivateLinkAccessPointArgs) ToGetDnsRecordPrivateLinkAccessPointOutput() GetDnsRecordPrivateLinkAccessPointOutput {
	return i.ToGetDnsRecordPrivateLinkAccessPointOutputWithContext(context.Background())
}

func (i GetDnsRecordPrivateLinkAccessPointArgs) ToGetDnsRecordPrivateLinkAccessPointOutputWithContext(ctx context.Context) GetDnsRecordPrivateLinkAccessPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsRecordPrivateLinkAccessPointOutput)
}

// GetDnsRecordPrivateLinkAccessPointArrayInput is an input type that accepts GetDnsRecordPrivateLinkAccessPointArray and GetDnsRecordPrivateLinkAccessPointArrayOutput values.
// You can construct a concrete instance of `GetDnsRecordPrivateLinkAccessPointArrayInput` via:
//
//	GetDnsRecordPrivateLinkAccessPointArray{ GetDnsRecordPrivateLinkAccessPointArgs{...} }
type GetDnsRecordPrivateLinkAccessPointArrayInput interface {
	pulumi.Input

	ToGetDnsRecordPrivateLinkAccessPointArrayOutput() GetDnsRecordPrivateLinkAccessPointArrayOutput
	ToGetDnsRecordPrivateLinkAccessPointArrayOutputWithContext(context.Context) GetDnsRecordPrivateLinkAccessPointArrayOutput
}

type GetDnsRecordPrivateLinkAccessPointArray []GetDnsRecordPrivateLinkAccessPointInput

func (GetDnsRecordPrivateLinkAccessPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (i GetDnsRecordPrivateLinkAccessPointArray) ToGetDnsRecordPrivateLinkAccessPointArrayOutput() GetDnsRecordPrivateLinkAccessPointArrayOutput {
	return i.ToGetDnsRecordPrivateLinkAccessPointArrayOutputWithContext(context.Background())
}

func (i GetDnsRecordPrivateLinkAccessPointArray) ToGetDnsRecordPrivateLinkAccessPointArrayOutputWithContext(ctx context.Context) GetDnsRecordPrivateLinkAccessPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDnsRecordPrivateLinkAccessPointArrayOutput)
}

type GetDnsRecordPrivateLinkAccessPointOutput struct{ *pulumi.OutputState }

func (GetDnsRecordPrivateLinkAccessPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (o GetDnsRecordPrivateLinkAccessPointOutput) ToGetDnsRecordPrivateLinkAccessPointOutput() GetDnsRecordPrivateLinkAccessPointOutput {
	return o
}

func (o GetDnsRecordPrivateLinkAccessPointOutput) ToGetDnsRecordPrivateLinkAccessPointOutputWithContext(ctx context.Context) GetDnsRecordPrivateLinkAccessPointOutput {
	return o
}

// The ID of the DNS Record, for example, `dnsrec-abc123`.
func (o GetDnsRecordPrivateLinkAccessPointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDnsRecordPrivateLinkAccessPoint) string { return v.Id }).(pulumi.StringOutput)
}

type GetDnsRecordPrivateLinkAccessPointArrayOutput struct{ *pulumi.OutputState }

func (GetDnsRecordPrivateLinkAccessPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDnsRecordPrivateLinkAccessPoint)(nil)).Elem()
}

func (o GetDnsRecordPrivateLinkAccessPointArrayOutput) ToGetDnsRecordPrivateLinkAccessPointArrayOutput() GetDnsRecordPrivateLinkAccessPointArrayOutput {
	return o
}

func (o GetDnsRecordPrivateLinkAccessPointArrayOutput) ToGetDnsRecordPrivateLinkAccessPointArrayOutputWithContext(ctx context.Context) GetDnsRecordPrivateLinkAccessPointArrayOutput {
	return o
}

func (o GetDnsRecordPrivateLinkAccessPointArrayOutput) Index(i pulumi.IntInput) GetDnsRecordPrivateLinkAccessPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDnsRecordPrivateLinkAccessPoint {
		return vs[0].([]GetDnsRecordPrivateLinkAccessPoint)[vs[1].(int)]
	}).(GetDnsRecordPrivateLinkAccessPointOutput)
}

type GetEnvironmentStreamGovernance struct {
	// Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
	Package string `pulumi:"package"`
}

// GetEnvironmentStreamGovernanceInput is an input type that accepts GetEnvironmentStreamGovernanceArgs and GetEnvironmentStreamGovernanceOutput values.
// You can construct a concrete instance of `GetEnvironmentStreamGovernanceInput` via:
//
//	GetEnvironmentStreamGovernanceArgs{...}
type GetEnvironmentStreamGovernanceInput interface {
	pulumi.Input

	ToGetEnvironmentStreamGovernanceOutput() GetEnvironmentStreamGovernanceOutput
	ToGetEnvironmentStreamGovernanceOutputWithContext(context.Context) GetEnvironmentStreamGovernanceOutput
}

type GetEnvironmentStreamGovernanceArgs struct {
	// Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
	Package pulumi.StringInput `pulumi:"package"`
}

func (GetEnvironmentStreamGovernanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentStreamGovernance)(nil)).Elem()
}

func (i GetEnvironmentStreamGovernanceArgs) ToGetEnvironmentStreamGovernanceOutput() GetEnvironmentStreamGovernanceOutput {
	return i.ToGetEnvironmentStreamGovernanceOutputWithContext(context.Background())
}

func (i GetEnvironmentStreamGovernanceArgs) ToGetEnvironmentStreamGovernanceOutputWithContext(ctx context.Context) GetEnvironmentStreamGovernanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentStreamGovernanceOutput)
}

func (i GetEnvironmentStreamGovernanceArgs) ToGetEnvironmentStreamGovernancePtrOutput() GetEnvironmentStreamGovernancePtrOutput {
	return i.ToGetEnvironmentStreamGovernancePtrOutputWithContext(context.Background())
}

func (i GetEnvironmentStreamGovernanceArgs) ToGetEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) GetEnvironmentStreamGovernancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentStreamGovernanceOutput).ToGetEnvironmentStreamGovernancePtrOutputWithContext(ctx)
}

// GetEnvironmentStreamGovernancePtrInput is an input type that accepts GetEnvironmentStreamGovernanceArgs, GetEnvironmentStreamGovernancePtr and GetEnvironmentStreamGovernancePtrOutput values.
// You can construct a concrete instance of `GetEnvironmentStreamGovernancePtrInput` via:
//
//	        GetEnvironmentStreamGovernanceArgs{...}
//
//	or:
//
//	        nil
type GetEnvironmentStreamGovernancePtrInput interface {
	pulumi.Input

	ToGetEnvironmentStreamGovernancePtrOutput() GetEnvironmentStreamGovernancePtrOutput
	ToGetEnvironmentStreamGovernancePtrOutputWithContext(context.Context) GetEnvironmentStreamGovernancePtrOutput
}

type getEnvironmentStreamGovernancePtrType GetEnvironmentStreamGovernanceArgs

func GetEnvironmentStreamGovernancePtr(v *GetEnvironmentStreamGovernanceArgs) GetEnvironmentStreamGovernancePtrInput {
	return (*getEnvironmentStreamGovernancePtrType)(v)
}

func (*getEnvironmentStreamGovernancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetEnvironmentStreamGovernance)(nil)).Elem()
}

func (i *getEnvironmentStreamGovernancePtrType) ToGetEnvironmentStreamGovernancePtrOutput() GetEnvironmentStreamGovernancePtrOutput {
	return i.ToGetEnvironmentStreamGovernancePtrOutputWithContext(context.Background())
}

func (i *getEnvironmentStreamGovernancePtrType) ToGetEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) GetEnvironmentStreamGovernancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentStreamGovernancePtrOutput)
}

type GetEnvironmentStreamGovernanceOutput struct{ *pulumi.OutputState }

func (GetEnvironmentStreamGovernanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentStreamGovernance)(nil)).Elem()
}

func (o GetEnvironmentStreamGovernanceOutput) ToGetEnvironmentStreamGovernanceOutput() GetEnvironmentStreamGovernanceOutput {
	return o
}

func (o GetEnvironmentStreamGovernanceOutput) ToGetEnvironmentStreamGovernanceOutputWithContext(ctx context.Context) GetEnvironmentStreamGovernanceOutput {
	return o
}

func (o GetEnvironmentStreamGovernanceOutput) ToGetEnvironmentStreamGovernancePtrOutput() GetEnvironmentStreamGovernancePtrOutput {
	return o.ToGetEnvironmentStreamGovernancePtrOutputWithContext(context.Background())
}

func (o GetEnvironmentStreamGovernanceOutput) ToGetEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) GetEnvironmentStreamGovernancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetEnvironmentStreamGovernance) *GetEnvironmentStreamGovernance {
		return &v
	}).(GetEnvironmentStreamGovernancePtrOutput)
}

// Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
func (o GetEnvironmentStreamGovernanceOutput) Package() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentStreamGovernance) string { return v.Package }).(pulumi.StringOutput)
}

type GetEnvironmentStreamGovernancePtrOutput struct{ *pulumi.OutputState }

func (GetEnvironmentStreamGovernancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetEnvironmentStreamGovernance)(nil)).Elem()
}

func (o GetEnvironmentStreamGovernancePtrOutput) ToGetEnvironmentStreamGovernancePtrOutput() GetEnvironmentStreamGovernancePtrOutput {
	return o
}

func (o GetEnvironmentStreamGovernancePtrOutput) ToGetEnvironmentStreamGovernancePtrOutputWithContext(ctx context.Context) GetEnvironmentStreamGovernancePtrOutput {
	return o
}

func (o GetEnvironmentStreamGovernancePtrOutput) Elem() GetEnvironmentStreamGovernanceOutput {
	return o.ApplyT(func(v *GetEnvironmentStreamGovernance) GetEnvironmentStreamGovernance {
		if v != nil {
			return *v
		}
		var ret GetEnvironmentStreamGovernance
		return ret
	}).(GetEnvironmentStreamGovernanceOutput)
}

// Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
func (o GetEnvironmentStreamGovernancePtrOutput) Package() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetEnvironmentStreamGovernance) *string {
		if v == nil {
			return nil
		}
		return &v.Package
	}).(pulumi.StringPtrOutput)
}

type GetFlinkComputePoolEnvironment struct {
	// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetFlinkComputePoolEnvironmentInput is an input type that accepts GetFlinkComputePoolEnvironmentArgs and GetFlinkComputePoolEnvironmentOutput values.
// You can construct a concrete instance of `GetFlinkComputePoolEnvironmentInput` via:
//
//	GetFlinkComputePoolEnvironmentArgs{...}
type GetFlinkComputePoolEnvironmentInput interface {
	pulumi.Input

	ToGetFlinkComputePoolEnvironmentOutput() GetFlinkComputePoolEnvironmentOutput
	ToGetFlinkComputePoolEnvironmentOutputWithContext(context.Context) GetFlinkComputePoolEnvironmentOutput
}

type GetFlinkComputePoolEnvironmentArgs struct {
	// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetFlinkComputePoolEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlinkComputePoolEnvironment)(nil)).Elem()
}

func (i GetFlinkComputePoolEnvironmentArgs) ToGetFlinkComputePoolEnvironmentOutput() GetFlinkComputePoolEnvironmentOutput {
	return i.ToGetFlinkComputePoolEnvironmentOutputWithContext(context.Background())
}

func (i GetFlinkComputePoolEnvironmentArgs) ToGetFlinkComputePoolEnvironmentOutputWithContext(ctx context.Context) GetFlinkComputePoolEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFlinkComputePoolEnvironmentOutput)
}

type GetFlinkComputePoolEnvironmentOutput struct{ *pulumi.OutputState }

func (GetFlinkComputePoolEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFlinkComputePoolEnvironment)(nil)).Elem()
}

func (o GetFlinkComputePoolEnvironmentOutput) ToGetFlinkComputePoolEnvironmentOutput() GetFlinkComputePoolEnvironmentOutput {
	return o
}

func (o GetFlinkComputePoolEnvironmentOutput) ToGetFlinkComputePoolEnvironmentOutputWithContext(ctx context.Context) GetFlinkComputePoolEnvironmentOutput {
	return o
}

// The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetFlinkComputePoolEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFlinkComputePoolEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetGatewayAwsEgressPrivateLinkGateway struct {
	// (Required String) The principal ARN used by the AWS Egress Private Link Gateway.
	PrincipalArn string `pulumi:"principalArn"`
	// (Required String) Azure region of the Peering Gateway.
	Region string `pulumi:"region"`
}

// GetGatewayAwsEgressPrivateLinkGatewayInput is an input type that accepts GetGatewayAwsEgressPrivateLinkGatewayArgs and GetGatewayAwsEgressPrivateLinkGatewayOutput values.
// You can construct a concrete instance of `GetGatewayAwsEgressPrivateLinkGatewayInput` via:
//
//	GetGatewayAwsEgressPrivateLinkGatewayArgs{...}
type GetGatewayAwsEgressPrivateLinkGatewayInput interface {
	pulumi.Input

	ToGetGatewayAwsEgressPrivateLinkGatewayOutput() GetGatewayAwsEgressPrivateLinkGatewayOutput
	ToGetGatewayAwsEgressPrivateLinkGatewayOutputWithContext(context.Context) GetGatewayAwsEgressPrivateLinkGatewayOutput
}

type GetGatewayAwsEgressPrivateLinkGatewayArgs struct {
	// (Required String) The principal ARN used by the AWS Egress Private Link Gateway.
	PrincipalArn pulumi.StringInput `pulumi:"principalArn"`
	// (Required String) Azure region of the Peering Gateway.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetGatewayAwsEgressPrivateLinkGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAwsEgressPrivateLinkGateway)(nil)).Elem()
}

func (i GetGatewayAwsEgressPrivateLinkGatewayArgs) ToGetGatewayAwsEgressPrivateLinkGatewayOutput() GetGatewayAwsEgressPrivateLinkGatewayOutput {
	return i.ToGetGatewayAwsEgressPrivateLinkGatewayOutputWithContext(context.Background())
}

func (i GetGatewayAwsEgressPrivateLinkGatewayArgs) ToGetGatewayAwsEgressPrivateLinkGatewayOutputWithContext(ctx context.Context) GetGatewayAwsEgressPrivateLinkGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAwsEgressPrivateLinkGatewayOutput)
}

// GetGatewayAwsEgressPrivateLinkGatewayArrayInput is an input type that accepts GetGatewayAwsEgressPrivateLinkGatewayArray and GetGatewayAwsEgressPrivateLinkGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewayAwsEgressPrivateLinkGatewayArrayInput` via:
//
//	GetGatewayAwsEgressPrivateLinkGatewayArray{ GetGatewayAwsEgressPrivateLinkGatewayArgs{...} }
type GetGatewayAwsEgressPrivateLinkGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutput() GetGatewayAwsEgressPrivateLinkGatewayArrayOutput
	ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutputWithContext(context.Context) GetGatewayAwsEgressPrivateLinkGatewayArrayOutput
}

type GetGatewayAwsEgressPrivateLinkGatewayArray []GetGatewayAwsEgressPrivateLinkGatewayInput

func (GetGatewayAwsEgressPrivateLinkGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAwsEgressPrivateLinkGateway)(nil)).Elem()
}

func (i GetGatewayAwsEgressPrivateLinkGatewayArray) ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutput() GetGatewayAwsEgressPrivateLinkGatewayArrayOutput {
	return i.ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewayAwsEgressPrivateLinkGatewayArray) ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAwsEgressPrivateLinkGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAwsEgressPrivateLinkGatewayArrayOutput)
}

type GetGatewayAwsEgressPrivateLinkGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewayAwsEgressPrivateLinkGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAwsEgressPrivateLinkGateway)(nil)).Elem()
}

func (o GetGatewayAwsEgressPrivateLinkGatewayOutput) ToGetGatewayAwsEgressPrivateLinkGatewayOutput() GetGatewayAwsEgressPrivateLinkGatewayOutput {
	return o
}

func (o GetGatewayAwsEgressPrivateLinkGatewayOutput) ToGetGatewayAwsEgressPrivateLinkGatewayOutputWithContext(ctx context.Context) GetGatewayAwsEgressPrivateLinkGatewayOutput {
	return o
}

// (Required String) The principal ARN used by the AWS Egress Private Link Gateway.
func (o GetGatewayAwsEgressPrivateLinkGatewayOutput) PrincipalArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayAwsEgressPrivateLinkGateway) string { return v.PrincipalArn }).(pulumi.StringOutput)
}

// (Required String) Azure region of the Peering Gateway.
func (o GetGatewayAwsEgressPrivateLinkGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayAwsEgressPrivateLinkGateway) string { return v.Region }).(pulumi.StringOutput)
}

type GetGatewayAwsEgressPrivateLinkGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayAwsEgressPrivateLinkGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAwsEgressPrivateLinkGateway)(nil)).Elem()
}

func (o GetGatewayAwsEgressPrivateLinkGatewayArrayOutput) ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutput() GetGatewayAwsEgressPrivateLinkGatewayArrayOutput {
	return o
}

func (o GetGatewayAwsEgressPrivateLinkGatewayArrayOutput) ToGetGatewayAwsEgressPrivateLinkGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAwsEgressPrivateLinkGatewayArrayOutput {
	return o
}

func (o GetGatewayAwsEgressPrivateLinkGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewayAwsEgressPrivateLinkGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayAwsEgressPrivateLinkGateway {
		return vs[0].([]GetGatewayAwsEgressPrivateLinkGateway)[vs[1].(int)]
	}).(GetGatewayAwsEgressPrivateLinkGatewayOutput)
}

type GetGatewayAwsPeeringGateway struct {
	// (Required String) Azure region of the Peering Gateway.
	Region string `pulumi:"region"`
}

// GetGatewayAwsPeeringGatewayInput is an input type that accepts GetGatewayAwsPeeringGatewayArgs and GetGatewayAwsPeeringGatewayOutput values.
// You can construct a concrete instance of `GetGatewayAwsPeeringGatewayInput` via:
//
//	GetGatewayAwsPeeringGatewayArgs{...}
type GetGatewayAwsPeeringGatewayInput interface {
	pulumi.Input

	ToGetGatewayAwsPeeringGatewayOutput() GetGatewayAwsPeeringGatewayOutput
	ToGetGatewayAwsPeeringGatewayOutputWithContext(context.Context) GetGatewayAwsPeeringGatewayOutput
}

type GetGatewayAwsPeeringGatewayArgs struct {
	// (Required String) Azure region of the Peering Gateway.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetGatewayAwsPeeringGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAwsPeeringGateway)(nil)).Elem()
}

func (i GetGatewayAwsPeeringGatewayArgs) ToGetGatewayAwsPeeringGatewayOutput() GetGatewayAwsPeeringGatewayOutput {
	return i.ToGetGatewayAwsPeeringGatewayOutputWithContext(context.Background())
}

func (i GetGatewayAwsPeeringGatewayArgs) ToGetGatewayAwsPeeringGatewayOutputWithContext(ctx context.Context) GetGatewayAwsPeeringGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAwsPeeringGatewayOutput)
}

// GetGatewayAwsPeeringGatewayArrayInput is an input type that accepts GetGatewayAwsPeeringGatewayArray and GetGatewayAwsPeeringGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewayAwsPeeringGatewayArrayInput` via:
//
//	GetGatewayAwsPeeringGatewayArray{ GetGatewayAwsPeeringGatewayArgs{...} }
type GetGatewayAwsPeeringGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewayAwsPeeringGatewayArrayOutput() GetGatewayAwsPeeringGatewayArrayOutput
	ToGetGatewayAwsPeeringGatewayArrayOutputWithContext(context.Context) GetGatewayAwsPeeringGatewayArrayOutput
}

type GetGatewayAwsPeeringGatewayArray []GetGatewayAwsPeeringGatewayInput

func (GetGatewayAwsPeeringGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAwsPeeringGateway)(nil)).Elem()
}

func (i GetGatewayAwsPeeringGatewayArray) ToGetGatewayAwsPeeringGatewayArrayOutput() GetGatewayAwsPeeringGatewayArrayOutput {
	return i.ToGetGatewayAwsPeeringGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewayAwsPeeringGatewayArray) ToGetGatewayAwsPeeringGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAwsPeeringGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAwsPeeringGatewayArrayOutput)
}

type GetGatewayAwsPeeringGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewayAwsPeeringGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAwsPeeringGateway)(nil)).Elem()
}

func (o GetGatewayAwsPeeringGatewayOutput) ToGetGatewayAwsPeeringGatewayOutput() GetGatewayAwsPeeringGatewayOutput {
	return o
}

func (o GetGatewayAwsPeeringGatewayOutput) ToGetGatewayAwsPeeringGatewayOutputWithContext(ctx context.Context) GetGatewayAwsPeeringGatewayOutput {
	return o
}

// (Required String) Azure region of the Peering Gateway.
func (o GetGatewayAwsPeeringGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayAwsPeeringGateway) string { return v.Region }).(pulumi.StringOutput)
}

type GetGatewayAwsPeeringGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayAwsPeeringGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAwsPeeringGateway)(nil)).Elem()
}

func (o GetGatewayAwsPeeringGatewayArrayOutput) ToGetGatewayAwsPeeringGatewayArrayOutput() GetGatewayAwsPeeringGatewayArrayOutput {
	return o
}

func (o GetGatewayAwsPeeringGatewayArrayOutput) ToGetGatewayAwsPeeringGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAwsPeeringGatewayArrayOutput {
	return o
}

func (o GetGatewayAwsPeeringGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewayAwsPeeringGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayAwsPeeringGateway {
		return vs[0].([]GetGatewayAwsPeeringGateway)[vs[1].(int)]
	}).(GetGatewayAwsPeeringGatewayOutput)
}

type GetGatewayAzureEgressPrivateLinkGateway struct {
	// (Required String) Azure region of the Peering Gateway.
	Region string `pulumi:"region"`
	// (Required String) The Azure Subscription ID associated with the Confluent Cloud VPC.
	Subscription string `pulumi:"subscription"`
}

// GetGatewayAzureEgressPrivateLinkGatewayInput is an input type that accepts GetGatewayAzureEgressPrivateLinkGatewayArgs and GetGatewayAzureEgressPrivateLinkGatewayOutput values.
// You can construct a concrete instance of `GetGatewayAzureEgressPrivateLinkGatewayInput` via:
//
//	GetGatewayAzureEgressPrivateLinkGatewayArgs{...}
type GetGatewayAzureEgressPrivateLinkGatewayInput interface {
	pulumi.Input

	ToGetGatewayAzureEgressPrivateLinkGatewayOutput() GetGatewayAzureEgressPrivateLinkGatewayOutput
	ToGetGatewayAzureEgressPrivateLinkGatewayOutputWithContext(context.Context) GetGatewayAzureEgressPrivateLinkGatewayOutput
}

type GetGatewayAzureEgressPrivateLinkGatewayArgs struct {
	// (Required String) Azure region of the Peering Gateway.
	Region pulumi.StringInput `pulumi:"region"`
	// (Required String) The Azure Subscription ID associated with the Confluent Cloud VPC.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (GetGatewayAzureEgressPrivateLinkGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAzureEgressPrivateLinkGateway)(nil)).Elem()
}

func (i GetGatewayAzureEgressPrivateLinkGatewayArgs) ToGetGatewayAzureEgressPrivateLinkGatewayOutput() GetGatewayAzureEgressPrivateLinkGatewayOutput {
	return i.ToGetGatewayAzureEgressPrivateLinkGatewayOutputWithContext(context.Background())
}

func (i GetGatewayAzureEgressPrivateLinkGatewayArgs) ToGetGatewayAzureEgressPrivateLinkGatewayOutputWithContext(ctx context.Context) GetGatewayAzureEgressPrivateLinkGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAzureEgressPrivateLinkGatewayOutput)
}

// GetGatewayAzureEgressPrivateLinkGatewayArrayInput is an input type that accepts GetGatewayAzureEgressPrivateLinkGatewayArray and GetGatewayAzureEgressPrivateLinkGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewayAzureEgressPrivateLinkGatewayArrayInput` via:
//
//	GetGatewayAzureEgressPrivateLinkGatewayArray{ GetGatewayAzureEgressPrivateLinkGatewayArgs{...} }
type GetGatewayAzureEgressPrivateLinkGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutput() GetGatewayAzureEgressPrivateLinkGatewayArrayOutput
	ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutputWithContext(context.Context) GetGatewayAzureEgressPrivateLinkGatewayArrayOutput
}

type GetGatewayAzureEgressPrivateLinkGatewayArray []GetGatewayAzureEgressPrivateLinkGatewayInput

func (GetGatewayAzureEgressPrivateLinkGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAzureEgressPrivateLinkGateway)(nil)).Elem()
}

func (i GetGatewayAzureEgressPrivateLinkGatewayArray) ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutput() GetGatewayAzureEgressPrivateLinkGatewayArrayOutput {
	return i.ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewayAzureEgressPrivateLinkGatewayArray) ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAzureEgressPrivateLinkGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAzureEgressPrivateLinkGatewayArrayOutput)
}

type GetGatewayAzureEgressPrivateLinkGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewayAzureEgressPrivateLinkGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAzureEgressPrivateLinkGateway)(nil)).Elem()
}

func (o GetGatewayAzureEgressPrivateLinkGatewayOutput) ToGetGatewayAzureEgressPrivateLinkGatewayOutput() GetGatewayAzureEgressPrivateLinkGatewayOutput {
	return o
}

func (o GetGatewayAzureEgressPrivateLinkGatewayOutput) ToGetGatewayAzureEgressPrivateLinkGatewayOutputWithContext(ctx context.Context) GetGatewayAzureEgressPrivateLinkGatewayOutput {
	return o
}

// (Required String) Azure region of the Peering Gateway.
func (o GetGatewayAzureEgressPrivateLinkGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayAzureEgressPrivateLinkGateway) string { return v.Region }).(pulumi.StringOutput)
}

// (Required String) The Azure Subscription ID associated with the Confluent Cloud VPC.
func (o GetGatewayAzureEgressPrivateLinkGatewayOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayAzureEgressPrivateLinkGateway) string { return v.Subscription }).(pulumi.StringOutput)
}

type GetGatewayAzureEgressPrivateLinkGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayAzureEgressPrivateLinkGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAzureEgressPrivateLinkGateway)(nil)).Elem()
}

func (o GetGatewayAzureEgressPrivateLinkGatewayArrayOutput) ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutput() GetGatewayAzureEgressPrivateLinkGatewayArrayOutput {
	return o
}

func (o GetGatewayAzureEgressPrivateLinkGatewayArrayOutput) ToGetGatewayAzureEgressPrivateLinkGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAzureEgressPrivateLinkGatewayArrayOutput {
	return o
}

func (o GetGatewayAzureEgressPrivateLinkGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewayAzureEgressPrivateLinkGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayAzureEgressPrivateLinkGateway {
		return vs[0].([]GetGatewayAzureEgressPrivateLinkGateway)[vs[1].(int)]
	}).(GetGatewayAzureEgressPrivateLinkGatewayOutput)
}

type GetGatewayAzurePeeringGateway struct {
	// (Required String) Azure region of the Peering Gateway.
	Region string `pulumi:"region"`
}

// GetGatewayAzurePeeringGatewayInput is an input type that accepts GetGatewayAzurePeeringGatewayArgs and GetGatewayAzurePeeringGatewayOutput values.
// You can construct a concrete instance of `GetGatewayAzurePeeringGatewayInput` via:
//
//	GetGatewayAzurePeeringGatewayArgs{...}
type GetGatewayAzurePeeringGatewayInput interface {
	pulumi.Input

	ToGetGatewayAzurePeeringGatewayOutput() GetGatewayAzurePeeringGatewayOutput
	ToGetGatewayAzurePeeringGatewayOutputWithContext(context.Context) GetGatewayAzurePeeringGatewayOutput
}

type GetGatewayAzurePeeringGatewayArgs struct {
	// (Required String) Azure region of the Peering Gateway.
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetGatewayAzurePeeringGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAzurePeeringGateway)(nil)).Elem()
}

func (i GetGatewayAzurePeeringGatewayArgs) ToGetGatewayAzurePeeringGatewayOutput() GetGatewayAzurePeeringGatewayOutput {
	return i.ToGetGatewayAzurePeeringGatewayOutputWithContext(context.Background())
}

func (i GetGatewayAzurePeeringGatewayArgs) ToGetGatewayAzurePeeringGatewayOutputWithContext(ctx context.Context) GetGatewayAzurePeeringGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAzurePeeringGatewayOutput)
}

// GetGatewayAzurePeeringGatewayArrayInput is an input type that accepts GetGatewayAzurePeeringGatewayArray and GetGatewayAzurePeeringGatewayArrayOutput values.
// You can construct a concrete instance of `GetGatewayAzurePeeringGatewayArrayInput` via:
//
//	GetGatewayAzurePeeringGatewayArray{ GetGatewayAzurePeeringGatewayArgs{...} }
type GetGatewayAzurePeeringGatewayArrayInput interface {
	pulumi.Input

	ToGetGatewayAzurePeeringGatewayArrayOutput() GetGatewayAzurePeeringGatewayArrayOutput
	ToGetGatewayAzurePeeringGatewayArrayOutputWithContext(context.Context) GetGatewayAzurePeeringGatewayArrayOutput
}

type GetGatewayAzurePeeringGatewayArray []GetGatewayAzurePeeringGatewayInput

func (GetGatewayAzurePeeringGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAzurePeeringGateway)(nil)).Elem()
}

func (i GetGatewayAzurePeeringGatewayArray) ToGetGatewayAzurePeeringGatewayArrayOutput() GetGatewayAzurePeeringGatewayArrayOutput {
	return i.ToGetGatewayAzurePeeringGatewayArrayOutputWithContext(context.Background())
}

func (i GetGatewayAzurePeeringGatewayArray) ToGetGatewayAzurePeeringGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAzurePeeringGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayAzurePeeringGatewayArrayOutput)
}

type GetGatewayAzurePeeringGatewayOutput struct{ *pulumi.OutputState }

func (GetGatewayAzurePeeringGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayAzurePeeringGateway)(nil)).Elem()
}

func (o GetGatewayAzurePeeringGatewayOutput) ToGetGatewayAzurePeeringGatewayOutput() GetGatewayAzurePeeringGatewayOutput {
	return o
}

func (o GetGatewayAzurePeeringGatewayOutput) ToGetGatewayAzurePeeringGatewayOutputWithContext(ctx context.Context) GetGatewayAzurePeeringGatewayOutput {
	return o
}

// (Required String) Azure region of the Peering Gateway.
func (o GetGatewayAzurePeeringGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayAzurePeeringGateway) string { return v.Region }).(pulumi.StringOutput)
}

type GetGatewayAzurePeeringGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayAzurePeeringGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayAzurePeeringGateway)(nil)).Elem()
}

func (o GetGatewayAzurePeeringGatewayArrayOutput) ToGetGatewayAzurePeeringGatewayArrayOutput() GetGatewayAzurePeeringGatewayArrayOutput {
	return o
}

func (o GetGatewayAzurePeeringGatewayArrayOutput) ToGetGatewayAzurePeeringGatewayArrayOutputWithContext(ctx context.Context) GetGatewayAzurePeeringGatewayArrayOutput {
	return o
}

func (o GetGatewayAzurePeeringGatewayArrayOutput) Index(i pulumi.IntInput) GetGatewayAzurePeeringGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayAzurePeeringGateway {
		return vs[0].([]GetGatewayAzurePeeringGateway)[vs[1].(int)]
	}).(GetGatewayAzurePeeringGatewayOutput)
}

type GetGatewayEnvironment struct {
	// The ID of the Environment that the Gateway belongs to, for example, `env-123abc`.
	Id string `pulumi:"id"`
}

// GetGatewayEnvironmentInput is an input type that accepts GetGatewayEnvironmentArgs and GetGatewayEnvironmentOutput values.
// You can construct a concrete instance of `GetGatewayEnvironmentInput` via:
//
//	GetGatewayEnvironmentArgs{...}
type GetGatewayEnvironmentInput interface {
	pulumi.Input

	ToGetGatewayEnvironmentOutput() GetGatewayEnvironmentOutput
	ToGetGatewayEnvironmentOutputWithContext(context.Context) GetGatewayEnvironmentOutput
}

type GetGatewayEnvironmentArgs struct {
	// The ID of the Environment that the Gateway belongs to, for example, `env-123abc`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetGatewayEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayEnvironment)(nil)).Elem()
}

func (i GetGatewayEnvironmentArgs) ToGetGatewayEnvironmentOutput() GetGatewayEnvironmentOutput {
	return i.ToGetGatewayEnvironmentOutputWithContext(context.Background())
}

func (i GetGatewayEnvironmentArgs) ToGetGatewayEnvironmentOutputWithContext(ctx context.Context) GetGatewayEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayEnvironmentOutput)
}

type GetGatewayEnvironmentOutput struct{ *pulumi.OutputState }

func (GetGatewayEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayEnvironment)(nil)).Elem()
}

func (o GetGatewayEnvironmentOutput) ToGetGatewayEnvironmentOutput() GetGatewayEnvironmentOutput {
	return o
}

func (o GetGatewayEnvironmentOutput) ToGetGatewayEnvironmentOutputWithContext(ctx context.Context) GetGatewayEnvironmentOutput {
	return o
}

// The ID of the Environment that the Gateway belongs to, for example, `env-123abc`.
func (o GetGatewayEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetIdentityPoolIdentityProvider struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetIdentityPoolIdentityProviderInput is an input type that accepts GetIdentityPoolIdentityProviderArgs and GetIdentityPoolIdentityProviderOutput values.
// You can construct a concrete instance of `GetIdentityPoolIdentityProviderInput` via:
//
//	GetIdentityPoolIdentityProviderArgs{...}
type GetIdentityPoolIdentityProviderInput interface {
	pulumi.Input

	ToGetIdentityPoolIdentityProviderOutput() GetIdentityPoolIdentityProviderOutput
	ToGetIdentityPoolIdentityProviderOutputWithContext(context.Context) GetIdentityPoolIdentityProviderOutput
}

type GetIdentityPoolIdentityProviderArgs struct {
	// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetIdentityPoolIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityPoolIdentityProvider)(nil)).Elem()
}

func (i GetIdentityPoolIdentityProviderArgs) ToGetIdentityPoolIdentityProviderOutput() GetIdentityPoolIdentityProviderOutput {
	return i.ToGetIdentityPoolIdentityProviderOutputWithContext(context.Background())
}

func (i GetIdentityPoolIdentityProviderArgs) ToGetIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) GetIdentityPoolIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIdentityPoolIdentityProviderOutput)
}

type GetIdentityPoolIdentityProviderOutput struct{ *pulumi.OutputState }

func (GetIdentityPoolIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityPoolIdentityProvider)(nil)).Elem()
}

func (o GetIdentityPoolIdentityProviderOutput) ToGetIdentityPoolIdentityProviderOutput() GetIdentityPoolIdentityProviderOutput {
	return o
}

func (o GetIdentityPoolIdentityProviderOutput) ToGetIdentityPoolIdentityProviderOutputWithContext(ctx context.Context) GetIdentityPoolIdentityProviderOutput {
	return o
}

// The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetIdentityPoolIdentityProviderOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityPoolIdentityProvider) string { return v.Id }).(pulumi.StringOutput)
}

type GetInvitationCreator struct {
	// The ID of the Invitation, for example, `i-zyw30`.
	Id string `pulumi:"id"`
}

// GetInvitationCreatorInput is an input type that accepts GetInvitationCreatorArgs and GetInvitationCreatorOutput values.
// You can construct a concrete instance of `GetInvitationCreatorInput` via:
//
//	GetInvitationCreatorArgs{...}
type GetInvitationCreatorInput interface {
	pulumi.Input

	ToGetInvitationCreatorOutput() GetInvitationCreatorOutput
	ToGetInvitationCreatorOutputWithContext(context.Context) GetInvitationCreatorOutput
}

type GetInvitationCreatorArgs struct {
	// The ID of the Invitation, for example, `i-zyw30`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetInvitationCreatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvitationCreator)(nil)).Elem()
}

func (i GetInvitationCreatorArgs) ToGetInvitationCreatorOutput() GetInvitationCreatorOutput {
	return i.ToGetInvitationCreatorOutputWithContext(context.Background())
}

func (i GetInvitationCreatorArgs) ToGetInvitationCreatorOutputWithContext(ctx context.Context) GetInvitationCreatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvitationCreatorOutput)
}

// GetInvitationCreatorArrayInput is an input type that accepts GetInvitationCreatorArray and GetInvitationCreatorArrayOutput values.
// You can construct a concrete instance of `GetInvitationCreatorArrayInput` via:
//
//	GetInvitationCreatorArray{ GetInvitationCreatorArgs{...} }
type GetInvitationCreatorArrayInput interface {
	pulumi.Input

	ToGetInvitationCreatorArrayOutput() GetInvitationCreatorArrayOutput
	ToGetInvitationCreatorArrayOutputWithContext(context.Context) GetInvitationCreatorArrayOutput
}

type GetInvitationCreatorArray []GetInvitationCreatorInput

func (GetInvitationCreatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvitationCreator)(nil)).Elem()
}

func (i GetInvitationCreatorArray) ToGetInvitationCreatorArrayOutput() GetInvitationCreatorArrayOutput {
	return i.ToGetInvitationCreatorArrayOutputWithContext(context.Background())
}

func (i GetInvitationCreatorArray) ToGetInvitationCreatorArrayOutputWithContext(ctx context.Context) GetInvitationCreatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvitationCreatorArrayOutput)
}

type GetInvitationCreatorOutput struct{ *pulumi.OutputState }

func (GetInvitationCreatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvitationCreator)(nil)).Elem()
}

func (o GetInvitationCreatorOutput) ToGetInvitationCreatorOutput() GetInvitationCreatorOutput {
	return o
}

func (o GetInvitationCreatorOutput) ToGetInvitationCreatorOutputWithContext(ctx context.Context) GetInvitationCreatorOutput {
	return o
}

// The ID of the Invitation, for example, `i-zyw30`.
func (o GetInvitationCreatorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvitationCreator) string { return v.Id }).(pulumi.StringOutput)
}

type GetInvitationCreatorArrayOutput struct{ *pulumi.OutputState }

func (GetInvitationCreatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvitationCreator)(nil)).Elem()
}

func (o GetInvitationCreatorArrayOutput) ToGetInvitationCreatorArrayOutput() GetInvitationCreatorArrayOutput {
	return o
}

func (o GetInvitationCreatorArrayOutput) ToGetInvitationCreatorArrayOutputWithContext(ctx context.Context) GetInvitationCreatorArrayOutput {
	return o
}

func (o GetInvitationCreatorArrayOutput) Index(i pulumi.IntInput) GetInvitationCreatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvitationCreator {
		return vs[0].([]GetInvitationCreator)[vs[1].(int)]
	}).(GetInvitationCreatorOutput)
}

type GetInvitationUser struct {
	// The ID of the Invitation, for example, `i-zyw30`.
	Id string `pulumi:"id"`
}

// GetInvitationUserInput is an input type that accepts GetInvitationUserArgs and GetInvitationUserOutput values.
// You can construct a concrete instance of `GetInvitationUserInput` via:
//
//	GetInvitationUserArgs{...}
type GetInvitationUserInput interface {
	pulumi.Input

	ToGetInvitationUserOutput() GetInvitationUserOutput
	ToGetInvitationUserOutputWithContext(context.Context) GetInvitationUserOutput
}

type GetInvitationUserArgs struct {
	// The ID of the Invitation, for example, `i-zyw30`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetInvitationUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvitationUser)(nil)).Elem()
}

func (i GetInvitationUserArgs) ToGetInvitationUserOutput() GetInvitationUserOutput {
	return i.ToGetInvitationUserOutputWithContext(context.Background())
}

func (i GetInvitationUserArgs) ToGetInvitationUserOutputWithContext(ctx context.Context) GetInvitationUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvitationUserOutput)
}

// GetInvitationUserArrayInput is an input type that accepts GetInvitationUserArray and GetInvitationUserArrayOutput values.
// You can construct a concrete instance of `GetInvitationUserArrayInput` via:
//
//	GetInvitationUserArray{ GetInvitationUserArgs{...} }
type GetInvitationUserArrayInput interface {
	pulumi.Input

	ToGetInvitationUserArrayOutput() GetInvitationUserArrayOutput
	ToGetInvitationUserArrayOutputWithContext(context.Context) GetInvitationUserArrayOutput
}

type GetInvitationUserArray []GetInvitationUserInput

func (GetInvitationUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvitationUser)(nil)).Elem()
}

func (i GetInvitationUserArray) ToGetInvitationUserArrayOutput() GetInvitationUserArrayOutput {
	return i.ToGetInvitationUserArrayOutputWithContext(context.Background())
}

func (i GetInvitationUserArray) ToGetInvitationUserArrayOutputWithContext(ctx context.Context) GetInvitationUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvitationUserArrayOutput)
}

type GetInvitationUserOutput struct{ *pulumi.OutputState }

func (GetInvitationUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvitationUser)(nil)).Elem()
}

func (o GetInvitationUserOutput) ToGetInvitationUserOutput() GetInvitationUserOutput {
	return o
}

func (o GetInvitationUserOutput) ToGetInvitationUserOutputWithContext(ctx context.Context) GetInvitationUserOutput {
	return o
}

// The ID of the Invitation, for example, `i-zyw30`.
func (o GetInvitationUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvitationUser) string { return v.Id }).(pulumi.StringOutput)
}

type GetInvitationUserArrayOutput struct{ *pulumi.OutputState }

func (GetInvitationUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvitationUser)(nil)).Elem()
}

func (o GetInvitationUserArrayOutput) ToGetInvitationUserArrayOutput() GetInvitationUserArrayOutput {
	return o
}

func (o GetInvitationUserArrayOutput) ToGetInvitationUserArrayOutputWithContext(ctx context.Context) GetInvitationUserArrayOutput {
	return o
}

func (o GetInvitationUserArrayOutput) Index(i pulumi.IntInput) GetInvitationUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvitationUser {
		return vs[0].([]GetInvitationUser)[vs[1].(int)]
	}).(GetInvitationUserOutput)
}

type GetIpAddressesFilter struct {
	// A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
	AddressTypes []string `pulumi:"addressTypes"`
	// A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
	Clouds []string `pulumi:"clouds"`
	// A list of regions to filter by.
	Regions []string `pulumi:"regions"`
	// A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
	Services []string `pulumi:"services"`
}

// GetIpAddressesFilterInput is an input type that accepts GetIpAddressesFilterArgs and GetIpAddressesFilterOutput values.
// You can construct a concrete instance of `GetIpAddressesFilterInput` via:
//
//	GetIpAddressesFilterArgs{...}
type GetIpAddressesFilterInput interface {
	pulumi.Input

	ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput
	ToGetIpAddressesFilterOutputWithContext(context.Context) GetIpAddressesFilterOutput
}

type GetIpAddressesFilterArgs struct {
	// A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
	AddressTypes pulumi.StringArrayInput `pulumi:"addressTypes"`
	// A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
	Clouds pulumi.StringArrayInput `pulumi:"clouds"`
	// A list of regions to filter by.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (GetIpAddressesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesFilter)(nil)).Elem()
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput {
	return i.ToGetIpAddressesFilterOutputWithContext(context.Background())
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterOutputWithContext(ctx context.Context) GetIpAddressesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterOutput)
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterPtrOutput() GetIpAddressesFilterPtrOutput {
	return i.ToGetIpAddressesFilterPtrOutputWithContext(context.Background())
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterPtrOutputWithContext(ctx context.Context) GetIpAddressesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterOutput).ToGetIpAddressesFilterPtrOutputWithContext(ctx)
}

// GetIpAddressesFilterPtrInput is an input type that accepts GetIpAddressesFilterArgs, GetIpAddressesFilterPtr and GetIpAddressesFilterPtrOutput values.
// You can construct a concrete instance of `GetIpAddressesFilterPtrInput` via:
//
//	        GetIpAddressesFilterArgs{...}
//
//	or:
//
//	        nil
type GetIpAddressesFilterPtrInput interface {
	pulumi.Input

	ToGetIpAddressesFilterPtrOutput() GetIpAddressesFilterPtrOutput
	ToGetIpAddressesFilterPtrOutputWithContext(context.Context) GetIpAddressesFilterPtrOutput
}

type getIpAddressesFilterPtrType GetIpAddressesFilterArgs

func GetIpAddressesFilterPtr(v *GetIpAddressesFilterArgs) GetIpAddressesFilterPtrInput {
	return (*getIpAddressesFilterPtrType)(v)
}

func (*getIpAddressesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIpAddressesFilter)(nil)).Elem()
}

func (i *getIpAddressesFilterPtrType) ToGetIpAddressesFilterPtrOutput() GetIpAddressesFilterPtrOutput {
	return i.ToGetIpAddressesFilterPtrOutputWithContext(context.Background())
}

func (i *getIpAddressesFilterPtrType) ToGetIpAddressesFilterPtrOutputWithContext(ctx context.Context) GetIpAddressesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterPtrOutput)
}

type GetIpAddressesFilterOutput struct{ *pulumi.OutputState }

func (GetIpAddressesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesFilter)(nil)).Elem()
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput {
	return o
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterOutputWithContext(ctx context.Context) GetIpAddressesFilterOutput {
	return o
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterPtrOutput() GetIpAddressesFilterPtrOutput {
	return o.ToGetIpAddressesFilterPtrOutputWithContext(context.Background())
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterPtrOutputWithContext(ctx context.Context) GetIpAddressesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetIpAddressesFilter) *GetIpAddressesFilter {
		return &v
	}).(GetIpAddressesFilterPtrOutput)
}

// A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
func (o GetIpAddressesFilterOutput) AddressTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) []string { return v.AddressTypes }).(pulumi.StringArrayOutput)
}

// A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
func (o GetIpAddressesFilterOutput) Clouds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) []string { return v.Clouds }).(pulumi.StringArrayOutput)
}

// A list of regions to filter by.
func (o GetIpAddressesFilterOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
func (o GetIpAddressesFilterOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type GetIpAddressesFilterPtrOutput struct{ *pulumi.OutputState }

func (GetIpAddressesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetIpAddressesFilter)(nil)).Elem()
}

func (o GetIpAddressesFilterPtrOutput) ToGetIpAddressesFilterPtrOutput() GetIpAddressesFilterPtrOutput {
	return o
}

func (o GetIpAddressesFilterPtrOutput) ToGetIpAddressesFilterPtrOutputWithContext(ctx context.Context) GetIpAddressesFilterPtrOutput {
	return o
}

func (o GetIpAddressesFilterPtrOutput) Elem() GetIpAddressesFilterOutput {
	return o.ApplyT(func(v *GetIpAddressesFilter) GetIpAddressesFilter {
		if v != nil {
			return *v
		}
		var ret GetIpAddressesFilter
		return ret
	}).(GetIpAddressesFilterOutput)
}

// A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
func (o GetIpAddressesFilterPtrOutput) AddressTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetIpAddressesFilter) []string {
		if v == nil {
			return nil
		}
		return v.AddressTypes
	}).(pulumi.StringArrayOutput)
}

// A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
func (o GetIpAddressesFilterPtrOutput) Clouds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetIpAddressesFilter) []string {
		if v == nil {
			return nil
		}
		return v.Clouds
	}).(pulumi.StringArrayOutput)
}

// A list of regions to filter by.
func (o GetIpAddressesFilterPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetIpAddressesFilter) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
func (o GetIpAddressesFilterPtrOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetIpAddressesFilter) []string {
		if v == nil {
			return nil
		}
		return v.Services
	}).(pulumi.StringArrayOutput)
}

type GetIpAddressesIpAddress struct {
	// (Required Integer) Whether the address is used for egress or ingress.
	AddressType string `pulumi:"addressType"`
	// (Required String) An API Version of the schema version of the IP Address, for example, `networking/v1`.
	ApiVersion string `pulumi:"apiVersion"`
	// (Required String) The cloud service provider in which the address exists.
	Cloud string `pulumi:"cloud"`
	// (Required String) The IP Address range.
	IpPrefix string `pulumi:"ipPrefix"`
	// (Required String) A kind of the Kafka cluster, for example, `IpAddress`.
	Kind string `pulumi:"kind"`
	// (Required Integer) The region/location where the IP Address is in use.
	Region string `pulumi:"region"`
	// (Required List of Strings) The service types that will use the address.
	Services []string `pulumi:"services"`
}

// GetIpAddressesIpAddressInput is an input type that accepts GetIpAddressesIpAddressArgs and GetIpAddressesIpAddressOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressInput` via:
//
//	GetIpAddressesIpAddressArgs{...}
type GetIpAddressesIpAddressInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput
	ToGetIpAddressesIpAddressOutputWithContext(context.Context) GetIpAddressesIpAddressOutput
}

type GetIpAddressesIpAddressArgs struct {
	// (Required Integer) Whether the address is used for egress or ingress.
	AddressType pulumi.StringInput `pulumi:"addressType"`
	// (Required String) An API Version of the schema version of the IP Address, for example, `networking/v1`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// (Required String) The cloud service provider in which the address exists.
	Cloud pulumi.StringInput `pulumi:"cloud"`
	// (Required String) The IP Address range.
	IpPrefix pulumi.StringInput `pulumi:"ipPrefix"`
	// (Required String) A kind of the Kafka cluster, for example, `IpAddress`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Required Integer) The region/location where the IP Address is in use.
	Region pulumi.StringInput `pulumi:"region"`
	// (Required List of Strings) The service types that will use the address.
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (GetIpAddressesIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddress)(nil)).Elem()
}

func (i GetIpAddressesIpAddressArgs) ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput {
	return i.ToGetIpAddressesIpAddressOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressArgs) ToGetIpAddressesIpAddressOutputWithContext(ctx context.Context) GetIpAddressesIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressOutput)
}

// GetIpAddressesIpAddressArrayInput is an input type that accepts GetIpAddressesIpAddressArray and GetIpAddressesIpAddressArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressArrayInput` via:
//
//	GetIpAddressesIpAddressArray{ GetIpAddressesIpAddressArgs{...} }
type GetIpAddressesIpAddressArrayInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput
	ToGetIpAddressesIpAddressArrayOutputWithContext(context.Context) GetIpAddressesIpAddressArrayOutput
}

type GetIpAddressesIpAddressArray []GetIpAddressesIpAddressInput

func (GetIpAddressesIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddress)(nil)).Elem()
}

func (i GetIpAddressesIpAddressArray) ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput {
	return i.ToGetIpAddressesIpAddressArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressArray) ToGetIpAddressesIpAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressArrayOutput)
}

type GetIpAddressesIpAddressOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddress)(nil)).Elem()
}

func (o GetIpAddressesIpAddressOutput) ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput {
	return o
}

func (o GetIpAddressesIpAddressOutput) ToGetIpAddressesIpAddressOutputWithContext(ctx context.Context) GetIpAddressesIpAddressOutput {
	return o
}

// (Required Integer) Whether the address is used for egress or ingress.
func (o GetIpAddressesIpAddressOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.AddressType }).(pulumi.StringOutput)
}

// (Required String) An API Version of the schema version of the IP Address, for example, `networking/v1`.
func (o GetIpAddressesIpAddressOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// (Required String) The cloud service provider in which the address exists.
func (o GetIpAddressesIpAddressOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Cloud }).(pulumi.StringOutput)
}

// (Required String) The IP Address range.
func (o GetIpAddressesIpAddressOutput) IpPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.IpPrefix }).(pulumi.StringOutput)
}

// (Required String) A kind of the Kafka cluster, for example, `IpAddress`.
func (o GetIpAddressesIpAddressOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Kind }).(pulumi.StringOutput)
}

// (Required Integer) The region/location where the IP Address is in use.
func (o GetIpAddressesIpAddressOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Region }).(pulumi.StringOutput)
}

// (Required List of Strings) The service types that will use the address.
func (o GetIpAddressesIpAddressOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type GetIpAddressesIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddress)(nil)).Elem()
}

func (o GetIpAddressesIpAddressArrayOutput) ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressArrayOutput) ToGetIpAddressesIpAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressArrayOutput) Index(i pulumi.IntInput) GetIpAddressesIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesIpAddress {
		return vs[0].([]GetIpAddressesIpAddress)[vs[1].(int)]
	}).(GetIpAddressesIpAddressOutput)
}

type GetKafkaClientQuotaEnvironment struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id string `pulumi:"id"`
}

// GetKafkaClientQuotaEnvironmentInput is an input type that accepts GetKafkaClientQuotaEnvironmentArgs and GetKafkaClientQuotaEnvironmentOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaEnvironmentInput` via:
//
//	GetKafkaClientQuotaEnvironmentArgs{...}
type GetKafkaClientQuotaEnvironmentInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaEnvironmentOutput() GetKafkaClientQuotaEnvironmentOutput
	ToGetKafkaClientQuotaEnvironmentOutputWithContext(context.Context) GetKafkaClientQuotaEnvironmentOutput
}

type GetKafkaClientQuotaEnvironmentArgs struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClientQuotaEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i GetKafkaClientQuotaEnvironmentArgs) ToGetKafkaClientQuotaEnvironmentOutput() GetKafkaClientQuotaEnvironmentOutput {
	return i.ToGetKafkaClientQuotaEnvironmentOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaEnvironmentArgs) ToGetKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaEnvironmentOutput)
}

// GetKafkaClientQuotaEnvironmentArrayInput is an input type that accepts GetKafkaClientQuotaEnvironmentArray and GetKafkaClientQuotaEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaEnvironmentArrayInput` via:
//
//	GetKafkaClientQuotaEnvironmentArray{ GetKafkaClientQuotaEnvironmentArgs{...} }
type GetKafkaClientQuotaEnvironmentArrayInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaEnvironmentArrayOutput() GetKafkaClientQuotaEnvironmentArrayOutput
	ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(context.Context) GetKafkaClientQuotaEnvironmentArrayOutput
}

type GetKafkaClientQuotaEnvironmentArray []GetKafkaClientQuotaEnvironmentInput

func (GetKafkaClientQuotaEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (i GetKafkaClientQuotaEnvironmentArray) ToGetKafkaClientQuotaEnvironmentArrayOutput() GetKafkaClientQuotaEnvironmentArrayOutput {
	return i.ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaEnvironmentArray) ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaEnvironmentArrayOutput)
}

type GetKafkaClientQuotaEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o GetKafkaClientQuotaEnvironmentOutput) ToGetKafkaClientQuotaEnvironmentOutput() GetKafkaClientQuotaEnvironmentOutput {
	return o
}

func (o GetKafkaClientQuotaEnvironmentOutput) ToGetKafkaClientQuotaEnvironmentOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentOutput {
	return o
}

// The ID of the Kafka Client Quota (for example, `cq-abc123`).
func (o GetKafkaClientQuotaEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaEnvironment)(nil)).Elem()
}

func (o GetKafkaClientQuotaEnvironmentArrayOutput) ToGetKafkaClientQuotaEnvironmentArrayOutput() GetKafkaClientQuotaEnvironmentArrayOutput {
	return o
}

func (o GetKafkaClientQuotaEnvironmentArrayOutput) ToGetKafkaClientQuotaEnvironmentArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaEnvironmentArrayOutput {
	return o
}

func (o GetKafkaClientQuotaEnvironmentArrayOutput) Index(i pulumi.IntInput) GetKafkaClientQuotaEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClientQuotaEnvironment {
		return vs[0].([]GetKafkaClientQuotaEnvironment)[vs[1].(int)]
	}).(GetKafkaClientQuotaEnvironmentOutput)
}

type GetKafkaClientQuotaKafkaCluster struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id string `pulumi:"id"`
}

// GetKafkaClientQuotaKafkaClusterInput is an input type that accepts GetKafkaClientQuotaKafkaClusterArgs and GetKafkaClientQuotaKafkaClusterOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaKafkaClusterInput` via:
//
//	GetKafkaClientQuotaKafkaClusterArgs{...}
type GetKafkaClientQuotaKafkaClusterInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaKafkaClusterOutput() GetKafkaClientQuotaKafkaClusterOutput
	ToGetKafkaClientQuotaKafkaClusterOutputWithContext(context.Context) GetKafkaClientQuotaKafkaClusterOutput
}

type GetKafkaClientQuotaKafkaClusterArgs struct {
	// The ID of the Kafka Client Quota (for example, `cq-abc123`).
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClientQuotaKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i GetKafkaClientQuotaKafkaClusterArgs) ToGetKafkaClientQuotaKafkaClusterOutput() GetKafkaClientQuotaKafkaClusterOutput {
	return i.ToGetKafkaClientQuotaKafkaClusterOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaKafkaClusterArgs) ToGetKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaKafkaClusterOutput)
}

// GetKafkaClientQuotaKafkaClusterArrayInput is an input type that accepts GetKafkaClientQuotaKafkaClusterArray and GetKafkaClientQuotaKafkaClusterArrayOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaKafkaClusterArrayInput` via:
//
//	GetKafkaClientQuotaKafkaClusterArray{ GetKafkaClientQuotaKafkaClusterArgs{...} }
type GetKafkaClientQuotaKafkaClusterArrayInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaKafkaClusterArrayOutput() GetKafkaClientQuotaKafkaClusterArrayOutput
	ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(context.Context) GetKafkaClientQuotaKafkaClusterArrayOutput
}

type GetKafkaClientQuotaKafkaClusterArray []GetKafkaClientQuotaKafkaClusterInput

func (GetKafkaClientQuotaKafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (i GetKafkaClientQuotaKafkaClusterArray) ToGetKafkaClientQuotaKafkaClusterArrayOutput() GetKafkaClientQuotaKafkaClusterArrayOutput {
	return i.ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaKafkaClusterArray) ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaKafkaClusterArrayOutput)
}

type GetKafkaClientQuotaKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o GetKafkaClientQuotaKafkaClusterOutput) ToGetKafkaClientQuotaKafkaClusterOutput() GetKafkaClientQuotaKafkaClusterOutput {
	return o
}

func (o GetKafkaClientQuotaKafkaClusterOutput) ToGetKafkaClientQuotaKafkaClusterOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterOutput {
	return o
}

// The ID of the Kafka Client Quota (for example, `cq-abc123`).
func (o GetKafkaClientQuotaKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaKafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaKafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaKafkaCluster)(nil)).Elem()
}

func (o GetKafkaClientQuotaKafkaClusterArrayOutput) ToGetKafkaClientQuotaKafkaClusterArrayOutput() GetKafkaClientQuotaKafkaClusterArrayOutput {
	return o
}

func (o GetKafkaClientQuotaKafkaClusterArrayOutput) ToGetKafkaClientQuotaKafkaClusterArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaKafkaClusterArrayOutput {
	return o
}

func (o GetKafkaClientQuotaKafkaClusterArrayOutput) Index(i pulumi.IntInput) GetKafkaClientQuotaKafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClientQuotaKafkaCluster {
		return vs[0].([]GetKafkaClientQuotaKafkaCluster)[vs[1].(int)]
	}).(GetKafkaClientQuotaKafkaClusterOutput)
}

type GetKafkaClientQuotaThroughput struct {
	// (Required String) The egress throughput limit in bytes per second.
	EgressByteRate string `pulumi:"egressByteRate"`
	// (Required String) The ingress throughput limit in bytes per second.
	IngressByteRate string `pulumi:"ingressByteRate"`
}

// GetKafkaClientQuotaThroughputInput is an input type that accepts GetKafkaClientQuotaThroughputArgs and GetKafkaClientQuotaThroughputOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaThroughputInput` via:
//
//	GetKafkaClientQuotaThroughputArgs{...}
type GetKafkaClientQuotaThroughputInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaThroughputOutput() GetKafkaClientQuotaThroughputOutput
	ToGetKafkaClientQuotaThroughputOutputWithContext(context.Context) GetKafkaClientQuotaThroughputOutput
}

type GetKafkaClientQuotaThroughputArgs struct {
	// (Required String) The egress throughput limit in bytes per second.
	EgressByteRate pulumi.StringInput `pulumi:"egressByteRate"`
	// (Required String) The ingress throughput limit in bytes per second.
	IngressByteRate pulumi.StringInput `pulumi:"ingressByteRate"`
}

func (GetKafkaClientQuotaThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (i GetKafkaClientQuotaThroughputArgs) ToGetKafkaClientQuotaThroughputOutput() GetKafkaClientQuotaThroughputOutput {
	return i.ToGetKafkaClientQuotaThroughputOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaThroughputArgs) ToGetKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaThroughputOutput)
}

// GetKafkaClientQuotaThroughputArrayInput is an input type that accepts GetKafkaClientQuotaThroughputArray and GetKafkaClientQuotaThroughputArrayOutput values.
// You can construct a concrete instance of `GetKafkaClientQuotaThroughputArrayInput` via:
//
//	GetKafkaClientQuotaThroughputArray{ GetKafkaClientQuotaThroughputArgs{...} }
type GetKafkaClientQuotaThroughputArrayInput interface {
	pulumi.Input

	ToGetKafkaClientQuotaThroughputArrayOutput() GetKafkaClientQuotaThroughputArrayOutput
	ToGetKafkaClientQuotaThroughputArrayOutputWithContext(context.Context) GetKafkaClientQuotaThroughputArrayOutput
}

type GetKafkaClientQuotaThroughputArray []GetKafkaClientQuotaThroughputInput

func (GetKafkaClientQuotaThroughputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (i GetKafkaClientQuotaThroughputArray) ToGetKafkaClientQuotaThroughputArrayOutput() GetKafkaClientQuotaThroughputArrayOutput {
	return i.ToGetKafkaClientQuotaThroughputArrayOutputWithContext(context.Background())
}

func (i GetKafkaClientQuotaThroughputArray) ToGetKafkaClientQuotaThroughputArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClientQuotaThroughputArrayOutput)
}

type GetKafkaClientQuotaThroughputOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (o GetKafkaClientQuotaThroughputOutput) ToGetKafkaClientQuotaThroughputOutput() GetKafkaClientQuotaThroughputOutput {
	return o
}

func (o GetKafkaClientQuotaThroughputOutput) ToGetKafkaClientQuotaThroughputOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputOutput {
	return o
}

// (Required String) The egress throughput limit in bytes per second.
func (o GetKafkaClientQuotaThroughputOutput) EgressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaThroughput) string { return v.EgressByteRate }).(pulumi.StringOutput)
}

// (Required String) The ingress throughput limit in bytes per second.
func (o GetKafkaClientQuotaThroughputOutput) IngressByteRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClientQuotaThroughput) string { return v.IngressByteRate }).(pulumi.StringOutput)
}

type GetKafkaClientQuotaThroughputArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClientQuotaThroughputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClientQuotaThroughput)(nil)).Elem()
}

func (o GetKafkaClientQuotaThroughputArrayOutput) ToGetKafkaClientQuotaThroughputArrayOutput() GetKafkaClientQuotaThroughputArrayOutput {
	return o
}

func (o GetKafkaClientQuotaThroughputArrayOutput) ToGetKafkaClientQuotaThroughputArrayOutputWithContext(ctx context.Context) GetKafkaClientQuotaThroughputArrayOutput {
	return o
}

func (o GetKafkaClientQuotaThroughputArrayOutput) Index(i pulumi.IntInput) GetKafkaClientQuotaThroughputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClientQuotaThroughput {
		return vs[0].([]GetKafkaClientQuotaThroughput)[vs[1].(int)]
	}).(GetKafkaClientQuotaThroughputOutput)
}

type GetKafkaClusterBasic struct {
}

// GetKafkaClusterBasicInput is an input type that accepts GetKafkaClusterBasicArgs and GetKafkaClusterBasicOutput values.
// You can construct a concrete instance of `GetKafkaClusterBasicInput` via:
//
//	GetKafkaClusterBasicArgs{...}
type GetKafkaClusterBasicInput interface {
	pulumi.Input

	ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput
	ToGetKafkaClusterBasicOutputWithContext(context.Context) GetKafkaClusterBasicOutput
}

type GetKafkaClusterBasicArgs struct {
}

func (GetKafkaClusterBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterBasic)(nil)).Elem()
}

func (i GetKafkaClusterBasicArgs) ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput {
	return i.ToGetKafkaClusterBasicOutputWithContext(context.Background())
}

func (i GetKafkaClusterBasicArgs) ToGetKafkaClusterBasicOutputWithContext(ctx context.Context) GetKafkaClusterBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterBasicOutput)
}

// GetKafkaClusterBasicArrayInput is an input type that accepts GetKafkaClusterBasicArray and GetKafkaClusterBasicArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterBasicArrayInput` via:
//
//	GetKafkaClusterBasicArray{ GetKafkaClusterBasicArgs{...} }
type GetKafkaClusterBasicArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput
	ToGetKafkaClusterBasicArrayOutputWithContext(context.Context) GetKafkaClusterBasicArrayOutput
}

type GetKafkaClusterBasicArray []GetKafkaClusterBasicInput

func (GetKafkaClusterBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterBasic)(nil)).Elem()
}

func (i GetKafkaClusterBasicArray) ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput {
	return i.ToGetKafkaClusterBasicArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterBasicArray) ToGetKafkaClusterBasicArrayOutputWithContext(ctx context.Context) GetKafkaClusterBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterBasicArrayOutput)
}

type GetKafkaClusterBasicOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterBasic)(nil)).Elem()
}

func (o GetKafkaClusterBasicOutput) ToGetKafkaClusterBasicOutput() GetKafkaClusterBasicOutput {
	return o
}

func (o GetKafkaClusterBasicOutput) ToGetKafkaClusterBasicOutputWithContext(ctx context.Context) GetKafkaClusterBasicOutput {
	return o
}

type GetKafkaClusterBasicArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterBasic)(nil)).Elem()
}

func (o GetKafkaClusterBasicArrayOutput) ToGetKafkaClusterBasicArrayOutput() GetKafkaClusterBasicArrayOutput {
	return o
}

func (o GetKafkaClusterBasicArrayOutput) ToGetKafkaClusterBasicArrayOutputWithContext(ctx context.Context) GetKafkaClusterBasicArrayOutput {
	return o
}

func (o GetKafkaClusterBasicArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterBasic {
		return vs[0].([]GetKafkaClusterBasic)[vs[1].(int)]
	}).(GetKafkaClusterBasicOutput)
}

type GetKafkaClusterByokKey struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// GetKafkaClusterByokKeyInput is an input type that accepts GetKafkaClusterByokKeyArgs and GetKafkaClusterByokKeyOutput values.
// You can construct a concrete instance of `GetKafkaClusterByokKeyInput` via:
//
//	GetKafkaClusterByokKeyArgs{...}
type GetKafkaClusterByokKeyInput interface {
	pulumi.Input

	ToGetKafkaClusterByokKeyOutput() GetKafkaClusterByokKeyOutput
	ToGetKafkaClusterByokKeyOutputWithContext(context.Context) GetKafkaClusterByokKeyOutput
}

type GetKafkaClusterByokKeyArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterByokKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterByokKey)(nil)).Elem()
}

func (i GetKafkaClusterByokKeyArgs) ToGetKafkaClusterByokKeyOutput() GetKafkaClusterByokKeyOutput {
	return i.ToGetKafkaClusterByokKeyOutputWithContext(context.Background())
}

func (i GetKafkaClusterByokKeyArgs) ToGetKafkaClusterByokKeyOutputWithContext(ctx context.Context) GetKafkaClusterByokKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterByokKeyOutput)
}

// GetKafkaClusterByokKeyArrayInput is an input type that accepts GetKafkaClusterByokKeyArray and GetKafkaClusterByokKeyArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterByokKeyArrayInput` via:
//
//	GetKafkaClusterByokKeyArray{ GetKafkaClusterByokKeyArgs{...} }
type GetKafkaClusterByokKeyArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterByokKeyArrayOutput() GetKafkaClusterByokKeyArrayOutput
	ToGetKafkaClusterByokKeyArrayOutputWithContext(context.Context) GetKafkaClusterByokKeyArrayOutput
}

type GetKafkaClusterByokKeyArray []GetKafkaClusterByokKeyInput

func (GetKafkaClusterByokKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterByokKey)(nil)).Elem()
}

func (i GetKafkaClusterByokKeyArray) ToGetKafkaClusterByokKeyArrayOutput() GetKafkaClusterByokKeyArrayOutput {
	return i.ToGetKafkaClusterByokKeyArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterByokKeyArray) ToGetKafkaClusterByokKeyArrayOutputWithContext(ctx context.Context) GetKafkaClusterByokKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterByokKeyArrayOutput)
}

type GetKafkaClusterByokKeyOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterByokKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterByokKey)(nil)).Elem()
}

func (o GetKafkaClusterByokKeyOutput) ToGetKafkaClusterByokKeyOutput() GetKafkaClusterByokKeyOutput {
	return o
}

func (o GetKafkaClusterByokKeyOutput) ToGetKafkaClusterByokKeyOutputWithContext(ctx context.Context) GetKafkaClusterByokKeyOutput {
	return o
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaClusterByokKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterByokKey) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterByokKeyArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterByokKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterByokKey)(nil)).Elem()
}

func (o GetKafkaClusterByokKeyArrayOutput) ToGetKafkaClusterByokKeyArrayOutput() GetKafkaClusterByokKeyArrayOutput {
	return o
}

func (o GetKafkaClusterByokKeyArrayOutput) ToGetKafkaClusterByokKeyArrayOutputWithContext(ctx context.Context) GetKafkaClusterByokKeyArrayOutput {
	return o
}

func (o GetKafkaClusterByokKeyArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterByokKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterByokKey {
		return vs[0].([]GetKafkaClusterByokKey)[vs[1].(int)]
	}).(GetKafkaClusterByokKeyOutput)
}

type GetKafkaClusterDedicated struct {
	// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
	Cku int `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
	EncryptionKey string `pulumi:"encryptionKey"`
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
	// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
	Zones []string `pulumi:"zones"`
}

// GetKafkaClusterDedicatedInput is an input type that accepts GetKafkaClusterDedicatedArgs and GetKafkaClusterDedicatedOutput values.
// You can construct a concrete instance of `GetKafkaClusterDedicatedInput` via:
//
//	GetKafkaClusterDedicatedArgs{...}
type GetKafkaClusterDedicatedInput interface {
	pulumi.Input

	ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput
	ToGetKafkaClusterDedicatedOutputWithContext(context.Context) GetKafkaClusterDedicatedOutput
}

type GetKafkaClusterDedicatedArgs struct {
	// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
	Cku pulumi.IntInput `pulumi:"cku"`
	// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
	EncryptionKey pulumi.StringInput `pulumi:"encryptionKey"`
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
	// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetKafkaClusterDedicatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterDedicated)(nil)).Elem()
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput {
	return i.ToGetKafkaClusterDedicatedOutputWithContext(context.Background())
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedOutput)
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return i.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i GetKafkaClusterDedicatedArgs) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedOutput).ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx)
}

// GetKafkaClusterDedicatedPtrInput is an input type that accepts GetKafkaClusterDedicatedArgs, GetKafkaClusterDedicatedPtr and GetKafkaClusterDedicatedPtrOutput values.
// You can construct a concrete instance of `GetKafkaClusterDedicatedPtrInput` via:
//
//	        GetKafkaClusterDedicatedArgs{...}
//
//	or:
//
//	        nil
type GetKafkaClusterDedicatedPtrInput interface {
	pulumi.Input

	ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput
	ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Context) GetKafkaClusterDedicatedPtrOutput
}

type getKafkaClusterDedicatedPtrType GetKafkaClusterDedicatedArgs

func GetKafkaClusterDedicatedPtr(v *GetKafkaClusterDedicatedArgs) GetKafkaClusterDedicatedPtrInput {
	return (*getKafkaClusterDedicatedPtrType)(v)
}

func (*getKafkaClusterDedicatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaClusterDedicated)(nil)).Elem()
}

func (i *getKafkaClusterDedicatedPtrType) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return i.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (i *getKafkaClusterDedicatedPtrType) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterDedicatedPtrOutput)
}

type GetKafkaClusterDedicatedOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterDedicatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterDedicated)(nil)).Elem()
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedOutput() GetKafkaClusterDedicatedOutput {
	return o
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedOutput {
	return o
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return o.ToGetKafkaClusterDedicatedPtrOutputWithContext(context.Background())
}

func (o GetKafkaClusterDedicatedOutput) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaClusterDedicated) *GetKafkaClusterDedicated {
		return &v
	}).(GetKafkaClusterDedicatedPtrOutput)
}

// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
func (o GetKafkaClusterDedicatedOutput) Cku() pulumi.IntOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) int { return v.Cku }).(pulumi.IntOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
func (o GetKafkaClusterDedicatedOutput) EncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) string { return v.EncryptionKey }).(pulumi.StringOutput)
}

// (Required List of String) The list of zones the cluster is in.
// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
func (o GetKafkaClusterDedicatedOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaClusterDedicated) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GetKafkaClusterDedicatedPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterDedicatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaClusterDedicated)(nil)).Elem()
}

func (o GetKafkaClusterDedicatedPtrOutput) ToGetKafkaClusterDedicatedPtrOutput() GetKafkaClusterDedicatedPtrOutput {
	return o
}

func (o GetKafkaClusterDedicatedPtrOutput) ToGetKafkaClusterDedicatedPtrOutputWithContext(ctx context.Context) GetKafkaClusterDedicatedPtrOutput {
	return o
}

func (o GetKafkaClusterDedicatedPtrOutput) Elem() GetKafkaClusterDedicatedOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) GetKafkaClusterDedicated {
		if v != nil {
			return *v
		}
		var ret GetKafkaClusterDedicated
		return ret
	}).(GetKafkaClusterDedicatedOutput)
}

// (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
func (o GetKafkaClusterDedicatedPtrOutput) Cku() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) *int {
		if v == nil {
			return nil
		}
		return &v.Cku
	}).(pulumi.IntPtrOutput)
}

// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
func (o GetKafkaClusterDedicatedPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

// (Required List of String) The list of zones the cluster is in.
// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
func (o GetKafkaClusterDedicatedPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetKafkaClusterDedicated) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type GetKafkaClusterEnterprise struct {
}

// GetKafkaClusterEnterpriseInput is an input type that accepts GetKafkaClusterEnterpriseArgs and GetKafkaClusterEnterpriseOutput values.
// You can construct a concrete instance of `GetKafkaClusterEnterpriseInput` via:
//
//	GetKafkaClusterEnterpriseArgs{...}
type GetKafkaClusterEnterpriseInput interface {
	pulumi.Input

	ToGetKafkaClusterEnterpriseOutput() GetKafkaClusterEnterpriseOutput
	ToGetKafkaClusterEnterpriseOutputWithContext(context.Context) GetKafkaClusterEnterpriseOutput
}

type GetKafkaClusterEnterpriseArgs struct {
}

func (GetKafkaClusterEnterpriseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnterprise)(nil)).Elem()
}

func (i GetKafkaClusterEnterpriseArgs) ToGetKafkaClusterEnterpriseOutput() GetKafkaClusterEnterpriseOutput {
	return i.ToGetKafkaClusterEnterpriseOutputWithContext(context.Background())
}

func (i GetKafkaClusterEnterpriseArgs) ToGetKafkaClusterEnterpriseOutputWithContext(ctx context.Context) GetKafkaClusterEnterpriseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterEnterpriseOutput)
}

// GetKafkaClusterEnterpriseArrayInput is an input type that accepts GetKafkaClusterEnterpriseArray and GetKafkaClusterEnterpriseArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterEnterpriseArrayInput` via:
//
//	GetKafkaClusterEnterpriseArray{ GetKafkaClusterEnterpriseArgs{...} }
type GetKafkaClusterEnterpriseArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterEnterpriseArrayOutput() GetKafkaClusterEnterpriseArrayOutput
	ToGetKafkaClusterEnterpriseArrayOutputWithContext(context.Context) GetKafkaClusterEnterpriseArrayOutput
}

type GetKafkaClusterEnterpriseArray []GetKafkaClusterEnterpriseInput

func (GetKafkaClusterEnterpriseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterEnterprise)(nil)).Elem()
}

func (i GetKafkaClusterEnterpriseArray) ToGetKafkaClusterEnterpriseArrayOutput() GetKafkaClusterEnterpriseArrayOutput {
	return i.ToGetKafkaClusterEnterpriseArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterEnterpriseArray) ToGetKafkaClusterEnterpriseArrayOutputWithContext(ctx context.Context) GetKafkaClusterEnterpriseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterEnterpriseArrayOutput)
}

type GetKafkaClusterEnterpriseOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterEnterpriseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnterprise)(nil)).Elem()
}

func (o GetKafkaClusterEnterpriseOutput) ToGetKafkaClusterEnterpriseOutput() GetKafkaClusterEnterpriseOutput {
	return o
}

func (o GetKafkaClusterEnterpriseOutput) ToGetKafkaClusterEnterpriseOutputWithContext(ctx context.Context) GetKafkaClusterEnterpriseOutput {
	return o
}

type GetKafkaClusterEnterpriseArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterEnterpriseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterEnterprise)(nil)).Elem()
}

func (o GetKafkaClusterEnterpriseArrayOutput) ToGetKafkaClusterEnterpriseArrayOutput() GetKafkaClusterEnterpriseArrayOutput {
	return o
}

func (o GetKafkaClusterEnterpriseArrayOutput) ToGetKafkaClusterEnterpriseArrayOutputWithContext(ctx context.Context) GetKafkaClusterEnterpriseArrayOutput {
	return o
}

func (o GetKafkaClusterEnterpriseArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterEnterpriseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterEnterprise {
		return vs[0].([]GetKafkaClusterEnterprise)[vs[1].(int)]
	}).(GetKafkaClusterEnterpriseOutput)
}

type GetKafkaClusterEnvironment struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetKafkaClusterEnvironmentInput is an input type that accepts GetKafkaClusterEnvironmentArgs and GetKafkaClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetKafkaClusterEnvironmentInput` via:
//
//	GetKafkaClusterEnvironmentArgs{...}
type GetKafkaClusterEnvironmentInput interface {
	pulumi.Input

	ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput
	ToGetKafkaClusterEnvironmentOutputWithContext(context.Context) GetKafkaClusterEnvironmentOutput
}

type GetKafkaClusterEnvironmentArgs struct {
	// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnvironment)(nil)).Elem()
}

func (i GetKafkaClusterEnvironmentArgs) ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput {
	return i.ToGetKafkaClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetKafkaClusterEnvironmentArgs) ToGetKafkaClusterEnvironmentOutputWithContext(ctx context.Context) GetKafkaClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterEnvironmentOutput)
}

type GetKafkaClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterEnvironment)(nil)).Elem()
}

func (o GetKafkaClusterEnvironmentOutput) ToGetKafkaClusterEnvironmentOutput() GetKafkaClusterEnvironmentOutput {
	return o
}

func (o GetKafkaClusterEnvironmentOutput) ToGetKafkaClusterEnvironmentOutputWithContext(ctx context.Context) GetKafkaClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetKafkaClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterFreight struct {
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
	// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
	Zones []string `pulumi:"zones"`
}

// GetKafkaClusterFreightInput is an input type that accepts GetKafkaClusterFreightArgs and GetKafkaClusterFreightOutput values.
// You can construct a concrete instance of `GetKafkaClusterFreightInput` via:
//
//	GetKafkaClusterFreightArgs{...}
type GetKafkaClusterFreightInput interface {
	pulumi.Input

	ToGetKafkaClusterFreightOutput() GetKafkaClusterFreightOutput
	ToGetKafkaClusterFreightOutputWithContext(context.Context) GetKafkaClusterFreightOutput
}

type GetKafkaClusterFreightArgs struct {
	// (Required List of String) The list of zones the cluster is in.
	// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
	// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
	// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetKafkaClusterFreightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterFreight)(nil)).Elem()
}

func (i GetKafkaClusterFreightArgs) ToGetKafkaClusterFreightOutput() GetKafkaClusterFreightOutput {
	return i.ToGetKafkaClusterFreightOutputWithContext(context.Background())
}

func (i GetKafkaClusterFreightArgs) ToGetKafkaClusterFreightOutputWithContext(ctx context.Context) GetKafkaClusterFreightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterFreightOutput)
}

// GetKafkaClusterFreightArrayInput is an input type that accepts GetKafkaClusterFreightArray and GetKafkaClusterFreightArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterFreightArrayInput` via:
//
//	GetKafkaClusterFreightArray{ GetKafkaClusterFreightArgs{...} }
type GetKafkaClusterFreightArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterFreightArrayOutput() GetKafkaClusterFreightArrayOutput
	ToGetKafkaClusterFreightArrayOutputWithContext(context.Context) GetKafkaClusterFreightArrayOutput
}

type GetKafkaClusterFreightArray []GetKafkaClusterFreightInput

func (GetKafkaClusterFreightArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterFreight)(nil)).Elem()
}

func (i GetKafkaClusterFreightArray) ToGetKafkaClusterFreightArrayOutput() GetKafkaClusterFreightArrayOutput {
	return i.ToGetKafkaClusterFreightArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterFreightArray) ToGetKafkaClusterFreightArrayOutputWithContext(ctx context.Context) GetKafkaClusterFreightArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterFreightArrayOutput)
}

type GetKafkaClusterFreightOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterFreightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterFreight)(nil)).Elem()
}

func (o GetKafkaClusterFreightOutput) ToGetKafkaClusterFreightOutput() GetKafkaClusterFreightOutput {
	return o
}

func (o GetKafkaClusterFreightOutput) ToGetKafkaClusterFreightOutputWithContext(ctx context.Context) GetKafkaClusterFreightOutput {
	return o
}

// (Required List of String) The list of zones the cluster is in.
// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
// - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
// - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
func (o GetKafkaClusterFreightOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaClusterFreight) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GetKafkaClusterFreightArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterFreightArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterFreight)(nil)).Elem()
}

func (o GetKafkaClusterFreightArrayOutput) ToGetKafkaClusterFreightArrayOutput() GetKafkaClusterFreightArrayOutput {
	return o
}

func (o GetKafkaClusterFreightArrayOutput) ToGetKafkaClusterFreightArrayOutputWithContext(ctx context.Context) GetKafkaClusterFreightArrayOutput {
	return o
}

func (o GetKafkaClusterFreightArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterFreightOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterFreight {
		return vs[0].([]GetKafkaClusterFreight)[vs[1].(int)]
	}).(GetKafkaClusterFreightOutput)
}

type GetKafkaClusterNetwork struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// GetKafkaClusterNetworkInput is an input type that accepts GetKafkaClusterNetworkArgs and GetKafkaClusterNetworkOutput values.
// You can construct a concrete instance of `GetKafkaClusterNetworkInput` via:
//
//	GetKafkaClusterNetworkArgs{...}
type GetKafkaClusterNetworkInput interface {
	pulumi.Input

	ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput
	ToGetKafkaClusterNetworkOutputWithContext(context.Context) GetKafkaClusterNetworkOutput
}

type GetKafkaClusterNetworkArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterNetwork)(nil)).Elem()
}

func (i GetKafkaClusterNetworkArgs) ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput {
	return i.ToGetKafkaClusterNetworkOutputWithContext(context.Background())
}

func (i GetKafkaClusterNetworkArgs) ToGetKafkaClusterNetworkOutputWithContext(ctx context.Context) GetKafkaClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterNetworkOutput)
}

// GetKafkaClusterNetworkArrayInput is an input type that accepts GetKafkaClusterNetworkArray and GetKafkaClusterNetworkArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterNetworkArrayInput` via:
//
//	GetKafkaClusterNetworkArray{ GetKafkaClusterNetworkArgs{...} }
type GetKafkaClusterNetworkArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput
	ToGetKafkaClusterNetworkArrayOutputWithContext(context.Context) GetKafkaClusterNetworkArrayOutput
}

type GetKafkaClusterNetworkArray []GetKafkaClusterNetworkInput

func (GetKafkaClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterNetwork)(nil)).Elem()
}

func (i GetKafkaClusterNetworkArray) ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput {
	return i.ToGetKafkaClusterNetworkArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterNetworkArray) ToGetKafkaClusterNetworkArrayOutputWithContext(ctx context.Context) GetKafkaClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterNetworkArrayOutput)
}

type GetKafkaClusterNetworkOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterNetwork)(nil)).Elem()
}

func (o GetKafkaClusterNetworkOutput) ToGetKafkaClusterNetworkOutput() GetKafkaClusterNetworkOutput {
	return o
}

func (o GetKafkaClusterNetworkOutput) ToGetKafkaClusterNetworkOutputWithContext(ctx context.Context) GetKafkaClusterNetworkOutput {
	return o
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaClusterNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaClusterNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterNetwork)(nil)).Elem()
}

func (o GetKafkaClusterNetworkArrayOutput) ToGetKafkaClusterNetworkArrayOutput() GetKafkaClusterNetworkArrayOutput {
	return o
}

func (o GetKafkaClusterNetworkArrayOutput) ToGetKafkaClusterNetworkArrayOutputWithContext(ctx context.Context) GetKafkaClusterNetworkArrayOutput {
	return o
}

func (o GetKafkaClusterNetworkArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterNetwork {
		return vs[0].([]GetKafkaClusterNetwork)[vs[1].(int)]
	}).(GetKafkaClusterNetworkOutput)
}

type GetKafkaClusterStandard struct {
}

// GetKafkaClusterStandardInput is an input type that accepts GetKafkaClusterStandardArgs and GetKafkaClusterStandardOutput values.
// You can construct a concrete instance of `GetKafkaClusterStandardInput` via:
//
//	GetKafkaClusterStandardArgs{...}
type GetKafkaClusterStandardInput interface {
	pulumi.Input

	ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput
	ToGetKafkaClusterStandardOutputWithContext(context.Context) GetKafkaClusterStandardOutput
}

type GetKafkaClusterStandardArgs struct {
}

func (GetKafkaClusterStandardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterStandard)(nil)).Elem()
}

func (i GetKafkaClusterStandardArgs) ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput {
	return i.ToGetKafkaClusterStandardOutputWithContext(context.Background())
}

func (i GetKafkaClusterStandardArgs) ToGetKafkaClusterStandardOutputWithContext(ctx context.Context) GetKafkaClusterStandardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterStandardOutput)
}

// GetKafkaClusterStandardArrayInput is an input type that accepts GetKafkaClusterStandardArray and GetKafkaClusterStandardArrayOutput values.
// You can construct a concrete instance of `GetKafkaClusterStandardArrayInput` via:
//
//	GetKafkaClusterStandardArray{ GetKafkaClusterStandardArgs{...} }
type GetKafkaClusterStandardArrayInput interface {
	pulumi.Input

	ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput
	ToGetKafkaClusterStandardArrayOutputWithContext(context.Context) GetKafkaClusterStandardArrayOutput
}

type GetKafkaClusterStandardArray []GetKafkaClusterStandardInput

func (GetKafkaClusterStandardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterStandard)(nil)).Elem()
}

func (i GetKafkaClusterStandardArray) ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput {
	return i.ToGetKafkaClusterStandardArrayOutputWithContext(context.Background())
}

func (i GetKafkaClusterStandardArray) ToGetKafkaClusterStandardArrayOutputWithContext(ctx context.Context) GetKafkaClusterStandardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaClusterStandardArrayOutput)
}

type GetKafkaClusterStandardOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterStandardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaClusterStandard)(nil)).Elem()
}

func (o GetKafkaClusterStandardOutput) ToGetKafkaClusterStandardOutput() GetKafkaClusterStandardOutput {
	return o
}

func (o GetKafkaClusterStandardOutput) ToGetKafkaClusterStandardOutputWithContext(ctx context.Context) GetKafkaClusterStandardOutput {
	return o
}

type GetKafkaClusterStandardArrayOutput struct{ *pulumi.OutputState }

func (GetKafkaClusterStandardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKafkaClusterStandard)(nil)).Elem()
}

func (o GetKafkaClusterStandardArrayOutput) ToGetKafkaClusterStandardArrayOutput() GetKafkaClusterStandardArrayOutput {
	return o
}

func (o GetKafkaClusterStandardArrayOutput) ToGetKafkaClusterStandardArrayOutputWithContext(ctx context.Context) GetKafkaClusterStandardArrayOutput {
	return o
}

func (o GetKafkaClusterStandardArrayOutput) Index(i pulumi.IntInput) GetKafkaClusterStandardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKafkaClusterStandard {
		return vs[0].([]GetKafkaClusterStandard)[vs[1].(int)]
	}).(GetKafkaClusterStandardOutput)
}

type GetKafkaTopicCredentials struct {
	// The Kafka API Key.
	Key string `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret string `pulumi:"secret"`
}

// GetKafkaTopicCredentialsInput is an input type that accepts GetKafkaTopicCredentialsArgs and GetKafkaTopicCredentialsOutput values.
// You can construct a concrete instance of `GetKafkaTopicCredentialsInput` via:
//
//	GetKafkaTopicCredentialsArgs{...}
type GetKafkaTopicCredentialsInput interface {
	pulumi.Input

	ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput
	ToGetKafkaTopicCredentialsOutputWithContext(context.Context) GetKafkaTopicCredentialsOutput
}

type GetKafkaTopicCredentialsArgs struct {
	// The Kafka API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Cluster API Secret for your Confluent Cloud cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetKafkaTopicCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicCredentials)(nil)).Elem()
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput {
	return i.ToGetKafkaTopicCredentialsOutputWithContext(context.Background())
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsOutput)
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return i.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i GetKafkaTopicCredentialsArgs) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsOutput).ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx)
}

// GetKafkaTopicCredentialsPtrInput is an input type that accepts GetKafkaTopicCredentialsArgs, GetKafkaTopicCredentialsPtr and GetKafkaTopicCredentialsPtrOutput values.
// You can construct a concrete instance of `GetKafkaTopicCredentialsPtrInput` via:
//
//	        GetKafkaTopicCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetKafkaTopicCredentialsPtrInput interface {
	pulumi.Input

	ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput
	ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Context) GetKafkaTopicCredentialsPtrOutput
}

type getKafkaTopicCredentialsPtrType GetKafkaTopicCredentialsArgs

func GetKafkaTopicCredentialsPtr(v *GetKafkaTopicCredentialsArgs) GetKafkaTopicCredentialsPtrInput {
	return (*getKafkaTopicCredentialsPtrType)(v)
}

func (*getKafkaTopicCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicCredentials)(nil)).Elem()
}

func (i *getKafkaTopicCredentialsPtrType) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return i.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (i *getKafkaTopicCredentialsPtrType) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicCredentialsPtrOutput)
}

type GetKafkaTopicCredentialsOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicCredentials)(nil)).Elem()
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsOutput() GetKafkaTopicCredentialsOutput {
	return o
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsOutput {
	return o
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return o.ToGetKafkaTopicCredentialsPtrOutputWithContext(context.Background())
}

func (o GetKafkaTopicCredentialsOutput) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaTopicCredentials) *GetKafkaTopicCredentials {
		return &v
	}).(GetKafkaTopicCredentialsPtrOutput)
}

// The Kafka API Key.
func (o GetKafkaTopicCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o GetKafkaTopicCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetKafkaTopicCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicCredentials)(nil)).Elem()
}

func (o GetKafkaTopicCredentialsPtrOutput) ToGetKafkaTopicCredentialsPtrOutput() GetKafkaTopicCredentialsPtrOutput {
	return o
}

func (o GetKafkaTopicCredentialsPtrOutput) ToGetKafkaTopicCredentialsPtrOutputWithContext(ctx context.Context) GetKafkaTopicCredentialsPtrOutput {
	return o
}

func (o GetKafkaTopicCredentialsPtrOutput) Elem() GetKafkaTopicCredentialsOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) GetKafkaTopicCredentials {
		if v != nil {
			return *v
		}
		var ret GetKafkaTopicCredentials
		return ret
	}).(GetKafkaTopicCredentialsOutput)
}

// The Kafka API Key.
func (o GetKafkaTopicCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Cluster API Secret for your Confluent Cloud cluster.
func (o GetKafkaTopicCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetKafkaTopicKafkaCluster struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id string `pulumi:"id"`
}

// GetKafkaTopicKafkaClusterInput is an input type that accepts GetKafkaTopicKafkaClusterArgs and GetKafkaTopicKafkaClusterOutput values.
// You can construct a concrete instance of `GetKafkaTopicKafkaClusterInput` via:
//
//	GetKafkaTopicKafkaClusterArgs{...}
type GetKafkaTopicKafkaClusterInput interface {
	pulumi.Input

	ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput
	ToGetKafkaTopicKafkaClusterOutputWithContext(context.Context) GetKafkaTopicKafkaClusterOutput
}

type GetKafkaTopicKafkaClusterArgs struct {
	// The ID of the Kafka cluster, for example, `lkc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKafkaTopicKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput {
	return i.ToGetKafkaTopicKafkaClusterOutputWithContext(context.Background())
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterOutput)
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return i.ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i GetKafkaTopicKafkaClusterArgs) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterOutput).ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx)
}

// GetKafkaTopicKafkaClusterPtrInput is an input type that accepts GetKafkaTopicKafkaClusterArgs, GetKafkaTopicKafkaClusterPtr and GetKafkaTopicKafkaClusterPtrOutput values.
// You can construct a concrete instance of `GetKafkaTopicKafkaClusterPtrInput` via:
//
//	        GetKafkaTopicKafkaClusterArgs{...}
//
//	or:
//
//	        nil
type GetKafkaTopicKafkaClusterPtrInput interface {
	pulumi.Input

	ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput
	ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Context) GetKafkaTopicKafkaClusterPtrOutput
}

type getKafkaTopicKafkaClusterPtrType GetKafkaTopicKafkaClusterArgs

func GetKafkaTopicKafkaClusterPtr(v *GetKafkaTopicKafkaClusterArgs) GetKafkaTopicKafkaClusterPtrInput {
	return (*getKafkaTopicKafkaClusterPtrType)(v)
}

func (*getKafkaTopicKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (i *getKafkaTopicKafkaClusterPtrType) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return i.ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *getKafkaTopicKafkaClusterPtrType) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKafkaTopicKafkaClusterPtrOutput)
}

type GetKafkaTopicKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterOutput() GetKafkaTopicKafkaClusterOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return o.ToGetKafkaTopicKafkaClusterPtrOutputWithContext(context.Background())
}

func (o GetKafkaTopicKafkaClusterOutput) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetKafkaTopicKafkaCluster) *GetKafkaTopicKafkaCluster {
		return &v
	}).(GetKafkaTopicKafkaClusterPtrOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaTopicKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaTopicKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetKafkaTopicKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (GetKafkaTopicKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetKafkaTopicKafkaCluster)(nil)).Elem()
}

func (o GetKafkaTopicKafkaClusterPtrOutput) ToGetKafkaTopicKafkaClusterPtrOutput() GetKafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterPtrOutput) ToGetKafkaTopicKafkaClusterPtrOutputWithContext(ctx context.Context) GetKafkaTopicKafkaClusterPtrOutput {
	return o
}

func (o GetKafkaTopicKafkaClusterPtrOutput) Elem() GetKafkaTopicKafkaClusterOutput {
	return o.ApplyT(func(v *GetKafkaTopicKafkaCluster) GetKafkaTopicKafkaCluster {
		if v != nil {
			return *v
		}
		var ret GetKafkaTopicKafkaCluster
		return ret
	}).(GetKafkaTopicKafkaClusterOutput)
}

// The ID of the Kafka cluster, for example, `lkc-abc123`.
func (o GetKafkaTopicKafkaClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetKafkaTopicKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetKsqlClusterCredentialIdentity struct {
	// The ID of the ksqlDB cluster, for example, `lksqlc-abc123`.
	Id string `pulumi:"id"`
}

// GetKsqlClusterCredentialIdentityInput is an input type that accepts GetKsqlClusterCredentialIdentityArgs and GetKsqlClusterCredentialIdentityOutput values.
// You can construct a concrete instance of `GetKsqlClusterCredentialIdentityInput` via:
//
//	GetKsqlClusterCredentialIdentityArgs{...}
type GetKsqlClusterCredentialIdentityInput interface {
	pulumi.Input

	ToGetKsqlClusterCredentialIdentityOutput() GetKsqlClusterCredentialIdentityOutput
	ToGetKsqlClusterCredentialIdentityOutputWithContext(context.Context) GetKsqlClusterCredentialIdentityOutput
}

type GetKsqlClusterCredentialIdentityArgs struct {
	// The ID of the ksqlDB cluster, for example, `lksqlc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKsqlClusterCredentialIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i GetKsqlClusterCredentialIdentityArgs) ToGetKsqlClusterCredentialIdentityOutput() GetKsqlClusterCredentialIdentityOutput {
	return i.ToGetKsqlClusterCredentialIdentityOutputWithContext(context.Background())
}

func (i GetKsqlClusterCredentialIdentityArgs) ToGetKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterCredentialIdentityOutput)
}

// GetKsqlClusterCredentialIdentityArrayInput is an input type that accepts GetKsqlClusterCredentialIdentityArray and GetKsqlClusterCredentialIdentityArrayOutput values.
// You can construct a concrete instance of `GetKsqlClusterCredentialIdentityArrayInput` via:
//
//	GetKsqlClusterCredentialIdentityArray{ GetKsqlClusterCredentialIdentityArgs{...} }
type GetKsqlClusterCredentialIdentityArrayInput interface {
	pulumi.Input

	ToGetKsqlClusterCredentialIdentityArrayOutput() GetKsqlClusterCredentialIdentityArrayOutput
	ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(context.Context) GetKsqlClusterCredentialIdentityArrayOutput
}

type GetKsqlClusterCredentialIdentityArray []GetKsqlClusterCredentialIdentityInput

func (GetKsqlClusterCredentialIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (i GetKsqlClusterCredentialIdentityArray) ToGetKsqlClusterCredentialIdentityArrayOutput() GetKsqlClusterCredentialIdentityArrayOutput {
	return i.ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(context.Background())
}

func (i GetKsqlClusterCredentialIdentityArray) ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterCredentialIdentityArrayOutput)
}

type GetKsqlClusterCredentialIdentityOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterCredentialIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o GetKsqlClusterCredentialIdentityOutput) ToGetKsqlClusterCredentialIdentityOutput() GetKsqlClusterCredentialIdentityOutput {
	return o
}

func (o GetKsqlClusterCredentialIdentityOutput) ToGetKsqlClusterCredentialIdentityOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityOutput {
	return o
}

// The ID of the ksqlDB cluster, for example, `lksqlc-abc123`.
func (o GetKsqlClusterCredentialIdentityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKsqlClusterCredentialIdentity) string { return v.Id }).(pulumi.StringOutput)
}

type GetKsqlClusterCredentialIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterCredentialIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterCredentialIdentity)(nil)).Elem()
}

func (o GetKsqlClusterCredentialIdentityArrayOutput) ToGetKsqlClusterCredentialIdentityArrayOutput() GetKsqlClusterCredentialIdentityArrayOutput {
	return o
}

func (o GetKsqlClusterCredentialIdentityArrayOutput) ToGetKsqlClusterCredentialIdentityArrayOutputWithContext(ctx context.Context) GetKsqlClusterCredentialIdentityArrayOutput {
	return o
}

func (o GetKsqlClusterCredentialIdentityArrayOutput) Index(i pulumi.IntInput) GetKsqlClusterCredentialIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKsqlClusterCredentialIdentity {
		return vs[0].([]GetKsqlClusterCredentialIdentity)[vs[1].(int)]
	}).(GetKsqlClusterCredentialIdentityOutput)
}

type GetKsqlClusterEnvironment struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetKsqlClusterEnvironmentInput is an input type that accepts GetKsqlClusterEnvironmentArgs and GetKsqlClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetKsqlClusterEnvironmentInput` via:
//
//	GetKsqlClusterEnvironmentArgs{...}
type GetKsqlClusterEnvironmentInput interface {
	pulumi.Input

	ToGetKsqlClusterEnvironmentOutput() GetKsqlClusterEnvironmentOutput
	ToGetKsqlClusterEnvironmentOutputWithContext(context.Context) GetKsqlClusterEnvironmentOutput
}

type GetKsqlClusterEnvironmentArgs struct {
	// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKsqlClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterEnvironment)(nil)).Elem()
}

func (i GetKsqlClusterEnvironmentArgs) ToGetKsqlClusterEnvironmentOutput() GetKsqlClusterEnvironmentOutput {
	return i.ToGetKsqlClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetKsqlClusterEnvironmentArgs) ToGetKsqlClusterEnvironmentOutputWithContext(ctx context.Context) GetKsqlClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterEnvironmentOutput)
}

type GetKsqlClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterEnvironment)(nil)).Elem()
}

func (o GetKsqlClusterEnvironmentOutput) ToGetKsqlClusterEnvironmentOutput() GetKsqlClusterEnvironmentOutput {
	return o
}

func (o GetKsqlClusterEnvironmentOutput) ToGetKsqlClusterEnvironmentOutputWithContext(ctx context.Context) GetKsqlClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetKsqlClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKsqlClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetKsqlClusterKafkaCluster struct {
	// The ID of the ksqlDB cluster, for example, `lksqlc-abc123`.
	Id string `pulumi:"id"`
}

// GetKsqlClusterKafkaClusterInput is an input type that accepts GetKsqlClusterKafkaClusterArgs and GetKsqlClusterKafkaClusterOutput values.
// You can construct a concrete instance of `GetKsqlClusterKafkaClusterInput` via:
//
//	GetKsqlClusterKafkaClusterArgs{...}
type GetKsqlClusterKafkaClusterInput interface {
	pulumi.Input

	ToGetKsqlClusterKafkaClusterOutput() GetKsqlClusterKafkaClusterOutput
	ToGetKsqlClusterKafkaClusterOutputWithContext(context.Context) GetKsqlClusterKafkaClusterOutput
}

type GetKsqlClusterKafkaClusterArgs struct {
	// The ID of the ksqlDB cluster, for example, `lksqlc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetKsqlClusterKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (i GetKsqlClusterKafkaClusterArgs) ToGetKsqlClusterKafkaClusterOutput() GetKsqlClusterKafkaClusterOutput {
	return i.ToGetKsqlClusterKafkaClusterOutputWithContext(context.Background())
}

func (i GetKsqlClusterKafkaClusterArgs) ToGetKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterKafkaClusterOutput)
}

// GetKsqlClusterKafkaClusterArrayInput is an input type that accepts GetKsqlClusterKafkaClusterArray and GetKsqlClusterKafkaClusterArrayOutput values.
// You can construct a concrete instance of `GetKsqlClusterKafkaClusterArrayInput` via:
//
//	GetKsqlClusterKafkaClusterArray{ GetKsqlClusterKafkaClusterArgs{...} }
type GetKsqlClusterKafkaClusterArrayInput interface {
	pulumi.Input

	ToGetKsqlClusterKafkaClusterArrayOutput() GetKsqlClusterKafkaClusterArrayOutput
	ToGetKsqlClusterKafkaClusterArrayOutputWithContext(context.Context) GetKsqlClusterKafkaClusterArrayOutput
}

type GetKsqlClusterKafkaClusterArray []GetKsqlClusterKafkaClusterInput

func (GetKsqlClusterKafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (i GetKsqlClusterKafkaClusterArray) ToGetKsqlClusterKafkaClusterArrayOutput() GetKsqlClusterKafkaClusterArrayOutput {
	return i.ToGetKsqlClusterKafkaClusterArrayOutputWithContext(context.Background())
}

func (i GetKsqlClusterKafkaClusterArray) ToGetKsqlClusterKafkaClusterArrayOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKsqlClusterKafkaClusterArrayOutput)
}

type GetKsqlClusterKafkaClusterOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (o GetKsqlClusterKafkaClusterOutput) ToGetKsqlClusterKafkaClusterOutput() GetKsqlClusterKafkaClusterOutput {
	return o
}

func (o GetKsqlClusterKafkaClusterOutput) ToGetKsqlClusterKafkaClusterOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterOutput {
	return o
}

// The ID of the ksqlDB cluster, for example, `lksqlc-abc123`.
func (o GetKsqlClusterKafkaClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKsqlClusterKafkaCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetKsqlClusterKafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (GetKsqlClusterKafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKsqlClusterKafkaCluster)(nil)).Elem()
}

func (o GetKsqlClusterKafkaClusterArrayOutput) ToGetKsqlClusterKafkaClusterArrayOutput() GetKsqlClusterKafkaClusterArrayOutput {
	return o
}

func (o GetKsqlClusterKafkaClusterArrayOutput) ToGetKsqlClusterKafkaClusterArrayOutputWithContext(ctx context.Context) GetKsqlClusterKafkaClusterArrayOutput {
	return o
}

func (o GetKsqlClusterKafkaClusterArrayOutput) Index(i pulumi.IntInput) GetKsqlClusterKafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKsqlClusterKafkaCluster {
		return vs[0].([]GetKsqlClusterKafkaCluster)[vs[1].(int)]
	}).(GetKsqlClusterKafkaClusterOutput)
}

type GetNetworkAw struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account string `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService string `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc string `pulumi:"vpc"`
}

// GetNetworkAwInput is an input type that accepts GetNetworkAwArgs and GetNetworkAwOutput values.
// You can construct a concrete instance of `GetNetworkAwInput` via:
//
//	GetNetworkAwArgs{...}
type GetNetworkAwInput interface {
	pulumi.Input

	ToGetNetworkAwOutput() GetNetworkAwOutput
	ToGetNetworkAwOutputWithContext(context.Context) GetNetworkAwOutput
}

type GetNetworkAwArgs struct {
	// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
	Account pulumi.StringInput `pulumi:"account"`
	// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
	PrivateLinkEndpointService pulumi.StringInput `pulumi:"privateLinkEndpointService"`
	// (Required String) The Confluent Cloud VPC ID.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetNetworkAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAw)(nil)).Elem()
}

func (i GetNetworkAwArgs) ToGetNetworkAwOutput() GetNetworkAwOutput {
	return i.ToGetNetworkAwOutputWithContext(context.Background())
}

func (i GetNetworkAwArgs) ToGetNetworkAwOutputWithContext(ctx context.Context) GetNetworkAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAwOutput)
}

// GetNetworkAwArrayInput is an input type that accepts GetNetworkAwArray and GetNetworkAwArrayOutput values.
// You can construct a concrete instance of `GetNetworkAwArrayInput` via:
//
//	GetNetworkAwArray{ GetNetworkAwArgs{...} }
type GetNetworkAwArrayInput interface {
	pulumi.Input

	ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput
	ToGetNetworkAwArrayOutputWithContext(context.Context) GetNetworkAwArrayOutput
}

type GetNetworkAwArray []GetNetworkAwInput

func (GetNetworkAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAw)(nil)).Elem()
}

func (i GetNetworkAwArray) ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput {
	return i.ToGetNetworkAwArrayOutputWithContext(context.Background())
}

func (i GetNetworkAwArray) ToGetNetworkAwArrayOutputWithContext(ctx context.Context) GetNetworkAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAwArrayOutput)
}

type GetNetworkAwOutput struct{ *pulumi.OutputState }

func (GetNetworkAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAw)(nil)).Elem()
}

func (o GetNetworkAwOutput) ToGetNetworkAwOutput() GetNetworkAwOutput {
	return o
}

func (o GetNetworkAwOutput) ToGetNetworkAwOutputWithContext(ctx context.Context) GetNetworkAwOutput {
	return o
}

// (Required String) The AWS account ID associated with the Confluent Cloud VPC.
func (o GetNetworkAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.Account }).(pulumi.StringOutput)
}

// (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
func (o GetNetworkAwOutput) PrivateLinkEndpointService() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.PrivateLinkEndpointService }).(pulumi.StringOutput)
}

// (Required String) The Confluent Cloud VPC ID.
func (o GetNetworkAwOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAw) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetNetworkAwArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAw)(nil)).Elem()
}

func (o GetNetworkAwArrayOutput) ToGetNetworkAwArrayOutput() GetNetworkAwArrayOutput {
	return o
}

func (o GetNetworkAwArrayOutput) ToGetNetworkAwArrayOutputWithContext(ctx context.Context) GetNetworkAwArrayOutput {
	return o
}

func (o GetNetworkAwArrayOutput) Index(i pulumi.IntInput) GetNetworkAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAw {
		return vs[0].([]GetNetworkAw)[vs[1].(int)]
	}).(GetNetworkAwOutput)
}

type GetNetworkAzure struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases map[string]string `pulumi:"privateLinkServiceAliases"`
}

// GetNetworkAzureInput is an input type that accepts GetNetworkAzureArgs and GetNetworkAzureOutput values.
// You can construct a concrete instance of `GetNetworkAzureInput` via:
//
//	GetNetworkAzureArgs{...}
type GetNetworkAzureInput interface {
	pulumi.Input

	ToGetNetworkAzureOutput() GetNetworkAzureOutput
	ToGetNetworkAzureOutputWithContext(context.Context) GetNetworkAzureOutput
}

type GetNetworkAzureArgs struct {
	// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
	PrivateLinkServiceAliases pulumi.StringMapInput `pulumi:"privateLinkServiceAliases"`
}

func (GetNetworkAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAzure)(nil)).Elem()
}

func (i GetNetworkAzureArgs) ToGetNetworkAzureOutput() GetNetworkAzureOutput {
	return i.ToGetNetworkAzureOutputWithContext(context.Background())
}

func (i GetNetworkAzureArgs) ToGetNetworkAzureOutputWithContext(ctx context.Context) GetNetworkAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAzureOutput)
}

// GetNetworkAzureArrayInput is an input type that accepts GetNetworkAzureArray and GetNetworkAzureArrayOutput values.
// You can construct a concrete instance of `GetNetworkAzureArrayInput` via:
//
//	GetNetworkAzureArray{ GetNetworkAzureArgs{...} }
type GetNetworkAzureArrayInput interface {
	pulumi.Input

	ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput
	ToGetNetworkAzureArrayOutputWithContext(context.Context) GetNetworkAzureArrayOutput
}

type GetNetworkAzureArray []GetNetworkAzureInput

func (GetNetworkAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAzure)(nil)).Elem()
}

func (i GetNetworkAzureArray) ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput {
	return i.ToGetNetworkAzureArrayOutputWithContext(context.Background())
}

func (i GetNetworkAzureArray) ToGetNetworkAzureArrayOutputWithContext(ctx context.Context) GetNetworkAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAzureArrayOutput)
}

type GetNetworkAzureOutput struct{ *pulumi.OutputState }

func (GetNetworkAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAzure)(nil)).Elem()
}

func (o GetNetworkAzureOutput) ToGetNetworkAzureOutput() GetNetworkAzureOutput {
	return o
}

func (o GetNetworkAzureOutput) ToGetNetworkAzureOutputWithContext(ctx context.Context) GetNetworkAzureOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
func (o GetNetworkAzureOutput) PrivateLinkServiceAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkAzure) map[string]string { return v.PrivateLinkServiceAliases }).(pulumi.StringMapOutput)
}

type GetNetworkAzureArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAzure)(nil)).Elem()
}

func (o GetNetworkAzureArrayOutput) ToGetNetworkAzureArrayOutput() GetNetworkAzureArrayOutput {
	return o
}

func (o GetNetworkAzureArrayOutput) ToGetNetworkAzureArrayOutputWithContext(ctx context.Context) GetNetworkAzureArrayOutput {
	return o
}

func (o GetNetworkAzureArrayOutput) Index(i pulumi.IntInput) GetNetworkAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAzure {
		return vs[0].([]GetNetworkAzure)[vs[1].(int)]
	}).(GetNetworkAzureOutput)
}

type GetNetworkDnsConfig struct {
	// (Required String) Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	Resolution string `pulumi:"resolution"`
}

// GetNetworkDnsConfigInput is an input type that accepts GetNetworkDnsConfigArgs and GetNetworkDnsConfigOutput values.
// You can construct a concrete instance of `GetNetworkDnsConfigInput` via:
//
//	GetNetworkDnsConfigArgs{...}
type GetNetworkDnsConfigInput interface {
	pulumi.Input

	ToGetNetworkDnsConfigOutput() GetNetworkDnsConfigOutput
	ToGetNetworkDnsConfigOutputWithContext(context.Context) GetNetworkDnsConfigOutput
}

type GetNetworkDnsConfigArgs struct {
	// (Required String) Network DNS resolution.
	// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
	// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
	Resolution pulumi.StringInput `pulumi:"resolution"`
}

func (GetNetworkDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDnsConfig)(nil)).Elem()
}

func (i GetNetworkDnsConfigArgs) ToGetNetworkDnsConfigOutput() GetNetworkDnsConfigOutput {
	return i.ToGetNetworkDnsConfigOutputWithContext(context.Background())
}

func (i GetNetworkDnsConfigArgs) ToGetNetworkDnsConfigOutputWithContext(ctx context.Context) GetNetworkDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDnsConfigOutput)
}

// GetNetworkDnsConfigArrayInput is an input type that accepts GetNetworkDnsConfigArray and GetNetworkDnsConfigArrayOutput values.
// You can construct a concrete instance of `GetNetworkDnsConfigArrayInput` via:
//
//	GetNetworkDnsConfigArray{ GetNetworkDnsConfigArgs{...} }
type GetNetworkDnsConfigArrayInput interface {
	pulumi.Input

	ToGetNetworkDnsConfigArrayOutput() GetNetworkDnsConfigArrayOutput
	ToGetNetworkDnsConfigArrayOutputWithContext(context.Context) GetNetworkDnsConfigArrayOutput
}

type GetNetworkDnsConfigArray []GetNetworkDnsConfigInput

func (GetNetworkDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDnsConfig)(nil)).Elem()
}

func (i GetNetworkDnsConfigArray) ToGetNetworkDnsConfigArrayOutput() GetNetworkDnsConfigArrayOutput {
	return i.ToGetNetworkDnsConfigArrayOutputWithContext(context.Background())
}

func (i GetNetworkDnsConfigArray) ToGetNetworkDnsConfigArrayOutputWithContext(ctx context.Context) GetNetworkDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkDnsConfigArrayOutput)
}

type GetNetworkDnsConfigOutput struct{ *pulumi.OutputState }

func (GetNetworkDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkDnsConfig)(nil)).Elem()
}

func (o GetNetworkDnsConfigOutput) ToGetNetworkDnsConfigOutput() GetNetworkDnsConfigOutput {
	return o
}

func (o GetNetworkDnsConfigOutput) ToGetNetworkDnsConfigOutputWithContext(ctx context.Context) GetNetworkDnsConfigOutput {
	return o
}

// (Required String) Network DNS resolution.
// When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
// When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
func (o GetNetworkDnsConfigOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkDnsConfig) string { return v.Resolution }).(pulumi.StringOutput)
}

type GetNetworkDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkDnsConfig)(nil)).Elem()
}

func (o GetNetworkDnsConfigArrayOutput) ToGetNetworkDnsConfigArrayOutput() GetNetworkDnsConfigArrayOutput {
	return o
}

func (o GetNetworkDnsConfigArrayOutput) ToGetNetworkDnsConfigArrayOutputWithContext(ctx context.Context) GetNetworkDnsConfigArrayOutput {
	return o
}

func (o GetNetworkDnsConfigArrayOutput) Index(i pulumi.IntInput) GetNetworkDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkDnsConfig {
		return vs[0].([]GetNetworkDnsConfig)[vs[1].(int)]
	}).(GetNetworkDnsConfigOutput)
}

type GetNetworkEnvironment struct {
	// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetNetworkEnvironmentInput is an input type that accepts GetNetworkEnvironmentArgs and GetNetworkEnvironmentOutput values.
// You can construct a concrete instance of `GetNetworkEnvironmentInput` via:
//
//	GetNetworkEnvironmentArgs{...}
type GetNetworkEnvironmentInput interface {
	pulumi.Input

	ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput
	ToGetNetworkEnvironmentOutputWithContext(context.Context) GetNetworkEnvironmentOutput
}

type GetNetworkEnvironmentArgs struct {
	// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkEnvironment)(nil)).Elem()
}

func (i GetNetworkEnvironmentArgs) ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput {
	return i.ToGetNetworkEnvironmentOutputWithContext(context.Background())
}

func (i GetNetworkEnvironmentArgs) ToGetNetworkEnvironmentOutputWithContext(ctx context.Context) GetNetworkEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkEnvironmentOutput)
}

type GetNetworkEnvironmentOutput struct{ *pulumi.OutputState }

func (GetNetworkEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkEnvironment)(nil)).Elem()
}

func (o GetNetworkEnvironmentOutput) ToGetNetworkEnvironmentOutput() GetNetworkEnvironmentOutput {
	return o
}

func (o GetNetworkEnvironmentOutput) ToGetNetworkEnvironmentOutputWithContext(ctx context.Context) GetNetworkEnvironmentOutput {
	return o
}

// The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetNetworkEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkGateway struct {
	// The ID of the Network, for example, `n-abc123`.
	Id string `pulumi:"id"`
}

// GetNetworkGatewayInput is an input type that accepts GetNetworkGatewayArgs and GetNetworkGatewayOutput values.
// You can construct a concrete instance of `GetNetworkGatewayInput` via:
//
//	GetNetworkGatewayArgs{...}
type GetNetworkGatewayInput interface {
	pulumi.Input

	ToGetNetworkGatewayOutput() GetNetworkGatewayOutput
	ToGetNetworkGatewayOutputWithContext(context.Context) GetNetworkGatewayOutput
}

type GetNetworkGatewayArgs struct {
	// The ID of the Network, for example, `n-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGateway)(nil)).Elem()
}

func (i GetNetworkGatewayArgs) ToGetNetworkGatewayOutput() GetNetworkGatewayOutput {
	return i.ToGetNetworkGatewayOutputWithContext(context.Background())
}

func (i GetNetworkGatewayArgs) ToGetNetworkGatewayOutputWithContext(ctx context.Context) GetNetworkGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGatewayOutput)
}

// GetNetworkGatewayArrayInput is an input type that accepts GetNetworkGatewayArray and GetNetworkGatewayArrayOutput values.
// You can construct a concrete instance of `GetNetworkGatewayArrayInput` via:
//
//	GetNetworkGatewayArray{ GetNetworkGatewayArgs{...} }
type GetNetworkGatewayArrayInput interface {
	pulumi.Input

	ToGetNetworkGatewayArrayOutput() GetNetworkGatewayArrayOutput
	ToGetNetworkGatewayArrayOutputWithContext(context.Context) GetNetworkGatewayArrayOutput
}

type GetNetworkGatewayArray []GetNetworkGatewayInput

func (GetNetworkGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGateway)(nil)).Elem()
}

func (i GetNetworkGatewayArray) ToGetNetworkGatewayArrayOutput() GetNetworkGatewayArrayOutput {
	return i.ToGetNetworkGatewayArrayOutputWithContext(context.Background())
}

func (i GetNetworkGatewayArray) ToGetNetworkGatewayArrayOutputWithContext(ctx context.Context) GetNetworkGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGatewayArrayOutput)
}

type GetNetworkGatewayOutput struct{ *pulumi.OutputState }

func (GetNetworkGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGateway)(nil)).Elem()
}

func (o GetNetworkGatewayOutput) ToGetNetworkGatewayOutput() GetNetworkGatewayOutput {
	return o
}

func (o GetNetworkGatewayOutput) ToGetNetworkGatewayOutputWithContext(ctx context.Context) GetNetworkGatewayOutput {
	return o
}

// The ID of the Network, for example, `n-abc123`.
func (o GetNetworkGatewayOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGateway) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGateway)(nil)).Elem()
}

func (o GetNetworkGatewayArrayOutput) ToGetNetworkGatewayArrayOutput() GetNetworkGatewayArrayOutput {
	return o
}

func (o GetNetworkGatewayArrayOutput) ToGetNetworkGatewayArrayOutputWithContext(ctx context.Context) GetNetworkGatewayArrayOutput {
	return o
}

func (o GetNetworkGatewayArrayOutput) Index(i pulumi.IntInput) GetNetworkGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkGateway {
		return vs[0].([]GetNetworkGateway)[vs[1].(int)]
	}).(GetNetworkGatewayOutput)
}

type GetNetworkGcp struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments map[string]string `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project string `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// GetNetworkGcpInput is an input type that accepts GetNetworkGcpArgs and GetNetworkGcpOutput values.
// You can construct a concrete instance of `GetNetworkGcpInput` via:
//
//	GetNetworkGcpArgs{...}
type GetNetworkGcpInput interface {
	pulumi.Input

	ToGetNetworkGcpOutput() GetNetworkGcpOutput
	ToGetNetworkGcpOutputWithContext(context.Context) GetNetworkGcpOutput
}

type GetNetworkGcpArgs struct {
	// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
	PrivateServiceConnectServiceAttachments pulumi.StringMapInput `pulumi:"privateServiceConnectServiceAttachments"`
	// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
	Project pulumi.StringInput `pulumi:"project"`
	// (Required String) The network name of the Confluent Cloud VPC.
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (GetNetworkGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGcp)(nil)).Elem()
}

func (i GetNetworkGcpArgs) ToGetNetworkGcpOutput() GetNetworkGcpOutput {
	return i.ToGetNetworkGcpOutputWithContext(context.Background())
}

func (i GetNetworkGcpArgs) ToGetNetworkGcpOutputWithContext(ctx context.Context) GetNetworkGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGcpOutput)
}

// GetNetworkGcpArrayInput is an input type that accepts GetNetworkGcpArray and GetNetworkGcpArrayOutput values.
// You can construct a concrete instance of `GetNetworkGcpArrayInput` via:
//
//	GetNetworkGcpArray{ GetNetworkGcpArgs{...} }
type GetNetworkGcpArrayInput interface {
	pulumi.Input

	ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput
	ToGetNetworkGcpArrayOutputWithContext(context.Context) GetNetworkGcpArrayOutput
}

type GetNetworkGcpArray []GetNetworkGcpInput

func (GetNetworkGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGcp)(nil)).Elem()
}

func (i GetNetworkGcpArray) ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput {
	return i.ToGetNetworkGcpArrayOutputWithContext(context.Background())
}

func (i GetNetworkGcpArray) ToGetNetworkGcpArrayOutputWithContext(ctx context.Context) GetNetworkGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkGcpArrayOutput)
}

type GetNetworkGcpOutput struct{ *pulumi.OutputState }

func (GetNetworkGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkGcp)(nil)).Elem()
}

func (o GetNetworkGcpOutput) ToGetNetworkGcpOutput() GetNetworkGcpOutput {
	return o
}

func (o GetNetworkGcpOutput) ToGetNetworkGcpOutputWithContext(ctx context.Context) GetNetworkGcpOutput {
	return o
}

// (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
func (o GetNetworkGcpOutput) PrivateServiceConnectServiceAttachments() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetNetworkGcp) map[string]string { return v.PrivateServiceConnectServiceAttachments }).(pulumi.StringMapOutput)
}

// (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
func (o GetNetworkGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGcp) string { return v.Project }).(pulumi.StringOutput)
}

// (Required String) The network name of the Confluent Cloud VPC.
func (o GetNetworkGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type GetNetworkGcpArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkGcp)(nil)).Elem()
}

func (o GetNetworkGcpArrayOutput) ToGetNetworkGcpArrayOutput() GetNetworkGcpArrayOutput {
	return o
}

func (o GetNetworkGcpArrayOutput) ToGetNetworkGcpArrayOutputWithContext(ctx context.Context) GetNetworkGcpArrayOutput {
	return o
}

func (o GetNetworkGcpArrayOutput) Index(i pulumi.IntInput) GetNetworkGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkGcp {
		return vs[0].([]GetNetworkGcp)[vs[1].(int)]
	}).(GetNetworkGcpOutput)
}

type GetNetworkLinkEndpointEnvironment struct {
	// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetNetworkLinkEndpointEnvironmentInput is an input type that accepts GetNetworkLinkEndpointEnvironmentArgs and GetNetworkLinkEndpointEnvironmentOutput values.
// You can construct a concrete instance of `GetNetworkLinkEndpointEnvironmentInput` via:
//
//	GetNetworkLinkEndpointEnvironmentArgs{...}
type GetNetworkLinkEndpointEnvironmentInput interface {
	pulumi.Input

	ToGetNetworkLinkEndpointEnvironmentOutput() GetNetworkLinkEndpointEnvironmentOutput
	ToGetNetworkLinkEndpointEnvironmentOutputWithContext(context.Context) GetNetworkLinkEndpointEnvironmentOutput
}

type GetNetworkLinkEndpointEnvironmentArgs struct {
	// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLinkEndpointEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkEndpointEnvironment)(nil)).Elem()
}

func (i GetNetworkLinkEndpointEnvironmentArgs) ToGetNetworkLinkEndpointEnvironmentOutput() GetNetworkLinkEndpointEnvironmentOutput {
	return i.ToGetNetworkLinkEndpointEnvironmentOutputWithContext(context.Background())
}

func (i GetNetworkLinkEndpointEnvironmentArgs) ToGetNetworkLinkEndpointEnvironmentOutputWithContext(ctx context.Context) GetNetworkLinkEndpointEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkEndpointEnvironmentOutput)
}

type GetNetworkLinkEndpointEnvironmentOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkEndpointEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkEndpointEnvironment)(nil)).Elem()
}

func (o GetNetworkLinkEndpointEnvironmentOutput) ToGetNetworkLinkEndpointEnvironmentOutput() GetNetworkLinkEndpointEnvironmentOutput {
	return o
}

func (o GetNetworkLinkEndpointEnvironmentOutput) ToGetNetworkLinkEndpointEnvironmentOutputWithContext(ctx context.Context) GetNetworkLinkEndpointEnvironmentOutput {
	return o
}

// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
func (o GetNetworkLinkEndpointEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLinkEndpointEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLinkEndpointNetwork struct {
	// The ID of the Network Link Endpoint, for example, `nle-zyw30`.
	Id string `pulumi:"id"`
}

// GetNetworkLinkEndpointNetworkInput is an input type that accepts GetNetworkLinkEndpointNetworkArgs and GetNetworkLinkEndpointNetworkOutput values.
// You can construct a concrete instance of `GetNetworkLinkEndpointNetworkInput` via:
//
//	GetNetworkLinkEndpointNetworkArgs{...}
type GetNetworkLinkEndpointNetworkInput interface {
	pulumi.Input

	ToGetNetworkLinkEndpointNetworkOutput() GetNetworkLinkEndpointNetworkOutput
	ToGetNetworkLinkEndpointNetworkOutputWithContext(context.Context) GetNetworkLinkEndpointNetworkOutput
}

type GetNetworkLinkEndpointNetworkArgs struct {
	// The ID of the Network Link Endpoint, for example, `nle-zyw30`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLinkEndpointNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkEndpointNetwork)(nil)).Elem()
}

func (i GetNetworkLinkEndpointNetworkArgs) ToGetNetworkLinkEndpointNetworkOutput() GetNetworkLinkEndpointNetworkOutput {
	return i.ToGetNetworkLinkEndpointNetworkOutputWithContext(context.Background())
}

func (i GetNetworkLinkEndpointNetworkArgs) ToGetNetworkLinkEndpointNetworkOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkEndpointNetworkOutput)
}

// GetNetworkLinkEndpointNetworkArrayInput is an input type that accepts GetNetworkLinkEndpointNetworkArray and GetNetworkLinkEndpointNetworkArrayOutput values.
// You can construct a concrete instance of `GetNetworkLinkEndpointNetworkArrayInput` via:
//
//	GetNetworkLinkEndpointNetworkArray{ GetNetworkLinkEndpointNetworkArgs{...} }
type GetNetworkLinkEndpointNetworkArrayInput interface {
	pulumi.Input

	ToGetNetworkLinkEndpointNetworkArrayOutput() GetNetworkLinkEndpointNetworkArrayOutput
	ToGetNetworkLinkEndpointNetworkArrayOutputWithContext(context.Context) GetNetworkLinkEndpointNetworkArrayOutput
}

type GetNetworkLinkEndpointNetworkArray []GetNetworkLinkEndpointNetworkInput

func (GetNetworkLinkEndpointNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLinkEndpointNetwork)(nil)).Elem()
}

func (i GetNetworkLinkEndpointNetworkArray) ToGetNetworkLinkEndpointNetworkArrayOutput() GetNetworkLinkEndpointNetworkArrayOutput {
	return i.ToGetNetworkLinkEndpointNetworkArrayOutputWithContext(context.Background())
}

func (i GetNetworkLinkEndpointNetworkArray) ToGetNetworkLinkEndpointNetworkArrayOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkEndpointNetworkArrayOutput)
}

type GetNetworkLinkEndpointNetworkOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkEndpointNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkEndpointNetwork)(nil)).Elem()
}

func (o GetNetworkLinkEndpointNetworkOutput) ToGetNetworkLinkEndpointNetworkOutput() GetNetworkLinkEndpointNetworkOutput {
	return o
}

func (o GetNetworkLinkEndpointNetworkOutput) ToGetNetworkLinkEndpointNetworkOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkOutput {
	return o
}

// The ID of the Network Link Endpoint, for example, `nle-zyw30`.
func (o GetNetworkLinkEndpointNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLinkEndpointNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLinkEndpointNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkEndpointNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLinkEndpointNetwork)(nil)).Elem()
}

func (o GetNetworkLinkEndpointNetworkArrayOutput) ToGetNetworkLinkEndpointNetworkArrayOutput() GetNetworkLinkEndpointNetworkArrayOutput {
	return o
}

func (o GetNetworkLinkEndpointNetworkArrayOutput) ToGetNetworkLinkEndpointNetworkArrayOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkArrayOutput {
	return o
}

func (o GetNetworkLinkEndpointNetworkArrayOutput) Index(i pulumi.IntInput) GetNetworkLinkEndpointNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLinkEndpointNetwork {
		return vs[0].([]GetNetworkLinkEndpointNetwork)[vs[1].(int)]
	}).(GetNetworkLinkEndpointNetworkOutput)
}

type GetNetworkLinkEndpointNetworkLinkService struct {
	// The ID of the Network Link Endpoint, for example, `nle-zyw30`.
	Id string `pulumi:"id"`
}

// GetNetworkLinkEndpointNetworkLinkServiceInput is an input type that accepts GetNetworkLinkEndpointNetworkLinkServiceArgs and GetNetworkLinkEndpointNetworkLinkServiceOutput values.
// You can construct a concrete instance of `GetNetworkLinkEndpointNetworkLinkServiceInput` via:
//
//	GetNetworkLinkEndpointNetworkLinkServiceArgs{...}
type GetNetworkLinkEndpointNetworkLinkServiceInput interface {
	pulumi.Input

	ToGetNetworkLinkEndpointNetworkLinkServiceOutput() GetNetworkLinkEndpointNetworkLinkServiceOutput
	ToGetNetworkLinkEndpointNetworkLinkServiceOutputWithContext(context.Context) GetNetworkLinkEndpointNetworkLinkServiceOutput
}

type GetNetworkLinkEndpointNetworkLinkServiceArgs struct {
	// The ID of the Network Link Endpoint, for example, `nle-zyw30`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLinkEndpointNetworkLinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (i GetNetworkLinkEndpointNetworkLinkServiceArgs) ToGetNetworkLinkEndpointNetworkLinkServiceOutput() GetNetworkLinkEndpointNetworkLinkServiceOutput {
	return i.ToGetNetworkLinkEndpointNetworkLinkServiceOutputWithContext(context.Background())
}

func (i GetNetworkLinkEndpointNetworkLinkServiceArgs) ToGetNetworkLinkEndpointNetworkLinkServiceOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkLinkServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkEndpointNetworkLinkServiceOutput)
}

// GetNetworkLinkEndpointNetworkLinkServiceArrayInput is an input type that accepts GetNetworkLinkEndpointNetworkLinkServiceArray and GetNetworkLinkEndpointNetworkLinkServiceArrayOutput values.
// You can construct a concrete instance of `GetNetworkLinkEndpointNetworkLinkServiceArrayInput` via:
//
//	GetNetworkLinkEndpointNetworkLinkServiceArray{ GetNetworkLinkEndpointNetworkLinkServiceArgs{...} }
type GetNetworkLinkEndpointNetworkLinkServiceArrayInput interface {
	pulumi.Input

	ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutput() GetNetworkLinkEndpointNetworkLinkServiceArrayOutput
	ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutputWithContext(context.Context) GetNetworkLinkEndpointNetworkLinkServiceArrayOutput
}

type GetNetworkLinkEndpointNetworkLinkServiceArray []GetNetworkLinkEndpointNetworkLinkServiceInput

func (GetNetworkLinkEndpointNetworkLinkServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (i GetNetworkLinkEndpointNetworkLinkServiceArray) ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutput() GetNetworkLinkEndpointNetworkLinkServiceArrayOutput {
	return i.ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutputWithContext(context.Background())
}

func (i GetNetworkLinkEndpointNetworkLinkServiceArray) ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkLinkServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkEndpointNetworkLinkServiceArrayOutput)
}

type GetNetworkLinkEndpointNetworkLinkServiceOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkEndpointNetworkLinkServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (o GetNetworkLinkEndpointNetworkLinkServiceOutput) ToGetNetworkLinkEndpointNetworkLinkServiceOutput() GetNetworkLinkEndpointNetworkLinkServiceOutput {
	return o
}

func (o GetNetworkLinkEndpointNetworkLinkServiceOutput) ToGetNetworkLinkEndpointNetworkLinkServiceOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkLinkServiceOutput {
	return o
}

// The ID of the Network Link Endpoint, for example, `nle-zyw30`.
func (o GetNetworkLinkEndpointNetworkLinkServiceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLinkEndpointNetworkLinkService) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLinkEndpointNetworkLinkServiceArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkEndpointNetworkLinkServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLinkEndpointNetworkLinkService)(nil)).Elem()
}

func (o GetNetworkLinkEndpointNetworkLinkServiceArrayOutput) ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutput() GetNetworkLinkEndpointNetworkLinkServiceArrayOutput {
	return o
}

func (o GetNetworkLinkEndpointNetworkLinkServiceArrayOutput) ToGetNetworkLinkEndpointNetworkLinkServiceArrayOutputWithContext(ctx context.Context) GetNetworkLinkEndpointNetworkLinkServiceArrayOutput {
	return o
}

func (o GetNetworkLinkEndpointNetworkLinkServiceArrayOutput) Index(i pulumi.IntInput) GetNetworkLinkEndpointNetworkLinkServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLinkEndpointNetworkLinkService {
		return vs[0].([]GetNetworkLinkEndpointNetworkLinkService)[vs[1].(int)]
	}).(GetNetworkLinkEndpointNetworkLinkServiceOutput)
}

type GetNetworkLinkServiceAccept struct {
	// (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
	Environments []string `pulumi:"environments"`
	// (Optional List of Strings) List of network ids from which connections can be accepted.
	Networks []string `pulumi:"networks"`
}

// GetNetworkLinkServiceAcceptInput is an input type that accepts GetNetworkLinkServiceAcceptArgs and GetNetworkLinkServiceAcceptOutput values.
// You can construct a concrete instance of `GetNetworkLinkServiceAcceptInput` via:
//
//	GetNetworkLinkServiceAcceptArgs{...}
type GetNetworkLinkServiceAcceptInput interface {
	pulumi.Input

	ToGetNetworkLinkServiceAcceptOutput() GetNetworkLinkServiceAcceptOutput
	ToGetNetworkLinkServiceAcceptOutputWithContext(context.Context) GetNetworkLinkServiceAcceptOutput
}

type GetNetworkLinkServiceAcceptArgs struct {
	// (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	// (Optional List of Strings) List of network ids from which connections can be accepted.
	Networks pulumi.StringArrayInput `pulumi:"networks"`
}

func (GetNetworkLinkServiceAcceptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkServiceAccept)(nil)).Elem()
}

func (i GetNetworkLinkServiceAcceptArgs) ToGetNetworkLinkServiceAcceptOutput() GetNetworkLinkServiceAcceptOutput {
	return i.ToGetNetworkLinkServiceAcceptOutputWithContext(context.Background())
}

func (i GetNetworkLinkServiceAcceptArgs) ToGetNetworkLinkServiceAcceptOutputWithContext(ctx context.Context) GetNetworkLinkServiceAcceptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkServiceAcceptOutput)
}

func (i GetNetworkLinkServiceAcceptArgs) ToGetNetworkLinkServiceAcceptPtrOutput() GetNetworkLinkServiceAcceptPtrOutput {
	return i.ToGetNetworkLinkServiceAcceptPtrOutputWithContext(context.Background())
}

func (i GetNetworkLinkServiceAcceptArgs) ToGetNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) GetNetworkLinkServiceAcceptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkServiceAcceptOutput).ToGetNetworkLinkServiceAcceptPtrOutputWithContext(ctx)
}

// GetNetworkLinkServiceAcceptPtrInput is an input type that accepts GetNetworkLinkServiceAcceptArgs, GetNetworkLinkServiceAcceptPtr and GetNetworkLinkServiceAcceptPtrOutput values.
// You can construct a concrete instance of `GetNetworkLinkServiceAcceptPtrInput` via:
//
//	        GetNetworkLinkServiceAcceptArgs{...}
//
//	or:
//
//	        nil
type GetNetworkLinkServiceAcceptPtrInput interface {
	pulumi.Input

	ToGetNetworkLinkServiceAcceptPtrOutput() GetNetworkLinkServiceAcceptPtrOutput
	ToGetNetworkLinkServiceAcceptPtrOutputWithContext(context.Context) GetNetworkLinkServiceAcceptPtrOutput
}

type getNetworkLinkServiceAcceptPtrType GetNetworkLinkServiceAcceptArgs

func GetNetworkLinkServiceAcceptPtr(v *GetNetworkLinkServiceAcceptArgs) GetNetworkLinkServiceAcceptPtrInput {
	return (*getNetworkLinkServiceAcceptPtrType)(v)
}

func (*getNetworkLinkServiceAcceptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkLinkServiceAccept)(nil)).Elem()
}

func (i *getNetworkLinkServiceAcceptPtrType) ToGetNetworkLinkServiceAcceptPtrOutput() GetNetworkLinkServiceAcceptPtrOutput {
	return i.ToGetNetworkLinkServiceAcceptPtrOutputWithContext(context.Background())
}

func (i *getNetworkLinkServiceAcceptPtrType) ToGetNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) GetNetworkLinkServiceAcceptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkServiceAcceptPtrOutput)
}

type GetNetworkLinkServiceAcceptOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkServiceAcceptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkServiceAccept)(nil)).Elem()
}

func (o GetNetworkLinkServiceAcceptOutput) ToGetNetworkLinkServiceAcceptOutput() GetNetworkLinkServiceAcceptOutput {
	return o
}

func (o GetNetworkLinkServiceAcceptOutput) ToGetNetworkLinkServiceAcceptOutputWithContext(ctx context.Context) GetNetworkLinkServiceAcceptOutput {
	return o
}

func (o GetNetworkLinkServiceAcceptOutput) ToGetNetworkLinkServiceAcceptPtrOutput() GetNetworkLinkServiceAcceptPtrOutput {
	return o.ToGetNetworkLinkServiceAcceptPtrOutputWithContext(context.Background())
}

func (o GetNetworkLinkServiceAcceptOutput) ToGetNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) GetNetworkLinkServiceAcceptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetNetworkLinkServiceAccept) *GetNetworkLinkServiceAccept {
		return &v
	}).(GetNetworkLinkServiceAcceptPtrOutput)
}

// (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
func (o GetNetworkLinkServiceAcceptOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLinkServiceAccept) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// (Optional List of Strings) List of network ids from which connections can be accepted.
func (o GetNetworkLinkServiceAcceptOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkLinkServiceAccept) []string { return v.Networks }).(pulumi.StringArrayOutput)
}

type GetNetworkLinkServiceAcceptPtrOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkServiceAcceptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetNetworkLinkServiceAccept)(nil)).Elem()
}

func (o GetNetworkLinkServiceAcceptPtrOutput) ToGetNetworkLinkServiceAcceptPtrOutput() GetNetworkLinkServiceAcceptPtrOutput {
	return o
}

func (o GetNetworkLinkServiceAcceptPtrOutput) ToGetNetworkLinkServiceAcceptPtrOutputWithContext(ctx context.Context) GetNetworkLinkServiceAcceptPtrOutput {
	return o
}

func (o GetNetworkLinkServiceAcceptPtrOutput) Elem() GetNetworkLinkServiceAcceptOutput {
	return o.ApplyT(func(v *GetNetworkLinkServiceAccept) GetNetworkLinkServiceAccept {
		if v != nil {
			return *v
		}
		var ret GetNetworkLinkServiceAccept
		return ret
	}).(GetNetworkLinkServiceAcceptOutput)
}

// (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
func (o GetNetworkLinkServiceAcceptPtrOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetNetworkLinkServiceAccept) []string {
		if v == nil {
			return nil
		}
		return v.Environments
	}).(pulumi.StringArrayOutput)
}

// (Optional List of Strings) List of network ids from which connections can be accepted.
func (o GetNetworkLinkServiceAcceptPtrOutput) Networks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetNetworkLinkServiceAccept) []string {
		if v == nil {
			return nil
		}
		return v.Networks
	}).(pulumi.StringArrayOutput)
}

type GetNetworkLinkServiceEnvironment struct {
	// The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
	Id string `pulumi:"id"`
}

// GetNetworkLinkServiceEnvironmentInput is an input type that accepts GetNetworkLinkServiceEnvironmentArgs and GetNetworkLinkServiceEnvironmentOutput values.
// You can construct a concrete instance of `GetNetworkLinkServiceEnvironmentInput` via:
//
//	GetNetworkLinkServiceEnvironmentArgs{...}
type GetNetworkLinkServiceEnvironmentInput interface {
	pulumi.Input

	ToGetNetworkLinkServiceEnvironmentOutput() GetNetworkLinkServiceEnvironmentOutput
	ToGetNetworkLinkServiceEnvironmentOutputWithContext(context.Context) GetNetworkLinkServiceEnvironmentOutput
}

type GetNetworkLinkServiceEnvironmentArgs struct {
	// The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLinkServiceEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkServiceEnvironment)(nil)).Elem()
}

func (i GetNetworkLinkServiceEnvironmentArgs) ToGetNetworkLinkServiceEnvironmentOutput() GetNetworkLinkServiceEnvironmentOutput {
	return i.ToGetNetworkLinkServiceEnvironmentOutputWithContext(context.Background())
}

func (i GetNetworkLinkServiceEnvironmentArgs) ToGetNetworkLinkServiceEnvironmentOutputWithContext(ctx context.Context) GetNetworkLinkServiceEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkServiceEnvironmentOutput)
}

type GetNetworkLinkServiceEnvironmentOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkServiceEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkServiceEnvironment)(nil)).Elem()
}

func (o GetNetworkLinkServiceEnvironmentOutput) ToGetNetworkLinkServiceEnvironmentOutput() GetNetworkLinkServiceEnvironmentOutput {
	return o
}

func (o GetNetworkLinkServiceEnvironmentOutput) ToGetNetworkLinkServiceEnvironmentOutputWithContext(ctx context.Context) GetNetworkLinkServiceEnvironmentOutput {
	return o
}

// The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
func (o GetNetworkLinkServiceEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLinkServiceEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLinkServiceNetwork struct {
	// The ID of the Network Link Service, for example, `nls-zyw30`.
	Id string `pulumi:"id"`
}

// GetNetworkLinkServiceNetworkInput is an input type that accepts GetNetworkLinkServiceNetworkArgs and GetNetworkLinkServiceNetworkOutput values.
// You can construct a concrete instance of `GetNetworkLinkServiceNetworkInput` via:
//
//	GetNetworkLinkServiceNetworkArgs{...}
type GetNetworkLinkServiceNetworkInput interface {
	pulumi.Input

	ToGetNetworkLinkServiceNetworkOutput() GetNetworkLinkServiceNetworkOutput
	ToGetNetworkLinkServiceNetworkOutputWithContext(context.Context) GetNetworkLinkServiceNetworkOutput
}

type GetNetworkLinkServiceNetworkArgs struct {
	// The ID of the Network Link Service, for example, `nls-zyw30`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetNetworkLinkServiceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkServiceNetwork)(nil)).Elem()
}

func (i GetNetworkLinkServiceNetworkArgs) ToGetNetworkLinkServiceNetworkOutput() GetNetworkLinkServiceNetworkOutput {
	return i.ToGetNetworkLinkServiceNetworkOutputWithContext(context.Background())
}

func (i GetNetworkLinkServiceNetworkArgs) ToGetNetworkLinkServiceNetworkOutputWithContext(ctx context.Context) GetNetworkLinkServiceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkServiceNetworkOutput)
}

// GetNetworkLinkServiceNetworkArrayInput is an input type that accepts GetNetworkLinkServiceNetworkArray and GetNetworkLinkServiceNetworkArrayOutput values.
// You can construct a concrete instance of `GetNetworkLinkServiceNetworkArrayInput` via:
//
//	GetNetworkLinkServiceNetworkArray{ GetNetworkLinkServiceNetworkArgs{...} }
type GetNetworkLinkServiceNetworkArrayInput interface {
	pulumi.Input

	ToGetNetworkLinkServiceNetworkArrayOutput() GetNetworkLinkServiceNetworkArrayOutput
	ToGetNetworkLinkServiceNetworkArrayOutputWithContext(context.Context) GetNetworkLinkServiceNetworkArrayOutput
}

type GetNetworkLinkServiceNetworkArray []GetNetworkLinkServiceNetworkInput

func (GetNetworkLinkServiceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLinkServiceNetwork)(nil)).Elem()
}

func (i GetNetworkLinkServiceNetworkArray) ToGetNetworkLinkServiceNetworkArrayOutput() GetNetworkLinkServiceNetworkArrayOutput {
	return i.ToGetNetworkLinkServiceNetworkArrayOutputWithContext(context.Background())
}

func (i GetNetworkLinkServiceNetworkArray) ToGetNetworkLinkServiceNetworkArrayOutputWithContext(ctx context.Context) GetNetworkLinkServiceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkLinkServiceNetworkArrayOutput)
}

type GetNetworkLinkServiceNetworkOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkServiceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkLinkServiceNetwork)(nil)).Elem()
}

func (o GetNetworkLinkServiceNetworkOutput) ToGetNetworkLinkServiceNetworkOutput() GetNetworkLinkServiceNetworkOutput {
	return o
}

func (o GetNetworkLinkServiceNetworkOutput) ToGetNetworkLinkServiceNetworkOutputWithContext(ctx context.Context) GetNetworkLinkServiceNetworkOutput {
	return o
}

// The ID of the Network Link Service, for example, `nls-zyw30`.
func (o GetNetworkLinkServiceNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkLinkServiceNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetNetworkLinkServiceNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkLinkServiceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkLinkServiceNetwork)(nil)).Elem()
}

func (o GetNetworkLinkServiceNetworkArrayOutput) ToGetNetworkLinkServiceNetworkArrayOutput() GetNetworkLinkServiceNetworkArrayOutput {
	return o
}

func (o GetNetworkLinkServiceNetworkArrayOutput) ToGetNetworkLinkServiceNetworkArrayOutputWithContext(ctx context.Context) GetNetworkLinkServiceNetworkArrayOutput {
	return o
}

func (o GetNetworkLinkServiceNetworkArrayOutput) Index(i pulumi.IntInput) GetNetworkLinkServiceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkLinkServiceNetwork {
		return vs[0].([]GetNetworkLinkServiceNetwork)[vs[1].(int)]
	}).(GetNetworkLinkServiceNetworkOutput)
}

type GetNetworkZoneInfo struct {
	// (Required String) The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
	Cidr string `pulumi:"cidr"`
	// (Required String) Cloud provider zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetNetworkZoneInfoInput is an input type that accepts GetNetworkZoneInfoArgs and GetNetworkZoneInfoOutput values.
// You can construct a concrete instance of `GetNetworkZoneInfoInput` via:
//
//	GetNetworkZoneInfoArgs{...}
type GetNetworkZoneInfoInput interface {
	pulumi.Input

	ToGetNetworkZoneInfoOutput() GetNetworkZoneInfoOutput
	ToGetNetworkZoneInfoOutputWithContext(context.Context) GetNetworkZoneInfoOutput
}

type GetNetworkZoneInfoArgs struct {
	// (Required String) The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// (Required String) Cloud provider zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetNetworkZoneInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkZoneInfo)(nil)).Elem()
}

func (i GetNetworkZoneInfoArgs) ToGetNetworkZoneInfoOutput() GetNetworkZoneInfoOutput {
	return i.ToGetNetworkZoneInfoOutputWithContext(context.Background())
}

func (i GetNetworkZoneInfoArgs) ToGetNetworkZoneInfoOutputWithContext(ctx context.Context) GetNetworkZoneInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkZoneInfoOutput)
}

// GetNetworkZoneInfoArrayInput is an input type that accepts GetNetworkZoneInfoArray and GetNetworkZoneInfoArrayOutput values.
// You can construct a concrete instance of `GetNetworkZoneInfoArrayInput` via:
//
//	GetNetworkZoneInfoArray{ GetNetworkZoneInfoArgs{...} }
type GetNetworkZoneInfoArrayInput interface {
	pulumi.Input

	ToGetNetworkZoneInfoArrayOutput() GetNetworkZoneInfoArrayOutput
	ToGetNetworkZoneInfoArrayOutputWithContext(context.Context) GetNetworkZoneInfoArrayOutput
}

type GetNetworkZoneInfoArray []GetNetworkZoneInfoInput

func (GetNetworkZoneInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkZoneInfo)(nil)).Elem()
}

func (i GetNetworkZoneInfoArray) ToGetNetworkZoneInfoArrayOutput() GetNetworkZoneInfoArrayOutput {
	return i.ToGetNetworkZoneInfoArrayOutputWithContext(context.Background())
}

func (i GetNetworkZoneInfoArray) ToGetNetworkZoneInfoArrayOutputWithContext(ctx context.Context) GetNetworkZoneInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkZoneInfoArrayOutput)
}

type GetNetworkZoneInfoOutput struct{ *pulumi.OutputState }

func (GetNetworkZoneInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkZoneInfo)(nil)).Elem()
}

func (o GetNetworkZoneInfoOutput) ToGetNetworkZoneInfoOutput() GetNetworkZoneInfoOutput {
	return o
}

func (o GetNetworkZoneInfoOutput) ToGetNetworkZoneInfoOutputWithContext(ctx context.Context) GetNetworkZoneInfoOutput {
	return o
}

// (Required String) The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
func (o GetNetworkZoneInfoOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkZoneInfo) string { return v.Cidr }).(pulumi.StringOutput)
}

// (Required String) Cloud provider zone ID.
func (o GetNetworkZoneInfoOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkZoneInfo) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetNetworkZoneInfoArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkZoneInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkZoneInfo)(nil)).Elem()
}

func (o GetNetworkZoneInfoArrayOutput) ToGetNetworkZoneInfoArrayOutput() GetNetworkZoneInfoArrayOutput {
	return o
}

func (o GetNetworkZoneInfoArrayOutput) ToGetNetworkZoneInfoArrayOutputWithContext(ctx context.Context) GetNetworkZoneInfoArrayOutput {
	return o
}

func (o GetNetworkZoneInfoArrayOutput) Index(i pulumi.IntInput) GetNetworkZoneInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkZoneInfo {
		return vs[0].([]GetNetworkZoneInfo)[vs[1].(int)]
	}).(GetNetworkZoneInfoOutput)
}

type GetPeeringAw struct {
	// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes []string `pulumi:"routes"`
	// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc string `pulumi:"vpc"`
}

// GetPeeringAwInput is an input type that accepts GetPeeringAwArgs and GetPeeringAwOutput values.
// You can construct a concrete instance of `GetPeeringAwInput` via:
//
//	GetPeeringAwArgs{...}
type GetPeeringAwInput interface {
	pulumi.Input

	ToGetPeeringAwOutput() GetPeeringAwOutput
	ToGetPeeringAwOutputWithContext(context.Context) GetPeeringAwOutput
}

type GetPeeringAwArgs struct {
	// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
	Vpc pulumi.StringInput `pulumi:"vpc"`
}

func (GetPeeringAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAw)(nil)).Elem()
}

func (i GetPeeringAwArgs) ToGetPeeringAwOutput() GetPeeringAwOutput {
	return i.ToGetPeeringAwOutputWithContext(context.Background())
}

func (i GetPeeringAwArgs) ToGetPeeringAwOutputWithContext(ctx context.Context) GetPeeringAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAwOutput)
}

// GetPeeringAwArrayInput is an input type that accepts GetPeeringAwArray and GetPeeringAwArrayOutput values.
// You can construct a concrete instance of `GetPeeringAwArrayInput` via:
//
//	GetPeeringAwArray{ GetPeeringAwArgs{...} }
type GetPeeringAwArrayInput interface {
	pulumi.Input

	ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput
	ToGetPeeringAwArrayOutputWithContext(context.Context) GetPeeringAwArrayOutput
}

type GetPeeringAwArray []GetPeeringAwInput

func (GetPeeringAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAw)(nil)).Elem()
}

func (i GetPeeringAwArray) ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput {
	return i.ToGetPeeringAwArrayOutputWithContext(context.Background())
}

func (i GetPeeringAwArray) ToGetPeeringAwArrayOutputWithContext(ctx context.Context) GetPeeringAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAwArrayOutput)
}

type GetPeeringAwOutput struct{ *pulumi.OutputState }

func (GetPeeringAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAw)(nil)).Elem()
}

func (o GetPeeringAwOutput) ToGetPeeringAwOutput() GetPeeringAwOutput {
	return o
}

func (o GetPeeringAwOutput) ToGetPeeringAwOutputWithContext(ctx context.Context) GetPeeringAwOutput {
	return o
}

// (Required String) The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
func (o GetPeeringAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.Account }).(pulumi.StringOutput)
}

// (Required String) The region of the Azure peer VNet.
func (o GetPeeringAwOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// (Required String) The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
func (o GetPeeringAwOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPeeringAw) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
func (o GetPeeringAwOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAw) string { return v.Vpc }).(pulumi.StringOutput)
}

type GetPeeringAwArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAw)(nil)).Elem()
}

func (o GetPeeringAwArrayOutput) ToGetPeeringAwArrayOutput() GetPeeringAwArrayOutput {
	return o
}

func (o GetPeeringAwArrayOutput) ToGetPeeringAwArrayOutputWithContext(ctx context.Context) GetPeeringAwArrayOutput {
	return o
}

func (o GetPeeringAwArrayOutput) Index(i pulumi.IntInput) GetPeeringAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAw {
		return vs[0].([]GetPeeringAw)[vs[1].(int)]
	}).(GetPeeringAwOutput)
}

type GetPeeringAzure struct {
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion string `pulumi:"customerRegion"`
	// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant string `pulumi:"tenant"`
	// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet string `pulumi:"vnet"`
}

// GetPeeringAzureInput is an input type that accepts GetPeeringAzureArgs and GetPeeringAzureOutput values.
// You can construct a concrete instance of `GetPeeringAzureInput` via:
//
//	GetPeeringAzureArgs{...}
type GetPeeringAzureInput interface {
	pulumi.Input

	ToGetPeeringAzureOutput() GetPeeringAzureOutput
	ToGetPeeringAzureOutputWithContext(context.Context) GetPeeringAzureOutput
}

type GetPeeringAzureArgs struct {
	// (Required String) The region of the Azure peer VNet.
	CustomerRegion pulumi.StringInput `pulumi:"customerRegion"`
	// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
	Tenant pulumi.StringInput `pulumi:"tenant"`
	// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
	Vnet pulumi.StringInput `pulumi:"vnet"`
}

func (GetPeeringAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAzure)(nil)).Elem()
}

func (i GetPeeringAzureArgs) ToGetPeeringAzureOutput() GetPeeringAzureOutput {
	return i.ToGetPeeringAzureOutputWithContext(context.Background())
}

func (i GetPeeringAzureArgs) ToGetPeeringAzureOutputWithContext(ctx context.Context) GetPeeringAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAzureOutput)
}

// GetPeeringAzureArrayInput is an input type that accepts GetPeeringAzureArray and GetPeeringAzureArrayOutput values.
// You can construct a concrete instance of `GetPeeringAzureArrayInput` via:
//
//	GetPeeringAzureArray{ GetPeeringAzureArgs{...} }
type GetPeeringAzureArrayInput interface {
	pulumi.Input

	ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput
	ToGetPeeringAzureArrayOutputWithContext(context.Context) GetPeeringAzureArrayOutput
}

type GetPeeringAzureArray []GetPeeringAzureInput

func (GetPeeringAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAzure)(nil)).Elem()
}

func (i GetPeeringAzureArray) ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput {
	return i.ToGetPeeringAzureArrayOutputWithContext(context.Background())
}

func (i GetPeeringAzureArray) ToGetPeeringAzureArrayOutputWithContext(ctx context.Context) GetPeeringAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringAzureArrayOutput)
}

type GetPeeringAzureOutput struct{ *pulumi.OutputState }

func (GetPeeringAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringAzure)(nil)).Elem()
}

func (o GetPeeringAzureOutput) ToGetPeeringAzureOutput() GetPeeringAzureOutput {
	return o
}

func (o GetPeeringAzureOutput) ToGetPeeringAzureOutputWithContext(ctx context.Context) GetPeeringAzureOutput {
	return o
}

// (Required String) The region of the Azure peer VNet.
func (o GetPeeringAzureOutput) CustomerRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.CustomerRegion }).(pulumi.StringOutput)
}

// (Required String) The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
func (o GetPeeringAzureOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.Tenant }).(pulumi.StringOutput)
}

// (Required String) The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
func (o GetPeeringAzureOutput) Vnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringAzure) string { return v.Vnet }).(pulumi.StringOutput)
}

type GetPeeringAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringAzure)(nil)).Elem()
}

func (o GetPeeringAzureArrayOutput) ToGetPeeringAzureArrayOutput() GetPeeringAzureArrayOutput {
	return o
}

func (o GetPeeringAzureArrayOutput) ToGetPeeringAzureArrayOutputWithContext(ctx context.Context) GetPeeringAzureArrayOutput {
	return o
}

func (o GetPeeringAzureArrayOutput) Index(i pulumi.IntInput) GetPeeringAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringAzure {
		return vs[0].([]GetPeeringAzure)[vs[1].(int)]
	}).(GetPeeringAzureOutput)
}

type GetPeeringEnvironment struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetPeeringEnvironmentInput is an input type that accepts GetPeeringEnvironmentArgs and GetPeeringEnvironmentOutput values.
// You can construct a concrete instance of `GetPeeringEnvironmentInput` via:
//
//	GetPeeringEnvironmentArgs{...}
type GetPeeringEnvironmentInput interface {
	pulumi.Input

	ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput
	ToGetPeeringEnvironmentOutputWithContext(context.Context) GetPeeringEnvironmentOutput
}

type GetPeeringEnvironmentArgs struct {
	// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPeeringEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringEnvironment)(nil)).Elem()
}

func (i GetPeeringEnvironmentArgs) ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput {
	return i.ToGetPeeringEnvironmentOutputWithContext(context.Background())
}

func (i GetPeeringEnvironmentArgs) ToGetPeeringEnvironmentOutputWithContext(ctx context.Context) GetPeeringEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringEnvironmentOutput)
}

type GetPeeringEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPeeringEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringEnvironment)(nil)).Elem()
}

func (o GetPeeringEnvironmentOutput) ToGetPeeringEnvironmentOutput() GetPeeringEnvironmentOutput {
	return o
}

func (o GetPeeringEnvironmentOutput) ToGetPeeringEnvironmentOutputWithContext(ctx context.Context) GetPeeringEnvironmentOutput {
	return o
}

// The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetPeeringEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPeeringGcp struct {
	// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes bool `pulumi:"importCustomRoutes"`
	// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
	// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork string `pulumi:"vpcNetwork"`
}

// GetPeeringGcpInput is an input type that accepts GetPeeringGcpArgs and GetPeeringGcpOutput values.
// You can construct a concrete instance of `GetPeeringGcpInput` via:
//
//	GetPeeringGcpArgs{...}
type GetPeeringGcpInput interface {
	pulumi.Input

	ToGetPeeringGcpOutput() GetPeeringGcpOutput
	ToGetPeeringGcpOutputWithContext(context.Context) GetPeeringGcpOutput
}

type GetPeeringGcpArgs struct {
	// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
	ImportCustomRoutes pulumi.BoolInput `pulumi:"importCustomRoutes"`
	// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
	// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
	VpcNetwork pulumi.StringInput `pulumi:"vpcNetwork"`
}

func (GetPeeringGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringGcp)(nil)).Elem()
}

func (i GetPeeringGcpArgs) ToGetPeeringGcpOutput() GetPeeringGcpOutput {
	return i.ToGetPeeringGcpOutputWithContext(context.Background())
}

func (i GetPeeringGcpArgs) ToGetPeeringGcpOutputWithContext(ctx context.Context) GetPeeringGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringGcpOutput)
}

// GetPeeringGcpArrayInput is an input type that accepts GetPeeringGcpArray and GetPeeringGcpArrayOutput values.
// You can construct a concrete instance of `GetPeeringGcpArrayInput` via:
//
//	GetPeeringGcpArray{ GetPeeringGcpArgs{...} }
type GetPeeringGcpArrayInput interface {
	pulumi.Input

	ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput
	ToGetPeeringGcpArrayOutputWithContext(context.Context) GetPeeringGcpArrayOutput
}

type GetPeeringGcpArray []GetPeeringGcpInput

func (GetPeeringGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringGcp)(nil)).Elem()
}

func (i GetPeeringGcpArray) ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput {
	return i.ToGetPeeringGcpArrayOutputWithContext(context.Background())
}

func (i GetPeeringGcpArray) ToGetPeeringGcpArrayOutputWithContext(ctx context.Context) GetPeeringGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringGcpArrayOutput)
}

type GetPeeringGcpOutput struct{ *pulumi.OutputState }

func (GetPeeringGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringGcp)(nil)).Elem()
}

func (o GetPeeringGcpOutput) ToGetPeeringGcpOutput() GetPeeringGcpOutput {
	return o
}

func (o GetPeeringGcpOutput) ToGetPeeringGcpOutputWithContext(ctx context.Context) GetPeeringGcpOutput {
	return o
}

// (Optional Boolean) The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
func (o GetPeeringGcpOutput) ImportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPeeringGcp) bool { return v.ImportCustomRoutes }).(pulumi.BoolOutput)
}

// (Required String) The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o GetPeeringGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringGcp) string { return v.Project }).(pulumi.StringOutput)
}

// (Required String) The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
func (o GetPeeringGcpOutput) VpcNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringGcp) string { return v.VpcNetwork }).(pulumi.StringOutput)
}

type GetPeeringGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringGcp)(nil)).Elem()
}

func (o GetPeeringGcpArrayOutput) ToGetPeeringGcpArrayOutput() GetPeeringGcpArrayOutput {
	return o
}

func (o GetPeeringGcpArrayOutput) ToGetPeeringGcpArrayOutputWithContext(ctx context.Context) GetPeeringGcpArrayOutput {
	return o
}

func (o GetPeeringGcpArrayOutput) Index(i pulumi.IntInput) GetPeeringGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringGcp {
		return vs[0].([]GetPeeringGcp)[vs[1].(int)]
	}).(GetPeeringGcpOutput)
}

type GetPeeringNetwork struct {
	// The ID of the Peering, for example, `peer-abc123`.
	Id string `pulumi:"id"`
}

// GetPeeringNetworkInput is an input type that accepts GetPeeringNetworkArgs and GetPeeringNetworkOutput values.
// You can construct a concrete instance of `GetPeeringNetworkInput` via:
//
//	GetPeeringNetworkArgs{...}
type GetPeeringNetworkInput interface {
	pulumi.Input

	ToGetPeeringNetworkOutput() GetPeeringNetworkOutput
	ToGetPeeringNetworkOutputWithContext(context.Context) GetPeeringNetworkOutput
}

type GetPeeringNetworkArgs struct {
	// The ID of the Peering, for example, `peer-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPeeringNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringNetwork)(nil)).Elem()
}

func (i GetPeeringNetworkArgs) ToGetPeeringNetworkOutput() GetPeeringNetworkOutput {
	return i.ToGetPeeringNetworkOutputWithContext(context.Background())
}

func (i GetPeeringNetworkArgs) ToGetPeeringNetworkOutputWithContext(ctx context.Context) GetPeeringNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringNetworkOutput)
}

// GetPeeringNetworkArrayInput is an input type that accepts GetPeeringNetworkArray and GetPeeringNetworkArrayOutput values.
// You can construct a concrete instance of `GetPeeringNetworkArrayInput` via:
//
//	GetPeeringNetworkArray{ GetPeeringNetworkArgs{...} }
type GetPeeringNetworkArrayInput interface {
	pulumi.Input

	ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput
	ToGetPeeringNetworkArrayOutputWithContext(context.Context) GetPeeringNetworkArrayOutput
}

type GetPeeringNetworkArray []GetPeeringNetworkInput

func (GetPeeringNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringNetwork)(nil)).Elem()
}

func (i GetPeeringNetworkArray) ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput {
	return i.ToGetPeeringNetworkArrayOutputWithContext(context.Background())
}

func (i GetPeeringNetworkArray) ToGetPeeringNetworkArrayOutputWithContext(ctx context.Context) GetPeeringNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeeringNetworkArrayOutput)
}

type GetPeeringNetworkOutput struct{ *pulumi.OutputState }

func (GetPeeringNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeeringNetwork)(nil)).Elem()
}

func (o GetPeeringNetworkOutput) ToGetPeeringNetworkOutput() GetPeeringNetworkOutput {
	return o
}

func (o GetPeeringNetworkOutput) ToGetPeeringNetworkOutputWithContext(ctx context.Context) GetPeeringNetworkOutput {
	return o
}

// The ID of the Peering, for example, `peer-abc123`.
func (o GetPeeringNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPeeringNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetPeeringNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPeeringNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeeringNetwork)(nil)).Elem()
}

func (o GetPeeringNetworkArrayOutput) ToGetPeeringNetworkArrayOutput() GetPeeringNetworkArrayOutput {
	return o
}

func (o GetPeeringNetworkArrayOutput) ToGetPeeringNetworkArrayOutputWithContext(ctx context.Context) GetPeeringNetworkArrayOutput {
	return o
}

func (o GetPeeringNetworkArrayOutput) Index(i pulumi.IntInput) GetPeeringNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeeringNetwork {
		return vs[0].([]GetPeeringNetwork)[vs[1].(int)]
	}).(GetPeeringNetworkOutput)
}

type GetPrivateLinkAccessAw struct {
	// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account string `pulumi:"account"`
}

// GetPrivateLinkAccessAwInput is an input type that accepts GetPrivateLinkAccessAwArgs and GetPrivateLinkAccessAwOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAwInput` via:
//
//	GetPrivateLinkAccessAwArgs{...}
type GetPrivateLinkAccessAwInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput
	ToGetPrivateLinkAccessAwOutputWithContext(context.Context) GetPrivateLinkAccessAwOutput
}

type GetPrivateLinkAccessAwArgs struct {
	// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
	Account pulumi.StringInput `pulumi:"account"`
}

func (GetPrivateLinkAccessAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAw)(nil)).Elem()
}

func (i GetPrivateLinkAccessAwArgs) ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput {
	return i.ToGetPrivateLinkAccessAwOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAwArgs) ToGetPrivateLinkAccessAwOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAwOutput)
}

// GetPrivateLinkAccessAwArrayInput is an input type that accepts GetPrivateLinkAccessAwArray and GetPrivateLinkAccessAwArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAwArrayInput` via:
//
//	GetPrivateLinkAccessAwArray{ GetPrivateLinkAccessAwArgs{...} }
type GetPrivateLinkAccessAwArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput
	ToGetPrivateLinkAccessAwArrayOutputWithContext(context.Context) GetPrivateLinkAccessAwArrayOutput
}

type GetPrivateLinkAccessAwArray []GetPrivateLinkAccessAwInput

func (GetPrivateLinkAccessAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAw)(nil)).Elem()
}

func (i GetPrivateLinkAccessAwArray) ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput {
	return i.ToGetPrivateLinkAccessAwArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAwArray) ToGetPrivateLinkAccessAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAwArrayOutput)
}

type GetPrivateLinkAccessAwOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAw)(nil)).Elem()
}

func (o GetPrivateLinkAccessAwOutput) ToGetPrivateLinkAccessAwOutput() GetPrivateLinkAccessAwOutput {
	return o
}

func (o GetPrivateLinkAccessAwOutput) ToGetPrivateLinkAccessAwOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwOutput {
	return o
}

// (Required String) The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
func (o GetPrivateLinkAccessAwOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessAw) string { return v.Account }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessAwArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAw)(nil)).Elem()
}

func (o GetPrivateLinkAccessAwArrayOutput) ToGetPrivateLinkAccessAwArrayOutput() GetPrivateLinkAccessAwArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAwArrayOutput) ToGetPrivateLinkAccessAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAwArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAwArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessAw {
		return vs[0].([]GetPrivateLinkAccessAw)[vs[1].(int)]
	}).(GetPrivateLinkAccessAwOutput)
}

type GetPrivateLinkAccessAzure struct {
	// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription string `pulumi:"subscription"`
}

// GetPrivateLinkAccessAzureInput is an input type that accepts GetPrivateLinkAccessAzureArgs and GetPrivateLinkAccessAzureOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAzureInput` via:
//
//	GetPrivateLinkAccessAzureArgs{...}
type GetPrivateLinkAccessAzureInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput
	ToGetPrivateLinkAccessAzureOutputWithContext(context.Context) GetPrivateLinkAccessAzureOutput
}

type GetPrivateLinkAccessAzureArgs struct {
	// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
	Subscription pulumi.StringInput `pulumi:"subscription"`
}

func (GetPrivateLinkAccessAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (i GetPrivateLinkAccessAzureArgs) ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput {
	return i.ToGetPrivateLinkAccessAzureOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAzureArgs) ToGetPrivateLinkAccessAzureOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAzureOutput)
}

// GetPrivateLinkAccessAzureArrayInput is an input type that accepts GetPrivateLinkAccessAzureArray and GetPrivateLinkAccessAzureArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessAzureArrayInput` via:
//
//	GetPrivateLinkAccessAzureArray{ GetPrivateLinkAccessAzureArgs{...} }
type GetPrivateLinkAccessAzureArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput
	ToGetPrivateLinkAccessAzureArrayOutputWithContext(context.Context) GetPrivateLinkAccessAzureArrayOutput
}

type GetPrivateLinkAccessAzureArray []GetPrivateLinkAccessAzureInput

func (GetPrivateLinkAccessAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (i GetPrivateLinkAccessAzureArray) ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput {
	return i.ToGetPrivateLinkAccessAzureArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessAzureArray) ToGetPrivateLinkAccessAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessAzureArrayOutput)
}

type GetPrivateLinkAccessAzureOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (o GetPrivateLinkAccessAzureOutput) ToGetPrivateLinkAccessAzureOutput() GetPrivateLinkAccessAzureOutput {
	return o
}

func (o GetPrivateLinkAccessAzureOutput) ToGetPrivateLinkAccessAzureOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureOutput {
	return o
}

// (Required String) The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal](https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
func (o GetPrivateLinkAccessAzureOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessAzure) string { return v.Subscription }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessAzure)(nil)).Elem()
}

func (o GetPrivateLinkAccessAzureArrayOutput) ToGetPrivateLinkAccessAzureArrayOutput() GetPrivateLinkAccessAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAzureArrayOutput) ToGetPrivateLinkAccessAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAccessAzureArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessAzure {
		return vs[0].([]GetPrivateLinkAccessAzure)[vs[1].(int)]
	}).(GetPrivateLinkAccessAzureOutput)
}

type GetPrivateLinkAccessEnvironment struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAccessEnvironmentInput is an input type that accepts GetPrivateLinkAccessEnvironmentArgs and GetPrivateLinkAccessEnvironmentOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessEnvironmentInput` via:
//
//	GetPrivateLinkAccessEnvironmentArgs{...}
type GetPrivateLinkAccessEnvironmentInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput
	ToGetPrivateLinkAccessEnvironmentOutputWithContext(context.Context) GetPrivateLinkAccessEnvironmentOutput
}

type GetPrivateLinkAccessEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAccessEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessEnvironment)(nil)).Elem()
}

func (i GetPrivateLinkAccessEnvironmentArgs) ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput {
	return i.ToGetPrivateLinkAccessEnvironmentOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessEnvironmentArgs) ToGetPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAccessEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessEnvironmentOutput)
}

type GetPrivateLinkAccessEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessEnvironment)(nil)).Elem()
}

func (o GetPrivateLinkAccessEnvironmentOutput) ToGetPrivateLinkAccessEnvironmentOutput() GetPrivateLinkAccessEnvironmentOutput {
	return o
}

func (o GetPrivateLinkAccessEnvironmentOutput) ToGetPrivateLinkAccessEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAccessEnvironmentOutput {
	return o
}

// The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetPrivateLinkAccessEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessGcp struct {
	// (Required String) The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project string `pulumi:"project"`
}

// GetPrivateLinkAccessGcpInput is an input type that accepts GetPrivateLinkAccessGcpArgs and GetPrivateLinkAccessGcpOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessGcpInput` via:
//
//	GetPrivateLinkAccessGcpArgs{...}
type GetPrivateLinkAccessGcpInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessGcpOutput() GetPrivateLinkAccessGcpOutput
	ToGetPrivateLinkAccessGcpOutputWithContext(context.Context) GetPrivateLinkAccessGcpOutput
}

type GetPrivateLinkAccessGcpArgs struct {
	// (Required String) The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
	Project pulumi.StringInput `pulumi:"project"`
}

func (GetPrivateLinkAccessGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (i GetPrivateLinkAccessGcpArgs) ToGetPrivateLinkAccessGcpOutput() GetPrivateLinkAccessGcpOutput {
	return i.ToGetPrivateLinkAccessGcpOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessGcpArgs) ToGetPrivateLinkAccessGcpOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessGcpOutput)
}

// GetPrivateLinkAccessGcpArrayInput is an input type that accepts GetPrivateLinkAccessGcpArray and GetPrivateLinkAccessGcpArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessGcpArrayInput` via:
//
//	GetPrivateLinkAccessGcpArray{ GetPrivateLinkAccessGcpArgs{...} }
type GetPrivateLinkAccessGcpArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessGcpArrayOutput() GetPrivateLinkAccessGcpArrayOutput
	ToGetPrivateLinkAccessGcpArrayOutputWithContext(context.Context) GetPrivateLinkAccessGcpArrayOutput
}

type GetPrivateLinkAccessGcpArray []GetPrivateLinkAccessGcpInput

func (GetPrivateLinkAccessGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (i GetPrivateLinkAccessGcpArray) ToGetPrivateLinkAccessGcpArrayOutput() GetPrivateLinkAccessGcpArrayOutput {
	return i.ToGetPrivateLinkAccessGcpArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessGcpArray) ToGetPrivateLinkAccessGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessGcpArrayOutput)
}

type GetPrivateLinkAccessGcpOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (o GetPrivateLinkAccessGcpOutput) ToGetPrivateLinkAccessGcpOutput() GetPrivateLinkAccessGcpOutput {
	return o
}

func (o GetPrivateLinkAccessGcpOutput) ToGetPrivateLinkAccessGcpOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpOutput {
	return o
}

// (Required String) The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
func (o GetPrivateLinkAccessGcpOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessGcp) string { return v.Project }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessGcp)(nil)).Elem()
}

func (o GetPrivateLinkAccessGcpArrayOutput) ToGetPrivateLinkAccessGcpArrayOutput() GetPrivateLinkAccessGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAccessGcpArrayOutput) ToGetPrivateLinkAccessGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAccessGcpArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessGcp {
		return vs[0].([]GetPrivateLinkAccessGcp)[vs[1].(int)]
	}).(GetPrivateLinkAccessGcpOutput)
}

type GetPrivateLinkAccessNetwork struct {
	// The ID of the Private Link Access, for example, `pla-abc123`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAccessNetworkInput is an input type that accepts GetPrivateLinkAccessNetworkArgs and GetPrivateLinkAccessNetworkOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessNetworkInput` via:
//
//	GetPrivateLinkAccessNetworkArgs{...}
type GetPrivateLinkAccessNetworkInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput
	ToGetPrivateLinkAccessNetworkOutputWithContext(context.Context) GetPrivateLinkAccessNetworkOutput
}

type GetPrivateLinkAccessNetworkArgs struct {
	// The ID of the Private Link Access, for example, `pla-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAccessNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (i GetPrivateLinkAccessNetworkArgs) ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput {
	return i.ToGetPrivateLinkAccessNetworkOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessNetworkArgs) ToGetPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessNetworkOutput)
}

// GetPrivateLinkAccessNetworkArrayInput is an input type that accepts GetPrivateLinkAccessNetworkArray and GetPrivateLinkAccessNetworkArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAccessNetworkArrayInput` via:
//
//	GetPrivateLinkAccessNetworkArray{ GetPrivateLinkAccessNetworkArgs{...} }
type GetPrivateLinkAccessNetworkArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput
	ToGetPrivateLinkAccessNetworkArrayOutputWithContext(context.Context) GetPrivateLinkAccessNetworkArrayOutput
}

type GetPrivateLinkAccessNetworkArray []GetPrivateLinkAccessNetworkInput

func (GetPrivateLinkAccessNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (i GetPrivateLinkAccessNetworkArray) ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput {
	return i.ToGetPrivateLinkAccessNetworkArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAccessNetworkArray) ToGetPrivateLinkAccessNetworkArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAccessNetworkArrayOutput)
}

type GetPrivateLinkAccessNetworkOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (o GetPrivateLinkAccessNetworkOutput) ToGetPrivateLinkAccessNetworkOutput() GetPrivateLinkAccessNetworkOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkOutput) ToGetPrivateLinkAccessNetworkOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkOutput {
	return o
}

// The ID of the Private Link Access, for example, `pla-abc123`.
func (o GetPrivateLinkAccessNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAccessNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAccessNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAccessNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAccessNetwork)(nil)).Elem()
}

func (o GetPrivateLinkAccessNetworkArrayOutput) ToGetPrivateLinkAccessNetworkArrayOutput() GetPrivateLinkAccessNetworkArrayOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkArrayOutput) ToGetPrivateLinkAccessNetworkArrayOutputWithContext(ctx context.Context) GetPrivateLinkAccessNetworkArrayOutput {
	return o
}

func (o GetPrivateLinkAccessNetworkArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAccessNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAccessNetwork {
		return vs[0].([]GetPrivateLinkAccessNetwork)[vs[1].(int)]
	}).(GetPrivateLinkAccessNetworkOutput)
}

type GetPrivateLinkAttachmentAw struct {
	// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName string `pulumi:"vpcEndpointServiceName"`
}

// GetPrivateLinkAttachmentAwInput is an input type that accepts GetPrivateLinkAttachmentAwArgs and GetPrivateLinkAttachmentAwOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentAwInput` via:
//
//	GetPrivateLinkAttachmentAwArgs{...}
type GetPrivateLinkAttachmentAwInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentAwOutput() GetPrivateLinkAttachmentAwOutput
	ToGetPrivateLinkAttachmentAwOutputWithContext(context.Context) GetPrivateLinkAttachmentAwOutput
}

type GetPrivateLinkAttachmentAwArgs struct {
	// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
	VpcEndpointServiceName pulumi.StringInput `pulumi:"vpcEndpointServiceName"`
}

func (GetPrivateLinkAttachmentAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentAw)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentAwArgs) ToGetPrivateLinkAttachmentAwOutput() GetPrivateLinkAttachmentAwOutput {
	return i.ToGetPrivateLinkAttachmentAwOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentAwArgs) ToGetPrivateLinkAttachmentAwOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentAwOutput)
}

// GetPrivateLinkAttachmentAwArrayInput is an input type that accepts GetPrivateLinkAttachmentAwArray and GetPrivateLinkAttachmentAwArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentAwArrayInput` via:
//
//	GetPrivateLinkAttachmentAwArray{ GetPrivateLinkAttachmentAwArgs{...} }
type GetPrivateLinkAttachmentAwArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentAwArrayOutput() GetPrivateLinkAttachmentAwArrayOutput
	ToGetPrivateLinkAttachmentAwArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentAwArrayOutput
}

type GetPrivateLinkAttachmentAwArray []GetPrivateLinkAttachmentAwInput

func (GetPrivateLinkAttachmentAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentAw)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentAwArray) ToGetPrivateLinkAttachmentAwArrayOutput() GetPrivateLinkAttachmentAwArrayOutput {
	return i.ToGetPrivateLinkAttachmentAwArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentAwArray) ToGetPrivateLinkAttachmentAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentAwArrayOutput)
}

type GetPrivateLinkAttachmentAwOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentAw)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentAwOutput) ToGetPrivateLinkAttachmentAwOutput() GetPrivateLinkAttachmentAwOutput {
	return o
}

func (o GetPrivateLinkAttachmentAwOutput) ToGetPrivateLinkAttachmentAwOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAwOutput {
	return o
}

// (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
func (o GetPrivateLinkAttachmentAwOutput) VpcEndpointServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentAw) string { return v.VpcEndpointServiceName }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentAwArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentAw)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentAwArrayOutput) ToGetPrivateLinkAttachmentAwArrayOutput() GetPrivateLinkAttachmentAwArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentAwArrayOutput) ToGetPrivateLinkAttachmentAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAwArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentAwArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentAw {
		return vs[0].([]GetPrivateLinkAttachmentAw)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentAwOutput)
}

type GetPrivateLinkAttachmentAzure struct {
	// Azure PrivateLink service alias for the availability zone.
	PrivateLinkServiceAlias string `pulumi:"privateLinkServiceAlias"`
	// (Required String) Azure Private Link service resource id for the availability zone.
	PrivateLinkServiceResourceId string `pulumi:"privateLinkServiceResourceId"`
}

// GetPrivateLinkAttachmentAzureInput is an input type that accepts GetPrivateLinkAttachmentAzureArgs and GetPrivateLinkAttachmentAzureOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentAzureInput` via:
//
//	GetPrivateLinkAttachmentAzureArgs{...}
type GetPrivateLinkAttachmentAzureInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentAzureOutput() GetPrivateLinkAttachmentAzureOutput
	ToGetPrivateLinkAttachmentAzureOutputWithContext(context.Context) GetPrivateLinkAttachmentAzureOutput
}

type GetPrivateLinkAttachmentAzureArgs struct {
	// Azure PrivateLink service alias for the availability zone.
	PrivateLinkServiceAlias pulumi.StringInput `pulumi:"privateLinkServiceAlias"`
	// (Required String) Azure Private Link service resource id for the availability zone.
	PrivateLinkServiceResourceId pulumi.StringInput `pulumi:"privateLinkServiceResourceId"`
}

func (GetPrivateLinkAttachmentAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentAzure)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentAzureArgs) ToGetPrivateLinkAttachmentAzureOutput() GetPrivateLinkAttachmentAzureOutput {
	return i.ToGetPrivateLinkAttachmentAzureOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentAzureArgs) ToGetPrivateLinkAttachmentAzureOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentAzureOutput)
}

// GetPrivateLinkAttachmentAzureArrayInput is an input type that accepts GetPrivateLinkAttachmentAzureArray and GetPrivateLinkAttachmentAzureArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentAzureArrayInput` via:
//
//	GetPrivateLinkAttachmentAzureArray{ GetPrivateLinkAttachmentAzureArgs{...} }
type GetPrivateLinkAttachmentAzureArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentAzureArrayOutput() GetPrivateLinkAttachmentAzureArrayOutput
	ToGetPrivateLinkAttachmentAzureArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentAzureArrayOutput
}

type GetPrivateLinkAttachmentAzureArray []GetPrivateLinkAttachmentAzureInput

func (GetPrivateLinkAttachmentAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentAzure)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentAzureArray) ToGetPrivateLinkAttachmentAzureArrayOutput() GetPrivateLinkAttachmentAzureArrayOutput {
	return i.ToGetPrivateLinkAttachmentAzureArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentAzureArray) ToGetPrivateLinkAttachmentAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentAzureArrayOutput)
}

type GetPrivateLinkAttachmentAzureOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentAzure)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentAzureOutput) ToGetPrivateLinkAttachmentAzureOutput() GetPrivateLinkAttachmentAzureOutput {
	return o
}

func (o GetPrivateLinkAttachmentAzureOutput) ToGetPrivateLinkAttachmentAzureOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAzureOutput {
	return o
}

// Azure PrivateLink service alias for the availability zone.
func (o GetPrivateLinkAttachmentAzureOutput) PrivateLinkServiceAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentAzure) string { return v.PrivateLinkServiceAlias }).(pulumi.StringOutput)
}

// (Required String) Azure Private Link service resource id for the availability zone.
func (o GetPrivateLinkAttachmentAzureOutput) PrivateLinkServiceResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentAzure) string { return v.PrivateLinkServiceResourceId }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentAzure)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentAzureArrayOutput) ToGetPrivateLinkAttachmentAzureArrayOutput() GetPrivateLinkAttachmentAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentAzureArrayOutput) ToGetPrivateLinkAttachmentAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentAzureArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentAzure {
		return vs[0].([]GetPrivateLinkAttachmentAzure)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentAzureOutput)
}

type GetPrivateLinkAttachmentConnectionAw struct {
	// (Required String) Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	VpcEndpointId string `pulumi:"vpcEndpointId"`
}

// GetPrivateLinkAttachmentConnectionAwInput is an input type that accepts GetPrivateLinkAttachmentConnectionAwArgs and GetPrivateLinkAttachmentConnectionAwOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionAwInput` via:
//
//	GetPrivateLinkAttachmentConnectionAwArgs{...}
type GetPrivateLinkAttachmentConnectionAwInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionAwOutput() GetPrivateLinkAttachmentConnectionAwOutput
	ToGetPrivateLinkAttachmentConnectionAwOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionAwOutput
}

type GetPrivateLinkAttachmentConnectionAwArgs struct {
	// (Required String) Id of a VPC Endpoint that is connected to the VPC Endpoint service.
	VpcEndpointId pulumi.StringInput `pulumi:"vpcEndpointId"`
}

func (GetPrivateLinkAttachmentConnectionAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAw)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionAwArgs) ToGetPrivateLinkAttachmentConnectionAwOutput() GetPrivateLinkAttachmentConnectionAwOutput {
	return i.ToGetPrivateLinkAttachmentConnectionAwOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionAwArgs) ToGetPrivateLinkAttachmentConnectionAwOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionAwOutput)
}

// GetPrivateLinkAttachmentConnectionAwArrayInput is an input type that accepts GetPrivateLinkAttachmentConnectionAwArray and GetPrivateLinkAttachmentConnectionAwArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionAwArrayInput` via:
//
//	GetPrivateLinkAttachmentConnectionAwArray{ GetPrivateLinkAttachmentConnectionAwArgs{...} }
type GetPrivateLinkAttachmentConnectionAwArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionAwArrayOutput() GetPrivateLinkAttachmentConnectionAwArrayOutput
	ToGetPrivateLinkAttachmentConnectionAwArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionAwArrayOutput
}

type GetPrivateLinkAttachmentConnectionAwArray []GetPrivateLinkAttachmentConnectionAwInput

func (GetPrivateLinkAttachmentConnectionAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionAw)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionAwArray) ToGetPrivateLinkAttachmentConnectionAwArrayOutput() GetPrivateLinkAttachmentConnectionAwArrayOutput {
	return i.ToGetPrivateLinkAttachmentConnectionAwArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionAwArray) ToGetPrivateLinkAttachmentConnectionAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionAwArrayOutput)
}

type GetPrivateLinkAttachmentConnectionAwOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAw)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionAwOutput) ToGetPrivateLinkAttachmentConnectionAwOutput() GetPrivateLinkAttachmentConnectionAwOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionAwOutput) ToGetPrivateLinkAttachmentConnectionAwOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAwOutput {
	return o
}

// (Required String) Id of a VPC Endpoint that is connected to the VPC Endpoint service.
func (o GetPrivateLinkAttachmentConnectionAwOutput) VpcEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentConnectionAw) string { return v.VpcEndpointId }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentConnectionAwArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionAw)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionAwArrayOutput) ToGetPrivateLinkAttachmentConnectionAwArrayOutput() GetPrivateLinkAttachmentConnectionAwArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionAwArrayOutput) ToGetPrivateLinkAttachmentConnectionAwArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAwArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionAwArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentConnectionAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentConnectionAw {
		return vs[0].([]GetPrivateLinkAttachmentConnectionAw)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentConnectionAwOutput)
}

type GetPrivateLinkAttachmentConnectionAzure struct {
	// (Required String) Resource ID of the Private Endpoint that is connected to the Private Link service.
	PrivateEndpointResourceId string `pulumi:"privateEndpointResourceId"`
}

// GetPrivateLinkAttachmentConnectionAzureInput is an input type that accepts GetPrivateLinkAttachmentConnectionAzureArgs and GetPrivateLinkAttachmentConnectionAzureOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionAzureInput` via:
//
//	GetPrivateLinkAttachmentConnectionAzureArgs{...}
type GetPrivateLinkAttachmentConnectionAzureInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionAzureOutput() GetPrivateLinkAttachmentConnectionAzureOutput
	ToGetPrivateLinkAttachmentConnectionAzureOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionAzureOutput
}

type GetPrivateLinkAttachmentConnectionAzureArgs struct {
	// (Required String) Resource ID of the Private Endpoint that is connected to the Private Link service.
	PrivateEndpointResourceId pulumi.StringInput `pulumi:"privateEndpointResourceId"`
}

func (GetPrivateLinkAttachmentConnectionAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionAzureArgs) ToGetPrivateLinkAttachmentConnectionAzureOutput() GetPrivateLinkAttachmentConnectionAzureOutput {
	return i.ToGetPrivateLinkAttachmentConnectionAzureOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionAzureArgs) ToGetPrivateLinkAttachmentConnectionAzureOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionAzureOutput)
}

// GetPrivateLinkAttachmentConnectionAzureArrayInput is an input type that accepts GetPrivateLinkAttachmentConnectionAzureArray and GetPrivateLinkAttachmentConnectionAzureArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionAzureArrayInput` via:
//
//	GetPrivateLinkAttachmentConnectionAzureArray{ GetPrivateLinkAttachmentConnectionAzureArgs{...} }
type GetPrivateLinkAttachmentConnectionAzureArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionAzureArrayOutput() GetPrivateLinkAttachmentConnectionAzureArrayOutput
	ToGetPrivateLinkAttachmentConnectionAzureArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionAzureArrayOutput
}

type GetPrivateLinkAttachmentConnectionAzureArray []GetPrivateLinkAttachmentConnectionAzureInput

func (GetPrivateLinkAttachmentConnectionAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionAzureArray) ToGetPrivateLinkAttachmentConnectionAzureArrayOutput() GetPrivateLinkAttachmentConnectionAzureArrayOutput {
	return i.ToGetPrivateLinkAttachmentConnectionAzureArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionAzureArray) ToGetPrivateLinkAttachmentConnectionAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionAzureArrayOutput)
}

type GetPrivateLinkAttachmentConnectionAzureOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionAzureOutput) ToGetPrivateLinkAttachmentConnectionAzureOutput() GetPrivateLinkAttachmentConnectionAzureOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionAzureOutput) ToGetPrivateLinkAttachmentConnectionAzureOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAzureOutput {
	return o
}

// (Required String) Resource ID of the Private Endpoint that is connected to the Private Link service.
func (o GetPrivateLinkAttachmentConnectionAzureOutput) PrivateEndpointResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentConnectionAzure) string { return v.PrivateEndpointResourceId }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentConnectionAzureArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionAzure)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionAzureArrayOutput) ToGetPrivateLinkAttachmentConnectionAzureArrayOutput() GetPrivateLinkAttachmentConnectionAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionAzureArrayOutput) ToGetPrivateLinkAttachmentConnectionAzureArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionAzureArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionAzureArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentConnectionAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentConnectionAzure {
		return vs[0].([]GetPrivateLinkAttachmentConnectionAzure)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentConnectionAzureOutput)
}

type GetPrivateLinkAttachmentConnectionEnvironment struct {
	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAttachmentConnectionEnvironmentInput is an input type that accepts GetPrivateLinkAttachmentConnectionEnvironmentArgs and GetPrivateLinkAttachmentConnectionEnvironmentOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionEnvironmentInput` via:
//
//	GetPrivateLinkAttachmentConnectionEnvironmentArgs{...}
type GetPrivateLinkAttachmentConnectionEnvironmentInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionEnvironmentOutput() GetPrivateLinkAttachmentConnectionEnvironmentOutput
	ToGetPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionEnvironmentOutput
}

type GetPrivateLinkAttachmentConnectionEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAttachmentConnectionEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionEnvironment)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionEnvironmentArgs) ToGetPrivateLinkAttachmentConnectionEnvironmentOutput() GetPrivateLinkAttachmentConnectionEnvironmentOutput {
	return i.ToGetPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionEnvironmentArgs) ToGetPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionEnvironmentOutput)
}

type GetPrivateLinkAttachmentConnectionEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionEnvironment)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionEnvironmentOutput) ToGetPrivateLinkAttachmentConnectionEnvironmentOutput() GetPrivateLinkAttachmentConnectionEnvironmentOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionEnvironmentOutput) ToGetPrivateLinkAttachmentConnectionEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionEnvironmentOutput {
	return o
}

// The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
func (o GetPrivateLinkAttachmentConnectionEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentConnectionEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentConnectionGcp struct {
	// Id of the Private Service connection.
	PrivateServiceConnectConnectionId string `pulumi:"privateServiceConnectConnectionId"`
}

// GetPrivateLinkAttachmentConnectionGcpInput is an input type that accepts GetPrivateLinkAttachmentConnectionGcpArgs and GetPrivateLinkAttachmentConnectionGcpOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionGcpInput` via:
//
//	GetPrivateLinkAttachmentConnectionGcpArgs{...}
type GetPrivateLinkAttachmentConnectionGcpInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionGcpOutput() GetPrivateLinkAttachmentConnectionGcpOutput
	ToGetPrivateLinkAttachmentConnectionGcpOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionGcpOutput
}

type GetPrivateLinkAttachmentConnectionGcpArgs struct {
	// Id of the Private Service connection.
	PrivateServiceConnectConnectionId pulumi.StringInput `pulumi:"privateServiceConnectConnectionId"`
}

func (GetPrivateLinkAttachmentConnectionGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionGcpArgs) ToGetPrivateLinkAttachmentConnectionGcpOutput() GetPrivateLinkAttachmentConnectionGcpOutput {
	return i.ToGetPrivateLinkAttachmentConnectionGcpOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionGcpArgs) ToGetPrivateLinkAttachmentConnectionGcpOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionGcpOutput)
}

// GetPrivateLinkAttachmentConnectionGcpArrayInput is an input type that accepts GetPrivateLinkAttachmentConnectionGcpArray and GetPrivateLinkAttachmentConnectionGcpArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionGcpArrayInput` via:
//
//	GetPrivateLinkAttachmentConnectionGcpArray{ GetPrivateLinkAttachmentConnectionGcpArgs{...} }
type GetPrivateLinkAttachmentConnectionGcpArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionGcpArrayOutput() GetPrivateLinkAttachmentConnectionGcpArrayOutput
	ToGetPrivateLinkAttachmentConnectionGcpArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionGcpArrayOutput
}

type GetPrivateLinkAttachmentConnectionGcpArray []GetPrivateLinkAttachmentConnectionGcpInput

func (GetPrivateLinkAttachmentConnectionGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionGcpArray) ToGetPrivateLinkAttachmentConnectionGcpArrayOutput() GetPrivateLinkAttachmentConnectionGcpArrayOutput {
	return i.ToGetPrivateLinkAttachmentConnectionGcpArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionGcpArray) ToGetPrivateLinkAttachmentConnectionGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionGcpArrayOutput)
}

type GetPrivateLinkAttachmentConnectionGcpOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionGcpOutput) ToGetPrivateLinkAttachmentConnectionGcpOutput() GetPrivateLinkAttachmentConnectionGcpOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionGcpOutput) ToGetPrivateLinkAttachmentConnectionGcpOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionGcpOutput {
	return o
}

// Id of the Private Service connection.
func (o GetPrivateLinkAttachmentConnectionGcpOutput) PrivateServiceConnectConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentConnectionGcp) string { return v.PrivateServiceConnectConnectionId }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentConnectionGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionGcp)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionGcpArrayOutput) ToGetPrivateLinkAttachmentConnectionGcpArrayOutput() GetPrivateLinkAttachmentConnectionGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionGcpArrayOutput) ToGetPrivateLinkAttachmentConnectionGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionGcpArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentConnectionGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentConnectionGcp {
		return vs[0].([]GetPrivateLinkAttachmentConnectionGcp)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentConnectionGcpOutput)
}

type GetPrivateLinkAttachmentConnectionPrivateLinkAttachment struct {
	// The ID of the Private Link Attachment Connection, for example, `plattc-p5j3ov`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentInput is an input type that accepts GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs and GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentInput` via:
//
//	GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{...}
type GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput() GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput
	ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput
}

type GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs struct {
	// The ID of the Private Link Attachment Connection, for example, `plattc-p5j3ov`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput() GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return i.ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput)
}

// GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayInput is an input type that accepts GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray and GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayInput` via:
//
//	GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray{ GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{...} }
type GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput() GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput
	ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput
}

type GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray []GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentInput

func (GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput() GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput {
	return i.ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput)
}

type GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput() GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return o
}

// The ID of the Private Link Attachment Connection, for example, `plattc-p5j3ov`.
func (o GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentConnectionPrivateLinkAttachment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentConnectionPrivateLinkAttachment)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput() GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput) ToGetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentConnectionPrivateLinkAttachment {
		return vs[0].([]GetPrivateLinkAttachmentConnectionPrivateLinkAttachment)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput)
}

type GetPrivateLinkAttachmentEnvironment struct {
	// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetPrivateLinkAttachmentEnvironmentInput is an input type that accepts GetPrivateLinkAttachmentEnvironmentArgs and GetPrivateLinkAttachmentEnvironmentOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentEnvironmentInput` via:
//
//	GetPrivateLinkAttachmentEnvironmentArgs{...}
type GetPrivateLinkAttachmentEnvironmentInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentEnvironmentOutput() GetPrivateLinkAttachmentEnvironmentOutput
	ToGetPrivateLinkAttachmentEnvironmentOutputWithContext(context.Context) GetPrivateLinkAttachmentEnvironmentOutput
}

type GetPrivateLinkAttachmentEnvironmentArgs struct {
	// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPrivateLinkAttachmentEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentEnvironment)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentEnvironmentArgs) ToGetPrivateLinkAttachmentEnvironmentOutput() GetPrivateLinkAttachmentEnvironmentOutput {
	return i.ToGetPrivateLinkAttachmentEnvironmentOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentEnvironmentArgs) ToGetPrivateLinkAttachmentEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentEnvironmentOutput)
}

type GetPrivateLinkAttachmentEnvironmentOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentEnvironment)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentEnvironmentOutput) ToGetPrivateLinkAttachmentEnvironmentOutput() GetPrivateLinkAttachmentEnvironmentOutput {
	return o
}

func (o GetPrivateLinkAttachmentEnvironmentOutput) ToGetPrivateLinkAttachmentEnvironmentOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentEnvironmentOutput {
	return o
}

// The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
func (o GetPrivateLinkAttachmentEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentGcp struct {
	// Id of a Private Service Connect Service Attachment in Confluent Cloud.
	PrivateServiceConnectServiceAttachment string `pulumi:"privateServiceConnectServiceAttachment"`
	// Zone associated with the PSC Service attachment.
	Zone string `pulumi:"zone"`
}

// GetPrivateLinkAttachmentGcpInput is an input type that accepts GetPrivateLinkAttachmentGcpArgs and GetPrivateLinkAttachmentGcpOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentGcpInput` via:
//
//	GetPrivateLinkAttachmentGcpArgs{...}
type GetPrivateLinkAttachmentGcpInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentGcpOutput() GetPrivateLinkAttachmentGcpOutput
	ToGetPrivateLinkAttachmentGcpOutputWithContext(context.Context) GetPrivateLinkAttachmentGcpOutput
}

type GetPrivateLinkAttachmentGcpArgs struct {
	// Id of a Private Service Connect Service Attachment in Confluent Cloud.
	PrivateServiceConnectServiceAttachment pulumi.StringInput `pulumi:"privateServiceConnectServiceAttachment"`
	// Zone associated with the PSC Service attachment.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetPrivateLinkAttachmentGcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentGcp)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentGcpArgs) ToGetPrivateLinkAttachmentGcpOutput() GetPrivateLinkAttachmentGcpOutput {
	return i.ToGetPrivateLinkAttachmentGcpOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentGcpArgs) ToGetPrivateLinkAttachmentGcpOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentGcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentGcpOutput)
}

// GetPrivateLinkAttachmentGcpArrayInput is an input type that accepts GetPrivateLinkAttachmentGcpArray and GetPrivateLinkAttachmentGcpArrayOutput values.
// You can construct a concrete instance of `GetPrivateLinkAttachmentGcpArrayInput` via:
//
//	GetPrivateLinkAttachmentGcpArray{ GetPrivateLinkAttachmentGcpArgs{...} }
type GetPrivateLinkAttachmentGcpArrayInput interface {
	pulumi.Input

	ToGetPrivateLinkAttachmentGcpArrayOutput() GetPrivateLinkAttachmentGcpArrayOutput
	ToGetPrivateLinkAttachmentGcpArrayOutputWithContext(context.Context) GetPrivateLinkAttachmentGcpArrayOutput
}

type GetPrivateLinkAttachmentGcpArray []GetPrivateLinkAttachmentGcpInput

func (GetPrivateLinkAttachmentGcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentGcp)(nil)).Elem()
}

func (i GetPrivateLinkAttachmentGcpArray) ToGetPrivateLinkAttachmentGcpArrayOutput() GetPrivateLinkAttachmentGcpArrayOutput {
	return i.ToGetPrivateLinkAttachmentGcpArrayOutputWithContext(context.Background())
}

func (i GetPrivateLinkAttachmentGcpArray) ToGetPrivateLinkAttachmentGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentGcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateLinkAttachmentGcpArrayOutput)
}

type GetPrivateLinkAttachmentGcpOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentGcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateLinkAttachmentGcp)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentGcpOutput) ToGetPrivateLinkAttachmentGcpOutput() GetPrivateLinkAttachmentGcpOutput {
	return o
}

func (o GetPrivateLinkAttachmentGcpOutput) ToGetPrivateLinkAttachmentGcpOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentGcpOutput {
	return o
}

// Id of a Private Service Connect Service Attachment in Confluent Cloud.
func (o GetPrivateLinkAttachmentGcpOutput) PrivateServiceConnectServiceAttachment() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentGcp) string { return v.PrivateServiceConnectServiceAttachment }).(pulumi.StringOutput)
}

// Zone associated with the PSC Service attachment.
func (o GetPrivateLinkAttachmentGcpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateLinkAttachmentGcp) string { return v.Zone }).(pulumi.StringOutput)
}

type GetPrivateLinkAttachmentGcpArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateLinkAttachmentGcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateLinkAttachmentGcp)(nil)).Elem()
}

func (o GetPrivateLinkAttachmentGcpArrayOutput) ToGetPrivateLinkAttachmentGcpArrayOutput() GetPrivateLinkAttachmentGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentGcpArrayOutput) ToGetPrivateLinkAttachmentGcpArrayOutputWithContext(ctx context.Context) GetPrivateLinkAttachmentGcpArrayOutput {
	return o
}

func (o GetPrivateLinkAttachmentGcpArrayOutput) Index(i pulumi.IntInput) GetPrivateLinkAttachmentGcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateLinkAttachmentGcp {
		return vs[0].([]GetPrivateLinkAttachmentGcp)[vs[1].(int)]
	}).(GetPrivateLinkAttachmentGcpOutput)
}

type GetSchemaCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaCredentialsInput is an input type that accepts GetSchemaCredentialsArgs and GetSchemaCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaCredentialsInput` via:
//
//	GetSchemaCredentialsArgs{...}
type GetSchemaCredentialsInput interface {
	pulumi.Input

	ToGetSchemaCredentialsOutput() GetSchemaCredentialsOutput
	ToGetSchemaCredentialsOutputWithContext(context.Context) GetSchemaCredentialsOutput
}

type GetSchemaCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaCredentials)(nil)).Elem()
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsOutput() GetSchemaCredentialsOutput {
	return i.ToGetSchemaCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsOutputWithContext(ctx context.Context) GetSchemaCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaCredentialsOutput)
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return i.ToGetSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaCredentialsArgs) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaCredentialsOutput).ToGetSchemaCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaCredentialsPtrInput is an input type that accepts GetSchemaCredentialsArgs, GetSchemaCredentialsPtr and GetSchemaCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaCredentialsPtrInput` via:
//
//	        GetSchemaCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput
	ToGetSchemaCredentialsPtrOutputWithContext(context.Context) GetSchemaCredentialsPtrOutput
}

type getSchemaCredentialsPtrType GetSchemaCredentialsArgs

func GetSchemaCredentialsPtr(v *GetSchemaCredentialsArgs) GetSchemaCredentialsPtrInput {
	return (*getSchemaCredentialsPtrType)(v)
}

func (*getSchemaCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaCredentials)(nil)).Elem()
}

func (i *getSchemaCredentialsPtrType) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return i.ToGetSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaCredentialsPtrType) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaCredentialsPtrOutput)
}

type GetSchemaCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaCredentials)(nil)).Elem()
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsOutput() GetSchemaCredentialsOutput {
	return o
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsOutputWithContext(ctx context.Context) GetSchemaCredentialsOutput {
	return o
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return o.ToGetSchemaCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaCredentialsOutput) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaCredentials) *GetSchemaCredentials {
		return &v
	}).(GetSchemaCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaCredentials)(nil)).Elem()
}

func (o GetSchemaCredentialsPtrOutput) ToGetSchemaCredentialsPtrOutput() GetSchemaCredentialsPtrOutput {
	return o
}

func (o GetSchemaCredentialsPtrOutput) ToGetSchemaCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaCredentialsPtrOutput {
	return o
}

func (o GetSchemaCredentialsPtrOutput) Elem() GetSchemaCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaCredentials) GetSchemaCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaCredentials
		return ret
	}).(GetSchemaCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaMetadata struct {
	// (Optional Map) The custom properties to set:
	Properties map[string]string `pulumi:"properties"`
	// (Optional List of Strings) A list of metadata properties to be encrypted.
	Sensitives []string `pulumi:"sensitives"`
	// (Optional String List) The tags to which the rule applies, if any.
	Tags []GetSchemaMetadataTag `pulumi:"tags"`
}

// GetSchemaMetadataInput is an input type that accepts GetSchemaMetadataArgs and GetSchemaMetadataOutput values.
// You can construct a concrete instance of `GetSchemaMetadataInput` via:
//
//	GetSchemaMetadataArgs{...}
type GetSchemaMetadataInput interface {
	pulumi.Input

	ToGetSchemaMetadataOutput() GetSchemaMetadataOutput
	ToGetSchemaMetadataOutputWithContext(context.Context) GetSchemaMetadataOutput
}

type GetSchemaMetadataArgs struct {
	// (Optional Map) The custom properties to set:
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// (Optional List of Strings) A list of metadata properties to be encrypted.
	Sensitives pulumi.StringArrayInput `pulumi:"sensitives"`
	// (Optional String List) The tags to which the rule applies, if any.
	Tags GetSchemaMetadataTagArrayInput `pulumi:"tags"`
}

func (GetSchemaMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaMetadata)(nil)).Elem()
}

func (i GetSchemaMetadataArgs) ToGetSchemaMetadataOutput() GetSchemaMetadataOutput {
	return i.ToGetSchemaMetadataOutputWithContext(context.Background())
}

func (i GetSchemaMetadataArgs) ToGetSchemaMetadataOutputWithContext(ctx context.Context) GetSchemaMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaMetadataOutput)
}

func (i GetSchemaMetadataArgs) ToGetSchemaMetadataPtrOutput() GetSchemaMetadataPtrOutput {
	return i.ToGetSchemaMetadataPtrOutputWithContext(context.Background())
}

func (i GetSchemaMetadataArgs) ToGetSchemaMetadataPtrOutputWithContext(ctx context.Context) GetSchemaMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaMetadataOutput).ToGetSchemaMetadataPtrOutputWithContext(ctx)
}

// GetSchemaMetadataPtrInput is an input type that accepts GetSchemaMetadataArgs, GetSchemaMetadataPtr and GetSchemaMetadataPtrOutput values.
// You can construct a concrete instance of `GetSchemaMetadataPtrInput` via:
//
//	        GetSchemaMetadataArgs{...}
//
//	or:
//
//	        nil
type GetSchemaMetadataPtrInput interface {
	pulumi.Input

	ToGetSchemaMetadataPtrOutput() GetSchemaMetadataPtrOutput
	ToGetSchemaMetadataPtrOutputWithContext(context.Context) GetSchemaMetadataPtrOutput
}

type getSchemaMetadataPtrType GetSchemaMetadataArgs

func GetSchemaMetadataPtr(v *GetSchemaMetadataArgs) GetSchemaMetadataPtrInput {
	return (*getSchemaMetadataPtrType)(v)
}

func (*getSchemaMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaMetadata)(nil)).Elem()
}

func (i *getSchemaMetadataPtrType) ToGetSchemaMetadataPtrOutput() GetSchemaMetadataPtrOutput {
	return i.ToGetSchemaMetadataPtrOutputWithContext(context.Background())
}

func (i *getSchemaMetadataPtrType) ToGetSchemaMetadataPtrOutputWithContext(ctx context.Context) GetSchemaMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaMetadataPtrOutput)
}

type GetSchemaMetadataOutput struct{ *pulumi.OutputState }

func (GetSchemaMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaMetadata)(nil)).Elem()
}

func (o GetSchemaMetadataOutput) ToGetSchemaMetadataOutput() GetSchemaMetadataOutput {
	return o
}

func (o GetSchemaMetadataOutput) ToGetSchemaMetadataOutputWithContext(ctx context.Context) GetSchemaMetadataOutput {
	return o
}

func (o GetSchemaMetadataOutput) ToGetSchemaMetadataPtrOutput() GetSchemaMetadataPtrOutput {
	return o.ToGetSchemaMetadataPtrOutputWithContext(context.Background())
}

func (o GetSchemaMetadataOutput) ToGetSchemaMetadataPtrOutputWithContext(ctx context.Context) GetSchemaMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaMetadata) *GetSchemaMetadata {
		return &v
	}).(GetSchemaMetadataPtrOutput)
}

// (Optional Map) The custom properties to set:
func (o GetSchemaMetadataOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSchemaMetadata) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// (Optional List of Strings) A list of metadata properties to be encrypted.
func (o GetSchemaMetadataOutput) Sensitives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSchemaMetadata) []string { return v.Sensitives }).(pulumi.StringArrayOutput)
}

// (Optional String List) The tags to which the rule applies, if any.
func (o GetSchemaMetadataOutput) Tags() GetSchemaMetadataTagArrayOutput {
	return o.ApplyT(func(v GetSchemaMetadata) []GetSchemaMetadataTag { return v.Tags }).(GetSchemaMetadataTagArrayOutput)
}

type GetSchemaMetadataPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaMetadata)(nil)).Elem()
}

func (o GetSchemaMetadataPtrOutput) ToGetSchemaMetadataPtrOutput() GetSchemaMetadataPtrOutput {
	return o
}

func (o GetSchemaMetadataPtrOutput) ToGetSchemaMetadataPtrOutputWithContext(ctx context.Context) GetSchemaMetadataPtrOutput {
	return o
}

func (o GetSchemaMetadataPtrOutput) Elem() GetSchemaMetadataOutput {
	return o.ApplyT(func(v *GetSchemaMetadata) GetSchemaMetadata {
		if v != nil {
			return *v
		}
		var ret GetSchemaMetadata
		return ret
	}).(GetSchemaMetadataOutput)
}

// (Optional Map) The custom properties to set:
func (o GetSchemaMetadataPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GetSchemaMetadata) map[string]string {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(pulumi.StringMapOutput)
}

// (Optional List of Strings) A list of metadata properties to be encrypted.
func (o GetSchemaMetadataPtrOutput) Sensitives() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSchemaMetadata) []string {
		if v == nil {
			return nil
		}
		return v.Sensitives
	}).(pulumi.StringArrayOutput)
}

// (Optional String List) The tags to which the rule applies, if any.
func (o GetSchemaMetadataPtrOutput) Tags() GetSchemaMetadataTagArrayOutput {
	return o.ApplyT(func(v *GetSchemaMetadata) []GetSchemaMetadataTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(GetSchemaMetadataTagArrayOutput)
}

type GetSchemaMetadataTag struct {
	// (Required String) The setting name.
	Key string `pulumi:"key"`
	// (Required List of Strings) The list of tags.
	Values []string `pulumi:"values"`
}

// GetSchemaMetadataTagInput is an input type that accepts GetSchemaMetadataTagArgs and GetSchemaMetadataTagOutput values.
// You can construct a concrete instance of `GetSchemaMetadataTagInput` via:
//
//	GetSchemaMetadataTagArgs{...}
type GetSchemaMetadataTagInput interface {
	pulumi.Input

	ToGetSchemaMetadataTagOutput() GetSchemaMetadataTagOutput
	ToGetSchemaMetadataTagOutputWithContext(context.Context) GetSchemaMetadataTagOutput
}

type GetSchemaMetadataTagArgs struct {
	// (Required String) The setting name.
	Key pulumi.StringInput `pulumi:"key"`
	// (Required List of Strings) The list of tags.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSchemaMetadataTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaMetadataTag)(nil)).Elem()
}

func (i GetSchemaMetadataTagArgs) ToGetSchemaMetadataTagOutput() GetSchemaMetadataTagOutput {
	return i.ToGetSchemaMetadataTagOutputWithContext(context.Background())
}

func (i GetSchemaMetadataTagArgs) ToGetSchemaMetadataTagOutputWithContext(ctx context.Context) GetSchemaMetadataTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaMetadataTagOutput)
}

// GetSchemaMetadataTagArrayInput is an input type that accepts GetSchemaMetadataTagArray and GetSchemaMetadataTagArrayOutput values.
// You can construct a concrete instance of `GetSchemaMetadataTagArrayInput` via:
//
//	GetSchemaMetadataTagArray{ GetSchemaMetadataTagArgs{...} }
type GetSchemaMetadataTagArrayInput interface {
	pulumi.Input

	ToGetSchemaMetadataTagArrayOutput() GetSchemaMetadataTagArrayOutput
	ToGetSchemaMetadataTagArrayOutputWithContext(context.Context) GetSchemaMetadataTagArrayOutput
}

type GetSchemaMetadataTagArray []GetSchemaMetadataTagInput

func (GetSchemaMetadataTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaMetadataTag)(nil)).Elem()
}

func (i GetSchemaMetadataTagArray) ToGetSchemaMetadataTagArrayOutput() GetSchemaMetadataTagArrayOutput {
	return i.ToGetSchemaMetadataTagArrayOutputWithContext(context.Background())
}

func (i GetSchemaMetadataTagArray) ToGetSchemaMetadataTagArrayOutputWithContext(ctx context.Context) GetSchemaMetadataTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaMetadataTagArrayOutput)
}

type GetSchemaMetadataTagOutput struct{ *pulumi.OutputState }

func (GetSchemaMetadataTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaMetadataTag)(nil)).Elem()
}

func (o GetSchemaMetadataTagOutput) ToGetSchemaMetadataTagOutput() GetSchemaMetadataTagOutput {
	return o
}

func (o GetSchemaMetadataTagOutput) ToGetSchemaMetadataTagOutputWithContext(ctx context.Context) GetSchemaMetadataTagOutput {
	return o
}

// (Required String) The setting name.
func (o GetSchemaMetadataTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaMetadataTag) string { return v.Key }).(pulumi.StringOutput)
}

// (Required List of Strings) The list of tags.
func (o GetSchemaMetadataTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSchemaMetadataTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSchemaMetadataTagArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaMetadataTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaMetadataTag)(nil)).Elem()
}

func (o GetSchemaMetadataTagArrayOutput) ToGetSchemaMetadataTagArrayOutput() GetSchemaMetadataTagArrayOutput {
	return o
}

func (o GetSchemaMetadataTagArrayOutput) ToGetSchemaMetadataTagArrayOutputWithContext(ctx context.Context) GetSchemaMetadataTagArrayOutput {
	return o
}

func (o GetSchemaMetadataTagArrayOutput) Index(i pulumi.IntInput) GetSchemaMetadataTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaMetadataTag {
		return vs[0].([]GetSchemaMetadataTag)[vs[1].(int)]
	}).(GetSchemaMetadataTagOutput)
}

type GetSchemaRegistryClusterConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaRegistryClusterConfigCredentialsInput is an input type that accepts GetSchemaRegistryClusterConfigCredentialsArgs and GetSchemaRegistryClusterConfigCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigCredentialsInput` via:
//
//	GetSchemaRegistryClusterConfigCredentialsArgs{...}
type GetSchemaRegistryClusterConfigCredentialsInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigCredentialsOutput() GetSchemaRegistryClusterConfigCredentialsOutput
	ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Context) GetSchemaRegistryClusterConfigCredentialsOutput
}

type GetSchemaRegistryClusterConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaRegistryClusterConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsOutput() GetSchemaRegistryClusterConfigCredentialsOutput {
	return i.ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigCredentialsOutput)
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigCredentialsArgs) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigCredentialsOutput).ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterConfigCredentialsPtrInput is an input type that accepts GetSchemaRegistryClusterConfigCredentialsArgs, GetSchemaRegistryClusterConfigCredentialsPtr and GetSchemaRegistryClusterConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigCredentialsPtrInput` via:
//
//	        GetSchemaRegistryClusterConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterConfigCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput
	ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput
}

type getSchemaRegistryClusterConfigCredentialsPtrType GetSchemaRegistryClusterConfigCredentialsArgs

func GetSchemaRegistryClusterConfigCredentialsPtr(v *GetSchemaRegistryClusterConfigCredentialsArgs) GetSchemaRegistryClusterConfigCredentialsPtrInput {
	return (*getSchemaRegistryClusterConfigCredentialsPtrType)(v)
}

func (*getSchemaRegistryClusterConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (i *getSchemaRegistryClusterConfigCredentialsPtrType) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterConfigCredentialsPtrType) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigCredentialsPtrOutput)
}

type GetSchemaRegistryClusterConfigCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsOutput() GetSchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterConfigCredentialsOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterConfigCredentials) *GetSchemaRegistryClusterConfigCredentials {
		return &v
	}).(GetSchemaRegistryClusterConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryClusterConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutput() GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) ToGetSchemaRegistryClusterConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) Elem() GetSchemaRegistryClusterConfigCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigCredentials) GetSchemaRegistryClusterConfigCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterConfigCredentials
		return ret
	}).(GetSchemaRegistryClusterConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryClusterConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterConfigSchemaRegistryClusterInput is an input type that accepts GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs and GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigSchemaRegistryClusterInput` via:
//
//	GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
type GetSchemaRegistryClusterConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput
	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput
}

type GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return i.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput).ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs, GetSchemaRegistryClusterConfigSchemaRegistryClusterPtr and GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
	ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput
}

type getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs

func GetSchemaRegistryClusterConfigSchemaRegistryClusterPtr(v *GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput {
	return (*getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterConfigSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

type GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterConfigSchemaRegistryCluster) *GetSchemaRegistryClusterConfigSchemaRegistryCluster {
		return &v
	}).(GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Elem() GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigSchemaRegistryCluster) GetSchemaRegistryClusterConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterConfigSchemaRegistryCluster
		return ret
	}).(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterEnvironment struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterEnvironmentInput is an input type that accepts GetSchemaRegistryClusterEnvironmentArgs and GetSchemaRegistryClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterEnvironmentInput` via:
//
//	GetSchemaRegistryClusterEnvironmentArgs{...}
type GetSchemaRegistryClusterEnvironmentInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterEnvironmentOutput() GetSchemaRegistryClusterEnvironmentOutput
	ToGetSchemaRegistryClusterEnvironmentOutputWithContext(context.Context) GetSchemaRegistryClusterEnvironmentOutput
}

type GetSchemaRegistryClusterEnvironmentArgs struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (i GetSchemaRegistryClusterEnvironmentArgs) ToGetSchemaRegistryClusterEnvironmentOutput() GetSchemaRegistryClusterEnvironmentOutput {
	return i.ToGetSchemaRegistryClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterEnvironmentArgs) ToGetSchemaRegistryClusterEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterEnvironmentOutput)
}

type GetSchemaRegistryClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterEnvironment)(nil)).Elem()
}

func (o GetSchemaRegistryClusterEnvironmentOutput) ToGetSchemaRegistryClusterEnvironmentOutput() GetSchemaRegistryClusterEnvironmentOutput {
	return o
}

func (o GetSchemaRegistryClusterEnvironmentOutput) ToGetSchemaRegistryClusterEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
func (o GetSchemaRegistryClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	//
	// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
	Secret string `pulumi:"secret"`
}

// GetSchemaRegistryClusterModeCredentialsInput is an input type that accepts GetSchemaRegistryClusterModeCredentialsArgs and GetSchemaRegistryClusterModeCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeCredentialsInput` via:
//
//	GetSchemaRegistryClusterModeCredentialsArgs{...}
type GetSchemaRegistryClusterModeCredentialsInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeCredentialsOutput() GetSchemaRegistryClusterModeCredentialsOutput
	ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(context.Context) GetSchemaRegistryClusterModeCredentialsOutput
}

type GetSchemaRegistryClusterModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	//
	// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaRegistryClusterModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsOutput() GetSchemaRegistryClusterModeCredentialsOutput {
	return i.ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeCredentialsOutput)
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeCredentialsArgs) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeCredentialsOutput).ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterModeCredentialsPtrInput is an input type that accepts GetSchemaRegistryClusterModeCredentialsArgs, GetSchemaRegistryClusterModeCredentialsPtr and GetSchemaRegistryClusterModeCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeCredentialsPtrInput` via:
//
//	        GetSchemaRegistryClusterModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterModeCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput
	ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput
}

type getSchemaRegistryClusterModeCredentialsPtrType GetSchemaRegistryClusterModeCredentialsArgs

func GetSchemaRegistryClusterModeCredentialsPtr(v *GetSchemaRegistryClusterModeCredentialsArgs) GetSchemaRegistryClusterModeCredentialsPtrInput {
	return (*getSchemaRegistryClusterModeCredentialsPtrType)(v)
}

func (*getSchemaRegistryClusterModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (i *getSchemaRegistryClusterModeCredentialsPtrType) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return i.ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterModeCredentialsPtrType) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeCredentialsPtrOutput)
}

type GetSchemaRegistryClusterModeCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsOutput() GetSchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterModeCredentialsOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterModeCredentials) *GetSchemaRegistryClusterModeCredentials {
		return &v
	}).(GetSchemaRegistryClusterModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
//
// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
func (o GetSchemaRegistryClusterModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutput() GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) ToGetSchemaRegistryClusterModeCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) Elem() GetSchemaRegistryClusterModeCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeCredentials) GetSchemaRegistryClusterModeCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterModeCredentials
		return ret
	}).(GetSchemaRegistryClusterModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
//
// > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
func (o GetSchemaRegistryClusterModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClusterModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClusterModeSchemaRegistryClusterInput is an input type that accepts GetSchemaRegistryClusterModeSchemaRegistryClusterArgs and GetSchemaRegistryClusterModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeSchemaRegistryClusterInput` via:
//
//	GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
type GetSchemaRegistryClusterModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput
	ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterOutput
}

type GetSchemaRegistryClusterModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return i.ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput).ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaRegistryClusterModeSchemaRegistryClusterArgs, GetSchemaRegistryClusterModeSchemaRegistryClusterPtr and GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
	ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput
}

type getSchemaRegistryClusterModeSchemaRegistryClusterPtrType GetSchemaRegistryClusterModeSchemaRegistryClusterArgs

func GetSchemaRegistryClusterModeSchemaRegistryClusterPtr(v *GetSchemaRegistryClusterModeSchemaRegistryClusterArgs) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput {
	return (*getSchemaRegistryClusterModeSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaRegistryClusterModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaRegistryClusterModeSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClusterModeSchemaRegistryClusterPtrType) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

type GetSchemaRegistryClusterModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClusterModeSchemaRegistryCluster) *GetSchemaRegistryClusterModeSchemaRegistryCluster {
		return &v
	}).(GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClusterModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClusterModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput() GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Elem() GetSchemaRegistryClusterModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeSchemaRegistryCluster) GetSchemaRegistryClusterModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClusterModeSchemaRegistryCluster
		return ret
	}).(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClusterModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryClustersCluster struct {
	// (Required String) An API Version of the schema version of the Schema Registry cluster, for example, `stream-governance/v2`.
	ApiVersion string `pulumi:"apiVersion"`
	// (Required String) The cloud service provider that that the Schema Registry cluster belongs to, for example, `AWS`.
	Cloud string `pulumi:"cloud"`
	// (Required String) The name of the Schema Registry cluster, for example, `Stream Governance Package`.
	DisplayName string `pulumi:"displayName"`
	// (Required Object) exports the following attributes:
	Environment GetSchemaRegistryClustersClusterEnvironment `pulumi:"environment"`
	// (Required String) The id of the environment.
	Id string `pulumi:"id"`
	// (Required String) A kind of the Schema Registry cluster, for example, `Cluster`.
	Kind string `pulumi:"kind"`
	// (Required String) The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
	Package string `pulumi:"package"`
	// (Required String) The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `us-east4`.
	Region string `pulumi:"region"`
	// (Required String) The Confluent Resource Name of the Schema Registry cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
	ResourceName string `pulumi:"resourceName"`
	// (Required String) The HTTP endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
	RestEndpoint string `pulumi:"restEndpoint"`
}

// GetSchemaRegistryClustersClusterInput is an input type that accepts GetSchemaRegistryClustersClusterArgs and GetSchemaRegistryClustersClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClustersClusterInput` via:
//
//	GetSchemaRegistryClustersClusterArgs{...}
type GetSchemaRegistryClustersClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryClustersClusterOutput() GetSchemaRegistryClustersClusterOutput
	ToGetSchemaRegistryClustersClusterOutputWithContext(context.Context) GetSchemaRegistryClustersClusterOutput
}

type GetSchemaRegistryClustersClusterArgs struct {
	// (Required String) An API Version of the schema version of the Schema Registry cluster, for example, `stream-governance/v2`.
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// (Required String) The cloud service provider that that the Schema Registry cluster belongs to, for example, `AWS`.
	Cloud pulumi.StringInput `pulumi:"cloud"`
	// (Required String) The name of the Schema Registry cluster, for example, `Stream Governance Package`.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// (Required Object) exports the following attributes:
	Environment GetSchemaRegistryClustersClusterEnvironmentInput `pulumi:"environment"`
	// (Required String) The id of the environment.
	Id pulumi.StringInput `pulumi:"id"`
	// (Required String) A kind of the Schema Registry cluster, for example, `Cluster`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Required String) The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
	Package pulumi.StringInput `pulumi:"package"`
	// (Required String) The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `us-east4`.
	Region pulumi.StringInput `pulumi:"region"`
	// (Required String) The Confluent Resource Name of the Schema Registry cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// (Required String) The HTTP endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
	RestEndpoint pulumi.StringInput `pulumi:"restEndpoint"`
}

func (GetSchemaRegistryClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClustersCluster)(nil)).Elem()
}

func (i GetSchemaRegistryClustersClusterArgs) ToGetSchemaRegistryClustersClusterOutput() GetSchemaRegistryClustersClusterOutput {
	return i.ToGetSchemaRegistryClustersClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClustersClusterArgs) ToGetSchemaRegistryClustersClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClustersClusterOutput)
}

// GetSchemaRegistryClustersClusterArrayInput is an input type that accepts GetSchemaRegistryClustersClusterArray and GetSchemaRegistryClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClustersClusterArrayInput` via:
//
//	GetSchemaRegistryClustersClusterArray{ GetSchemaRegistryClustersClusterArgs{...} }
type GetSchemaRegistryClustersClusterArrayInput interface {
	pulumi.Input

	ToGetSchemaRegistryClustersClusterArrayOutput() GetSchemaRegistryClustersClusterArrayOutput
	ToGetSchemaRegistryClustersClusterArrayOutputWithContext(context.Context) GetSchemaRegistryClustersClusterArrayOutput
}

type GetSchemaRegistryClustersClusterArray []GetSchemaRegistryClustersClusterInput

func (GetSchemaRegistryClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRegistryClustersCluster)(nil)).Elem()
}

func (i GetSchemaRegistryClustersClusterArray) ToGetSchemaRegistryClustersClusterArrayOutput() GetSchemaRegistryClustersClusterArrayOutput {
	return i.ToGetSchemaRegistryClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClustersClusterArray) ToGetSchemaRegistryClustersClusterArrayOutputWithContext(ctx context.Context) GetSchemaRegistryClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClustersClusterArrayOutput)
}

type GetSchemaRegistryClustersClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClustersCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClustersClusterOutput) ToGetSchemaRegistryClustersClusterOutput() GetSchemaRegistryClustersClusterOutput {
	return o
}

func (o GetSchemaRegistryClustersClusterOutput) ToGetSchemaRegistryClustersClusterOutputWithContext(ctx context.Context) GetSchemaRegistryClustersClusterOutput {
	return o
}

// (Required String) An API Version of the schema version of the Schema Registry cluster, for example, `stream-governance/v2`.
func (o GetSchemaRegistryClustersClusterOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// (Required String) The cloud service provider that that the Schema Registry cluster belongs to, for example, `AWS`.
func (o GetSchemaRegistryClustersClusterOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.Cloud }).(pulumi.StringOutput)
}

// (Required String) The name of the Schema Registry cluster, for example, `Stream Governance Package`.
func (o GetSchemaRegistryClustersClusterOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Required Object) exports the following attributes:
func (o GetSchemaRegistryClustersClusterOutput) Environment() GetSchemaRegistryClustersClusterEnvironmentOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) GetSchemaRegistryClustersClusterEnvironment {
		return v.Environment
	}).(GetSchemaRegistryClustersClusterEnvironmentOutput)
}

// (Required String) The id of the environment.
func (o GetSchemaRegistryClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// (Required String) A kind of the Schema Registry cluster, for example, `Cluster`.
func (o GetSchemaRegistryClustersClusterOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.Kind }).(pulumi.StringOutput)
}

// (Required String) The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
func (o GetSchemaRegistryClustersClusterOutput) Package() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.Package }).(pulumi.StringOutput)
}

// (Required String) The ID of the Schema Registry region that the Schema Registry cluster belongs to, for example, `us-east4`.
func (o GetSchemaRegistryClustersClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.Region }).(pulumi.StringOutput)
}

// (Required String) The Confluent Resource Name of the Schema Registry cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
func (o GetSchemaRegistryClustersClusterOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.ResourceName }).(pulumi.StringOutput)
}

// (Required String) The HTTP endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
func (o GetSchemaRegistryClustersClusterOutput) RestEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersCluster) string { return v.RestEndpoint }).(pulumi.StringOutput)
}

type GetSchemaRegistryClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRegistryClustersCluster)(nil)).Elem()
}

func (o GetSchemaRegistryClustersClusterArrayOutput) ToGetSchemaRegistryClustersClusterArrayOutput() GetSchemaRegistryClustersClusterArrayOutput {
	return o
}

func (o GetSchemaRegistryClustersClusterArrayOutput) ToGetSchemaRegistryClustersClusterArrayOutputWithContext(ctx context.Context) GetSchemaRegistryClustersClusterArrayOutput {
	return o
}

func (o GetSchemaRegistryClustersClusterArrayOutput) Index(i pulumi.IntInput) GetSchemaRegistryClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaRegistryClustersCluster {
		return vs[0].([]GetSchemaRegistryClustersCluster)[vs[1].(int)]
	}).(GetSchemaRegistryClustersClusterOutput)
}

type GetSchemaRegistryClustersClusterEnvironment struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	// - If no environment id is specified, clusters from all environments will be displayed.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClustersClusterEnvironmentInput is an input type that accepts GetSchemaRegistryClustersClusterEnvironmentArgs and GetSchemaRegistryClustersClusterEnvironmentOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClustersClusterEnvironmentInput` via:
//
//	GetSchemaRegistryClustersClusterEnvironmentArgs{...}
type GetSchemaRegistryClustersClusterEnvironmentInput interface {
	pulumi.Input

	ToGetSchemaRegistryClustersClusterEnvironmentOutput() GetSchemaRegistryClustersClusterEnvironmentOutput
	ToGetSchemaRegistryClustersClusterEnvironmentOutputWithContext(context.Context) GetSchemaRegistryClustersClusterEnvironmentOutput
}

type GetSchemaRegistryClustersClusterEnvironmentArgs struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	// - If no environment id is specified, clusters from all environments will be displayed.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClustersClusterEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClustersClusterEnvironment)(nil)).Elem()
}

func (i GetSchemaRegistryClustersClusterEnvironmentArgs) ToGetSchemaRegistryClustersClusterEnvironmentOutput() GetSchemaRegistryClustersClusterEnvironmentOutput {
	return i.ToGetSchemaRegistryClustersClusterEnvironmentOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClustersClusterEnvironmentArgs) ToGetSchemaRegistryClustersClusterEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClustersClusterEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClustersClusterEnvironmentOutput)
}

type GetSchemaRegistryClustersClusterEnvironmentOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClustersClusterEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClustersClusterEnvironment)(nil)).Elem()
}

func (o GetSchemaRegistryClustersClusterEnvironmentOutput) ToGetSchemaRegistryClustersClusterEnvironmentOutput() GetSchemaRegistryClustersClusterEnvironmentOutput {
	return o
}

func (o GetSchemaRegistryClustersClusterEnvironmentOutput) ToGetSchemaRegistryClustersClusterEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClustersClusterEnvironmentOutput {
	return o
}

// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
// - If no environment id is specified, clusters from all environments will be displayed.
func (o GetSchemaRegistryClustersClusterEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersClusterEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClustersEnvironment struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	// - If no environment id is specified, clusters from all environments will be displayed.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryClustersEnvironmentInput is an input type that accepts GetSchemaRegistryClustersEnvironmentArgs and GetSchemaRegistryClustersEnvironmentOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClustersEnvironmentInput` via:
//
//	GetSchemaRegistryClustersEnvironmentArgs{...}
type GetSchemaRegistryClustersEnvironmentInput interface {
	pulumi.Input

	ToGetSchemaRegistryClustersEnvironmentOutput() GetSchemaRegistryClustersEnvironmentOutput
	ToGetSchemaRegistryClustersEnvironmentOutputWithContext(context.Context) GetSchemaRegistryClustersEnvironmentOutput
}

type GetSchemaRegistryClustersEnvironmentArgs struct {
	// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
	// - If no environment id is specified, clusters from all environments will be displayed.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryClustersEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClustersEnvironment)(nil)).Elem()
}

func (i GetSchemaRegistryClustersEnvironmentArgs) ToGetSchemaRegistryClustersEnvironmentOutput() GetSchemaRegistryClustersEnvironmentOutput {
	return i.ToGetSchemaRegistryClustersEnvironmentOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClustersEnvironmentArgs) ToGetSchemaRegistryClustersEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClustersEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClustersEnvironmentOutput)
}

func (i GetSchemaRegistryClustersEnvironmentArgs) ToGetSchemaRegistryClustersEnvironmentPtrOutput() GetSchemaRegistryClustersEnvironmentPtrOutput {
	return i.ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryClustersEnvironmentArgs) ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClustersEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClustersEnvironmentOutput).ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(ctx)
}

// GetSchemaRegistryClustersEnvironmentPtrInput is an input type that accepts GetSchemaRegistryClustersEnvironmentArgs, GetSchemaRegistryClustersEnvironmentPtr and GetSchemaRegistryClustersEnvironmentPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryClustersEnvironmentPtrInput` via:
//
//	        GetSchemaRegistryClustersEnvironmentArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryClustersEnvironmentPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryClustersEnvironmentPtrOutput() GetSchemaRegistryClustersEnvironmentPtrOutput
	ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(context.Context) GetSchemaRegistryClustersEnvironmentPtrOutput
}

type getSchemaRegistryClustersEnvironmentPtrType GetSchemaRegistryClustersEnvironmentArgs

func GetSchemaRegistryClustersEnvironmentPtr(v *GetSchemaRegistryClustersEnvironmentArgs) GetSchemaRegistryClustersEnvironmentPtrInput {
	return (*getSchemaRegistryClustersEnvironmentPtrType)(v)
}

func (*getSchemaRegistryClustersEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClustersEnvironment)(nil)).Elem()
}

func (i *getSchemaRegistryClustersEnvironmentPtrType) ToGetSchemaRegistryClustersEnvironmentPtrOutput() GetSchemaRegistryClustersEnvironmentPtrOutput {
	return i.ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryClustersEnvironmentPtrType) ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClustersEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryClustersEnvironmentPtrOutput)
}

type GetSchemaRegistryClustersEnvironmentOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClustersEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryClustersEnvironment)(nil)).Elem()
}

func (o GetSchemaRegistryClustersEnvironmentOutput) ToGetSchemaRegistryClustersEnvironmentOutput() GetSchemaRegistryClustersEnvironmentOutput {
	return o
}

func (o GetSchemaRegistryClustersEnvironmentOutput) ToGetSchemaRegistryClustersEnvironmentOutputWithContext(ctx context.Context) GetSchemaRegistryClustersEnvironmentOutput {
	return o
}

func (o GetSchemaRegistryClustersEnvironmentOutput) ToGetSchemaRegistryClustersEnvironmentPtrOutput() GetSchemaRegistryClustersEnvironmentPtrOutput {
	return o.ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryClustersEnvironmentOutput) ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClustersEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryClustersEnvironment) *GetSchemaRegistryClustersEnvironment {
		return &v
	}).(GetSchemaRegistryClustersEnvironmentPtrOutput)
}

// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
// - If no environment id is specified, clusters from all environments will be displayed.
func (o GetSchemaRegistryClustersEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryClustersEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryClustersEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryClustersEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryClustersEnvironment)(nil)).Elem()
}

func (o GetSchemaRegistryClustersEnvironmentPtrOutput) ToGetSchemaRegistryClustersEnvironmentPtrOutput() GetSchemaRegistryClustersEnvironmentPtrOutput {
	return o
}

func (o GetSchemaRegistryClustersEnvironmentPtrOutput) ToGetSchemaRegistryClustersEnvironmentPtrOutputWithContext(ctx context.Context) GetSchemaRegistryClustersEnvironmentPtrOutput {
	return o
}

func (o GetSchemaRegistryClustersEnvironmentPtrOutput) Elem() GetSchemaRegistryClustersEnvironmentOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClustersEnvironment) GetSchemaRegistryClustersEnvironment {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryClustersEnvironment
		return ret
	}).(GetSchemaRegistryClustersEnvironmentOutput)
}

// The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
// - If no environment id is specified, clusters from all environments will be displayed.
func (o GetSchemaRegistryClustersEnvironmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryClustersEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryDekCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaRegistryDekCredentialsInput is an input type that accepts GetSchemaRegistryDekCredentialsArgs and GetSchemaRegistryDekCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaRegistryDekCredentialsInput` via:
//
//	GetSchemaRegistryDekCredentialsArgs{...}
type GetSchemaRegistryDekCredentialsInput interface {
	pulumi.Input

	ToGetSchemaRegistryDekCredentialsOutput() GetSchemaRegistryDekCredentialsOutput
	ToGetSchemaRegistryDekCredentialsOutputWithContext(context.Context) GetSchemaRegistryDekCredentialsOutput
}

type GetSchemaRegistryDekCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaRegistryDekCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryDekCredentials)(nil)).Elem()
}

func (i GetSchemaRegistryDekCredentialsArgs) ToGetSchemaRegistryDekCredentialsOutput() GetSchemaRegistryDekCredentialsOutput {
	return i.ToGetSchemaRegistryDekCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaRegistryDekCredentialsArgs) ToGetSchemaRegistryDekCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryDekCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryDekCredentialsOutput)
}

func (i GetSchemaRegistryDekCredentialsArgs) ToGetSchemaRegistryDekCredentialsPtrOutput() GetSchemaRegistryDekCredentialsPtrOutput {
	return i.ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryDekCredentialsArgs) ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryDekCredentialsOutput).ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaRegistryDekCredentialsPtrInput is an input type that accepts GetSchemaRegistryDekCredentialsArgs, GetSchemaRegistryDekCredentialsPtr and GetSchemaRegistryDekCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryDekCredentialsPtrInput` via:
//
//	        GetSchemaRegistryDekCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryDekCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryDekCredentialsPtrOutput() GetSchemaRegistryDekCredentialsPtrOutput
	ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(context.Context) GetSchemaRegistryDekCredentialsPtrOutput
}

type getSchemaRegistryDekCredentialsPtrType GetSchemaRegistryDekCredentialsArgs

func GetSchemaRegistryDekCredentialsPtr(v *GetSchemaRegistryDekCredentialsArgs) GetSchemaRegistryDekCredentialsPtrInput {
	return (*getSchemaRegistryDekCredentialsPtrType)(v)
}

func (*getSchemaRegistryDekCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryDekCredentials)(nil)).Elem()
}

func (i *getSchemaRegistryDekCredentialsPtrType) ToGetSchemaRegistryDekCredentialsPtrOutput() GetSchemaRegistryDekCredentialsPtrOutput {
	return i.ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryDekCredentialsPtrType) ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryDekCredentialsPtrOutput)
}

type GetSchemaRegistryDekCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryDekCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryDekCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryDekCredentialsOutput) ToGetSchemaRegistryDekCredentialsOutput() GetSchemaRegistryDekCredentialsOutput {
	return o
}

func (o GetSchemaRegistryDekCredentialsOutput) ToGetSchemaRegistryDekCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryDekCredentialsOutput {
	return o
}

func (o GetSchemaRegistryDekCredentialsOutput) ToGetSchemaRegistryDekCredentialsPtrOutput() GetSchemaRegistryDekCredentialsPtrOutput {
	return o.ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryDekCredentialsOutput) ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryDekCredentials) *GetSchemaRegistryDekCredentials {
		return &v
	}).(GetSchemaRegistryDekCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryDekCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryDekCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryDekCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryDekCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaRegistryDekCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryDekCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryDekCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryDekCredentialsPtrOutput) ToGetSchemaRegistryDekCredentialsPtrOutput() GetSchemaRegistryDekCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryDekCredentialsPtrOutput) ToGetSchemaRegistryDekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryDekCredentialsPtrOutput) Elem() GetSchemaRegistryDekCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaRegistryDekCredentials) GetSchemaRegistryDekCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryDekCredentials
		return ret
	}).(GetSchemaRegistryDekCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryDekCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryDekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryDekCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryDekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryDekSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryDekSchemaRegistryClusterInput is an input type that accepts GetSchemaRegistryDekSchemaRegistryClusterArgs and GetSchemaRegistryDekSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryDekSchemaRegistryClusterInput` via:
//
//	GetSchemaRegistryDekSchemaRegistryClusterArgs{...}
type GetSchemaRegistryDekSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryDekSchemaRegistryClusterOutput() GetSchemaRegistryDekSchemaRegistryClusterOutput
	ToGetSchemaRegistryDekSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaRegistryDekSchemaRegistryClusterOutput
}

type GetSchemaRegistryDekSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryDekSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaRegistryDekSchemaRegistryClusterArgs) ToGetSchemaRegistryDekSchemaRegistryClusterOutput() GetSchemaRegistryDekSchemaRegistryClusterOutput {
	return i.ToGetSchemaRegistryDekSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryDekSchemaRegistryClusterArgs) ToGetSchemaRegistryDekSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryDekSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryDekSchemaRegistryClusterOutput)
}

func (i GetSchemaRegistryDekSchemaRegistryClusterArgs) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutput() GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryDekSchemaRegistryClusterArgs) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryDekSchemaRegistryClusterOutput).ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaRegistryDekSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaRegistryDekSchemaRegistryClusterArgs, GetSchemaRegistryDekSchemaRegistryClusterPtr and GetSchemaRegistryDekSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryDekSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaRegistryDekSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryDekSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutput() GetSchemaRegistryDekSchemaRegistryClusterPtrOutput
	ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaRegistryDekSchemaRegistryClusterPtrOutput
}

type getSchemaRegistryDekSchemaRegistryClusterPtrType GetSchemaRegistryDekSchemaRegistryClusterArgs

func GetSchemaRegistryDekSchemaRegistryClusterPtr(v *GetSchemaRegistryDekSchemaRegistryClusterArgs) GetSchemaRegistryDekSchemaRegistryClusterPtrInput {
	return (*getSchemaRegistryDekSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaRegistryDekSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaRegistryDekSchemaRegistryClusterPtrType) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutput() GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryDekSchemaRegistryClusterPtrType) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryDekSchemaRegistryClusterPtrOutput)
}

type GetSchemaRegistryDekSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryDekSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryDekSchemaRegistryClusterOutput) ToGetSchemaRegistryDekSchemaRegistryClusterOutput() GetSchemaRegistryDekSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryDekSchemaRegistryClusterOutput) ToGetSchemaRegistryDekSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryDekSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryDekSchemaRegistryClusterOutput) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutput() GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryDekSchemaRegistryClusterOutput) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryDekSchemaRegistryCluster) *GetSchemaRegistryDekSchemaRegistryCluster {
		return &v
	}).(GetSchemaRegistryDekSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryDekSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryDekSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryDekSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryDekSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryDekSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryDekSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutput() GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryDekSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryDekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryDekSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryDekSchemaRegistryClusterPtrOutput) Elem() GetSchemaRegistryDekSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaRegistryDekSchemaRegistryCluster) GetSchemaRegistryDekSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryDekSchemaRegistryCluster
		return ret
	}).(GetSchemaRegistryDekSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryDekSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryDekSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryKekCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemaRegistryKekCredentialsInput is an input type that accepts GetSchemaRegistryKekCredentialsArgs and GetSchemaRegistryKekCredentialsOutput values.
// You can construct a concrete instance of `GetSchemaRegistryKekCredentialsInput` via:
//
//	GetSchemaRegistryKekCredentialsArgs{...}
type GetSchemaRegistryKekCredentialsInput interface {
	pulumi.Input

	ToGetSchemaRegistryKekCredentialsOutput() GetSchemaRegistryKekCredentialsOutput
	ToGetSchemaRegistryKekCredentialsOutputWithContext(context.Context) GetSchemaRegistryKekCredentialsOutput
}

type GetSchemaRegistryKekCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemaRegistryKekCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryKekCredentials)(nil)).Elem()
}

func (i GetSchemaRegistryKekCredentialsArgs) ToGetSchemaRegistryKekCredentialsOutput() GetSchemaRegistryKekCredentialsOutput {
	return i.ToGetSchemaRegistryKekCredentialsOutputWithContext(context.Background())
}

func (i GetSchemaRegistryKekCredentialsArgs) ToGetSchemaRegistryKekCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryKekCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryKekCredentialsOutput)
}

func (i GetSchemaRegistryKekCredentialsArgs) ToGetSchemaRegistryKekCredentialsPtrOutput() GetSchemaRegistryKekCredentialsPtrOutput {
	return i.ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryKekCredentialsArgs) ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryKekCredentialsOutput).ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(ctx)
}

// GetSchemaRegistryKekCredentialsPtrInput is an input type that accepts GetSchemaRegistryKekCredentialsArgs, GetSchemaRegistryKekCredentialsPtr and GetSchemaRegistryKekCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryKekCredentialsPtrInput` via:
//
//	        GetSchemaRegistryKekCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryKekCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryKekCredentialsPtrOutput() GetSchemaRegistryKekCredentialsPtrOutput
	ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(context.Context) GetSchemaRegistryKekCredentialsPtrOutput
}

type getSchemaRegistryKekCredentialsPtrType GetSchemaRegistryKekCredentialsArgs

func GetSchemaRegistryKekCredentialsPtr(v *GetSchemaRegistryKekCredentialsArgs) GetSchemaRegistryKekCredentialsPtrInput {
	return (*getSchemaRegistryKekCredentialsPtrType)(v)
}

func (*getSchemaRegistryKekCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryKekCredentials)(nil)).Elem()
}

func (i *getSchemaRegistryKekCredentialsPtrType) ToGetSchemaRegistryKekCredentialsPtrOutput() GetSchemaRegistryKekCredentialsPtrOutput {
	return i.ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryKekCredentialsPtrType) ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryKekCredentialsPtrOutput)
}

type GetSchemaRegistryKekCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryKekCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryKekCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryKekCredentialsOutput) ToGetSchemaRegistryKekCredentialsOutput() GetSchemaRegistryKekCredentialsOutput {
	return o
}

func (o GetSchemaRegistryKekCredentialsOutput) ToGetSchemaRegistryKekCredentialsOutputWithContext(ctx context.Context) GetSchemaRegistryKekCredentialsOutput {
	return o
}

func (o GetSchemaRegistryKekCredentialsOutput) ToGetSchemaRegistryKekCredentialsPtrOutput() GetSchemaRegistryKekCredentialsPtrOutput {
	return o.ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryKekCredentialsOutput) ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryKekCredentials) *GetSchemaRegistryKekCredentials {
		return &v
	}).(GetSchemaRegistryKekCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryKekCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryKekCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryKekCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryKekCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemaRegistryKekCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryKekCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryKekCredentials)(nil)).Elem()
}

func (o GetSchemaRegistryKekCredentialsPtrOutput) ToGetSchemaRegistryKekCredentialsPtrOutput() GetSchemaRegistryKekCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryKekCredentialsPtrOutput) ToGetSchemaRegistryKekCredentialsPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekCredentialsPtrOutput {
	return o
}

func (o GetSchemaRegistryKekCredentialsPtrOutput) Elem() GetSchemaRegistryKekCredentialsOutput {
	return o.ApplyT(func(v *GetSchemaRegistryKekCredentials) GetSchemaRegistryKekCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryKekCredentials
		return ret
	}).(GetSchemaRegistryKekCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemaRegistryKekCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryKekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemaRegistryKekCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryKekCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRegistryKekSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaRegistryKekSchemaRegistryClusterInput is an input type that accepts GetSchemaRegistryKekSchemaRegistryClusterArgs and GetSchemaRegistryKekSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaRegistryKekSchemaRegistryClusterInput` via:
//
//	GetSchemaRegistryKekSchemaRegistryClusterArgs{...}
type GetSchemaRegistryKekSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaRegistryKekSchemaRegistryClusterOutput() GetSchemaRegistryKekSchemaRegistryClusterOutput
	ToGetSchemaRegistryKekSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaRegistryKekSchemaRegistryClusterOutput
}

type GetSchemaRegistryKekSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaRegistryKekSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaRegistryKekSchemaRegistryClusterArgs) ToGetSchemaRegistryKekSchemaRegistryClusterOutput() GetSchemaRegistryKekSchemaRegistryClusterOutput {
	return i.ToGetSchemaRegistryKekSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaRegistryKekSchemaRegistryClusterArgs) ToGetSchemaRegistryKekSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryKekSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryKekSchemaRegistryClusterOutput)
}

func (i GetSchemaRegistryKekSchemaRegistryClusterArgs) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutput() GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaRegistryKekSchemaRegistryClusterArgs) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryKekSchemaRegistryClusterOutput).ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaRegistryKekSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaRegistryKekSchemaRegistryClusterArgs, GetSchemaRegistryKekSchemaRegistryClusterPtr and GetSchemaRegistryKekSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaRegistryKekSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaRegistryKekSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRegistryKekSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutput() GetSchemaRegistryKekSchemaRegistryClusterPtrOutput
	ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaRegistryKekSchemaRegistryClusterPtrOutput
}

type getSchemaRegistryKekSchemaRegistryClusterPtrType GetSchemaRegistryKekSchemaRegistryClusterArgs

func GetSchemaRegistryKekSchemaRegistryClusterPtr(v *GetSchemaRegistryKekSchemaRegistryClusterArgs) GetSchemaRegistryKekSchemaRegistryClusterPtrInput {
	return (*getSchemaRegistryKekSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaRegistryKekSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaRegistryKekSchemaRegistryClusterPtrType) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutput() GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaRegistryKekSchemaRegistryClusterPtrType) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRegistryKekSchemaRegistryClusterPtrOutput)
}

type GetSchemaRegistryKekSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryKekSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryKekSchemaRegistryClusterOutput) ToGetSchemaRegistryKekSchemaRegistryClusterOutput() GetSchemaRegistryKekSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryKekSchemaRegistryClusterOutput) ToGetSchemaRegistryKekSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaRegistryKekSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaRegistryKekSchemaRegistryClusterOutput) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutput() GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaRegistryKekSchemaRegistryClusterOutput) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRegistryKekSchemaRegistryCluster) *GetSchemaRegistryKekSchemaRegistryCluster {
		return &v
	}).(GetSchemaRegistryKekSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryKekSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRegistryKekSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaRegistryKekSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRegistryKekSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRegistryKekSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaRegistryKekSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutput() GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryKekSchemaRegistryClusterPtrOutput) ToGetSchemaRegistryKekSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaRegistryKekSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaRegistryKekSchemaRegistryClusterPtrOutput) Elem() GetSchemaRegistryKekSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaRegistryKekSchemaRegistryCluster) GetSchemaRegistryKekSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaRegistryKekSchemaRegistryCluster
		return ret
	}).(GetSchemaRegistryKekSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaRegistryKekSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaRegistryKekSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemaRuleset struct {
	// (Optional List of Blocks) supports the following:
	DomainRules    []GetSchemaRulesetDomainRule    `pulumi:"domainRules"`
	MigrationRules []GetSchemaRulesetMigrationRule `pulumi:"migrationRules"`
}

// GetSchemaRulesetInput is an input type that accepts GetSchemaRulesetArgs and GetSchemaRulesetOutput values.
// You can construct a concrete instance of `GetSchemaRulesetInput` via:
//
//	GetSchemaRulesetArgs{...}
type GetSchemaRulesetInput interface {
	pulumi.Input

	ToGetSchemaRulesetOutput() GetSchemaRulesetOutput
	ToGetSchemaRulesetOutputWithContext(context.Context) GetSchemaRulesetOutput
}

type GetSchemaRulesetArgs struct {
	// (Optional List of Blocks) supports the following:
	DomainRules    GetSchemaRulesetDomainRuleArrayInput    `pulumi:"domainRules"`
	MigrationRules GetSchemaRulesetMigrationRuleArrayInput `pulumi:"migrationRules"`
}

func (GetSchemaRulesetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRuleset)(nil)).Elem()
}

func (i GetSchemaRulesetArgs) ToGetSchemaRulesetOutput() GetSchemaRulesetOutput {
	return i.ToGetSchemaRulesetOutputWithContext(context.Background())
}

func (i GetSchemaRulesetArgs) ToGetSchemaRulesetOutputWithContext(ctx context.Context) GetSchemaRulesetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetOutput)
}

func (i GetSchemaRulesetArgs) ToGetSchemaRulesetPtrOutput() GetSchemaRulesetPtrOutput {
	return i.ToGetSchemaRulesetPtrOutputWithContext(context.Background())
}

func (i GetSchemaRulesetArgs) ToGetSchemaRulesetPtrOutputWithContext(ctx context.Context) GetSchemaRulesetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetOutput).ToGetSchemaRulesetPtrOutputWithContext(ctx)
}

// GetSchemaRulesetPtrInput is an input type that accepts GetSchemaRulesetArgs, GetSchemaRulesetPtr and GetSchemaRulesetPtrOutput values.
// You can construct a concrete instance of `GetSchemaRulesetPtrInput` via:
//
//	        GetSchemaRulesetArgs{...}
//
//	or:
//
//	        nil
type GetSchemaRulesetPtrInput interface {
	pulumi.Input

	ToGetSchemaRulesetPtrOutput() GetSchemaRulesetPtrOutput
	ToGetSchemaRulesetPtrOutputWithContext(context.Context) GetSchemaRulesetPtrOutput
}

type getSchemaRulesetPtrType GetSchemaRulesetArgs

func GetSchemaRulesetPtr(v *GetSchemaRulesetArgs) GetSchemaRulesetPtrInput {
	return (*getSchemaRulesetPtrType)(v)
}

func (*getSchemaRulesetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRuleset)(nil)).Elem()
}

func (i *getSchemaRulesetPtrType) ToGetSchemaRulesetPtrOutput() GetSchemaRulesetPtrOutput {
	return i.ToGetSchemaRulesetPtrOutputWithContext(context.Background())
}

func (i *getSchemaRulesetPtrType) ToGetSchemaRulesetPtrOutputWithContext(ctx context.Context) GetSchemaRulesetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetPtrOutput)
}

type GetSchemaRulesetOutput struct{ *pulumi.OutputState }

func (GetSchemaRulesetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRuleset)(nil)).Elem()
}

func (o GetSchemaRulesetOutput) ToGetSchemaRulesetOutput() GetSchemaRulesetOutput {
	return o
}

func (o GetSchemaRulesetOutput) ToGetSchemaRulesetOutputWithContext(ctx context.Context) GetSchemaRulesetOutput {
	return o
}

func (o GetSchemaRulesetOutput) ToGetSchemaRulesetPtrOutput() GetSchemaRulesetPtrOutput {
	return o.ToGetSchemaRulesetPtrOutputWithContext(context.Background())
}

func (o GetSchemaRulesetOutput) ToGetSchemaRulesetPtrOutputWithContext(ctx context.Context) GetSchemaRulesetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaRuleset) *GetSchemaRuleset {
		return &v
	}).(GetSchemaRulesetPtrOutput)
}

// (Optional List of Blocks) supports the following:
func (o GetSchemaRulesetOutput) DomainRules() GetSchemaRulesetDomainRuleArrayOutput {
	return o.ApplyT(func(v GetSchemaRuleset) []GetSchemaRulesetDomainRule { return v.DomainRules }).(GetSchemaRulesetDomainRuleArrayOutput)
}

func (o GetSchemaRulesetOutput) MigrationRules() GetSchemaRulesetMigrationRuleArrayOutput {
	return o.ApplyT(func(v GetSchemaRuleset) []GetSchemaRulesetMigrationRule { return v.MigrationRules }).(GetSchemaRulesetMigrationRuleArrayOutput)
}

type GetSchemaRulesetPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaRulesetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaRuleset)(nil)).Elem()
}

func (o GetSchemaRulesetPtrOutput) ToGetSchemaRulesetPtrOutput() GetSchemaRulesetPtrOutput {
	return o
}

func (o GetSchemaRulesetPtrOutput) ToGetSchemaRulesetPtrOutputWithContext(ctx context.Context) GetSchemaRulesetPtrOutput {
	return o
}

func (o GetSchemaRulesetPtrOutput) Elem() GetSchemaRulesetOutput {
	return o.ApplyT(func(v *GetSchemaRuleset) GetSchemaRuleset {
		if v != nil {
			return *v
		}
		var ret GetSchemaRuleset
		return ret
	}).(GetSchemaRulesetOutput)
}

// (Optional List of Blocks) supports the following:
func (o GetSchemaRulesetPtrOutput) DomainRules() GetSchemaRulesetDomainRuleArrayOutput {
	return o.ApplyT(func(v *GetSchemaRuleset) []GetSchemaRulesetDomainRule {
		if v == nil {
			return nil
		}
		return v.DomainRules
	}).(GetSchemaRulesetDomainRuleArrayOutput)
}

func (o GetSchemaRulesetPtrOutput) MigrationRules() GetSchemaRulesetMigrationRuleArrayOutput {
	return o.ApplyT(func(v *GetSchemaRuleset) []GetSchemaRulesetMigrationRule {
		if v == nil {
			return nil
		}
		return v.MigrationRules
	}).(GetSchemaRulesetMigrationRuleArrayOutput)
}

type GetSchemaRulesetDomainRule struct {
	// (Optional String) An optional description.
	Doc string `pulumi:"doc"`
	// (Optional String) The body of the rule, which is optional.
	Expr string `pulumi:"expr"`
	// (Optional String) Either `CONDITION` or `TRANSFORM`.
	Kind string `pulumi:"kind"`
	// (Optional String) The mode of the rule.
	Mode string `pulumi:"mode"`
	// (Optional String) A user-defined name that can be used to reference the rule.
	Name string `pulumi:"name"`
	// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure string `pulumi:"onFailure"`
	// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
	OnSuccess string `pulumi:"onSuccess"`
	// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	Params map[string]string `pulumi:"params"`
	// (Optional String List) The tags to which the rule applies, if any.
	Tags []string `pulumi:"tags"`
	// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type string `pulumi:"type"`
}

// GetSchemaRulesetDomainRuleInput is an input type that accepts GetSchemaRulesetDomainRuleArgs and GetSchemaRulesetDomainRuleOutput values.
// You can construct a concrete instance of `GetSchemaRulesetDomainRuleInput` via:
//
//	GetSchemaRulesetDomainRuleArgs{...}
type GetSchemaRulesetDomainRuleInput interface {
	pulumi.Input

	ToGetSchemaRulesetDomainRuleOutput() GetSchemaRulesetDomainRuleOutput
	ToGetSchemaRulesetDomainRuleOutputWithContext(context.Context) GetSchemaRulesetDomainRuleOutput
}

type GetSchemaRulesetDomainRuleArgs struct {
	// (Optional String) An optional description.
	Doc pulumi.StringInput `pulumi:"doc"`
	// (Optional String) The body of the rule, which is optional.
	Expr pulumi.StringInput `pulumi:"expr"`
	// (Optional String) Either `CONDITION` or `TRANSFORM`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Optional String) The mode of the rule.
	Mode pulumi.StringInput `pulumi:"mode"`
	// (Optional String) A user-defined name that can be used to reference the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure pulumi.StringInput `pulumi:"onFailure"`
	// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
	OnSuccess pulumi.StringInput `pulumi:"onSuccess"`
	// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	Params pulumi.StringMapInput `pulumi:"params"`
	// (Optional String List) The tags to which the rule applies, if any.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSchemaRulesetDomainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRulesetDomainRule)(nil)).Elem()
}

func (i GetSchemaRulesetDomainRuleArgs) ToGetSchemaRulesetDomainRuleOutput() GetSchemaRulesetDomainRuleOutput {
	return i.ToGetSchemaRulesetDomainRuleOutputWithContext(context.Background())
}

func (i GetSchemaRulesetDomainRuleArgs) ToGetSchemaRulesetDomainRuleOutputWithContext(ctx context.Context) GetSchemaRulesetDomainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetDomainRuleOutput)
}

// GetSchemaRulesetDomainRuleArrayInput is an input type that accepts GetSchemaRulesetDomainRuleArray and GetSchemaRulesetDomainRuleArrayOutput values.
// You can construct a concrete instance of `GetSchemaRulesetDomainRuleArrayInput` via:
//
//	GetSchemaRulesetDomainRuleArray{ GetSchemaRulesetDomainRuleArgs{...} }
type GetSchemaRulesetDomainRuleArrayInput interface {
	pulumi.Input

	ToGetSchemaRulesetDomainRuleArrayOutput() GetSchemaRulesetDomainRuleArrayOutput
	ToGetSchemaRulesetDomainRuleArrayOutputWithContext(context.Context) GetSchemaRulesetDomainRuleArrayOutput
}

type GetSchemaRulesetDomainRuleArray []GetSchemaRulesetDomainRuleInput

func (GetSchemaRulesetDomainRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRulesetDomainRule)(nil)).Elem()
}

func (i GetSchemaRulesetDomainRuleArray) ToGetSchemaRulesetDomainRuleArrayOutput() GetSchemaRulesetDomainRuleArrayOutput {
	return i.ToGetSchemaRulesetDomainRuleArrayOutputWithContext(context.Background())
}

func (i GetSchemaRulesetDomainRuleArray) ToGetSchemaRulesetDomainRuleArrayOutputWithContext(ctx context.Context) GetSchemaRulesetDomainRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetDomainRuleArrayOutput)
}

type GetSchemaRulesetDomainRuleOutput struct{ *pulumi.OutputState }

func (GetSchemaRulesetDomainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRulesetDomainRule)(nil)).Elem()
}

func (o GetSchemaRulesetDomainRuleOutput) ToGetSchemaRulesetDomainRuleOutput() GetSchemaRulesetDomainRuleOutput {
	return o
}

func (o GetSchemaRulesetDomainRuleOutput) ToGetSchemaRulesetDomainRuleOutputWithContext(ctx context.Context) GetSchemaRulesetDomainRuleOutput {
	return o
}

// (Optional String) An optional description.
func (o GetSchemaRulesetDomainRuleOutput) Doc() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.Doc }).(pulumi.StringOutput)
}

// (Optional String) The body of the rule, which is optional.
func (o GetSchemaRulesetDomainRuleOutput) Expr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.Expr }).(pulumi.StringOutput)
}

// (Optional String) Either `CONDITION` or `TRANSFORM`.
func (o GetSchemaRulesetDomainRuleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.Kind }).(pulumi.StringOutput)
}

// (Optional String) The mode of the rule.
func (o GetSchemaRulesetDomainRuleOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.Mode }).(pulumi.StringOutput)
}

// (Optional String) A user-defined name that can be used to reference the rule.
func (o GetSchemaRulesetDomainRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
func (o GetSchemaRulesetDomainRuleOutput) OnFailure() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.OnFailure }).(pulumi.StringOutput)
}

// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
func (o GetSchemaRulesetDomainRuleOutput) OnSuccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.OnSuccess }).(pulumi.StringOutput)
}

// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
func (o GetSchemaRulesetDomainRuleOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) map[string]string { return v.Params }).(pulumi.StringMapOutput)
}

// (Optional String List) The tags to which the rule applies, if any.
func (o GetSchemaRulesetDomainRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
func (o GetSchemaRulesetDomainRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetDomainRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetSchemaRulesetDomainRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaRulesetDomainRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRulesetDomainRule)(nil)).Elem()
}

func (o GetSchemaRulesetDomainRuleArrayOutput) ToGetSchemaRulesetDomainRuleArrayOutput() GetSchemaRulesetDomainRuleArrayOutput {
	return o
}

func (o GetSchemaRulesetDomainRuleArrayOutput) ToGetSchemaRulesetDomainRuleArrayOutputWithContext(ctx context.Context) GetSchemaRulesetDomainRuleArrayOutput {
	return o
}

func (o GetSchemaRulesetDomainRuleArrayOutput) Index(i pulumi.IntInput) GetSchemaRulesetDomainRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaRulesetDomainRule {
		return vs[0].([]GetSchemaRulesetDomainRule)[vs[1].(int)]
	}).(GetSchemaRulesetDomainRuleOutput)
}

type GetSchemaRulesetMigrationRule struct {
	// (Optional String) An optional description.
	Doc string `pulumi:"doc"`
	// (Optional String) The body of the rule, which is optional.
	Expr string `pulumi:"expr"`
	// (Optional String) Either `CONDITION` or `TRANSFORM`.
	Kind string `pulumi:"kind"`
	// (Optional String) The mode of the rule.
	Mode string `pulumi:"mode"`
	// (Optional String) A user-defined name that can be used to reference the rule.
	Name string `pulumi:"name"`
	// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure string `pulumi:"onFailure"`
	// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
	OnSuccess string `pulumi:"onSuccess"`
	// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	Params map[string]string `pulumi:"params"`
	// (Optional String List) The tags to which the rule applies, if any.
	Tags []string `pulumi:"tags"`
	// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type string `pulumi:"type"`
}

// GetSchemaRulesetMigrationRuleInput is an input type that accepts GetSchemaRulesetMigrationRuleArgs and GetSchemaRulesetMigrationRuleOutput values.
// You can construct a concrete instance of `GetSchemaRulesetMigrationRuleInput` via:
//
//	GetSchemaRulesetMigrationRuleArgs{...}
type GetSchemaRulesetMigrationRuleInput interface {
	pulumi.Input

	ToGetSchemaRulesetMigrationRuleOutput() GetSchemaRulesetMigrationRuleOutput
	ToGetSchemaRulesetMigrationRuleOutputWithContext(context.Context) GetSchemaRulesetMigrationRuleOutput
}

type GetSchemaRulesetMigrationRuleArgs struct {
	// (Optional String) An optional description.
	Doc pulumi.StringInput `pulumi:"doc"`
	// (Optional String) The body of the rule, which is optional.
	Expr pulumi.StringInput `pulumi:"expr"`
	// (Optional String) Either `CONDITION` or `TRANSFORM`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// (Optional String) The mode of the rule.
	Mode pulumi.StringInput `pulumi:"mode"`
	// (Optional String) A user-defined name that can be used to reference the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
	OnFailure pulumi.StringInput `pulumi:"onFailure"`
	// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
	OnSuccess pulumi.StringInput `pulumi:"onSuccess"`
	// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
	Params pulumi.StringMapInput `pulumi:"params"`
	// (Optional String List) The tags to which the rule applies, if any.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSchemaRulesetMigrationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRulesetMigrationRule)(nil)).Elem()
}

func (i GetSchemaRulesetMigrationRuleArgs) ToGetSchemaRulesetMigrationRuleOutput() GetSchemaRulesetMigrationRuleOutput {
	return i.ToGetSchemaRulesetMigrationRuleOutputWithContext(context.Background())
}

func (i GetSchemaRulesetMigrationRuleArgs) ToGetSchemaRulesetMigrationRuleOutputWithContext(ctx context.Context) GetSchemaRulesetMigrationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetMigrationRuleOutput)
}

// GetSchemaRulesetMigrationRuleArrayInput is an input type that accepts GetSchemaRulesetMigrationRuleArray and GetSchemaRulesetMigrationRuleArrayOutput values.
// You can construct a concrete instance of `GetSchemaRulesetMigrationRuleArrayInput` via:
//
//	GetSchemaRulesetMigrationRuleArray{ GetSchemaRulesetMigrationRuleArgs{...} }
type GetSchemaRulesetMigrationRuleArrayInput interface {
	pulumi.Input

	ToGetSchemaRulesetMigrationRuleArrayOutput() GetSchemaRulesetMigrationRuleArrayOutput
	ToGetSchemaRulesetMigrationRuleArrayOutputWithContext(context.Context) GetSchemaRulesetMigrationRuleArrayOutput
}

type GetSchemaRulesetMigrationRuleArray []GetSchemaRulesetMigrationRuleInput

func (GetSchemaRulesetMigrationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRulesetMigrationRule)(nil)).Elem()
}

func (i GetSchemaRulesetMigrationRuleArray) ToGetSchemaRulesetMigrationRuleArrayOutput() GetSchemaRulesetMigrationRuleArrayOutput {
	return i.ToGetSchemaRulesetMigrationRuleArrayOutputWithContext(context.Background())
}

func (i GetSchemaRulesetMigrationRuleArray) ToGetSchemaRulesetMigrationRuleArrayOutputWithContext(ctx context.Context) GetSchemaRulesetMigrationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaRulesetMigrationRuleArrayOutput)
}

type GetSchemaRulesetMigrationRuleOutput struct{ *pulumi.OutputState }

func (GetSchemaRulesetMigrationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaRulesetMigrationRule)(nil)).Elem()
}

func (o GetSchemaRulesetMigrationRuleOutput) ToGetSchemaRulesetMigrationRuleOutput() GetSchemaRulesetMigrationRuleOutput {
	return o
}

func (o GetSchemaRulesetMigrationRuleOutput) ToGetSchemaRulesetMigrationRuleOutputWithContext(ctx context.Context) GetSchemaRulesetMigrationRuleOutput {
	return o
}

// (Optional String) An optional description.
func (o GetSchemaRulesetMigrationRuleOutput) Doc() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.Doc }).(pulumi.StringOutput)
}

// (Optional String) The body of the rule, which is optional.
func (o GetSchemaRulesetMigrationRuleOutput) Expr() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.Expr }).(pulumi.StringOutput)
}

// (Optional String) Either `CONDITION` or `TRANSFORM`.
func (o GetSchemaRulesetMigrationRuleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.Kind }).(pulumi.StringOutput)
}

// (Optional String) The mode of the rule.
func (o GetSchemaRulesetMigrationRuleOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.Mode }).(pulumi.StringOutput)
}

// (Optional String) A user-defined name that can be used to reference the rule.
func (o GetSchemaRulesetMigrationRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
func (o GetSchemaRulesetMigrationRuleOutput) OnFailure() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.OnFailure }).(pulumi.StringOutput)
}

// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
func (o GetSchemaRulesetMigrationRuleOutput) OnSuccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.OnSuccess }).(pulumi.StringOutput)
}

// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
func (o GetSchemaRulesetMigrationRuleOutput) Params() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) map[string]string { return v.Params }).(pulumi.StringMapOutput)
}

// (Optional String List) The tags to which the rule applies, if any.
func (o GetSchemaRulesetMigrationRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
func (o GetSchemaRulesetMigrationRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaRulesetMigrationRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetSchemaRulesetMigrationRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaRulesetMigrationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaRulesetMigrationRule)(nil)).Elem()
}

func (o GetSchemaRulesetMigrationRuleArrayOutput) ToGetSchemaRulesetMigrationRuleArrayOutput() GetSchemaRulesetMigrationRuleArrayOutput {
	return o
}

func (o GetSchemaRulesetMigrationRuleArrayOutput) ToGetSchemaRulesetMigrationRuleArrayOutputWithContext(ctx context.Context) GetSchemaRulesetMigrationRuleArrayOutput {
	return o
}

func (o GetSchemaRulesetMigrationRuleArrayOutput) Index(i pulumi.IntInput) GetSchemaRulesetMigrationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaRulesetMigrationRule {
		return vs[0].([]GetSchemaRulesetMigrationRule)[vs[1].(int)]
	}).(GetSchemaRulesetMigrationRuleOutput)
}

type GetSchemaSchemaReference struct {
	// (Optional String) A user-defined name that can be used to reference the rule.
	Name string `pulumi:"name"`
	// The name of the subject (in other words, the namespace), representing the subject under which the schema will be registered, for example, `test-subject`. Schemas evolve safely, following a compatibility mode defined, under a subject name.
	SubjectName string `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version int `pulumi:"version"`
}

// GetSchemaSchemaReferenceInput is an input type that accepts GetSchemaSchemaReferenceArgs and GetSchemaSchemaReferenceOutput values.
// You can construct a concrete instance of `GetSchemaSchemaReferenceInput` via:
//
//	GetSchemaSchemaReferenceArgs{...}
type GetSchemaSchemaReferenceInput interface {
	pulumi.Input

	ToGetSchemaSchemaReferenceOutput() GetSchemaSchemaReferenceOutput
	ToGetSchemaSchemaReferenceOutputWithContext(context.Context) GetSchemaSchemaReferenceOutput
}

type GetSchemaSchemaReferenceArgs struct {
	// (Optional String) A user-defined name that can be used to reference the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the subject (in other words, the namespace), representing the subject under which the schema will be registered, for example, `test-subject`. Schemas evolve safely, following a compatibility mode defined, under a subject name.
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSchemaSchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaReference)(nil)).Elem()
}

func (i GetSchemaSchemaReferenceArgs) ToGetSchemaSchemaReferenceOutput() GetSchemaSchemaReferenceOutput {
	return i.ToGetSchemaSchemaReferenceOutputWithContext(context.Background())
}

func (i GetSchemaSchemaReferenceArgs) ToGetSchemaSchemaReferenceOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaReferenceOutput)
}

// GetSchemaSchemaReferenceArrayInput is an input type that accepts GetSchemaSchemaReferenceArray and GetSchemaSchemaReferenceArrayOutput values.
// You can construct a concrete instance of `GetSchemaSchemaReferenceArrayInput` via:
//
//	GetSchemaSchemaReferenceArray{ GetSchemaSchemaReferenceArgs{...} }
type GetSchemaSchemaReferenceArrayInput interface {
	pulumi.Input

	ToGetSchemaSchemaReferenceArrayOutput() GetSchemaSchemaReferenceArrayOutput
	ToGetSchemaSchemaReferenceArrayOutputWithContext(context.Context) GetSchemaSchemaReferenceArrayOutput
}

type GetSchemaSchemaReferenceArray []GetSchemaSchemaReferenceInput

func (GetSchemaSchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaSchemaReference)(nil)).Elem()
}

func (i GetSchemaSchemaReferenceArray) ToGetSchemaSchemaReferenceArrayOutput() GetSchemaSchemaReferenceArrayOutput {
	return i.ToGetSchemaSchemaReferenceArrayOutputWithContext(context.Background())
}

func (i GetSchemaSchemaReferenceArray) ToGetSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaReferenceArrayOutput)
}

type GetSchemaSchemaReferenceOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaReference)(nil)).Elem()
}

func (o GetSchemaSchemaReferenceOutput) ToGetSchemaSchemaReferenceOutput() GetSchemaSchemaReferenceOutput {
	return o
}

func (o GetSchemaSchemaReferenceOutput) ToGetSchemaSchemaReferenceOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceOutput {
	return o
}

// (Optional String) A user-defined name that can be used to reference the rule.
func (o GetSchemaSchemaReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaSchemaReference) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the subject (in other words, the namespace), representing the subject under which the schema will be registered, for example, `test-subject`. Schemas evolve safely, following a compatibility mode defined, under a subject name.
func (o GetSchemaSchemaReferenceOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaSchemaReference) string { return v.SubjectName }).(pulumi.StringOutput)
}

// (Required Integer) The version of the Schema, for example, `4`.
func (o GetSchemaSchemaReferenceOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchemaSchemaReference) int { return v.Version }).(pulumi.IntOutput)
}

type GetSchemaSchemaReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemaSchemaReference)(nil)).Elem()
}

func (o GetSchemaSchemaReferenceArrayOutput) ToGetSchemaSchemaReferenceArrayOutput() GetSchemaSchemaReferenceArrayOutput {
	return o
}

func (o GetSchemaSchemaReferenceArrayOutput) ToGetSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) GetSchemaSchemaReferenceArrayOutput {
	return o
}

func (o GetSchemaSchemaReferenceArrayOutput) Index(i pulumi.IntInput) GetSchemaSchemaReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemaSchemaReference {
		return vs[0].([]GetSchemaSchemaReference)[vs[1].(int)]
	}).(GetSchemaSchemaReferenceOutput)
}

type GetSchemaSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemaSchemaRegistryClusterInput is an input type that accepts GetSchemaSchemaRegistryClusterArgs and GetSchemaSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemaSchemaRegistryClusterInput` via:
//
//	GetSchemaSchemaRegistryClusterArgs{...}
type GetSchemaSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemaSchemaRegistryClusterOutput() GetSchemaSchemaRegistryClusterOutput
	ToGetSchemaSchemaRegistryClusterOutputWithContext(context.Context) GetSchemaSchemaRegistryClusterOutput
}

type GetSchemaSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemaSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterOutput() GetSchemaSchemaRegistryClusterOutput {
	return i.ToGetSchemaSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaRegistryClusterOutput)
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemaSchemaRegistryClusterArgs) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaRegistryClusterOutput).ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemaSchemaRegistryClusterPtrInput is an input type that accepts GetSchemaSchemaRegistryClusterArgs, GetSchemaSchemaRegistryClusterPtr and GetSchemaSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemaSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemaSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemaSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput
	ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemaSchemaRegistryClusterPtrOutput
}

type getSchemaSchemaRegistryClusterPtrType GetSchemaSchemaRegistryClusterArgs

func GetSchemaSchemaRegistryClusterPtr(v *GetSchemaSchemaRegistryClusterArgs) GetSchemaSchemaRegistryClusterPtrInput {
	return (*getSchemaSchemaRegistryClusterPtrType)(v)
}

func (*getSchemaSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemaSchemaRegistryClusterPtrType) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemaSchemaRegistryClusterPtrType) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemaSchemaRegistryClusterPtrOutput)
}

type GetSchemaSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterOutput() GetSchemaSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemaSchemaRegistryClusterOutput) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemaSchemaRegistryCluster) *GetSchemaSchemaRegistryCluster {
		return &v
	}).(GetSchemaSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemaSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemaSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemaSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemaSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemaSchemaRegistryClusterPtrOutput) ToGetSchemaSchemaRegistryClusterPtrOutput() GetSchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterPtrOutput) ToGetSchemaSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemaSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemaSchemaRegistryClusterPtrOutput) Elem() GetSchemaSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemaSchemaRegistryCluster) GetSchemaSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemaSchemaRegistryCluster
		return ret
	}).(GetSchemaSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemaSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemaSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemasCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSchemasCredentialsInput is an input type that accepts GetSchemasCredentialsArgs and GetSchemasCredentialsOutput values.
// You can construct a concrete instance of `GetSchemasCredentialsInput` via:
//
//	GetSchemasCredentialsArgs{...}
type GetSchemasCredentialsInput interface {
	pulumi.Input

	ToGetSchemasCredentialsOutput() GetSchemasCredentialsOutput
	ToGetSchemasCredentialsOutputWithContext(context.Context) GetSchemasCredentialsOutput
}

type GetSchemasCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSchemasCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasCredentials)(nil)).Elem()
}

func (i GetSchemasCredentialsArgs) ToGetSchemasCredentialsOutput() GetSchemasCredentialsOutput {
	return i.ToGetSchemasCredentialsOutputWithContext(context.Background())
}

func (i GetSchemasCredentialsArgs) ToGetSchemasCredentialsOutputWithContext(ctx context.Context) GetSchemasCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasCredentialsOutput)
}

func (i GetSchemasCredentialsArgs) ToGetSchemasCredentialsPtrOutput() GetSchemasCredentialsPtrOutput {
	return i.ToGetSchemasCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSchemasCredentialsArgs) ToGetSchemasCredentialsPtrOutputWithContext(ctx context.Context) GetSchemasCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasCredentialsOutput).ToGetSchemasCredentialsPtrOutputWithContext(ctx)
}

// GetSchemasCredentialsPtrInput is an input type that accepts GetSchemasCredentialsArgs, GetSchemasCredentialsPtr and GetSchemasCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSchemasCredentialsPtrInput` via:
//
//	        GetSchemasCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSchemasCredentialsPtrInput interface {
	pulumi.Input

	ToGetSchemasCredentialsPtrOutput() GetSchemasCredentialsPtrOutput
	ToGetSchemasCredentialsPtrOutputWithContext(context.Context) GetSchemasCredentialsPtrOutput
}

type getSchemasCredentialsPtrType GetSchemasCredentialsArgs

func GetSchemasCredentialsPtr(v *GetSchemasCredentialsArgs) GetSchemasCredentialsPtrInput {
	return (*getSchemasCredentialsPtrType)(v)
}

func (*getSchemasCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemasCredentials)(nil)).Elem()
}

func (i *getSchemasCredentialsPtrType) ToGetSchemasCredentialsPtrOutput() GetSchemasCredentialsPtrOutput {
	return i.ToGetSchemasCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSchemasCredentialsPtrType) ToGetSchemasCredentialsPtrOutputWithContext(ctx context.Context) GetSchemasCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasCredentialsPtrOutput)
}

type GetSchemasCredentialsOutput struct{ *pulumi.OutputState }

func (GetSchemasCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasCredentials)(nil)).Elem()
}

func (o GetSchemasCredentialsOutput) ToGetSchemasCredentialsOutput() GetSchemasCredentialsOutput {
	return o
}

func (o GetSchemasCredentialsOutput) ToGetSchemasCredentialsOutputWithContext(ctx context.Context) GetSchemasCredentialsOutput {
	return o
}

func (o GetSchemasCredentialsOutput) ToGetSchemasCredentialsPtrOutput() GetSchemasCredentialsPtrOutput {
	return o.ToGetSchemasCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSchemasCredentialsOutput) ToGetSchemasCredentialsPtrOutputWithContext(ctx context.Context) GetSchemasCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemasCredentials) *GetSchemasCredentials {
		return &v
	}).(GetSchemasCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSchemasCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSchemasCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSchemasCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSchemasCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemasCredentials)(nil)).Elem()
}

func (o GetSchemasCredentialsPtrOutput) ToGetSchemasCredentialsPtrOutput() GetSchemasCredentialsPtrOutput {
	return o
}

func (o GetSchemasCredentialsPtrOutput) ToGetSchemasCredentialsPtrOutputWithContext(ctx context.Context) GetSchemasCredentialsPtrOutput {
	return o
}

func (o GetSchemasCredentialsPtrOutput) Elem() GetSchemasCredentialsOutput {
	return o.ApplyT(func(v *GetSchemasCredentials) GetSchemasCredentials {
		if v != nil {
			return *v
		}
		var ret GetSchemasCredentials
		return ret
	}).(GetSchemasCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSchemasCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemasCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSchemasCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemasCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSchemasFilter struct {
	// The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
	Deleted *bool `pulumi:"deleted"`
	// The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
	LatestOnly *bool `pulumi:"latestOnly"`
	// The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
	SubjectPrefix *string `pulumi:"subjectPrefix"`
}

// GetSchemasFilterInput is an input type that accepts GetSchemasFilterArgs and GetSchemasFilterOutput values.
// You can construct a concrete instance of `GetSchemasFilterInput` via:
//
//	GetSchemasFilterArgs{...}
type GetSchemasFilterInput interface {
	pulumi.Input

	ToGetSchemasFilterOutput() GetSchemasFilterOutput
	ToGetSchemasFilterOutputWithContext(context.Context) GetSchemasFilterOutput
}

type GetSchemasFilterArgs struct {
	// The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
	Deleted pulumi.BoolPtrInput `pulumi:"deleted"`
	// The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
	LatestOnly pulumi.BoolPtrInput `pulumi:"latestOnly"`
	// The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
	SubjectPrefix pulumi.StringPtrInput `pulumi:"subjectPrefix"`
}

func (GetSchemasFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasFilter)(nil)).Elem()
}

func (i GetSchemasFilterArgs) ToGetSchemasFilterOutput() GetSchemasFilterOutput {
	return i.ToGetSchemasFilterOutputWithContext(context.Background())
}

func (i GetSchemasFilterArgs) ToGetSchemasFilterOutputWithContext(ctx context.Context) GetSchemasFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasFilterOutput)
}

func (i GetSchemasFilterArgs) ToGetSchemasFilterPtrOutput() GetSchemasFilterPtrOutput {
	return i.ToGetSchemasFilterPtrOutputWithContext(context.Background())
}

func (i GetSchemasFilterArgs) ToGetSchemasFilterPtrOutputWithContext(ctx context.Context) GetSchemasFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasFilterOutput).ToGetSchemasFilterPtrOutputWithContext(ctx)
}

// GetSchemasFilterPtrInput is an input type that accepts GetSchemasFilterArgs, GetSchemasFilterPtr and GetSchemasFilterPtrOutput values.
// You can construct a concrete instance of `GetSchemasFilterPtrInput` via:
//
//	        GetSchemasFilterArgs{...}
//
//	or:
//
//	        nil
type GetSchemasFilterPtrInput interface {
	pulumi.Input

	ToGetSchemasFilterPtrOutput() GetSchemasFilterPtrOutput
	ToGetSchemasFilterPtrOutputWithContext(context.Context) GetSchemasFilterPtrOutput
}

type getSchemasFilterPtrType GetSchemasFilterArgs

func GetSchemasFilterPtr(v *GetSchemasFilterArgs) GetSchemasFilterPtrInput {
	return (*getSchemasFilterPtrType)(v)
}

func (*getSchemasFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemasFilter)(nil)).Elem()
}

func (i *getSchemasFilterPtrType) ToGetSchemasFilterPtrOutput() GetSchemasFilterPtrOutput {
	return i.ToGetSchemasFilterPtrOutputWithContext(context.Background())
}

func (i *getSchemasFilterPtrType) ToGetSchemasFilterPtrOutputWithContext(ctx context.Context) GetSchemasFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasFilterPtrOutput)
}

type GetSchemasFilterOutput struct{ *pulumi.OutputState }

func (GetSchemasFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasFilter)(nil)).Elem()
}

func (o GetSchemasFilterOutput) ToGetSchemasFilterOutput() GetSchemasFilterOutput {
	return o
}

func (o GetSchemasFilterOutput) ToGetSchemasFilterOutputWithContext(ctx context.Context) GetSchemasFilterOutput {
	return o
}

func (o GetSchemasFilterOutput) ToGetSchemasFilterPtrOutput() GetSchemasFilterPtrOutput {
	return o.ToGetSchemasFilterPtrOutputWithContext(context.Background())
}

func (o GetSchemasFilterOutput) ToGetSchemasFilterPtrOutputWithContext(ctx context.Context) GetSchemasFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemasFilter) *GetSchemasFilter {
		return &v
	}).(GetSchemasFilterPtrOutput)
}

// The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
func (o GetSchemasFilterOutput) Deleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSchemasFilter) *bool { return v.Deleted }).(pulumi.BoolPtrOutput)
}

// The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
func (o GetSchemasFilterOutput) LatestOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSchemasFilter) *bool { return v.LatestOnly }).(pulumi.BoolPtrOutput)
}

// The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
func (o GetSchemasFilterOutput) SubjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSchemasFilter) *string { return v.SubjectPrefix }).(pulumi.StringPtrOutput)
}

type GetSchemasFilterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemasFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemasFilter)(nil)).Elem()
}

func (o GetSchemasFilterPtrOutput) ToGetSchemasFilterPtrOutput() GetSchemasFilterPtrOutput {
	return o
}

func (o GetSchemasFilterPtrOutput) ToGetSchemasFilterPtrOutputWithContext(ctx context.Context) GetSchemasFilterPtrOutput {
	return o
}

func (o GetSchemasFilterPtrOutput) Elem() GetSchemasFilterOutput {
	return o.ApplyT(func(v *GetSchemasFilter) GetSchemasFilter {
		if v != nil {
			return *v
		}
		var ret GetSchemasFilter
		return ret
	}).(GetSchemasFilterOutput)
}

// The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
func (o GetSchemasFilterPtrOutput) Deleted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSchemasFilter) *bool {
		if v == nil {
			return nil
		}
		return v.Deleted
	}).(pulumi.BoolPtrOutput)
}

// The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
func (o GetSchemasFilterPtrOutput) LatestOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSchemasFilter) *bool {
		if v == nil {
			return nil
		}
		return v.LatestOnly
	}).(pulumi.BoolPtrOutput)
}

// The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
func (o GetSchemasFilterPtrOutput) SubjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemasFilter) *string {
		if v == nil {
			return nil
		}
		return v.SubjectPrefix
	}).(pulumi.StringPtrOutput)
}

type GetSchemasSchema struct {
	// (Required String) The format of the schema. Accepted values are: `AVRO`, `PROTOBUF`, and `JSON`.
	Format string `pulumi:"format"`
	// (Required String) The schema string.
	Schema string `pulumi:"schema"`
	// (Required String) The ID of the Schema, for example: `lsrc-abc123/test-subject/100003`.
	SchemaIdentifier int `pulumi:"schemaIdentifier"`
	// (Optional List) The list of referenced schemas (see [Schema References](https://docs.confluent.io/platform/current/schema-registry/serdes-develop/index.html#schema-references) for more details):
	SchemaReferences []GetSchemasSchemaSchemaReference `pulumi:"schemaReferences"`
	// (Required String) The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName string `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version int `pulumi:"version"`
}

// GetSchemasSchemaInput is an input type that accepts GetSchemasSchemaArgs and GetSchemasSchemaOutput values.
// You can construct a concrete instance of `GetSchemasSchemaInput` via:
//
//	GetSchemasSchemaArgs{...}
type GetSchemasSchemaInput interface {
	pulumi.Input

	ToGetSchemasSchemaOutput() GetSchemasSchemaOutput
	ToGetSchemasSchemaOutputWithContext(context.Context) GetSchemasSchemaOutput
}

type GetSchemasSchemaArgs struct {
	// (Required String) The format of the schema. Accepted values are: `AVRO`, `PROTOBUF`, and `JSON`.
	Format pulumi.StringInput `pulumi:"format"`
	// (Required String) The schema string.
	Schema pulumi.StringInput `pulumi:"schema"`
	// (Required String) The ID of the Schema, for example: `lsrc-abc123/test-subject/100003`.
	SchemaIdentifier pulumi.IntInput `pulumi:"schemaIdentifier"`
	// (Optional List) The list of referenced schemas (see [Schema References](https://docs.confluent.io/platform/current/schema-registry/serdes-develop/index.html#schema-references) for more details):
	SchemaReferences GetSchemasSchemaSchemaReferenceArrayInput `pulumi:"schemaReferences"`
	// (Required String) The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSchemasSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasSchema)(nil)).Elem()
}

func (i GetSchemasSchemaArgs) ToGetSchemasSchemaOutput() GetSchemasSchemaOutput {
	return i.ToGetSchemasSchemaOutputWithContext(context.Background())
}

func (i GetSchemasSchemaArgs) ToGetSchemasSchemaOutputWithContext(ctx context.Context) GetSchemasSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaOutput)
}

// GetSchemasSchemaArrayInput is an input type that accepts GetSchemasSchemaArray and GetSchemasSchemaArrayOutput values.
// You can construct a concrete instance of `GetSchemasSchemaArrayInput` via:
//
//	GetSchemasSchemaArray{ GetSchemasSchemaArgs{...} }
type GetSchemasSchemaArrayInput interface {
	pulumi.Input

	ToGetSchemasSchemaArrayOutput() GetSchemasSchemaArrayOutput
	ToGetSchemasSchemaArrayOutputWithContext(context.Context) GetSchemasSchemaArrayOutput
}

type GetSchemasSchemaArray []GetSchemasSchemaInput

func (GetSchemasSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemasSchema)(nil)).Elem()
}

func (i GetSchemasSchemaArray) ToGetSchemasSchemaArrayOutput() GetSchemasSchemaArrayOutput {
	return i.ToGetSchemasSchemaArrayOutputWithContext(context.Background())
}

func (i GetSchemasSchemaArray) ToGetSchemasSchemaArrayOutputWithContext(ctx context.Context) GetSchemasSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaArrayOutput)
}

type GetSchemasSchemaOutput struct{ *pulumi.OutputState }

func (GetSchemasSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasSchema)(nil)).Elem()
}

func (o GetSchemasSchemaOutput) ToGetSchemasSchemaOutput() GetSchemasSchemaOutput {
	return o
}

func (o GetSchemasSchemaOutput) ToGetSchemasSchemaOutputWithContext(ctx context.Context) GetSchemasSchemaOutput {
	return o
}

// (Required String) The format of the schema. Accepted values are: `AVRO`, `PROTOBUF`, and `JSON`.
func (o GetSchemasSchemaOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasSchema) string { return v.Format }).(pulumi.StringOutput)
}

// (Required String) The schema string.
func (o GetSchemasSchemaOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasSchema) string { return v.Schema }).(pulumi.StringOutput)
}

// (Required String) The ID of the Schema, for example: `lsrc-abc123/test-subject/100003`.
func (o GetSchemasSchemaOutput) SchemaIdentifier() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchemasSchema) int { return v.SchemaIdentifier }).(pulumi.IntOutput)
}

// (Optional List) The list of referenced schemas (see [Schema References](https://docs.confluent.io/platform/current/schema-registry/serdes-develop/index.html#schema-references) for more details):
func (o GetSchemasSchemaOutput) SchemaReferences() GetSchemasSchemaSchemaReferenceArrayOutput {
	return o.ApplyT(func(v GetSchemasSchema) []GetSchemasSchemaSchemaReference { return v.SchemaReferences }).(GetSchemasSchemaSchemaReferenceArrayOutput)
}

// (Required String) The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
func (o GetSchemasSchemaOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasSchema) string { return v.SubjectName }).(pulumi.StringOutput)
}

// (Required Integer) The version of the Schema, for example, `4`.
func (o GetSchemasSchemaOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchemasSchema) int { return v.Version }).(pulumi.IntOutput)
}

type GetSchemasSchemaArrayOutput struct{ *pulumi.OutputState }

func (GetSchemasSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemasSchema)(nil)).Elem()
}

func (o GetSchemasSchemaArrayOutput) ToGetSchemasSchemaArrayOutput() GetSchemasSchemaArrayOutput {
	return o
}

func (o GetSchemasSchemaArrayOutput) ToGetSchemasSchemaArrayOutputWithContext(ctx context.Context) GetSchemasSchemaArrayOutput {
	return o
}

func (o GetSchemasSchemaArrayOutput) Index(i pulumi.IntInput) GetSchemasSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemasSchema {
		return vs[0].([]GetSchemasSchema)[vs[1].(int)]
	}).(GetSchemasSchemaOutput)
}

type GetSchemasSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSchemasSchemaRegistryClusterInput is an input type that accepts GetSchemasSchemaRegistryClusterArgs and GetSchemasSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSchemasSchemaRegistryClusterInput` via:
//
//	GetSchemasSchemaRegistryClusterArgs{...}
type GetSchemasSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSchemasSchemaRegistryClusterOutput() GetSchemasSchemaRegistryClusterOutput
	ToGetSchemasSchemaRegistryClusterOutputWithContext(context.Context) GetSchemasSchemaRegistryClusterOutput
}

type GetSchemasSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSchemasSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSchemasSchemaRegistryClusterArgs) ToGetSchemasSchemaRegistryClusterOutput() GetSchemasSchemaRegistryClusterOutput {
	return i.ToGetSchemasSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSchemasSchemaRegistryClusterArgs) ToGetSchemasSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemasSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaRegistryClusterOutput)
}

func (i GetSchemasSchemaRegistryClusterArgs) ToGetSchemasSchemaRegistryClusterPtrOutput() GetSchemasSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSchemasSchemaRegistryClusterArgs) ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemasSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaRegistryClusterOutput).ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSchemasSchemaRegistryClusterPtrInput is an input type that accepts GetSchemasSchemaRegistryClusterArgs, GetSchemasSchemaRegistryClusterPtr and GetSchemasSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSchemasSchemaRegistryClusterPtrInput` via:
//
//	        GetSchemasSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSchemasSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSchemasSchemaRegistryClusterPtrOutput() GetSchemasSchemaRegistryClusterPtrOutput
	ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSchemasSchemaRegistryClusterPtrOutput
}

type getSchemasSchemaRegistryClusterPtrType GetSchemasSchemaRegistryClusterArgs

func GetSchemasSchemaRegistryClusterPtr(v *GetSchemasSchemaRegistryClusterArgs) GetSchemasSchemaRegistryClusterPtrInput {
	return (*getSchemasSchemaRegistryClusterPtrType)(v)
}

func (*getSchemasSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemasSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSchemasSchemaRegistryClusterPtrType) ToGetSchemasSchemaRegistryClusterPtrOutput() GetSchemasSchemaRegistryClusterPtrOutput {
	return i.ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSchemasSchemaRegistryClusterPtrType) ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemasSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaRegistryClusterPtrOutput)
}

type GetSchemasSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSchemasSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemasSchemaRegistryClusterOutput) ToGetSchemasSchemaRegistryClusterOutput() GetSchemasSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemasSchemaRegistryClusterOutput) ToGetSchemasSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSchemasSchemaRegistryClusterOutput {
	return o
}

func (o GetSchemasSchemaRegistryClusterOutput) ToGetSchemasSchemaRegistryClusterPtrOutput() GetSchemasSchemaRegistryClusterPtrOutput {
	return o.ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSchemasSchemaRegistryClusterOutput) ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemasSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSchemasSchemaRegistryCluster) *GetSchemasSchemaRegistryCluster {
		return &v
	}).(GetSchemasSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemasSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSchemasSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSchemasSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSchemasSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSchemasSchemaRegistryClusterPtrOutput) ToGetSchemasSchemaRegistryClusterPtrOutput() GetSchemasSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemasSchemaRegistryClusterPtrOutput) ToGetSchemasSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSchemasSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSchemasSchemaRegistryClusterPtrOutput) Elem() GetSchemasSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSchemasSchemaRegistryCluster) GetSchemasSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSchemasSchemaRegistryCluster
		return ret
	}).(GetSchemasSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSchemasSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSchemasSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSchemasSchemaSchemaReference struct {
	// (Required String) The name of the subject, representing the subject under which the referenced schema is registered.
	Name string `pulumi:"name"`
	// (Required String) The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName string `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version int `pulumi:"version"`
}

// GetSchemasSchemaSchemaReferenceInput is an input type that accepts GetSchemasSchemaSchemaReferenceArgs and GetSchemasSchemaSchemaReferenceOutput values.
// You can construct a concrete instance of `GetSchemasSchemaSchemaReferenceInput` via:
//
//	GetSchemasSchemaSchemaReferenceArgs{...}
type GetSchemasSchemaSchemaReferenceInput interface {
	pulumi.Input

	ToGetSchemasSchemaSchemaReferenceOutput() GetSchemasSchemaSchemaReferenceOutput
	ToGetSchemasSchemaSchemaReferenceOutputWithContext(context.Context) GetSchemasSchemaSchemaReferenceOutput
}

type GetSchemasSchemaSchemaReferenceArgs struct {
	// (Required String) The name of the subject, representing the subject under which the referenced schema is registered.
	Name pulumi.StringInput `pulumi:"name"`
	// (Required String) The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
	SubjectName pulumi.StringInput `pulumi:"subjectName"`
	// (Required Integer) The version of the Schema, for example, `4`.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSchemasSchemaSchemaReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasSchemaSchemaReference)(nil)).Elem()
}

func (i GetSchemasSchemaSchemaReferenceArgs) ToGetSchemasSchemaSchemaReferenceOutput() GetSchemasSchemaSchemaReferenceOutput {
	return i.ToGetSchemasSchemaSchemaReferenceOutputWithContext(context.Background())
}

func (i GetSchemasSchemaSchemaReferenceArgs) ToGetSchemasSchemaSchemaReferenceOutputWithContext(ctx context.Context) GetSchemasSchemaSchemaReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaSchemaReferenceOutput)
}

// GetSchemasSchemaSchemaReferenceArrayInput is an input type that accepts GetSchemasSchemaSchemaReferenceArray and GetSchemasSchemaSchemaReferenceArrayOutput values.
// You can construct a concrete instance of `GetSchemasSchemaSchemaReferenceArrayInput` via:
//
//	GetSchemasSchemaSchemaReferenceArray{ GetSchemasSchemaSchemaReferenceArgs{...} }
type GetSchemasSchemaSchemaReferenceArrayInput interface {
	pulumi.Input

	ToGetSchemasSchemaSchemaReferenceArrayOutput() GetSchemasSchemaSchemaReferenceArrayOutput
	ToGetSchemasSchemaSchemaReferenceArrayOutputWithContext(context.Context) GetSchemasSchemaSchemaReferenceArrayOutput
}

type GetSchemasSchemaSchemaReferenceArray []GetSchemasSchemaSchemaReferenceInput

func (GetSchemasSchemaSchemaReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemasSchemaSchemaReference)(nil)).Elem()
}

func (i GetSchemasSchemaSchemaReferenceArray) ToGetSchemasSchemaSchemaReferenceArrayOutput() GetSchemasSchemaSchemaReferenceArrayOutput {
	return i.ToGetSchemasSchemaSchemaReferenceArrayOutputWithContext(context.Background())
}

func (i GetSchemasSchemaSchemaReferenceArray) ToGetSchemasSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) GetSchemasSchemaSchemaReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSchemasSchemaSchemaReferenceArrayOutput)
}

type GetSchemasSchemaSchemaReferenceOutput struct{ *pulumi.OutputState }

func (GetSchemasSchemaSchemaReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSchemasSchemaSchemaReference)(nil)).Elem()
}

func (o GetSchemasSchemaSchemaReferenceOutput) ToGetSchemasSchemaSchemaReferenceOutput() GetSchemasSchemaSchemaReferenceOutput {
	return o
}

func (o GetSchemasSchemaSchemaReferenceOutput) ToGetSchemasSchemaSchemaReferenceOutputWithContext(ctx context.Context) GetSchemasSchemaSchemaReferenceOutput {
	return o
}

// (Required String) The name of the subject, representing the subject under which the referenced schema is registered.
func (o GetSchemasSchemaSchemaReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasSchemaSchemaReference) string { return v.Name }).(pulumi.StringOutput)
}

// (Required String) The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
func (o GetSchemasSchemaSchemaReferenceOutput) SubjectName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSchemasSchemaSchemaReference) string { return v.SubjectName }).(pulumi.StringOutput)
}

// (Required Integer) The version of the Schema, for example, `4`.
func (o GetSchemasSchemaSchemaReferenceOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSchemasSchemaSchemaReference) int { return v.Version }).(pulumi.IntOutput)
}

type GetSchemasSchemaSchemaReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetSchemasSchemaSchemaReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSchemasSchemaSchemaReference)(nil)).Elem()
}

func (o GetSchemasSchemaSchemaReferenceArrayOutput) ToGetSchemasSchemaSchemaReferenceArrayOutput() GetSchemasSchemaSchemaReferenceArrayOutput {
	return o
}

func (o GetSchemasSchemaSchemaReferenceArrayOutput) ToGetSchemasSchemaSchemaReferenceArrayOutputWithContext(ctx context.Context) GetSchemasSchemaSchemaReferenceArrayOutput {
	return o
}

func (o GetSchemasSchemaSchemaReferenceArrayOutput) Index(i pulumi.IntInput) GetSchemasSchemaSchemaReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSchemasSchemaSchemaReference {
		return vs[0].([]GetSchemasSchemaSchemaReference)[vs[1].(int)]
	}).(GetSchemasSchemaSchemaReferenceOutput)
}

type GetSubjectConfigCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSubjectConfigCredentialsInput is an input type that accepts GetSubjectConfigCredentialsArgs and GetSubjectConfigCredentialsOutput values.
// You can construct a concrete instance of `GetSubjectConfigCredentialsInput` via:
//
//	GetSubjectConfigCredentialsArgs{...}
type GetSubjectConfigCredentialsInput interface {
	pulumi.Input

	ToGetSubjectConfigCredentialsOutput() GetSubjectConfigCredentialsOutput
	ToGetSubjectConfigCredentialsOutputWithContext(context.Context) GetSubjectConfigCredentialsOutput
}

type GetSubjectConfigCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSubjectConfigCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigCredentials)(nil)).Elem()
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsOutput() GetSubjectConfigCredentialsOutput {
	return i.ToGetSubjectConfigCredentialsOutputWithContext(context.Background())
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigCredentialsOutput)
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return i.ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSubjectConfigCredentialsArgs) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigCredentialsOutput).ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx)
}

// GetSubjectConfigCredentialsPtrInput is an input type that accepts GetSubjectConfigCredentialsArgs, GetSubjectConfigCredentialsPtr and GetSubjectConfigCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSubjectConfigCredentialsPtrInput` via:
//
//	        GetSubjectConfigCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSubjectConfigCredentialsPtrInput interface {
	pulumi.Input

	ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput
	ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Context) GetSubjectConfigCredentialsPtrOutput
}

type getSubjectConfigCredentialsPtrType GetSubjectConfigCredentialsArgs

func GetSubjectConfigCredentialsPtr(v *GetSubjectConfigCredentialsArgs) GetSubjectConfigCredentialsPtrInput {
	return (*getSubjectConfigCredentialsPtrType)(v)
}

func (*getSubjectConfigCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigCredentials)(nil)).Elem()
}

func (i *getSubjectConfigCredentialsPtrType) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return i.ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSubjectConfigCredentialsPtrType) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigCredentialsPtrOutput)
}

type GetSubjectConfigCredentialsOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigCredentials)(nil)).Elem()
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsOutput() GetSubjectConfigCredentialsOutput {
	return o
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsOutput {
	return o
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return o.ToGetSubjectConfigCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSubjectConfigCredentialsOutput) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectConfigCredentials) *GetSubjectConfigCredentials {
		return &v
	}).(GetSubjectConfigCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSubjectConfigCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectConfigCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectConfigCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectConfigCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSubjectConfigCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigCredentials)(nil)).Elem()
}

func (o GetSubjectConfigCredentialsPtrOutput) ToGetSubjectConfigCredentialsPtrOutput() GetSubjectConfigCredentialsPtrOutput {
	return o
}

func (o GetSubjectConfigCredentialsPtrOutput) ToGetSubjectConfigCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectConfigCredentialsPtrOutput {
	return o
}

func (o GetSubjectConfigCredentialsPtrOutput) Elem() GetSubjectConfigCredentialsOutput {
	return o.ApplyT(func(v *GetSubjectConfigCredentials) GetSubjectConfigCredentials {
		if v != nil {
			return *v
		}
		var ret GetSubjectConfigCredentials
		return ret
	}).(GetSubjectConfigCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSubjectConfigCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectConfigCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectConfigCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSubjectConfigSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSubjectConfigSchemaRegistryClusterInput is an input type that accepts GetSubjectConfigSchemaRegistryClusterArgs and GetSubjectConfigSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSubjectConfigSchemaRegistryClusterInput` via:
//
//	GetSubjectConfigSchemaRegistryClusterArgs{...}
type GetSubjectConfigSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSubjectConfigSchemaRegistryClusterOutput() GetSubjectConfigSchemaRegistryClusterOutput
	ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(context.Context) GetSubjectConfigSchemaRegistryClusterOutput
}

type GetSubjectConfigSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSubjectConfigSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterOutput() GetSubjectConfigSchemaRegistryClusterOutput {
	return i.ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigSchemaRegistryClusterOutput)
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSubjectConfigSchemaRegistryClusterArgs) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigSchemaRegistryClusterOutput).ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSubjectConfigSchemaRegistryClusterPtrInput is an input type that accepts GetSubjectConfigSchemaRegistryClusterArgs, GetSubjectConfigSchemaRegistryClusterPtr and GetSubjectConfigSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSubjectConfigSchemaRegistryClusterPtrInput` via:
//
//	        GetSubjectConfigSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSubjectConfigSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput
	ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput
}

type getSubjectConfigSchemaRegistryClusterPtrType GetSubjectConfigSchemaRegistryClusterArgs

func GetSubjectConfigSchemaRegistryClusterPtr(v *GetSubjectConfigSchemaRegistryClusterArgs) GetSubjectConfigSchemaRegistryClusterPtrInput {
	return (*getSubjectConfigSchemaRegistryClusterPtrType)(v)
}

func (*getSubjectConfigSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSubjectConfigSchemaRegistryClusterPtrType) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSubjectConfigSchemaRegistryClusterPtrType) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectConfigSchemaRegistryClusterPtrOutput)
}

type GetSubjectConfigSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterOutput() GetSubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSubjectConfigSchemaRegistryClusterOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectConfigSchemaRegistryCluster) *GetSubjectConfigSchemaRegistryCluster {
		return &v
	}).(GetSubjectConfigSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectConfigSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectConfigSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSubjectConfigSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectConfigSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectConfigSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutput() GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) ToGetSubjectConfigSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectConfigSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) Elem() GetSubjectConfigSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSubjectConfigSchemaRegistryCluster) GetSubjectConfigSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSubjectConfigSchemaRegistryCluster
		return ret
	}).(GetSubjectConfigSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectConfigSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectConfigSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetSubjectModeCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetSubjectModeCredentialsInput is an input type that accepts GetSubjectModeCredentialsArgs and GetSubjectModeCredentialsOutput values.
// You can construct a concrete instance of `GetSubjectModeCredentialsInput` via:
//
//	GetSubjectModeCredentialsArgs{...}
type GetSubjectModeCredentialsInput interface {
	pulumi.Input

	ToGetSubjectModeCredentialsOutput() GetSubjectModeCredentialsOutput
	ToGetSubjectModeCredentialsOutputWithContext(context.Context) GetSubjectModeCredentialsOutput
}

type GetSubjectModeCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetSubjectModeCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeCredentials)(nil)).Elem()
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsOutput() GetSubjectModeCredentialsOutput {
	return i.ToGetSubjectModeCredentialsOutputWithContext(context.Background())
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsOutputWithContext(ctx context.Context) GetSubjectModeCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeCredentialsOutput)
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return i.ToGetSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i GetSubjectModeCredentialsArgs) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeCredentialsOutput).ToGetSubjectModeCredentialsPtrOutputWithContext(ctx)
}

// GetSubjectModeCredentialsPtrInput is an input type that accepts GetSubjectModeCredentialsArgs, GetSubjectModeCredentialsPtr and GetSubjectModeCredentialsPtrOutput values.
// You can construct a concrete instance of `GetSubjectModeCredentialsPtrInput` via:
//
//	        GetSubjectModeCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetSubjectModeCredentialsPtrInput interface {
	pulumi.Input

	ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput
	ToGetSubjectModeCredentialsPtrOutputWithContext(context.Context) GetSubjectModeCredentialsPtrOutput
}

type getSubjectModeCredentialsPtrType GetSubjectModeCredentialsArgs

func GetSubjectModeCredentialsPtr(v *GetSubjectModeCredentialsArgs) GetSubjectModeCredentialsPtrInput {
	return (*getSubjectModeCredentialsPtrType)(v)
}

func (*getSubjectModeCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeCredentials)(nil)).Elem()
}

func (i *getSubjectModeCredentialsPtrType) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return i.ToGetSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (i *getSubjectModeCredentialsPtrType) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeCredentialsPtrOutput)
}

type GetSubjectModeCredentialsOutput struct{ *pulumi.OutputState }

func (GetSubjectModeCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeCredentials)(nil)).Elem()
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsOutput() GetSubjectModeCredentialsOutput {
	return o
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsOutputWithContext(ctx context.Context) GetSubjectModeCredentialsOutput {
	return o
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return o.ToGetSubjectModeCredentialsPtrOutputWithContext(context.Background())
}

func (o GetSubjectModeCredentialsOutput) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectModeCredentials) *GetSubjectModeCredentials {
		return &v
	}).(GetSubjectModeCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetSubjectModeCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectModeCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectModeCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectModeCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetSubjectModeCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectModeCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeCredentials)(nil)).Elem()
}

func (o GetSubjectModeCredentialsPtrOutput) ToGetSubjectModeCredentialsPtrOutput() GetSubjectModeCredentialsPtrOutput {
	return o
}

func (o GetSubjectModeCredentialsPtrOutput) ToGetSubjectModeCredentialsPtrOutputWithContext(ctx context.Context) GetSubjectModeCredentialsPtrOutput {
	return o
}

func (o GetSubjectModeCredentialsPtrOutput) Elem() GetSubjectModeCredentialsOutput {
	return o.ApplyT(func(v *GetSubjectModeCredentials) GetSubjectModeCredentials {
		if v != nil {
			return *v
		}
		var ret GetSubjectModeCredentials
		return ret
	}).(GetSubjectModeCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetSubjectModeCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetSubjectModeCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectModeCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetSubjectModeSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetSubjectModeSchemaRegistryClusterInput is an input type that accepts GetSubjectModeSchemaRegistryClusterArgs and GetSubjectModeSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetSubjectModeSchemaRegistryClusterInput` via:
//
//	GetSubjectModeSchemaRegistryClusterArgs{...}
type GetSubjectModeSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetSubjectModeSchemaRegistryClusterOutput() GetSubjectModeSchemaRegistryClusterOutput
	ToGetSubjectModeSchemaRegistryClusterOutputWithContext(context.Context) GetSubjectModeSchemaRegistryClusterOutput
}

type GetSubjectModeSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetSubjectModeSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterOutput() GetSubjectModeSchemaRegistryClusterOutput {
	return i.ToGetSubjectModeSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeSchemaRegistryClusterOutput)
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetSubjectModeSchemaRegistryClusterArgs) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeSchemaRegistryClusterOutput).ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetSubjectModeSchemaRegistryClusterPtrInput is an input type that accepts GetSubjectModeSchemaRegistryClusterArgs, GetSubjectModeSchemaRegistryClusterPtr and GetSubjectModeSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetSubjectModeSchemaRegistryClusterPtrInput` via:
//
//	        GetSubjectModeSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetSubjectModeSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput
	ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput
}

type getSubjectModeSchemaRegistryClusterPtrType GetSubjectModeSchemaRegistryClusterArgs

func GetSubjectModeSchemaRegistryClusterPtr(v *GetSubjectModeSchemaRegistryClusterArgs) GetSubjectModeSchemaRegistryClusterPtrInput {
	return (*getSubjectModeSchemaRegistryClusterPtrType)(v)
}

func (*getSubjectModeSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (i *getSubjectModeSchemaRegistryClusterPtrType) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return i.ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getSubjectModeSchemaRegistryClusterPtrType) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubjectModeSchemaRegistryClusterPtrOutput)
}

type GetSubjectModeSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetSubjectModeSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterOutput() GetSubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o.ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetSubjectModeSchemaRegistryClusterOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSubjectModeSchemaRegistryCluster) *GetSubjectModeSchemaRegistryCluster {
		return &v
	}).(GetSubjectModeSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectModeSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubjectModeSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetSubjectModeSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetSubjectModeSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSubjectModeSchemaRegistryCluster)(nil)).Elem()
}

func (o GetSubjectModeSchemaRegistryClusterPtrOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutput() GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterPtrOutput) ToGetSubjectModeSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetSubjectModeSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetSubjectModeSchemaRegistryClusterPtrOutput) Elem() GetSubjectModeSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetSubjectModeSchemaRegistryCluster) GetSubjectModeSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetSubjectModeSchemaRegistryCluster
		return ret
	}).(GetSubjectModeSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetSubjectModeSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSubjectModeSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetTagBindingCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetTagBindingCredentialsInput is an input type that accepts GetTagBindingCredentialsArgs and GetTagBindingCredentialsOutput values.
// You can construct a concrete instance of `GetTagBindingCredentialsInput` via:
//
//	GetTagBindingCredentialsArgs{...}
type GetTagBindingCredentialsInput interface {
	pulumi.Input

	ToGetTagBindingCredentialsOutput() GetTagBindingCredentialsOutput
	ToGetTagBindingCredentialsOutputWithContext(context.Context) GetTagBindingCredentialsOutput
}

type GetTagBindingCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetTagBindingCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagBindingCredentials)(nil)).Elem()
}

func (i GetTagBindingCredentialsArgs) ToGetTagBindingCredentialsOutput() GetTagBindingCredentialsOutput {
	return i.ToGetTagBindingCredentialsOutputWithContext(context.Background())
}

func (i GetTagBindingCredentialsArgs) ToGetTagBindingCredentialsOutputWithContext(ctx context.Context) GetTagBindingCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagBindingCredentialsOutput)
}

func (i GetTagBindingCredentialsArgs) ToGetTagBindingCredentialsPtrOutput() GetTagBindingCredentialsPtrOutput {
	return i.ToGetTagBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i GetTagBindingCredentialsArgs) ToGetTagBindingCredentialsPtrOutputWithContext(ctx context.Context) GetTagBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagBindingCredentialsOutput).ToGetTagBindingCredentialsPtrOutputWithContext(ctx)
}

// GetTagBindingCredentialsPtrInput is an input type that accepts GetTagBindingCredentialsArgs, GetTagBindingCredentialsPtr and GetTagBindingCredentialsPtrOutput values.
// You can construct a concrete instance of `GetTagBindingCredentialsPtrInput` via:
//
//	        GetTagBindingCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetTagBindingCredentialsPtrInput interface {
	pulumi.Input

	ToGetTagBindingCredentialsPtrOutput() GetTagBindingCredentialsPtrOutput
	ToGetTagBindingCredentialsPtrOutputWithContext(context.Context) GetTagBindingCredentialsPtrOutput
}

type getTagBindingCredentialsPtrType GetTagBindingCredentialsArgs

func GetTagBindingCredentialsPtr(v *GetTagBindingCredentialsArgs) GetTagBindingCredentialsPtrInput {
	return (*getTagBindingCredentialsPtrType)(v)
}

func (*getTagBindingCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagBindingCredentials)(nil)).Elem()
}

func (i *getTagBindingCredentialsPtrType) ToGetTagBindingCredentialsPtrOutput() GetTagBindingCredentialsPtrOutput {
	return i.ToGetTagBindingCredentialsPtrOutputWithContext(context.Background())
}

func (i *getTagBindingCredentialsPtrType) ToGetTagBindingCredentialsPtrOutputWithContext(ctx context.Context) GetTagBindingCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagBindingCredentialsPtrOutput)
}

type GetTagBindingCredentialsOutput struct{ *pulumi.OutputState }

func (GetTagBindingCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagBindingCredentials)(nil)).Elem()
}

func (o GetTagBindingCredentialsOutput) ToGetTagBindingCredentialsOutput() GetTagBindingCredentialsOutput {
	return o
}

func (o GetTagBindingCredentialsOutput) ToGetTagBindingCredentialsOutputWithContext(ctx context.Context) GetTagBindingCredentialsOutput {
	return o
}

func (o GetTagBindingCredentialsOutput) ToGetTagBindingCredentialsPtrOutput() GetTagBindingCredentialsPtrOutput {
	return o.ToGetTagBindingCredentialsPtrOutputWithContext(context.Background())
}

func (o GetTagBindingCredentialsOutput) ToGetTagBindingCredentialsPtrOutputWithContext(ctx context.Context) GetTagBindingCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTagBindingCredentials) *GetTagBindingCredentials {
		return &v
	}).(GetTagBindingCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetTagBindingCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagBindingCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetTagBindingCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagBindingCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetTagBindingCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetTagBindingCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagBindingCredentials)(nil)).Elem()
}

func (o GetTagBindingCredentialsPtrOutput) ToGetTagBindingCredentialsPtrOutput() GetTagBindingCredentialsPtrOutput {
	return o
}

func (o GetTagBindingCredentialsPtrOutput) ToGetTagBindingCredentialsPtrOutputWithContext(ctx context.Context) GetTagBindingCredentialsPtrOutput {
	return o
}

func (o GetTagBindingCredentialsPtrOutput) Elem() GetTagBindingCredentialsOutput {
	return o.ApplyT(func(v *GetTagBindingCredentials) GetTagBindingCredentials {
		if v != nil {
			return *v
		}
		var ret GetTagBindingCredentials
		return ret
	}).(GetTagBindingCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetTagBindingCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTagBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetTagBindingCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTagBindingCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetTagBindingSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetTagBindingSchemaRegistryClusterInput is an input type that accepts GetTagBindingSchemaRegistryClusterArgs and GetTagBindingSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetTagBindingSchemaRegistryClusterInput` via:
//
//	GetTagBindingSchemaRegistryClusterArgs{...}
type GetTagBindingSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetTagBindingSchemaRegistryClusterOutput() GetTagBindingSchemaRegistryClusterOutput
	ToGetTagBindingSchemaRegistryClusterOutputWithContext(context.Context) GetTagBindingSchemaRegistryClusterOutput
}

type GetTagBindingSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTagBindingSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i GetTagBindingSchemaRegistryClusterArgs) ToGetTagBindingSchemaRegistryClusterOutput() GetTagBindingSchemaRegistryClusterOutput {
	return i.ToGetTagBindingSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetTagBindingSchemaRegistryClusterArgs) ToGetTagBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) GetTagBindingSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagBindingSchemaRegistryClusterOutput)
}

func (i GetTagBindingSchemaRegistryClusterArgs) ToGetTagBindingSchemaRegistryClusterPtrOutput() GetTagBindingSchemaRegistryClusterPtrOutput {
	return i.ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetTagBindingSchemaRegistryClusterArgs) ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagBindingSchemaRegistryClusterOutput).ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetTagBindingSchemaRegistryClusterPtrInput is an input type that accepts GetTagBindingSchemaRegistryClusterArgs, GetTagBindingSchemaRegistryClusterPtr and GetTagBindingSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetTagBindingSchemaRegistryClusterPtrInput` via:
//
//	        GetTagBindingSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetTagBindingSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetTagBindingSchemaRegistryClusterPtrOutput() GetTagBindingSchemaRegistryClusterPtrOutput
	ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Context) GetTagBindingSchemaRegistryClusterPtrOutput
}

type getTagBindingSchemaRegistryClusterPtrType GetTagBindingSchemaRegistryClusterArgs

func GetTagBindingSchemaRegistryClusterPtr(v *GetTagBindingSchemaRegistryClusterArgs) GetTagBindingSchemaRegistryClusterPtrInput {
	return (*getTagBindingSchemaRegistryClusterPtrType)(v)
}

func (*getTagBindingSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (i *getTagBindingSchemaRegistryClusterPtrType) ToGetTagBindingSchemaRegistryClusterPtrOutput() GetTagBindingSchemaRegistryClusterPtrOutput {
	return i.ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getTagBindingSchemaRegistryClusterPtrType) ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagBindingSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagBindingSchemaRegistryClusterPtrOutput)
}

type GetTagBindingSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetTagBindingSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o GetTagBindingSchemaRegistryClusterOutput) ToGetTagBindingSchemaRegistryClusterOutput() GetTagBindingSchemaRegistryClusterOutput {
	return o
}

func (o GetTagBindingSchemaRegistryClusterOutput) ToGetTagBindingSchemaRegistryClusterOutputWithContext(ctx context.Context) GetTagBindingSchemaRegistryClusterOutput {
	return o
}

func (o GetTagBindingSchemaRegistryClusterOutput) ToGetTagBindingSchemaRegistryClusterPtrOutput() GetTagBindingSchemaRegistryClusterPtrOutput {
	return o.ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetTagBindingSchemaRegistryClusterOutput) ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagBindingSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTagBindingSchemaRegistryCluster) *GetTagBindingSchemaRegistryCluster {
		return &v
	}).(GetTagBindingSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetTagBindingSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagBindingSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetTagBindingSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetTagBindingSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagBindingSchemaRegistryCluster)(nil)).Elem()
}

func (o GetTagBindingSchemaRegistryClusterPtrOutput) ToGetTagBindingSchemaRegistryClusterPtrOutput() GetTagBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetTagBindingSchemaRegistryClusterPtrOutput) ToGetTagBindingSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagBindingSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetTagBindingSchemaRegistryClusterPtrOutput) Elem() GetTagBindingSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetTagBindingSchemaRegistryCluster) GetTagBindingSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetTagBindingSchemaRegistryCluster
		return ret
	}).(GetTagBindingSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetTagBindingSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTagBindingSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetTagCredentials struct {
	// The Schema Registry API Key.
	Key string `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret string `pulumi:"secret"`
}

// GetTagCredentialsInput is an input type that accepts GetTagCredentialsArgs and GetTagCredentialsOutput values.
// You can construct a concrete instance of `GetTagCredentialsInput` via:
//
//	GetTagCredentialsArgs{...}
type GetTagCredentialsInput interface {
	pulumi.Input

	ToGetTagCredentialsOutput() GetTagCredentialsOutput
	ToGetTagCredentialsOutputWithContext(context.Context) GetTagCredentialsOutput
}

type GetTagCredentialsArgs struct {
	// The Schema Registry API Key.
	Key pulumi.StringInput `pulumi:"key"`
	// The Schema Registry API Secret.
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (GetTagCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagCredentials)(nil)).Elem()
}

func (i GetTagCredentialsArgs) ToGetTagCredentialsOutput() GetTagCredentialsOutput {
	return i.ToGetTagCredentialsOutputWithContext(context.Background())
}

func (i GetTagCredentialsArgs) ToGetTagCredentialsOutputWithContext(ctx context.Context) GetTagCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagCredentialsOutput)
}

func (i GetTagCredentialsArgs) ToGetTagCredentialsPtrOutput() GetTagCredentialsPtrOutput {
	return i.ToGetTagCredentialsPtrOutputWithContext(context.Background())
}

func (i GetTagCredentialsArgs) ToGetTagCredentialsPtrOutputWithContext(ctx context.Context) GetTagCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagCredentialsOutput).ToGetTagCredentialsPtrOutputWithContext(ctx)
}

// GetTagCredentialsPtrInput is an input type that accepts GetTagCredentialsArgs, GetTagCredentialsPtr and GetTagCredentialsPtrOutput values.
// You can construct a concrete instance of `GetTagCredentialsPtrInput` via:
//
//	        GetTagCredentialsArgs{...}
//
//	or:
//
//	        nil
type GetTagCredentialsPtrInput interface {
	pulumi.Input

	ToGetTagCredentialsPtrOutput() GetTagCredentialsPtrOutput
	ToGetTagCredentialsPtrOutputWithContext(context.Context) GetTagCredentialsPtrOutput
}

type getTagCredentialsPtrType GetTagCredentialsArgs

func GetTagCredentialsPtr(v *GetTagCredentialsArgs) GetTagCredentialsPtrInput {
	return (*getTagCredentialsPtrType)(v)
}

func (*getTagCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagCredentials)(nil)).Elem()
}

func (i *getTagCredentialsPtrType) ToGetTagCredentialsPtrOutput() GetTagCredentialsPtrOutput {
	return i.ToGetTagCredentialsPtrOutputWithContext(context.Background())
}

func (i *getTagCredentialsPtrType) ToGetTagCredentialsPtrOutputWithContext(ctx context.Context) GetTagCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagCredentialsPtrOutput)
}

type GetTagCredentialsOutput struct{ *pulumi.OutputState }

func (GetTagCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagCredentials)(nil)).Elem()
}

func (o GetTagCredentialsOutput) ToGetTagCredentialsOutput() GetTagCredentialsOutput {
	return o
}

func (o GetTagCredentialsOutput) ToGetTagCredentialsOutputWithContext(ctx context.Context) GetTagCredentialsOutput {
	return o
}

func (o GetTagCredentialsOutput) ToGetTagCredentialsPtrOutput() GetTagCredentialsPtrOutput {
	return o.ToGetTagCredentialsPtrOutputWithContext(context.Background())
}

func (o GetTagCredentialsOutput) ToGetTagCredentialsPtrOutputWithContext(ctx context.Context) GetTagCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTagCredentials) *GetTagCredentials {
		return &v
	}).(GetTagCredentialsPtrOutput)
}

// The Schema Registry API Key.
func (o GetTagCredentialsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagCredentials) string { return v.Key }).(pulumi.StringOutput)
}

// The Schema Registry API Secret.
func (o GetTagCredentialsOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagCredentials) string { return v.Secret }).(pulumi.StringOutput)
}

type GetTagCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GetTagCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagCredentials)(nil)).Elem()
}

func (o GetTagCredentialsPtrOutput) ToGetTagCredentialsPtrOutput() GetTagCredentialsPtrOutput {
	return o
}

func (o GetTagCredentialsPtrOutput) ToGetTagCredentialsPtrOutputWithContext(ctx context.Context) GetTagCredentialsPtrOutput {
	return o
}

func (o GetTagCredentialsPtrOutput) Elem() GetTagCredentialsOutput {
	return o.ApplyT(func(v *GetTagCredentials) GetTagCredentials {
		if v != nil {
			return *v
		}
		var ret GetTagCredentials
		return ret
	}).(GetTagCredentialsOutput)
}

// The Schema Registry API Key.
func (o GetTagCredentialsPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTagCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The Schema Registry API Secret.
func (o GetTagCredentialsPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTagCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

type GetTagSchemaRegistryCluster struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id string `pulumi:"id"`
}

// GetTagSchemaRegistryClusterInput is an input type that accepts GetTagSchemaRegistryClusterArgs and GetTagSchemaRegistryClusterOutput values.
// You can construct a concrete instance of `GetTagSchemaRegistryClusterInput` via:
//
//	GetTagSchemaRegistryClusterArgs{...}
type GetTagSchemaRegistryClusterInput interface {
	pulumi.Input

	ToGetTagSchemaRegistryClusterOutput() GetTagSchemaRegistryClusterOutput
	ToGetTagSchemaRegistryClusterOutputWithContext(context.Context) GetTagSchemaRegistryClusterOutput
}

type GetTagSchemaRegistryClusterArgs struct {
	// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTagSchemaRegistryClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagSchemaRegistryCluster)(nil)).Elem()
}

func (i GetTagSchemaRegistryClusterArgs) ToGetTagSchemaRegistryClusterOutput() GetTagSchemaRegistryClusterOutput {
	return i.ToGetTagSchemaRegistryClusterOutputWithContext(context.Background())
}

func (i GetTagSchemaRegistryClusterArgs) ToGetTagSchemaRegistryClusterOutputWithContext(ctx context.Context) GetTagSchemaRegistryClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagSchemaRegistryClusterOutput)
}

func (i GetTagSchemaRegistryClusterArgs) ToGetTagSchemaRegistryClusterPtrOutput() GetTagSchemaRegistryClusterPtrOutput {
	return i.ToGetTagSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i GetTagSchemaRegistryClusterArgs) ToGetTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagSchemaRegistryClusterOutput).ToGetTagSchemaRegistryClusterPtrOutputWithContext(ctx)
}

// GetTagSchemaRegistryClusterPtrInput is an input type that accepts GetTagSchemaRegistryClusterArgs, GetTagSchemaRegistryClusterPtr and GetTagSchemaRegistryClusterPtrOutput values.
// You can construct a concrete instance of `GetTagSchemaRegistryClusterPtrInput` via:
//
//	        GetTagSchemaRegistryClusterArgs{...}
//
//	or:
//
//	        nil
type GetTagSchemaRegistryClusterPtrInput interface {
	pulumi.Input

	ToGetTagSchemaRegistryClusterPtrOutput() GetTagSchemaRegistryClusterPtrOutput
	ToGetTagSchemaRegistryClusterPtrOutputWithContext(context.Context) GetTagSchemaRegistryClusterPtrOutput
}

type getTagSchemaRegistryClusterPtrType GetTagSchemaRegistryClusterArgs

func GetTagSchemaRegistryClusterPtr(v *GetTagSchemaRegistryClusterArgs) GetTagSchemaRegistryClusterPtrInput {
	return (*getTagSchemaRegistryClusterPtrType)(v)
}

func (*getTagSchemaRegistryClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagSchemaRegistryCluster)(nil)).Elem()
}

func (i *getTagSchemaRegistryClusterPtrType) ToGetTagSchemaRegistryClusterPtrOutput() GetTagSchemaRegistryClusterPtrOutput {
	return i.ToGetTagSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (i *getTagSchemaRegistryClusterPtrType) ToGetTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagSchemaRegistryClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagSchemaRegistryClusterPtrOutput)
}

type GetTagSchemaRegistryClusterOutput struct{ *pulumi.OutputState }

func (GetTagSchemaRegistryClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagSchemaRegistryCluster)(nil)).Elem()
}

func (o GetTagSchemaRegistryClusterOutput) ToGetTagSchemaRegistryClusterOutput() GetTagSchemaRegistryClusterOutput {
	return o
}

func (o GetTagSchemaRegistryClusterOutput) ToGetTagSchemaRegistryClusterOutputWithContext(ctx context.Context) GetTagSchemaRegistryClusterOutput {
	return o
}

func (o GetTagSchemaRegistryClusterOutput) ToGetTagSchemaRegistryClusterPtrOutput() GetTagSchemaRegistryClusterPtrOutput {
	return o.ToGetTagSchemaRegistryClusterPtrOutputWithContext(context.Background())
}

func (o GetTagSchemaRegistryClusterOutput) ToGetTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagSchemaRegistryClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTagSchemaRegistryCluster) *GetTagSchemaRegistryCluster {
		return &v
	}).(GetTagSchemaRegistryClusterPtrOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetTagSchemaRegistryClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagSchemaRegistryCluster) string { return v.Id }).(pulumi.StringOutput)
}

type GetTagSchemaRegistryClusterPtrOutput struct{ *pulumi.OutputState }

func (GetTagSchemaRegistryClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTagSchemaRegistryCluster)(nil)).Elem()
}

func (o GetTagSchemaRegistryClusterPtrOutput) ToGetTagSchemaRegistryClusterPtrOutput() GetTagSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetTagSchemaRegistryClusterPtrOutput) ToGetTagSchemaRegistryClusterPtrOutputWithContext(ctx context.Context) GetTagSchemaRegistryClusterPtrOutput {
	return o
}

func (o GetTagSchemaRegistryClusterPtrOutput) Elem() GetTagSchemaRegistryClusterOutput {
	return o.ApplyT(func(v *GetTagSchemaRegistryCluster) GetTagSchemaRegistryCluster {
		if v != nil {
			return *v
		}
		var ret GetTagSchemaRegistryCluster
		return ret
	}).(GetTagSchemaRegistryClusterOutput)
}

// The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
func (o GetTagSchemaRegistryClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTagSchemaRegistryCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type GetTransitGatewayAttachmentAw struct {
	// (Required String) The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn string `pulumi:"ramResourceShareArn"`
	// (Required List of String) List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	Routes []string `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// (Required String) The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// GetTransitGatewayAttachmentAwInput is an input type that accepts GetTransitGatewayAttachmentAwArgs and GetTransitGatewayAttachmentAwOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentAwInput` via:
//
//	GetTransitGatewayAttachmentAwArgs{...}
type GetTransitGatewayAttachmentAwInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentAwOutput() GetTransitGatewayAttachmentAwOutput
	ToGetTransitGatewayAttachmentAwOutputWithContext(context.Context) GetTransitGatewayAttachmentAwOutput
}

type GetTransitGatewayAttachmentAwArgs struct {
	// (Required String) The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
	RamResourceShareArn pulumi.StringInput `pulumi:"ramResourceShareArn"`
	// (Required List of String) List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
	Routes pulumi.StringArrayInput `pulumi:"routes"`
	// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
	TransitGatewayAttachmentId pulumi.StringInput `pulumi:"transitGatewayAttachmentId"`
	// (Required String) The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
}

func (GetTransitGatewayAttachmentAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentAwArgs) ToGetTransitGatewayAttachmentAwOutput() GetTransitGatewayAttachmentAwOutput {
	return i.ToGetTransitGatewayAttachmentAwOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentAwArgs) ToGetTransitGatewayAttachmentAwOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentAwOutput)
}

// GetTransitGatewayAttachmentAwArrayInput is an input type that accepts GetTransitGatewayAttachmentAwArray and GetTransitGatewayAttachmentAwArrayOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentAwArrayInput` via:
//
//	GetTransitGatewayAttachmentAwArray{ GetTransitGatewayAttachmentAwArgs{...} }
type GetTransitGatewayAttachmentAwArrayInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentAwArrayOutput() GetTransitGatewayAttachmentAwArrayOutput
	ToGetTransitGatewayAttachmentAwArrayOutputWithContext(context.Context) GetTransitGatewayAttachmentAwArrayOutput
}

type GetTransitGatewayAttachmentAwArray []GetTransitGatewayAttachmentAwInput

func (GetTransitGatewayAttachmentAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentAwArray) ToGetTransitGatewayAttachmentAwArrayOutput() GetTransitGatewayAttachmentAwArrayOutput {
	return i.ToGetTransitGatewayAttachmentAwArrayOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentAwArray) ToGetTransitGatewayAttachmentAwArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentAwArrayOutput)
}

type GetTransitGatewayAttachmentAwOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentAwOutput) ToGetTransitGatewayAttachmentAwOutput() GetTransitGatewayAttachmentAwOutput {
	return o
}

func (o GetTransitGatewayAttachmentAwOutput) ToGetTransitGatewayAttachmentAwOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwOutput {
	return o
}

// (Required String) The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
func (o GetTransitGatewayAttachmentAwOutput) RamResourceShareArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) string { return v.RamResourceShareArn }).(pulumi.StringOutput)
}

// (Required List of String) List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
func (o GetTransitGatewayAttachmentAwOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

// (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
func (o GetTransitGatewayAttachmentAwOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) string { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// (Required String) The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
func (o GetTransitGatewayAttachmentAwOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentAw) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

type GetTransitGatewayAttachmentAwArrayOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentAw)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentAwArrayOutput) ToGetTransitGatewayAttachmentAwArrayOutput() GetTransitGatewayAttachmentAwArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentAwArrayOutput) ToGetTransitGatewayAttachmentAwArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentAwArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentAwArrayOutput) Index(i pulumi.IntInput) GetTransitGatewayAttachmentAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitGatewayAttachmentAw {
		return vs[0].([]GetTransitGatewayAttachmentAw)[vs[1].(int)]
	}).(GetTransitGatewayAttachmentAwOutput)
}

type GetTransitGatewayAttachmentEnvironment struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id string `pulumi:"id"`
}

// GetTransitGatewayAttachmentEnvironmentInput is an input type that accepts GetTransitGatewayAttachmentEnvironmentArgs and GetTransitGatewayAttachmentEnvironmentOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentEnvironmentInput` via:
//
//	GetTransitGatewayAttachmentEnvironmentArgs{...}
type GetTransitGatewayAttachmentEnvironmentInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentEnvironmentOutput() GetTransitGatewayAttachmentEnvironmentOutput
	ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(context.Context) GetTransitGatewayAttachmentEnvironmentOutput
}

type GetTransitGatewayAttachmentEnvironmentArgs struct {
	// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
	//
	// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTransitGatewayAttachmentEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentEnvironmentArgs) ToGetTransitGatewayAttachmentEnvironmentOutput() GetTransitGatewayAttachmentEnvironmentOutput {
	return i.ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentEnvironmentArgs) ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentEnvironmentOutput)
}

type GetTransitGatewayAttachmentEnvironmentOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentEnvironment)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentEnvironmentOutput) ToGetTransitGatewayAttachmentEnvironmentOutput() GetTransitGatewayAttachmentEnvironmentOutput {
	return o
}

func (o GetTransitGatewayAttachmentEnvironmentOutput) ToGetTransitGatewayAttachmentEnvironmentOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentEnvironmentOutput {
	return o
}

// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
//
// > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
func (o GetTransitGatewayAttachmentEnvironmentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentEnvironment) string { return v.Id }).(pulumi.StringOutput)
}

type GetTransitGatewayAttachmentNetwork struct {
	// The ID of the Peering, for example, `tgwa-abc123`.
	Id string `pulumi:"id"`
}

// GetTransitGatewayAttachmentNetworkInput is an input type that accepts GetTransitGatewayAttachmentNetworkArgs and GetTransitGatewayAttachmentNetworkOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentNetworkInput` via:
//
//	GetTransitGatewayAttachmentNetworkArgs{...}
type GetTransitGatewayAttachmentNetworkInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentNetworkOutput() GetTransitGatewayAttachmentNetworkOutput
	ToGetTransitGatewayAttachmentNetworkOutputWithContext(context.Context) GetTransitGatewayAttachmentNetworkOutput
}

type GetTransitGatewayAttachmentNetworkArgs struct {
	// The ID of the Peering, for example, `tgwa-abc123`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTransitGatewayAttachmentNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentNetworkArgs) ToGetTransitGatewayAttachmentNetworkOutput() GetTransitGatewayAttachmentNetworkOutput {
	return i.ToGetTransitGatewayAttachmentNetworkOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentNetworkArgs) ToGetTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentNetworkOutput)
}

// GetTransitGatewayAttachmentNetworkArrayInput is an input type that accepts GetTransitGatewayAttachmentNetworkArray and GetTransitGatewayAttachmentNetworkArrayOutput values.
// You can construct a concrete instance of `GetTransitGatewayAttachmentNetworkArrayInput` via:
//
//	GetTransitGatewayAttachmentNetworkArray{ GetTransitGatewayAttachmentNetworkArgs{...} }
type GetTransitGatewayAttachmentNetworkArrayInput interface {
	pulumi.Input

	ToGetTransitGatewayAttachmentNetworkArrayOutput() GetTransitGatewayAttachmentNetworkArrayOutput
	ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(context.Context) GetTransitGatewayAttachmentNetworkArrayOutput
}

type GetTransitGatewayAttachmentNetworkArray []GetTransitGatewayAttachmentNetworkInput

func (GetTransitGatewayAttachmentNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (i GetTransitGatewayAttachmentNetworkArray) ToGetTransitGatewayAttachmentNetworkArrayOutput() GetTransitGatewayAttachmentNetworkArrayOutput {
	return i.ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(context.Background())
}

func (i GetTransitGatewayAttachmentNetworkArray) ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitGatewayAttachmentNetworkArrayOutput)
}

type GetTransitGatewayAttachmentNetworkOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentNetworkOutput) ToGetTransitGatewayAttachmentNetworkOutput() GetTransitGatewayAttachmentNetworkOutput {
	return o
}

func (o GetTransitGatewayAttachmentNetworkOutput) ToGetTransitGatewayAttachmentNetworkOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkOutput {
	return o
}

// The ID of the Peering, for example, `tgwa-abc123`.
func (o GetTransitGatewayAttachmentNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitGatewayAttachmentNetwork) string { return v.Id }).(pulumi.StringOutput)
}

type GetTransitGatewayAttachmentNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetTransitGatewayAttachmentNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitGatewayAttachmentNetwork)(nil)).Elem()
}

func (o GetTransitGatewayAttachmentNetworkArrayOutput) ToGetTransitGatewayAttachmentNetworkArrayOutput() GetTransitGatewayAttachmentNetworkArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentNetworkArrayOutput) ToGetTransitGatewayAttachmentNetworkArrayOutputWithContext(ctx context.Context) GetTransitGatewayAttachmentNetworkArrayOutput {
	return o
}

func (o GetTransitGatewayAttachmentNetworkArrayOutput) Index(i pulumi.IntInput) GetTransitGatewayAttachmentNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitGatewayAttachmentNetwork {
		return vs[0].([]GetTransitGatewayAttachmentNetwork)[vs[1].(int)]
	}).(GetTransitGatewayAttachmentNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointAwsEgressPrivateLinkEndpointInput)(nil)).Elem(), AccessPointAwsEgressPrivateLinkEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointAwsEgressPrivateLinkEndpointPtrInput)(nil)).Elem(), AccessPointAwsEgressPrivateLinkEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointAzureEgressPrivateLinkEndpointInput)(nil)).Elem(), AccessPointAzureEgressPrivateLinkEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointAzureEgressPrivateLinkEndpointPtrInput)(nil)).Elem(), AccessPointAzureEgressPrivateLinkEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointEnvironmentInput)(nil)).Elem(), AccessPointEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointEnvironmentPtrInput)(nil)).Elem(), AccessPointEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointGatewayInput)(nil)).Elem(), AccessPointGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointGatewayPtrInput)(nil)).Elem(), AccessPointGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceInput)(nil)).Elem(), ApiKeyManagedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourcePtrInput)(nil)).Elem(), ApiKeyManagedResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceEnvironmentInput)(nil)).Elem(), ApiKeyManagedResourceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyManagedResourceEnvironmentPtrInput)(nil)).Elem(), ApiKeyManagedResourceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyOwnerInput)(nil)).Elem(), ApiKeyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyOwnerPtrInput)(nil)).Elem(), ApiKeyOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataAttributeDefinitionInput)(nil)).Elem(), BusinessMetadataAttributeDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataAttributeDefinitionArrayInput)(nil)).Elem(), BusinessMetadataAttributeDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataBindingCredentialsInput)(nil)).Elem(), BusinessMetadataBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataBindingCredentialsPtrInput)(nil)).Elem(), BusinessMetadataBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataBindingSchemaRegistryClusterInput)(nil)).Elem(), BusinessMetadataBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataBindingSchemaRegistryClusterPtrInput)(nil)).Elem(), BusinessMetadataBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataCredentialsInput)(nil)).Elem(), BusinessMetadataCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataCredentialsPtrInput)(nil)).Elem(), BusinessMetadataCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataSchemaRegistryClusterInput)(nil)).Elem(), BusinessMetadataSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessMetadataSchemaRegistryClusterPtrInput)(nil)).Elem(), BusinessMetadataSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByokKeyAwsInput)(nil)).Elem(), ByokKeyAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByokKeyAwsPtrInput)(nil)).Elem(), ByokKeyAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByokKeyAzureInput)(nil)).Elem(), ByokKeyAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByokKeyAzurePtrInput)(nil)).Elem(), ByokKeyAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByokKeyGcpInput)(nil)).Elem(), ByokKeyGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ByokKeyGcpPtrInput)(nil)).Elem(), ByokKeyGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogEntityAttributesCredentialsInput)(nil)).Elem(), CatalogEntityAttributesCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogEntityAttributesCredentialsPtrInput)(nil)).Elem(), CatalogEntityAttributesCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogEntityAttributesSchemaRegistryClusterInput)(nil)).Elem(), CatalogEntityAttributesSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CatalogEntityAttributesSchemaRegistryClusterPtrInput)(nil)).Elem(), CatalogEntityAttributesSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterPtrInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentialsInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkDestinationKafkaClusterCredentialsPtrInput)(nil)).Elem(), ClusterLinkDestinationKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkLocalKafkaClusterInput)(nil)).Elem(), ClusterLinkLocalKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkLocalKafkaClusterPtrInput)(nil)).Elem(), ClusterLinkLocalKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkLocalKafkaClusterCredentialsInput)(nil)).Elem(), ClusterLinkLocalKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkLocalKafkaClusterCredentialsPtrInput)(nil)).Elem(), ClusterLinkLocalKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkRemoteKafkaClusterInput)(nil)).Elem(), ClusterLinkRemoteKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkRemoteKafkaClusterPtrInput)(nil)).Elem(), ClusterLinkRemoteKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkRemoteKafkaClusterCredentialsInput)(nil)).Elem(), ClusterLinkRemoteKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkRemoteKafkaClusterCredentialsPtrInput)(nil)).Elem(), ClusterLinkRemoteKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterPtrInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentialsInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLinkSourceKafkaClusterCredentialsPtrInput)(nil)).Elem(), ClusterLinkSourceKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorEnvironmentInput)(nil)).Elem(), ConnectorEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorEnvironmentPtrInput)(nil)).Elem(), ConnectorEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterPtrInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsForwarderEnvironmentInput)(nil)).Elem(), DnsForwarderEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsForwarderEnvironmentPtrInput)(nil)).Elem(), DnsForwarderEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsForwarderForwardViaIpInput)(nil)).Elem(), DnsForwarderForwardViaIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsForwarderForwardViaIpPtrInput)(nil)).Elem(), DnsForwarderForwardViaIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsForwarderGatewayInput)(nil)).Elem(), DnsForwarderGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsForwarderGatewayPtrInput)(nil)).Elem(), DnsForwarderGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordEnvironmentInput)(nil)).Elem(), DnsRecordEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordEnvironmentPtrInput)(nil)).Elem(), DnsRecordEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordGatewayInput)(nil)).Elem(), DnsRecordGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordGatewayPtrInput)(nil)).Elem(), DnsRecordGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordPrivateLinkAccessPointInput)(nil)).Elem(), DnsRecordPrivateLinkAccessPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DnsRecordPrivateLinkAccessPointPtrInput)(nil)).Elem(), DnsRecordPrivateLinkAccessPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStreamGovernanceInput)(nil)).Elem(), EnvironmentStreamGovernanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStreamGovernancePtrInput)(nil)).Elem(), EnvironmentStreamGovernanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkComputePoolEnvironmentInput)(nil)).Elem(), FlinkComputePoolEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkComputePoolEnvironmentPtrInput)(nil)).Elem(), FlinkComputePoolEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementComputePoolInput)(nil)).Elem(), FlinkStatementComputePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementComputePoolPtrInput)(nil)).Elem(), FlinkStatementComputePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementCredentialsInput)(nil)).Elem(), FlinkStatementCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementCredentialsPtrInput)(nil)).Elem(), FlinkStatementCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementEnvironmentInput)(nil)).Elem(), FlinkStatementEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementEnvironmentPtrInput)(nil)).Elem(), FlinkStatementEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementOrganizationInput)(nil)).Elem(), FlinkStatementOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementOrganizationPtrInput)(nil)).Elem(), FlinkStatementOrganizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementPrincipalInput)(nil)).Elem(), FlinkStatementPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkStatementPrincipalPtrInput)(nil)).Elem(), FlinkStatementPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolIdentityProviderInput)(nil)).Elem(), IdentityPoolIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolIdentityProviderPtrInput)(nil)).Elem(), IdentityPoolIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationCreatorInput)(nil)).Elem(), InvitationCreatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationCreatorArrayInput)(nil)).Elem(), InvitationCreatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationUserInput)(nil)).Elem(), InvitationUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationUserArrayInput)(nil)).Elem(), InvitationUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclCredentialsInput)(nil)).Elem(), KafkaAclCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclCredentialsPtrInput)(nil)).Elem(), KafkaAclCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclKafkaClusterInput)(nil)).Elem(), KafkaAclKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaAclKafkaClusterPtrInput)(nil)).Elem(), KafkaAclKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaEnvironmentInput)(nil)).Elem(), KafkaClientQuotaEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaEnvironmentPtrInput)(nil)).Elem(), KafkaClientQuotaEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaKafkaClusterInput)(nil)).Elem(), KafkaClientQuotaKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaKafkaClusterPtrInput)(nil)).Elem(), KafkaClientQuotaKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaThroughputInput)(nil)).Elem(), KafkaClientQuotaThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClientQuotaThroughputPtrInput)(nil)).Elem(), KafkaClientQuotaThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterBasicInput)(nil)).Elem(), KafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterBasicPtrInput)(nil)).Elem(), KafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterByokKeyInput)(nil)).Elem(), KafkaClusterByokKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterByokKeyPtrInput)(nil)).Elem(), KafkaClusterByokKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigCredentialsInput)(nil)).Elem(), KafkaClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigCredentialsPtrInput)(nil)).Elem(), KafkaClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigKafkaClusterInput)(nil)).Elem(), KafkaClusterConfigKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterConfigKafkaClusterPtrInput)(nil)).Elem(), KafkaClusterConfigKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterDedicatedInput)(nil)).Elem(), KafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterDedicatedPtrInput)(nil)).Elem(), KafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnterpriseInput)(nil)).Elem(), KafkaClusterEnterpriseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnterpriseArrayInput)(nil)).Elem(), KafkaClusterEnterpriseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnvironmentInput)(nil)).Elem(), KafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterEnvironmentPtrInput)(nil)).Elem(), KafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterFreightInput)(nil)).Elem(), KafkaClusterFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterFreightArrayInput)(nil)).Elem(), KafkaClusterFreightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterNetworkInput)(nil)).Elem(), KafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterNetworkPtrInput)(nil)).Elem(), KafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterStandardInput)(nil)).Elem(), KafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterStandardPtrInput)(nil)).Elem(), KafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicClusterLinkInput)(nil)).Elem(), KafkaMirrorTopicClusterLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicClusterLinkPtrInput)(nil)).Elem(), KafkaMirrorTopicClusterLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterPtrInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentialsInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicKafkaClusterCredentialsPtrInput)(nil)).Elem(), KafkaMirrorTopicKafkaClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopicInput)(nil)).Elem(), KafkaMirrorTopicSourceKafkaTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaMirrorTopicSourceKafkaTopicPtrInput)(nil)).Elem(), KafkaMirrorTopicSourceKafkaTopicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicCredentialsInput)(nil)).Elem(), KafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicCredentialsPtrInput)(nil)).Elem(), KafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicKafkaClusterInput)(nil)).Elem(), KafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaTopicKafkaClusterPtrInput)(nil)).Elem(), KafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterCredentialIdentityInput)(nil)).Elem(), KsqlClusterCredentialIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterCredentialIdentityPtrInput)(nil)).Elem(), KsqlClusterCredentialIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterEnvironmentInput)(nil)).Elem(), KsqlClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterEnvironmentPtrInput)(nil)).Elem(), KsqlClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterKafkaClusterInput)(nil)).Elem(), KsqlClusterKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KsqlClusterKafkaClusterPtrInput)(nil)).Elem(), KsqlClusterKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAwInput)(nil)).Elem(), NetworkAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAwArrayInput)(nil)).Elem(), NetworkAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAzureInput)(nil)).Elem(), NetworkAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAzureArrayInput)(nil)).Elem(), NetworkAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDnsConfigInput)(nil)).Elem(), NetworkDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDnsConfigPtrInput)(nil)).Elem(), NetworkDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEnvironmentInput)(nil)).Elem(), NetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkEnvironmentPtrInput)(nil)).Elem(), NetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGatewayInput)(nil)).Elem(), NetworkGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGatewayArrayInput)(nil)).Elem(), NetworkGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGcpInput)(nil)).Elem(), NetworkGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkGcpArrayInput)(nil)).Elem(), NetworkGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkEndpointEnvironmentInput)(nil)).Elem(), NetworkLinkEndpointEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkEndpointEnvironmentPtrInput)(nil)).Elem(), NetworkLinkEndpointEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkEndpointNetworkInput)(nil)).Elem(), NetworkLinkEndpointNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkEndpointNetworkPtrInput)(nil)).Elem(), NetworkLinkEndpointNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkEndpointNetworkLinkServiceInput)(nil)).Elem(), NetworkLinkEndpointNetworkLinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkEndpointNetworkLinkServicePtrInput)(nil)).Elem(), NetworkLinkEndpointNetworkLinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkServiceAcceptInput)(nil)).Elem(), NetworkLinkServiceAcceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkServiceAcceptPtrInput)(nil)).Elem(), NetworkLinkServiceAcceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkServiceEnvironmentInput)(nil)).Elem(), NetworkLinkServiceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkServiceEnvironmentPtrInput)(nil)).Elem(), NetworkLinkServiceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkServiceNetworkInput)(nil)).Elem(), NetworkLinkServiceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkLinkServiceNetworkPtrInput)(nil)).Elem(), NetworkLinkServiceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkZoneInfoInput)(nil)).Elem(), NetworkZoneInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkZoneInfoArrayInput)(nil)).Elem(), NetworkZoneInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAwsInput)(nil)).Elem(), PeeringAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAwsPtrInput)(nil)).Elem(), PeeringAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAzureInput)(nil)).Elem(), PeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringAzurePtrInput)(nil)).Elem(), PeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringEnvironmentInput)(nil)).Elem(), PeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringEnvironmentPtrInput)(nil)).Elem(), PeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringGcpInput)(nil)).Elem(), PeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringGcpPtrInput)(nil)).Elem(), PeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringNetworkInput)(nil)).Elem(), PeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PeeringNetworkPtrInput)(nil)).Elem(), PeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAwsInput)(nil)).Elem(), PrivateLinkAccessAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAwsPtrInput)(nil)).Elem(), PrivateLinkAccessAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAzureInput)(nil)).Elem(), PrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessAzurePtrInput)(nil)).Elem(), PrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessEnvironmentInput)(nil)).Elem(), PrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessEnvironmentPtrInput)(nil)).Elem(), PrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessGcpInput)(nil)).Elem(), PrivateLinkAccessGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessGcpPtrInput)(nil)).Elem(), PrivateLinkAccessGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessNetworkInput)(nil)).Elem(), PrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessNetworkPtrInput)(nil)).Elem(), PrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentAwInput)(nil)).Elem(), PrivateLinkAttachmentAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentAwArrayInput)(nil)).Elem(), PrivateLinkAttachmentAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentAzureInput)(nil)).Elem(), PrivateLinkAttachmentAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentAzureArrayInput)(nil)).Elem(), PrivateLinkAttachmentAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionAwsInput)(nil)).Elem(), PrivateLinkAttachmentConnectionAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionAwsPtrInput)(nil)).Elem(), PrivateLinkAttachmentConnectionAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionAzureInput)(nil)).Elem(), PrivateLinkAttachmentConnectionAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionAzurePtrInput)(nil)).Elem(), PrivateLinkAttachmentConnectionAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionEnvironmentInput)(nil)).Elem(), PrivateLinkAttachmentConnectionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionEnvironmentPtrInput)(nil)).Elem(), PrivateLinkAttachmentConnectionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionGcpInput)(nil)).Elem(), PrivateLinkAttachmentConnectionGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionGcpPtrInput)(nil)).Elem(), PrivateLinkAttachmentConnectionGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionPrivateLinkAttachmentInput)(nil)).Elem(), PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrInput)(nil)).Elem(), PrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentEnvironmentInput)(nil)).Elem(), PrivateLinkAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentEnvironmentPtrInput)(nil)).Elem(), PrivateLinkAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentGcpInput)(nil)).Elem(), PrivateLinkAttachmentGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentGcpArrayInput)(nil)).Elem(), PrivateLinkAttachmentGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaCredentialsInput)(nil)).Elem(), SchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaCredentialsPtrInput)(nil)).Elem(), SchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterCredentialsInput)(nil)).Elem(), SchemaExporterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterCredentialsPtrInput)(nil)).Elem(), SchemaExporterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryClusterInput)(nil)).Elem(), SchemaExporterDestinationSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaExporterDestinationSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryClusterCredentialsInput)(nil)).Elem(), SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrInput)(nil)).Elem(), SchemaExporterDestinationSchemaRegistryClusterCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterSchemaRegistryClusterInput)(nil)).Elem(), SchemaExporterSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaExporterSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaExporterSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMetadataInput)(nil)).Elem(), SchemaMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMetadataPtrInput)(nil)).Elem(), SchemaMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMetadataTagInput)(nil)).Elem(), SchemaMetadataTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaMetadataTagArrayInput)(nil)).Elem(), SchemaMetadataTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigCredentialsInput)(nil)).Elem(), SchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigCredentialsPtrInput)(nil)).Elem(), SchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryClusterInput)(nil)).Elem(), SchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeCredentialsInput)(nil)).Elem(), SchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeCredentialsPtrInput)(nil)).Elem(), SchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryClusterInput)(nil)).Elem(), SchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryClusterModeSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryDekCredentialsInput)(nil)).Elem(), SchemaRegistryDekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryDekCredentialsPtrInput)(nil)).Elem(), SchemaRegistryDekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryDekSchemaRegistryClusterInput)(nil)).Elem(), SchemaRegistryDekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryDekSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaRegistryDekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryKekCredentialsInput)(nil)).Elem(), SchemaRegistryKekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryKekCredentialsPtrInput)(nil)).Elem(), SchemaRegistryKekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryKekSchemaRegistryClusterInput)(nil)).Elem(), SchemaRegistryKekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRegistryKekSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaRegistryKekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRulesetInput)(nil)).Elem(), SchemaRulesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRulesetPtrInput)(nil)).Elem(), SchemaRulesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRulesetDomainRuleInput)(nil)).Elem(), SchemaRulesetDomainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRulesetDomainRuleArrayInput)(nil)).Elem(), SchemaRulesetDomainRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRulesetMigrationRuleInput)(nil)).Elem(), SchemaRulesetMigrationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaRulesetMigrationRuleArrayInput)(nil)).Elem(), SchemaRulesetMigrationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaReferenceInput)(nil)).Elem(), SchemaSchemaReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaReferenceArrayInput)(nil)).Elem(), SchemaSchemaReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaRegistryClusterInput)(nil)).Elem(), SchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SchemaSchemaRegistryClusterPtrInput)(nil)).Elem(), SchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigCredentialsInput)(nil)).Elem(), SubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigCredentialsPtrInput)(nil)).Elem(), SubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigSchemaRegistryClusterInput)(nil)).Elem(), SubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), SubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeCredentialsInput)(nil)).Elem(), SubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeCredentialsPtrInput)(nil)).Elem(), SubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeSchemaRegistryClusterInput)(nil)).Elem(), SubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubjectModeSchemaRegistryClusterPtrInput)(nil)).Elem(), SubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagBindingCredentialsInput)(nil)).Elem(), TagBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagBindingCredentialsPtrInput)(nil)).Elem(), TagBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagBindingSchemaRegistryClusterInput)(nil)).Elem(), TagBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagBindingSchemaRegistryClusterPtrInput)(nil)).Elem(), TagBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagCredentialsInput)(nil)).Elem(), TagCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagCredentialsPtrInput)(nil)).Elem(), TagCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagSchemaRegistryClusterInput)(nil)).Elem(), TagSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagSchemaRegistryClusterPtrInput)(nil)).Elem(), TagSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentAwsInput)(nil)).Elem(), TransitGatewayAttachmentAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentAwsPtrInput)(nil)).Elem(), TransitGatewayAttachmentAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentEnvironmentInput)(nil)).Elem(), TransitGatewayAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentEnvironmentPtrInput)(nil)).Elem(), TransitGatewayAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentNetworkInput)(nil)).Elem(), TransitGatewayAttachmentNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayAttachmentNetworkPtrInput)(nil)).Elem(), TransitGatewayAttachmentNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointAwsEgressPrivateLinkEndpointInput)(nil)).Elem(), GetAccessPointAwsEgressPrivateLinkEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointAwsEgressPrivateLinkEndpointArrayInput)(nil)).Elem(), GetAccessPointAwsEgressPrivateLinkEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointAzureEgressPrivateLinkEndpointInput)(nil)).Elem(), GetAccessPointAzureEgressPrivateLinkEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointAzureEgressPrivateLinkEndpointArrayInput)(nil)).Elem(), GetAccessPointAzureEgressPrivateLinkEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointEnvironmentInput)(nil)).Elem(), GetAccessPointEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointGatewayInput)(nil)).Elem(), GetAccessPointGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointGatewayArrayInput)(nil)).Elem(), GetAccessPointGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataAttributeDefinitionInput)(nil)).Elem(), GetBusinessMetadataAttributeDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataAttributeDefinitionArrayInput)(nil)).Elem(), GetBusinessMetadataAttributeDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataBindingCredentialsInput)(nil)).Elem(), GetBusinessMetadataBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataBindingCredentialsPtrInput)(nil)).Elem(), GetBusinessMetadataBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataBindingSchemaRegistryClusterInput)(nil)).Elem(), GetBusinessMetadataBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataBindingSchemaRegistryClusterPtrInput)(nil)).Elem(), GetBusinessMetadataBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataCredentialsInput)(nil)).Elem(), GetBusinessMetadataCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataCredentialsPtrInput)(nil)).Elem(), GetBusinessMetadataCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataSchemaRegistryClusterInput)(nil)).Elem(), GetBusinessMetadataSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBusinessMetadataSchemaRegistryClusterPtrInput)(nil)).Elem(), GetBusinessMetadataSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetByokKeyAwInput)(nil)).Elem(), GetByokKeyAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetByokKeyAwArrayInput)(nil)).Elem(), GetByokKeyAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetByokKeyAzureInput)(nil)).Elem(), GetByokKeyAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetByokKeyAzureArrayInput)(nil)).Elem(), GetByokKeyAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetByokKeyGcpInput)(nil)).Elem(), GetByokKeyGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetByokKeyGcpArrayInput)(nil)).Elem(), GetByokKeyGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsRecordEnvironmentInput)(nil)).Elem(), GetDnsRecordEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsRecordGatewayInput)(nil)).Elem(), GetDnsRecordGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsRecordGatewayArrayInput)(nil)).Elem(), GetDnsRecordGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsRecordPrivateLinkAccessPointInput)(nil)).Elem(), GetDnsRecordPrivateLinkAccessPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDnsRecordPrivateLinkAccessPointArrayInput)(nil)).Elem(), GetDnsRecordPrivateLinkAccessPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentStreamGovernanceInput)(nil)).Elem(), GetEnvironmentStreamGovernanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentStreamGovernancePtrInput)(nil)).Elem(), GetEnvironmentStreamGovernanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFlinkComputePoolEnvironmentInput)(nil)).Elem(), GetFlinkComputePoolEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAwsEgressPrivateLinkGatewayInput)(nil)).Elem(), GetGatewayAwsEgressPrivateLinkGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAwsEgressPrivateLinkGatewayArrayInput)(nil)).Elem(), GetGatewayAwsEgressPrivateLinkGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAwsPeeringGatewayInput)(nil)).Elem(), GetGatewayAwsPeeringGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAwsPeeringGatewayArrayInput)(nil)).Elem(), GetGatewayAwsPeeringGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAzureEgressPrivateLinkGatewayInput)(nil)).Elem(), GetGatewayAzureEgressPrivateLinkGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAzureEgressPrivateLinkGatewayArrayInput)(nil)).Elem(), GetGatewayAzureEgressPrivateLinkGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAzurePeeringGatewayInput)(nil)).Elem(), GetGatewayAzurePeeringGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayAzurePeeringGatewayArrayInput)(nil)).Elem(), GetGatewayAzurePeeringGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayEnvironmentInput)(nil)).Elem(), GetGatewayEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIdentityPoolIdentityProviderInput)(nil)).Elem(), GetIdentityPoolIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvitationCreatorInput)(nil)).Elem(), GetInvitationCreatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvitationCreatorArrayInput)(nil)).Elem(), GetInvitationCreatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvitationUserInput)(nil)).Elem(), GetInvitationUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvitationUserArrayInput)(nil)).Elem(), GetInvitationUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesFilterInput)(nil)).Elem(), GetIpAddressesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesFilterPtrInput)(nil)).Elem(), GetIpAddressesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressInput)(nil)).Elem(), GetIpAddressesIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressArrayInput)(nil)).Elem(), GetIpAddressesIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaEnvironmentInput)(nil)).Elem(), GetKafkaClientQuotaEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaEnvironmentArrayInput)(nil)).Elem(), GetKafkaClientQuotaEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaKafkaClusterInput)(nil)).Elem(), GetKafkaClientQuotaKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaKafkaClusterArrayInput)(nil)).Elem(), GetKafkaClientQuotaKafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaThroughputInput)(nil)).Elem(), GetKafkaClientQuotaThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClientQuotaThroughputArrayInput)(nil)).Elem(), GetKafkaClientQuotaThroughputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterBasicInput)(nil)).Elem(), GetKafkaClusterBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterBasicArrayInput)(nil)).Elem(), GetKafkaClusterBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterByokKeyInput)(nil)).Elem(), GetKafkaClusterByokKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterByokKeyArrayInput)(nil)).Elem(), GetKafkaClusterByokKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterDedicatedInput)(nil)).Elem(), GetKafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterDedicatedPtrInput)(nil)).Elem(), GetKafkaClusterDedicatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterEnterpriseInput)(nil)).Elem(), GetKafkaClusterEnterpriseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterEnterpriseArrayInput)(nil)).Elem(), GetKafkaClusterEnterpriseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterEnvironmentInput)(nil)).Elem(), GetKafkaClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterFreightInput)(nil)).Elem(), GetKafkaClusterFreightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterFreightArrayInput)(nil)).Elem(), GetKafkaClusterFreightArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterNetworkInput)(nil)).Elem(), GetKafkaClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterNetworkArrayInput)(nil)).Elem(), GetKafkaClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterStandardInput)(nil)).Elem(), GetKafkaClusterStandardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaClusterStandardArrayInput)(nil)).Elem(), GetKafkaClusterStandardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicCredentialsInput)(nil)).Elem(), GetKafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicCredentialsPtrInput)(nil)).Elem(), GetKafkaTopicCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicKafkaClusterInput)(nil)).Elem(), GetKafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKafkaTopicKafkaClusterPtrInput)(nil)).Elem(), GetKafkaTopicKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterCredentialIdentityInput)(nil)).Elem(), GetKsqlClusterCredentialIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterCredentialIdentityArrayInput)(nil)).Elem(), GetKsqlClusterCredentialIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterEnvironmentInput)(nil)).Elem(), GetKsqlClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterKafkaClusterInput)(nil)).Elem(), GetKsqlClusterKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKsqlClusterKafkaClusterArrayInput)(nil)).Elem(), GetKsqlClusterKafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAwInput)(nil)).Elem(), GetNetworkAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAwArrayInput)(nil)).Elem(), GetNetworkAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAzureInput)(nil)).Elem(), GetNetworkAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAzureArrayInput)(nil)).Elem(), GetNetworkAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDnsConfigInput)(nil)).Elem(), GetNetworkDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkDnsConfigArrayInput)(nil)).Elem(), GetNetworkDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkEnvironmentInput)(nil)).Elem(), GetNetworkEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGatewayInput)(nil)).Elem(), GetNetworkGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGatewayArrayInput)(nil)).Elem(), GetNetworkGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGcpInput)(nil)).Elem(), GetNetworkGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkGcpArrayInput)(nil)).Elem(), GetNetworkGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkEndpointEnvironmentInput)(nil)).Elem(), GetNetworkLinkEndpointEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkEndpointNetworkInput)(nil)).Elem(), GetNetworkLinkEndpointNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkEndpointNetworkArrayInput)(nil)).Elem(), GetNetworkLinkEndpointNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkEndpointNetworkLinkServiceInput)(nil)).Elem(), GetNetworkLinkEndpointNetworkLinkServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkEndpointNetworkLinkServiceArrayInput)(nil)).Elem(), GetNetworkLinkEndpointNetworkLinkServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkServiceAcceptInput)(nil)).Elem(), GetNetworkLinkServiceAcceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkServiceAcceptPtrInput)(nil)).Elem(), GetNetworkLinkServiceAcceptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkServiceEnvironmentInput)(nil)).Elem(), GetNetworkLinkServiceEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkServiceNetworkInput)(nil)).Elem(), GetNetworkLinkServiceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkLinkServiceNetworkArrayInput)(nil)).Elem(), GetNetworkLinkServiceNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkZoneInfoInput)(nil)).Elem(), GetNetworkZoneInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkZoneInfoArrayInput)(nil)).Elem(), GetNetworkZoneInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAwInput)(nil)).Elem(), GetPeeringAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAwArrayInput)(nil)).Elem(), GetPeeringAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAzureInput)(nil)).Elem(), GetPeeringAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringAzureArrayInput)(nil)).Elem(), GetPeeringAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringEnvironmentInput)(nil)).Elem(), GetPeeringEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringGcpInput)(nil)).Elem(), GetPeeringGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringGcpArrayInput)(nil)).Elem(), GetPeeringGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringNetworkInput)(nil)).Elem(), GetPeeringNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeeringNetworkArrayInput)(nil)).Elem(), GetPeeringNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAwInput)(nil)).Elem(), GetPrivateLinkAccessAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAwArrayInput)(nil)).Elem(), GetPrivateLinkAccessAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAzureInput)(nil)).Elem(), GetPrivateLinkAccessAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessAzureArrayInput)(nil)).Elem(), GetPrivateLinkAccessAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessEnvironmentInput)(nil)).Elem(), GetPrivateLinkAccessEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessGcpInput)(nil)).Elem(), GetPrivateLinkAccessGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessGcpArrayInput)(nil)).Elem(), GetPrivateLinkAccessGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessNetworkInput)(nil)).Elem(), GetPrivateLinkAccessNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAccessNetworkArrayInput)(nil)).Elem(), GetPrivateLinkAccessNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentAwInput)(nil)).Elem(), GetPrivateLinkAttachmentAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentAwArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentAzureInput)(nil)).Elem(), GetPrivateLinkAttachmentAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentAzureArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAwInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAwArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAzureInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionAzureArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionEnvironmentInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionGcpInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionGcpArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentEnvironmentInput)(nil)).Elem(), GetPrivateLinkAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentGcpInput)(nil)).Elem(), GetPrivateLinkAttachmentGcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateLinkAttachmentGcpArrayInput)(nil)).Elem(), GetPrivateLinkAttachmentGcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaCredentialsInput)(nil)).Elem(), GetSchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaCredentialsPtrInput)(nil)).Elem(), GetSchemaCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaMetadataInput)(nil)).Elem(), GetSchemaMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaMetadataPtrInput)(nil)).Elem(), GetSchemaMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaMetadataTagInput)(nil)).Elem(), GetSchemaMetadataTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaMetadataTagArrayInput)(nil)).Elem(), GetSchemaMetadataTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentialsInput)(nil)).Elem(), GetSchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigCredentialsPtrInput)(nil)).Elem(), GetSchemaRegistryClusterConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterEnvironmentInput)(nil)).Elem(), GetSchemaRegistryClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeCredentialsInput)(nil)).Elem(), GetSchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeCredentialsPtrInput)(nil)).Elem(), GetSchemaRegistryClusterModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClusterModeSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaRegistryClusterModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClustersClusterInput)(nil)).Elem(), GetSchemaRegistryClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClustersClusterArrayInput)(nil)).Elem(), GetSchemaRegistryClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClustersClusterEnvironmentInput)(nil)).Elem(), GetSchemaRegistryClustersClusterEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClustersEnvironmentInput)(nil)).Elem(), GetSchemaRegistryClustersEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryClustersEnvironmentPtrInput)(nil)).Elem(), GetSchemaRegistryClustersEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryDekCredentialsInput)(nil)).Elem(), GetSchemaRegistryDekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryDekCredentialsPtrInput)(nil)).Elem(), GetSchemaRegistryDekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryDekSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaRegistryDekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryDekSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaRegistryDekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryKekCredentialsInput)(nil)).Elem(), GetSchemaRegistryKekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryKekCredentialsPtrInput)(nil)).Elem(), GetSchemaRegistryKekCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryKekSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaRegistryKekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRegistryKekSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaRegistryKekSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRulesetInput)(nil)).Elem(), GetSchemaRulesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRulesetPtrInput)(nil)).Elem(), GetSchemaRulesetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRulesetDomainRuleInput)(nil)).Elem(), GetSchemaRulesetDomainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRulesetDomainRuleArrayInput)(nil)).Elem(), GetSchemaRulesetDomainRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRulesetMigrationRuleInput)(nil)).Elem(), GetSchemaRulesetMigrationRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaRulesetMigrationRuleArrayInput)(nil)).Elem(), GetSchemaRulesetMigrationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaReferenceInput)(nil)).Elem(), GetSchemaSchemaReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaReferenceArrayInput)(nil)).Elem(), GetSchemaSchemaReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaRegistryClusterInput)(nil)).Elem(), GetSchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemaSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemaSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasCredentialsInput)(nil)).Elem(), GetSchemasCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasCredentialsPtrInput)(nil)).Elem(), GetSchemasCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasFilterInput)(nil)).Elem(), GetSchemasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasFilterPtrInput)(nil)).Elem(), GetSchemasFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasSchemaInput)(nil)).Elem(), GetSchemasSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasSchemaArrayInput)(nil)).Elem(), GetSchemasSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasSchemaRegistryClusterInput)(nil)).Elem(), GetSchemasSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSchemasSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasSchemaSchemaReferenceInput)(nil)).Elem(), GetSchemasSchemaSchemaReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSchemasSchemaSchemaReferenceArrayInput)(nil)).Elem(), GetSchemasSchemaSchemaReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigCredentialsInput)(nil)).Elem(), GetSubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigCredentialsPtrInput)(nil)).Elem(), GetSubjectConfigCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigSchemaRegistryClusterInput)(nil)).Elem(), GetSubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectConfigSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSubjectConfigSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeCredentialsInput)(nil)).Elem(), GetSubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeCredentialsPtrInput)(nil)).Elem(), GetSubjectModeCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeSchemaRegistryClusterInput)(nil)).Elem(), GetSubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubjectModeSchemaRegistryClusterPtrInput)(nil)).Elem(), GetSubjectModeSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagBindingCredentialsInput)(nil)).Elem(), GetTagBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagBindingCredentialsPtrInput)(nil)).Elem(), GetTagBindingCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagBindingSchemaRegistryClusterInput)(nil)).Elem(), GetTagBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagBindingSchemaRegistryClusterPtrInput)(nil)).Elem(), GetTagBindingSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagCredentialsInput)(nil)).Elem(), GetTagCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagCredentialsPtrInput)(nil)).Elem(), GetTagCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagSchemaRegistryClusterInput)(nil)).Elem(), GetTagSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagSchemaRegistryClusterPtrInput)(nil)).Elem(), GetTagSchemaRegistryClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentAwInput)(nil)).Elem(), GetTransitGatewayAttachmentAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentAwArrayInput)(nil)).Elem(), GetTransitGatewayAttachmentAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentEnvironmentInput)(nil)).Elem(), GetTransitGatewayAttachmentEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentNetworkInput)(nil)).Elem(), GetTransitGatewayAttachmentNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitGatewayAttachmentNetworkArrayInput)(nil)).Elem(), GetTransitGatewayAttachmentNetworkArray{})
	pulumi.RegisterOutputType(AccessPointAwsEgressPrivateLinkEndpointOutput{})
	pulumi.RegisterOutputType(AccessPointAwsEgressPrivateLinkEndpointPtrOutput{})
	pulumi.RegisterOutputType(AccessPointAzureEgressPrivateLinkEndpointOutput{})
	pulumi.RegisterOutputType(AccessPointAzureEgressPrivateLinkEndpointPtrOutput{})
	pulumi.RegisterOutputType(AccessPointEnvironmentOutput{})
	pulumi.RegisterOutputType(AccessPointEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(AccessPointGatewayOutput{})
	pulumi.RegisterOutputType(AccessPointGatewayPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourcePtrOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceEnvironmentOutput{})
	pulumi.RegisterOutputType(ApiKeyManagedResourceEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ApiKeyOwnerOutput{})
	pulumi.RegisterOutputType(ApiKeyOwnerPtrOutput{})
	pulumi.RegisterOutputType(BusinessMetadataAttributeDefinitionOutput{})
	pulumi.RegisterOutputType(BusinessMetadataAttributeDefinitionArrayOutput{})
	pulumi.RegisterOutputType(BusinessMetadataBindingCredentialsOutput{})
	pulumi.RegisterOutputType(BusinessMetadataBindingCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BusinessMetadataBindingSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(BusinessMetadataBindingSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(BusinessMetadataCredentialsOutput{})
	pulumi.RegisterOutputType(BusinessMetadataCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BusinessMetadataSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(BusinessMetadataSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(ByokKeyAwsOutput{})
	pulumi.RegisterOutputType(ByokKeyAwsPtrOutput{})
	pulumi.RegisterOutputType(ByokKeyAzureOutput{})
	pulumi.RegisterOutputType(ByokKeyAzurePtrOutput{})
	pulumi.RegisterOutputType(ByokKeyGcpOutput{})
	pulumi.RegisterOutputType(ByokKeyGcpPtrOutput{})
	pulumi.RegisterOutputType(CatalogEntityAttributesCredentialsOutput{})
	pulumi.RegisterOutputType(CatalogEntityAttributesCredentialsPtrOutput{})
	pulumi.RegisterOutputType(CatalogEntityAttributesSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(CatalogEntityAttributesSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterLinkDestinationKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkLocalKafkaClusterOutput{})
	pulumi.RegisterOutputType(ClusterLinkLocalKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkLocalKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterLinkLocalKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkRemoteKafkaClusterOutput{})
	pulumi.RegisterOutputType(ClusterLinkRemoteKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkRemoteKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterLinkRemoteKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(ClusterLinkSourceKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorEnvironmentOutput{})
	pulumi.RegisterOutputType(ConnectorEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(DnsForwarderEnvironmentOutput{})
	pulumi.RegisterOutputType(DnsForwarderEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(DnsForwarderForwardViaIpOutput{})
	pulumi.RegisterOutputType(DnsForwarderForwardViaIpPtrOutput{})
	pulumi.RegisterOutputType(DnsForwarderGatewayOutput{})
	pulumi.RegisterOutputType(DnsForwarderGatewayPtrOutput{})
	pulumi.RegisterOutputType(DnsRecordEnvironmentOutput{})
	pulumi.RegisterOutputType(DnsRecordEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(DnsRecordGatewayOutput{})
	pulumi.RegisterOutputType(DnsRecordGatewayPtrOutput{})
	pulumi.RegisterOutputType(DnsRecordPrivateLinkAccessPointOutput{})
	pulumi.RegisterOutputType(DnsRecordPrivateLinkAccessPointPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStreamGovernanceOutput{})
	pulumi.RegisterOutputType(EnvironmentStreamGovernancePtrOutput{})
	pulumi.RegisterOutputType(FlinkComputePoolEnvironmentOutput{})
	pulumi.RegisterOutputType(FlinkComputePoolEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(FlinkStatementComputePoolOutput{})
	pulumi.RegisterOutputType(FlinkStatementComputePoolPtrOutput{})
	pulumi.RegisterOutputType(FlinkStatementCredentialsOutput{})
	pulumi.RegisterOutputType(FlinkStatementCredentialsPtrOutput{})
	pulumi.RegisterOutputType(FlinkStatementEnvironmentOutput{})
	pulumi.RegisterOutputType(FlinkStatementEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(FlinkStatementOrganizationOutput{})
	pulumi.RegisterOutputType(FlinkStatementOrganizationPtrOutput{})
	pulumi.RegisterOutputType(FlinkStatementPrincipalOutput{})
	pulumi.RegisterOutputType(FlinkStatementPrincipalPtrOutput{})
	pulumi.RegisterOutputType(IdentityPoolIdentityProviderOutput{})
	pulumi.RegisterOutputType(IdentityPoolIdentityProviderPtrOutput{})
	pulumi.RegisterOutputType(InvitationCreatorOutput{})
	pulumi.RegisterOutputType(InvitationCreatorArrayOutput{})
	pulumi.RegisterOutputType(InvitationUserOutput{})
	pulumi.RegisterOutputType(InvitationUserArrayOutput{})
	pulumi.RegisterOutputType(KafkaAclCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaAclCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaAclKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaAclKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaEnvironmentOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaThroughputOutput{})
	pulumi.RegisterOutputType(KafkaClientQuotaThroughputPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterBasicOutput{})
	pulumi.RegisterOutputType(KafkaClusterBasicPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterByokKeyOutput{})
	pulumi.RegisterOutputType(KafkaClusterByokKeyPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaClusterConfigKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterDedicatedOutput{})
	pulumi.RegisterOutputType(KafkaClusterDedicatedPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnterpriseOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnterpriseArrayOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(KafkaClusterEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterFreightOutput{})
	pulumi.RegisterOutputType(KafkaClusterFreightArrayOutput{})
	pulumi.RegisterOutputType(KafkaClusterNetworkOutput{})
	pulumi.RegisterOutputType(KafkaClusterNetworkPtrOutput{})
	pulumi.RegisterOutputType(KafkaClusterStandardOutput{})
	pulumi.RegisterOutputType(KafkaClusterStandardPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicClusterLinkOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicClusterLinkPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicKafkaClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicSourceKafkaTopicOutput{})
	pulumi.RegisterOutputType(KafkaMirrorTopicSourceKafkaTopicPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicCredentialsOutput{})
	pulumi.RegisterOutputType(KafkaTopicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KafkaTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(KsqlClusterCredentialIdentityOutput{})
	pulumi.RegisterOutputType(KsqlClusterCredentialIdentityPtrOutput{})
	pulumi.RegisterOutputType(KsqlClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(KsqlClusterEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(KsqlClusterKafkaClusterOutput{})
	pulumi.RegisterOutputType(KsqlClusterKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(NetworkAwOutput{})
	pulumi.RegisterOutputType(NetworkAwArrayOutput{})
	pulumi.RegisterOutputType(NetworkAzureOutput{})
	pulumi.RegisterOutputType(NetworkAzureArrayOutput{})
	pulumi.RegisterOutputType(NetworkDnsConfigOutput{})
	pulumi.RegisterOutputType(NetworkDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(NetworkEnvironmentOutput{})
	pulumi.RegisterOutputType(NetworkEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(NetworkGatewayOutput{})
	pulumi.RegisterOutputType(NetworkGatewayArrayOutput{})
	pulumi.RegisterOutputType(NetworkGcpOutput{})
	pulumi.RegisterOutputType(NetworkGcpArrayOutput{})
	pulumi.RegisterOutputType(NetworkLinkEndpointEnvironmentOutput{})
	pulumi.RegisterOutputType(NetworkLinkEndpointEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(NetworkLinkEndpointNetworkOutput{})
	pulumi.RegisterOutputType(NetworkLinkEndpointNetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworkLinkEndpointNetworkLinkServiceOutput{})
	pulumi.RegisterOutputType(NetworkLinkEndpointNetworkLinkServicePtrOutput{})
	pulumi.RegisterOutputType(NetworkLinkServiceAcceptOutput{})
	pulumi.RegisterOutputType(NetworkLinkServiceAcceptPtrOutput{})
	pulumi.RegisterOutputType(NetworkLinkServiceEnvironmentOutput{})
	pulumi.RegisterOutputType(NetworkLinkServiceEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(NetworkLinkServiceNetworkOutput{})
	pulumi.RegisterOutputType(NetworkLinkServiceNetworkPtrOutput{})
	pulumi.RegisterOutputType(NetworkZoneInfoOutput{})
	pulumi.RegisterOutputType(NetworkZoneInfoArrayOutput{})
	pulumi.RegisterOutputType(PeeringAwsOutput{})
	pulumi.RegisterOutputType(PeeringAwsPtrOutput{})
	pulumi.RegisterOutputType(PeeringAzureOutput{})
	pulumi.RegisterOutputType(PeeringAzurePtrOutput{})
	pulumi.RegisterOutputType(PeeringEnvironmentOutput{})
	pulumi.RegisterOutputType(PeeringEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PeeringGcpOutput{})
	pulumi.RegisterOutputType(PeeringGcpPtrOutput{})
	pulumi.RegisterOutputType(PeeringNetworkOutput{})
	pulumi.RegisterOutputType(PeeringNetworkPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAwsOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAwsPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAzureOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessAzurePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessEnvironmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessGcpOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessGcpPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessNetworkOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessNetworkPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentAwOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentAwArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentAzureOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentAzureArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionAwsOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionAwsPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionAzureOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionAzurePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionEnvironmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionGcpOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionGcpPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentConnectionPrivateLinkAttachmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentEnvironmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentGcpOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentGcpArrayOutput{})
	pulumi.RegisterOutputType(SchemaCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaExporterCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaExporterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaExporterDestinationSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaExporterDestinationSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaExporterDestinationSchemaRegistryClusterCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaExporterDestinationSchemaRegistryClusterCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaExporterSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaExporterSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaMetadataOutput{})
	pulumi.RegisterOutputType(SchemaMetadataPtrOutput{})
	pulumi.RegisterOutputType(SchemaMetadataTagOutput{})
	pulumi.RegisterOutputType(SchemaMetadataTagArrayOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaRegistryClusterModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryDekCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaRegistryDekCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryDekSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaRegistryDekSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryKekCredentialsOutput{})
	pulumi.RegisterOutputType(SchemaRegistryKekCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SchemaRegistryKekSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaRegistryKekSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SchemaRulesetOutput{})
	pulumi.RegisterOutputType(SchemaRulesetPtrOutput{})
	pulumi.RegisterOutputType(SchemaRulesetDomainRuleOutput{})
	pulumi.RegisterOutputType(SchemaRulesetDomainRuleArrayOutput{})
	pulumi.RegisterOutputType(SchemaRulesetMigrationRuleOutput{})
	pulumi.RegisterOutputType(SchemaRulesetMigrationRuleArrayOutput{})
	pulumi.RegisterOutputType(SchemaSchemaReferenceOutput{})
	pulumi.RegisterOutputType(SchemaSchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(SchemaSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SchemaSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SubjectConfigCredentialsOutput{})
	pulumi.RegisterOutputType(SubjectConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SubjectConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SubjectConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(SubjectModeCredentialsOutput{})
	pulumi.RegisterOutputType(SubjectModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(SubjectModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(SubjectModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(TagBindingCredentialsOutput{})
	pulumi.RegisterOutputType(TagBindingCredentialsPtrOutput{})
	pulumi.RegisterOutputType(TagBindingSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(TagBindingSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(TagCredentialsOutput{})
	pulumi.RegisterOutputType(TagCredentialsPtrOutput{})
	pulumi.RegisterOutputType(TagSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(TagSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentAwsOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentAwsPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentEnvironmentOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentNetworkOutput{})
	pulumi.RegisterOutputType(TransitGatewayAttachmentNetworkPtrOutput{})
	pulumi.RegisterOutputType(GetAccessPointAwsEgressPrivateLinkEndpointOutput{})
	pulumi.RegisterOutputType(GetAccessPointAwsEgressPrivateLinkEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAccessPointAzureEgressPrivateLinkEndpointOutput{})
	pulumi.RegisterOutputType(GetAccessPointAzureEgressPrivateLinkEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetAccessPointEnvironmentOutput{})
	pulumi.RegisterOutputType(GetAccessPointGatewayOutput{})
	pulumi.RegisterOutputType(GetAccessPointGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataAttributeDefinitionOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataAttributeDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataBindingCredentialsOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataBindingCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataBindingSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataBindingSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataCredentialsOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetBusinessMetadataSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetByokKeyAwOutput{})
	pulumi.RegisterOutputType(GetByokKeyAwArrayOutput{})
	pulumi.RegisterOutputType(GetByokKeyAzureOutput{})
	pulumi.RegisterOutputType(GetByokKeyAzureArrayOutput{})
	pulumi.RegisterOutputType(GetByokKeyGcpOutput{})
	pulumi.RegisterOutputType(GetByokKeyGcpArrayOutput{})
	pulumi.RegisterOutputType(GetDnsRecordEnvironmentOutput{})
	pulumi.RegisterOutputType(GetDnsRecordGatewayOutput{})
	pulumi.RegisterOutputType(GetDnsRecordGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetDnsRecordPrivateLinkAccessPointOutput{})
	pulumi.RegisterOutputType(GetDnsRecordPrivateLinkAccessPointArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentStreamGovernanceOutput{})
	pulumi.RegisterOutputType(GetEnvironmentStreamGovernancePtrOutput{})
	pulumi.RegisterOutputType(GetFlinkComputePoolEnvironmentOutput{})
	pulumi.RegisterOutputType(GetGatewayAwsEgressPrivateLinkGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewayAwsEgressPrivateLinkGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayAwsPeeringGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewayAwsPeeringGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayAzureEgressPrivateLinkGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewayAzureEgressPrivateLinkGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayAzurePeeringGatewayOutput{})
	pulumi.RegisterOutputType(GetGatewayAzurePeeringGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayEnvironmentOutput{})
	pulumi.RegisterOutputType(GetIdentityPoolIdentityProviderOutput{})
	pulumi.RegisterOutputType(GetInvitationCreatorOutput{})
	pulumi.RegisterOutputType(GetInvitationCreatorArrayOutput{})
	pulumi.RegisterOutputType(GetInvitationUserOutput{})
	pulumi.RegisterOutputType(GetInvitationUserArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesFilterOutput{})
	pulumi.RegisterOutputType(GetIpAddressesFilterPtrOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaKafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaThroughputOutput{})
	pulumi.RegisterOutputType(GetKafkaClientQuotaThroughputArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterBasicOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterBasicArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterByokKeyOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterByokKeyArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterDedicatedOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterDedicatedPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterEnterpriseOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterEnterpriseArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterFreightOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterFreightArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterNetworkOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterStandardOutput{})
	pulumi.RegisterOutputType(GetKafkaClusterStandardArrayOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicCredentialsOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetKafkaTopicKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterCredentialIdentityOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterCredentialIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterKafkaClusterOutput{})
	pulumi.RegisterOutputType(GetKsqlClusterKafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAwOutput{})
	pulumi.RegisterOutputType(GetNetworkAwArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAzureOutput{})
	pulumi.RegisterOutputType(GetNetworkAzureArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkDnsConfigOutput{})
	pulumi.RegisterOutputType(GetNetworkDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkEnvironmentOutput{})
	pulumi.RegisterOutputType(GetNetworkGatewayOutput{})
	pulumi.RegisterOutputType(GetNetworkGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkGcpOutput{})
	pulumi.RegisterOutputType(GetNetworkGcpArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkEndpointEnvironmentOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkEndpointNetworkOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkEndpointNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkEndpointNetworkLinkServiceOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkEndpointNetworkLinkServiceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkServiceAcceptOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkServiceAcceptPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkServiceEnvironmentOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkServiceNetworkOutput{})
	pulumi.RegisterOutputType(GetNetworkLinkServiceNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkZoneInfoOutput{})
	pulumi.RegisterOutputType(GetNetworkZoneInfoArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAwOutput{})
	pulumi.RegisterOutputType(GetPeeringAwArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringAzureOutput{})
	pulumi.RegisterOutputType(GetPeeringAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPeeringGcpOutput{})
	pulumi.RegisterOutputType(GetPeeringGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPeeringNetworkOutput{})
	pulumi.RegisterOutputType(GetPeeringNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAwOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAwArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAzureOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessGcpOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessNetworkOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAccessNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentAwOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentAwArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentAzureOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionAwOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionAwArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionAzureOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionAzureArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionGcpOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionGcpArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentConnectionPrivateLinkAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentEnvironmentOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentGcpOutput{})
	pulumi.RegisterOutputType(GetPrivateLinkAttachmentGcpArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaMetadataOutput{})
	pulumi.RegisterOutputType(GetSchemaMetadataPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaMetadataTagOutput{})
	pulumi.RegisterOutputType(GetSchemaMetadataTagArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClusterModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClustersClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClustersClusterEnvironmentOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClustersEnvironmentOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryClustersEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryDekCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryDekCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryDekSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryDekSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryKekCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryKekCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryKekSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaRegistryKekSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRulesetOutput{})
	pulumi.RegisterOutputType(GetSchemaRulesetPtrOutput{})
	pulumi.RegisterOutputType(GetSchemaRulesetDomainRuleOutput{})
	pulumi.RegisterOutputType(GetSchemaRulesetDomainRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaRulesetMigrationRuleOutput{})
	pulumi.RegisterOutputType(GetSchemaRulesetMigrationRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaReferenceOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemaSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemasCredentialsOutput{})
	pulumi.RegisterOutputType(GetSchemasCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSchemasFilterOutput{})
	pulumi.RegisterOutputType(GetSchemasFilterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemasSchemaOutput{})
	pulumi.RegisterOutputType(GetSchemasSchemaArrayOutput{})
	pulumi.RegisterOutputType(GetSchemasSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSchemasSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSchemasSchemaSchemaReferenceOutput{})
	pulumi.RegisterOutputType(GetSchemasSchemaSchemaReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigCredentialsOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSubjectConfigSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectModeCredentialsOutput{})
	pulumi.RegisterOutputType(GetSubjectModeCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetSubjectModeSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetSubjectModeSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetTagBindingCredentialsOutput{})
	pulumi.RegisterOutputType(GetTagBindingCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetTagBindingSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetTagBindingSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetTagCredentialsOutput{})
	pulumi.RegisterOutputType(GetTagCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetTagSchemaRegistryClusterOutput{})
	pulumi.RegisterOutputType(GetTagSchemaRegistryClusterPtrOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentAwOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentAwArrayOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentEnvironmentOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentNetworkOutput{})
	pulumi.RegisterOutputType(GetTransitGatewayAttachmentNetworkArrayOutput{})
}
