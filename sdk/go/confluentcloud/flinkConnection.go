// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// You can import a Flink connection by using the Flink Connection name, for example:
//
// Option #1: Manage multiple Flink Compute Pools in the same Pulumi Stack
//
// $ export IMPORT_CONFLUENT_ORGANIZATION_ID="<organization_id>"
//
// $ export IMPORT_CONFLUENT_ENVIRONMENT_ID="<environment_id>"
//
// $ export IMPORT_FLINK_COMPUTE_POOL_ID="<flink_compute_pool_id>"
//
// $ export IMPORT_FLINK_API_KEY="<flink_api_key>"
//
// $ export IMPORT_FLINK_API_SECRET="<flink_api_secret>"
//
// $ export IMPORT_FLINK_REST_ENDPOINT="<flink_rest_endpoint>"
//
// $ export IMPORT_FLINK_PRINCIPAL_ID="<flink_principal>"
//
// $ export API_KEY="<API_KEY>"
//
// ```sh
// $ pulumi import confluentcloud:index/flinkConnection:FlinkConnection example org-xyz123/env-abc123/connection1
// ```
//
// Option #2: Manage a single Flink Compute Pool in the same Pulumi Stack
//
// $ export API_KEY="<API_KEY>"
//
// ```sh
// $ pulumi import confluentcloud:index/flinkConnection:FlinkConnection example org-xyz123/env-abc123/connection1
// ```
//
// !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
type FlinkConnection struct {
	pulumi.CustomResourceState

	// API key for the type.
	ApiKey pulumi.StringPtrOutput `pulumi:"apiKey"`
	// The schema version of this representation of a resource.
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Access key for the type.
	AwsAccessKey pulumi.StringPtrOutput `pulumi:"awsAccessKey"`
	// Secret key for the type.
	AwsSecretKey pulumi.StringPtrOutput `pulumi:"awsSecretKey"`
	// Session token for the type.
	AwsSessionToken pulumi.StringPtrOutput           `pulumi:"awsSessionToken"`
	ComputePool     FlinkConnectionComputePoolOutput `pulumi:"computePool"`
	// The Cluster API Credentials.
	Credentials FlinkConnectionCredentialsPtrOutput `pulumi:"credentials"`
	// The unique name of the Flink Connection per organization, environment scope.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The endpoint of the flink connection.
	Endpoint    pulumi.StringOutput              `pulumi:"endpoint"`
	Environment FlinkConnectionEnvironmentOutput `pulumi:"environment"`
	// The object this REST resource represents.
	Kind         pulumi.StringOutput               `pulumi:"kind"`
	Organization FlinkConnectionOrganizationOutput `pulumi:"organization"`
	// Password for the type.
	Password  pulumi.StringPtrOutput         `pulumi:"password"`
	Principal FlinkConnectionPrincipalOutput `pulumi:"principal"`
	// The REST endpoint of the Flink Connection cluster, for example,
	// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
	RestEndpoint pulumi.StringPtrOutput `pulumi:"restEndpoint"`
	// Service Key for the type.
	ServiceKey pulumi.StringPtrOutput `pulumi:"serviceKey"`
	// The type of the flink connection.
	Type pulumi.StringOutput `pulumi:"type"`
	// Username for the type.
	Username pulumi.StringPtrOutput `pulumi:"username"`
}

// NewFlinkConnection registers a new resource with the given unique name, arguments, and options.
func NewFlinkConnection(ctx *pulumi.Context,
	name string, args *FlinkConnectionArgs, opts ...pulumi.ResourceOption) (*FlinkConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Credentials != nil {
		args.Credentials = pulumi.ToSecret(args.Credentials).(FlinkConnectionCredentialsPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"credentials",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FlinkConnection
	err := ctx.RegisterResource("confluentcloud:index/flinkConnection:FlinkConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlinkConnection gets an existing FlinkConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlinkConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlinkConnectionState, opts ...pulumi.ResourceOption) (*FlinkConnection, error) {
	var resource FlinkConnection
	err := ctx.ReadResource("confluentcloud:index/flinkConnection:FlinkConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlinkConnection resources.
type flinkConnectionState struct {
	// API key for the type.
	ApiKey *string `pulumi:"apiKey"`
	// The schema version of this representation of a resource.
	ApiVersion *string `pulumi:"apiVersion"`
	// Access key for the type.
	AwsAccessKey *string `pulumi:"awsAccessKey"`
	// Secret key for the type.
	AwsSecretKey *string `pulumi:"awsSecretKey"`
	// Session token for the type.
	AwsSessionToken *string                     `pulumi:"awsSessionToken"`
	ComputePool     *FlinkConnectionComputePool `pulumi:"computePool"`
	// The Cluster API Credentials.
	Credentials *FlinkConnectionCredentials `pulumi:"credentials"`
	// The unique name of the Flink Connection per organization, environment scope.
	DisplayName *string `pulumi:"displayName"`
	// The endpoint of the flink connection.
	Endpoint    *string                     `pulumi:"endpoint"`
	Environment *FlinkConnectionEnvironment `pulumi:"environment"`
	// The object this REST resource represents.
	Kind         *string                      `pulumi:"kind"`
	Organization *FlinkConnectionOrganization `pulumi:"organization"`
	// Password for the type.
	Password  *string                   `pulumi:"password"`
	Principal *FlinkConnectionPrincipal `pulumi:"principal"`
	// The REST endpoint of the Flink Connection cluster, for example,
	// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
	RestEndpoint *string `pulumi:"restEndpoint"`
	// Service Key for the type.
	ServiceKey *string `pulumi:"serviceKey"`
	// The type of the flink connection.
	Type *string `pulumi:"type"`
	// Username for the type.
	Username *string `pulumi:"username"`
}

type FlinkConnectionState struct {
	// API key for the type.
	ApiKey pulumi.StringPtrInput
	// The schema version of this representation of a resource.
	ApiVersion pulumi.StringPtrInput
	// Access key for the type.
	AwsAccessKey pulumi.StringPtrInput
	// Secret key for the type.
	AwsSecretKey pulumi.StringPtrInput
	// Session token for the type.
	AwsSessionToken pulumi.StringPtrInput
	ComputePool     FlinkConnectionComputePoolPtrInput
	// The Cluster API Credentials.
	Credentials FlinkConnectionCredentialsPtrInput
	// The unique name of the Flink Connection per organization, environment scope.
	DisplayName pulumi.StringPtrInput
	// The endpoint of the flink connection.
	Endpoint    pulumi.StringPtrInput
	Environment FlinkConnectionEnvironmentPtrInput
	// The object this REST resource represents.
	Kind         pulumi.StringPtrInput
	Organization FlinkConnectionOrganizationPtrInput
	// Password for the type.
	Password  pulumi.StringPtrInput
	Principal FlinkConnectionPrincipalPtrInput
	// The REST endpoint of the Flink Connection cluster, for example,
	// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
	RestEndpoint pulumi.StringPtrInput
	// Service Key for the type.
	ServiceKey pulumi.StringPtrInput
	// The type of the flink connection.
	Type pulumi.StringPtrInput
	// Username for the type.
	Username pulumi.StringPtrInput
}

func (FlinkConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkConnectionState)(nil)).Elem()
}

type flinkConnectionArgs struct {
	// API key for the type.
	ApiKey *string `pulumi:"apiKey"`
	// Access key for the type.
	AwsAccessKey *string `pulumi:"awsAccessKey"`
	// Secret key for the type.
	AwsSecretKey *string `pulumi:"awsSecretKey"`
	// Session token for the type.
	AwsSessionToken *string                     `pulumi:"awsSessionToken"`
	ComputePool     *FlinkConnectionComputePool `pulumi:"computePool"`
	// The Cluster API Credentials.
	Credentials *FlinkConnectionCredentials `pulumi:"credentials"`
	// The unique name of the Flink Connection per organization, environment scope.
	DisplayName string `pulumi:"displayName"`
	// The endpoint of the flink connection.
	Endpoint     string                       `pulumi:"endpoint"`
	Environment  *FlinkConnectionEnvironment  `pulumi:"environment"`
	Organization *FlinkConnectionOrganization `pulumi:"organization"`
	// Password for the type.
	Password  *string                   `pulumi:"password"`
	Principal *FlinkConnectionPrincipal `pulumi:"principal"`
	// The REST endpoint of the Flink Connection cluster, for example,
	// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
	RestEndpoint *string `pulumi:"restEndpoint"`
	// Service Key for the type.
	ServiceKey *string `pulumi:"serviceKey"`
	// The type of the flink connection.
	Type string `pulumi:"type"`
	// Username for the type.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a FlinkConnection resource.
type FlinkConnectionArgs struct {
	// API key for the type.
	ApiKey pulumi.StringPtrInput
	// Access key for the type.
	AwsAccessKey pulumi.StringPtrInput
	// Secret key for the type.
	AwsSecretKey pulumi.StringPtrInput
	// Session token for the type.
	AwsSessionToken pulumi.StringPtrInput
	ComputePool     FlinkConnectionComputePoolPtrInput
	// The Cluster API Credentials.
	Credentials FlinkConnectionCredentialsPtrInput
	// The unique name of the Flink Connection per organization, environment scope.
	DisplayName pulumi.StringInput
	// The endpoint of the flink connection.
	Endpoint     pulumi.StringInput
	Environment  FlinkConnectionEnvironmentPtrInput
	Organization FlinkConnectionOrganizationPtrInput
	// Password for the type.
	Password  pulumi.StringPtrInput
	Principal FlinkConnectionPrincipalPtrInput
	// The REST endpoint of the Flink Connection cluster, for example,
	// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
	RestEndpoint pulumi.StringPtrInput
	// Service Key for the type.
	ServiceKey pulumi.StringPtrInput
	// The type of the flink connection.
	Type pulumi.StringInput
	// Username for the type.
	Username pulumi.StringPtrInput
}

func (FlinkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flinkConnectionArgs)(nil)).Elem()
}

type FlinkConnectionInput interface {
	pulumi.Input

	ToFlinkConnectionOutput() FlinkConnectionOutput
	ToFlinkConnectionOutputWithContext(ctx context.Context) FlinkConnectionOutput
}

func (*FlinkConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkConnection)(nil)).Elem()
}

func (i *FlinkConnection) ToFlinkConnectionOutput() FlinkConnectionOutput {
	return i.ToFlinkConnectionOutputWithContext(context.Background())
}

func (i *FlinkConnection) ToFlinkConnectionOutputWithContext(ctx context.Context) FlinkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkConnectionOutput)
}

// FlinkConnectionArrayInput is an input type that accepts FlinkConnectionArray and FlinkConnectionArrayOutput values.
// You can construct a concrete instance of `FlinkConnectionArrayInput` via:
//
//	FlinkConnectionArray{ FlinkConnectionArgs{...} }
type FlinkConnectionArrayInput interface {
	pulumi.Input

	ToFlinkConnectionArrayOutput() FlinkConnectionArrayOutput
	ToFlinkConnectionArrayOutputWithContext(context.Context) FlinkConnectionArrayOutput
}

type FlinkConnectionArray []FlinkConnectionInput

func (FlinkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkConnection)(nil)).Elem()
}

func (i FlinkConnectionArray) ToFlinkConnectionArrayOutput() FlinkConnectionArrayOutput {
	return i.ToFlinkConnectionArrayOutputWithContext(context.Background())
}

func (i FlinkConnectionArray) ToFlinkConnectionArrayOutputWithContext(ctx context.Context) FlinkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkConnectionArrayOutput)
}

// FlinkConnectionMapInput is an input type that accepts FlinkConnectionMap and FlinkConnectionMapOutput values.
// You can construct a concrete instance of `FlinkConnectionMapInput` via:
//
//	FlinkConnectionMap{ "key": FlinkConnectionArgs{...} }
type FlinkConnectionMapInput interface {
	pulumi.Input

	ToFlinkConnectionMapOutput() FlinkConnectionMapOutput
	ToFlinkConnectionMapOutputWithContext(context.Context) FlinkConnectionMapOutput
}

type FlinkConnectionMap map[string]FlinkConnectionInput

func (FlinkConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkConnection)(nil)).Elem()
}

func (i FlinkConnectionMap) ToFlinkConnectionMapOutput() FlinkConnectionMapOutput {
	return i.ToFlinkConnectionMapOutputWithContext(context.Background())
}

func (i FlinkConnectionMap) ToFlinkConnectionMapOutputWithContext(ctx context.Context) FlinkConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlinkConnectionMapOutput)
}

type FlinkConnectionOutput struct{ *pulumi.OutputState }

func (FlinkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlinkConnection)(nil)).Elem()
}

func (o FlinkConnectionOutput) ToFlinkConnectionOutput() FlinkConnectionOutput {
	return o
}

func (o FlinkConnectionOutput) ToFlinkConnectionOutputWithContext(ctx context.Context) FlinkConnectionOutput {
	return o
}

// API key for the type.
func (o FlinkConnectionOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// The schema version of this representation of a resource.
func (o FlinkConnectionOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Access key for the type.
func (o FlinkConnectionOutput) AwsAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.AwsAccessKey }).(pulumi.StringPtrOutput)
}

// Secret key for the type.
func (o FlinkConnectionOutput) AwsSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.AwsSecretKey }).(pulumi.StringPtrOutput)
}

// Session token for the type.
func (o FlinkConnectionOutput) AwsSessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.AwsSessionToken }).(pulumi.StringPtrOutput)
}

func (o FlinkConnectionOutput) ComputePool() FlinkConnectionComputePoolOutput {
	return o.ApplyT(func(v *FlinkConnection) FlinkConnectionComputePoolOutput { return v.ComputePool }).(FlinkConnectionComputePoolOutput)
}

// The Cluster API Credentials.
func (o FlinkConnectionOutput) Credentials() FlinkConnectionCredentialsPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) FlinkConnectionCredentialsPtrOutput { return v.Credentials }).(FlinkConnectionCredentialsPtrOutput)
}

// The unique name of the Flink Connection per organization, environment scope.
func (o FlinkConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The endpoint of the flink connection.
func (o FlinkConnectionOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o FlinkConnectionOutput) Environment() FlinkConnectionEnvironmentOutput {
	return o.ApplyT(func(v *FlinkConnection) FlinkConnectionEnvironmentOutput { return v.Environment }).(FlinkConnectionEnvironmentOutput)
}

// The object this REST resource represents.
func (o FlinkConnectionOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

func (o FlinkConnectionOutput) Organization() FlinkConnectionOrganizationOutput {
	return o.ApplyT(func(v *FlinkConnection) FlinkConnectionOrganizationOutput { return v.Organization }).(FlinkConnectionOrganizationOutput)
}

// Password for the type.
func (o FlinkConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

func (o FlinkConnectionOutput) Principal() FlinkConnectionPrincipalOutput {
	return o.ApplyT(func(v *FlinkConnection) FlinkConnectionPrincipalOutput { return v.Principal }).(FlinkConnectionPrincipalOutput)
}

// The REST endpoint of the Flink Connection cluster, for example,
// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
func (o FlinkConnectionOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

// Service Key for the type.
func (o FlinkConnectionOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// The type of the flink connection.
func (o FlinkConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Username for the type.
func (o FlinkConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlinkConnection) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

type FlinkConnectionArrayOutput struct{ *pulumi.OutputState }

func (FlinkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FlinkConnection)(nil)).Elem()
}

func (o FlinkConnectionArrayOutput) ToFlinkConnectionArrayOutput() FlinkConnectionArrayOutput {
	return o
}

func (o FlinkConnectionArrayOutput) ToFlinkConnectionArrayOutputWithContext(ctx context.Context) FlinkConnectionArrayOutput {
	return o
}

func (o FlinkConnectionArrayOutput) Index(i pulumi.IntInput) FlinkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FlinkConnection {
		return vs[0].([]*FlinkConnection)[vs[1].(int)]
	}).(FlinkConnectionOutput)
}

type FlinkConnectionMapOutput struct{ *pulumi.OutputState }

func (FlinkConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FlinkConnection)(nil)).Elem()
}

func (o FlinkConnectionMapOutput) ToFlinkConnectionMapOutput() FlinkConnectionMapOutput {
	return o
}

func (o FlinkConnectionMapOutput) ToFlinkConnectionMapOutputWithContext(ctx context.Context) FlinkConnectionMapOutput {
	return o
}

func (o FlinkConnectionMapOutput) MapIndex(k pulumi.StringInput) FlinkConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FlinkConnection {
		return vs[0].(map[string]*FlinkConnection)[vs[1].(string)]
	}).(FlinkConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkConnectionInput)(nil)).Elem(), &FlinkConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkConnectionArrayInput)(nil)).Elem(), FlinkConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlinkConnectionMapInput)(nil)).Elem(), FlinkConnectionMap{})
	pulumi.RegisterOutputType(FlinkConnectionOutput{})
	pulumi.RegisterOutputType(FlinkConnectionArrayOutput{})
	pulumi.RegisterOutputType(FlinkConnectionMapOutput{})
}
