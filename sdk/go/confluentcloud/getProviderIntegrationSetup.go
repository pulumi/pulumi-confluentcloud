// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
//
// `ProviderIntegrationSetup` describes a Cloud Service Provider (CSP) integration that allows Confluent Cloud to access resources in your cloud provider account.
//
// ## Example Usage
//
// ### Azure Provider Integration
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			azure, err := confluentcloud.LookupProviderIntegrationSetup(ctx, &confluentcloud.LookupProviderIntegrationSetupArgs{
//				Id: pulumi.StringRef("cspi-abc123"),
//				Environment: confluentcloud.GetProviderIntegrationSetupEnvironment{
//					Id: "env-xyz456",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("azureIntegrationStatus", azure.Status)
//			return nil
//		})
//	}
//
// ```
//
// ### GCP Provider Integration
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			gcp, err := confluentcloud.LookupProviderIntegrationSetup(ctx, &confluentcloud.LookupProviderIntegrationSetupArgs{
//				DisplayName: pulumi.StringRef("my-gcp-integration"),
//				Environment: confluentcloud.GetProviderIntegrationSetupEnvironment{
//					Id: "env-xyz456",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("gcpIntegrationId", gcp.Id)
//			return nil
//		})
//	}
//
// ```
//
// ### Using with Authorization Resource
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := confluentcloud.LookupProviderIntegrationSetup(ctx, &confluentcloud.LookupProviderIntegrationSetupArgs{
//				Id: pulumi.StringRef("cspi-abc123"),
//				Environment: confluentcloud.GetProviderIntegrationSetupEnvironment{
//					Id: "env-xyz456",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Use the integration with authorization data source
//			_, err = confluentcloud.LookupProviderIntegrationAuthorization(ctx, &confluentcloud.LookupProviderIntegrationAuthorizationArgs{
//				Id: main.Id,
//				Environment: confluentcloud.GetProviderIntegrationAuthorizationEnvironment{
//					Id: "env-xyz456",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Getting Started
//
// The following end-to-end examples might help to get started with `ProviderIntegrationSetup` data source:
// * provider-integration-azure: Complete Azure Provider Integration setup
// * provider-integration-gcp: Complete GCP Provider Integration setup
func LookupProviderIntegrationSetup(ctx *pulumi.Context, args *LookupProviderIntegrationSetupArgs, opts ...pulumi.InvokeOption) (*LookupProviderIntegrationSetupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProviderIntegrationSetupResult
	err := ctx.Invoke("confluentcloud:index/getProviderIntegrationSetup:getProviderIntegrationSetup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProviderIntegrationSetup.
type LookupProviderIntegrationSetupArgs struct {
	// The display name of the Provider Integration. Exactly one of `id` or `displayName` must be specified.
	DisplayName *string `pulumi:"displayName"`
	// (Required Configuration Block) supports the following:
	Environment GetProviderIntegrationSetupEnvironment `pulumi:"environment"`
	// The ID of the Provider Integration, for example, `cspi-4xg0q`. Exactly one of `id` or `displayName` must be specified.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getProviderIntegrationSetup.
type LookupProviderIntegrationSetupResult struct {
	// (Computed String) The cloud service provider. Values are `AZURE` and `GCP`.
	Cloud string `pulumi:"cloud"`
	// (Required String) The display name of the Provider Integration.
	DisplayName string `pulumi:"displayName"`
	// (Required Configuration Block) supports the following:
	Environment GetProviderIntegrationSetupEnvironment `pulumi:"environment"`
	// (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
	Id string `pulumi:"id"`
	// (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
	Status string `pulumi:"status"`
	// (Required List of Strings) List of resource CRNs where this provider integration is being used.
	Usages []string `pulumi:"usages"`
}

func LookupProviderIntegrationSetupOutput(ctx *pulumi.Context, args LookupProviderIntegrationSetupOutputArgs, opts ...pulumi.InvokeOption) LookupProviderIntegrationSetupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupProviderIntegrationSetupResultOutput, error) {
			args := v.(LookupProviderIntegrationSetupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("confluentcloud:index/getProviderIntegrationSetup:getProviderIntegrationSetup", args, LookupProviderIntegrationSetupResultOutput{}, options).(LookupProviderIntegrationSetupResultOutput), nil
		}).(LookupProviderIntegrationSetupResultOutput)
}

// A collection of arguments for invoking getProviderIntegrationSetup.
type LookupProviderIntegrationSetupOutputArgs struct {
	// The display name of the Provider Integration. Exactly one of `id` or `displayName` must be specified.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// (Required Configuration Block) supports the following:
	Environment GetProviderIntegrationSetupEnvironmentInput `pulumi:"environment"`
	// The ID of the Provider Integration, for example, `cspi-4xg0q`. Exactly one of `id` or `displayName` must be specified.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupProviderIntegrationSetupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProviderIntegrationSetupArgs)(nil)).Elem()
}

// A collection of values returned by getProviderIntegrationSetup.
type LookupProviderIntegrationSetupResultOutput struct{ *pulumi.OutputState }

func (LookupProviderIntegrationSetupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProviderIntegrationSetupResult)(nil)).Elem()
}

func (o LookupProviderIntegrationSetupResultOutput) ToLookupProviderIntegrationSetupResultOutput() LookupProviderIntegrationSetupResultOutput {
	return o
}

func (o LookupProviderIntegrationSetupResultOutput) ToLookupProviderIntegrationSetupResultOutputWithContext(ctx context.Context) LookupProviderIntegrationSetupResultOutput {
	return o
}

// (Computed String) The cloud service provider. Values are `AZURE` and `GCP`.
func (o LookupProviderIntegrationSetupResultOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderIntegrationSetupResult) string { return v.Cloud }).(pulumi.StringOutput)
}

// (Required String) The display name of the Provider Integration.
func (o LookupProviderIntegrationSetupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderIntegrationSetupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Required Configuration Block) supports the following:
func (o LookupProviderIntegrationSetupResultOutput) Environment() GetProviderIntegrationSetupEnvironmentOutput {
	return o.ApplyT(func(v LookupProviderIntegrationSetupResult) GetProviderIntegrationSetupEnvironment {
		return v.Environment
	}).(GetProviderIntegrationSetupEnvironmentOutput)
}

// (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
func (o LookupProviderIntegrationSetupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderIntegrationSetupResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
func (o LookupProviderIntegrationSetupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderIntegrationSetupResult) string { return v.Status }).(pulumi.StringOutput)
}

// (Required List of Strings) List of resource CRNs where this provider integration is being used.
func (o LookupProviderIntegrationSetupResultOutput) Usages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProviderIntegrationSetupResult) []string { return v.Usages }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProviderIntegrationSetupResultOutput{})
}
