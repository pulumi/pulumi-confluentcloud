// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "confluentcloud:index/apiKey:ApiKey":
		r = &ApiKey{}
	case "confluentcloud:index/connector:Connector":
		r = &Connector{}
	case "confluentcloud:index/environment:Environment":
		r = &Environment{}
	case "confluentcloud:index/kafkaAcl:KafkaAcl":
		r = &KafkaAcl{}
	case "confluentcloud:index/kafkaCluster:KafkaCluster":
		r = &KafkaCluster{}
	case "confluentcloud:index/kafkaTopic:KafkaTopic":
		r = &KafkaTopic{}
	case "confluentcloud:index/network:Network":
		r = &Network{}
	case "confluentcloud:index/peering:Peering":
		r = &Peering{}
	case "confluentcloud:index/privateLinkAccess:PrivateLinkAccess":
		r = &PrivateLinkAccess{}
	case "confluentcloud:index/roleBinding:RoleBinding":
		r = &RoleBinding{}
	case "confluentcloud:index/serviceAccount:ServiceAccount":
		r = &ServiceAccount{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:confluentcloud" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/apiKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/connector",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/environment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/kafkaAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/kafkaCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/kafkaTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/network",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/peering",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/privateLinkAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/roleBinding",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"confluentcloud",
		"index/serviceAccount",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"confluentcloud",
		&pkg{version},
	)
}
