// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// You can import a Private Link Access by using Environment ID and Private Link Access ID, in the format `<Environment ID>/<Private Link Access ID>`. The following example shows how to import a Private Link Access$ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>" $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
//
// ```sh
//
//	$ pulumi import confluentcloud:index/privateLinkAccess:PrivateLinkAccess my_pla env-abc123/pla-abc123
//
// ```
//
//	!> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
type PrivateLinkAccess struct {
	pulumi.CustomResourceState

	Aws   PrivateLinkAccessAwsPtrOutput   `pulumi:"aws"`
	Azure PrivateLinkAccessAzurePtrOutput `pulumi:"azure"`
	// The name of the Private Link Access.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAccessEnvironmentOutput `pulumi:"environment"`
	Gcp         PrivateLinkAccessGcpPtrOutput      `pulumi:"gcp"`
	// Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
	// accounts.
	Network PrivateLinkAccessNetworkOutput `pulumi:"network"`
}

// NewPrivateLinkAccess registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkAccess(ctx *pulumi.Context,
	name string, args *PrivateLinkAccessArgs, opts ...pulumi.ResourceOption) (*PrivateLinkAccess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	var resource PrivateLinkAccess
	err := ctx.RegisterResource("confluentcloud:index/privateLinkAccess:PrivateLinkAccess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkAccess gets an existing PrivateLinkAccess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkAccess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkAccessState, opts ...pulumi.ResourceOption) (*PrivateLinkAccess, error) {
	var resource PrivateLinkAccess
	err := ctx.ReadResource("confluentcloud:index/privateLinkAccess:PrivateLinkAccess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkAccess resources.
type privateLinkAccessState struct {
	Aws   *PrivateLinkAccessAws   `pulumi:"aws"`
	Azure *PrivateLinkAccessAzure `pulumi:"azure"`
	// The name of the Private Link Access.
	DisplayName *string `pulumi:"displayName"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment *PrivateLinkAccessEnvironment `pulumi:"environment"`
	Gcp         *PrivateLinkAccessGcp         `pulumi:"gcp"`
	// Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
	// accounts.
	Network *PrivateLinkAccessNetwork `pulumi:"network"`
}

type PrivateLinkAccessState struct {
	Aws   PrivateLinkAccessAwsPtrInput
	Azure PrivateLinkAccessAzurePtrInput
	// The name of the Private Link Access.
	DisplayName pulumi.StringPtrInput
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAccessEnvironmentPtrInput
	Gcp         PrivateLinkAccessGcpPtrInput
	// Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
	// accounts.
	Network PrivateLinkAccessNetworkPtrInput
}

func (PrivateLinkAccessState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkAccessState)(nil)).Elem()
}

type privateLinkAccessArgs struct {
	Aws   *PrivateLinkAccessAws   `pulumi:"aws"`
	Azure *PrivateLinkAccessAzure `pulumi:"azure"`
	// The name of the Private Link Access.
	DisplayName *string `pulumi:"displayName"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAccessEnvironment `pulumi:"environment"`
	Gcp         *PrivateLinkAccessGcp        `pulumi:"gcp"`
	// Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
	// accounts.
	Network PrivateLinkAccessNetwork `pulumi:"network"`
}

// The set of arguments for constructing a PrivateLinkAccess resource.
type PrivateLinkAccessArgs struct {
	Aws   PrivateLinkAccessAwsPtrInput
	Azure PrivateLinkAccessAzurePtrInput
	// The name of the Private Link Access.
	DisplayName pulumi.StringPtrInput
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAccessEnvironmentInput
	Gcp         PrivateLinkAccessGcpPtrInput
	// Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
	// accounts.
	Network PrivateLinkAccessNetworkInput
}

func (PrivateLinkAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkAccessArgs)(nil)).Elem()
}

type PrivateLinkAccessInput interface {
	pulumi.Input

	ToPrivateLinkAccessOutput() PrivateLinkAccessOutput
	ToPrivateLinkAccessOutputWithContext(ctx context.Context) PrivateLinkAccessOutput
}

func (*PrivateLinkAccess) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccess)(nil)).Elem()
}

func (i *PrivateLinkAccess) ToPrivateLinkAccessOutput() PrivateLinkAccessOutput {
	return i.ToPrivateLinkAccessOutputWithContext(context.Background())
}

func (i *PrivateLinkAccess) ToPrivateLinkAccessOutputWithContext(ctx context.Context) PrivateLinkAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessOutput)
}

// PrivateLinkAccessArrayInput is an input type that accepts PrivateLinkAccessArray and PrivateLinkAccessArrayOutput values.
// You can construct a concrete instance of `PrivateLinkAccessArrayInput` via:
//
//	PrivateLinkAccessArray{ PrivateLinkAccessArgs{...} }
type PrivateLinkAccessArrayInput interface {
	pulumi.Input

	ToPrivateLinkAccessArrayOutput() PrivateLinkAccessArrayOutput
	ToPrivateLinkAccessArrayOutputWithContext(context.Context) PrivateLinkAccessArrayOutput
}

type PrivateLinkAccessArray []PrivateLinkAccessInput

func (PrivateLinkAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkAccess)(nil)).Elem()
}

func (i PrivateLinkAccessArray) ToPrivateLinkAccessArrayOutput() PrivateLinkAccessArrayOutput {
	return i.ToPrivateLinkAccessArrayOutputWithContext(context.Background())
}

func (i PrivateLinkAccessArray) ToPrivateLinkAccessArrayOutputWithContext(ctx context.Context) PrivateLinkAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessArrayOutput)
}

// PrivateLinkAccessMapInput is an input type that accepts PrivateLinkAccessMap and PrivateLinkAccessMapOutput values.
// You can construct a concrete instance of `PrivateLinkAccessMapInput` via:
//
//	PrivateLinkAccessMap{ "key": PrivateLinkAccessArgs{...} }
type PrivateLinkAccessMapInput interface {
	pulumi.Input

	ToPrivateLinkAccessMapOutput() PrivateLinkAccessMapOutput
	ToPrivateLinkAccessMapOutputWithContext(context.Context) PrivateLinkAccessMapOutput
}

type PrivateLinkAccessMap map[string]PrivateLinkAccessInput

func (PrivateLinkAccessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkAccess)(nil)).Elem()
}

func (i PrivateLinkAccessMap) ToPrivateLinkAccessMapOutput() PrivateLinkAccessMapOutput {
	return i.ToPrivateLinkAccessMapOutputWithContext(context.Background())
}

func (i PrivateLinkAccessMap) ToPrivateLinkAccessMapOutputWithContext(ctx context.Context) PrivateLinkAccessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAccessMapOutput)
}

type PrivateLinkAccessOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAccess)(nil)).Elem()
}

func (o PrivateLinkAccessOutput) ToPrivateLinkAccessOutput() PrivateLinkAccessOutput {
	return o
}

func (o PrivateLinkAccessOutput) ToPrivateLinkAccessOutputWithContext(ctx context.Context) PrivateLinkAccessOutput {
	return o
}

func (o PrivateLinkAccessOutput) Aws() PrivateLinkAccessAwsPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccess) PrivateLinkAccessAwsPtrOutput { return v.Aws }).(PrivateLinkAccessAwsPtrOutput)
}

func (o PrivateLinkAccessOutput) Azure() PrivateLinkAccessAzurePtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccess) PrivateLinkAccessAzurePtrOutput { return v.Azure }).(PrivateLinkAccessAzurePtrOutput)
}

// The name of the Private Link Access.
func (o PrivateLinkAccessOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkAccess) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
func (o PrivateLinkAccessOutput) Environment() PrivateLinkAccessEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAccess) PrivateLinkAccessEnvironmentOutput { return v.Environment }).(PrivateLinkAccessEnvironmentOutput)
}

func (o PrivateLinkAccessOutput) Gcp() PrivateLinkAccessGcpPtrOutput {
	return o.ApplyT(func(v *PrivateLinkAccess) PrivateLinkAccessGcpPtrOutput { return v.Gcp }).(PrivateLinkAccessGcpPtrOutput)
}

// Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
// accounts.
func (o PrivateLinkAccessOutput) Network() PrivateLinkAccessNetworkOutput {
	return o.ApplyT(func(v *PrivateLinkAccess) PrivateLinkAccessNetworkOutput { return v.Network }).(PrivateLinkAccessNetworkOutput)
}

type PrivateLinkAccessArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkAccess)(nil)).Elem()
}

func (o PrivateLinkAccessArrayOutput) ToPrivateLinkAccessArrayOutput() PrivateLinkAccessArrayOutput {
	return o
}

func (o PrivateLinkAccessArrayOutput) ToPrivateLinkAccessArrayOutputWithContext(ctx context.Context) PrivateLinkAccessArrayOutput {
	return o
}

func (o PrivateLinkAccessArrayOutput) Index(i pulumi.IntInput) PrivateLinkAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateLinkAccess {
		return vs[0].([]*PrivateLinkAccess)[vs[1].(int)]
	}).(PrivateLinkAccessOutput)
}

type PrivateLinkAccessMapOutput struct{ *pulumi.OutputState }

func (PrivateLinkAccessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkAccess)(nil)).Elem()
}

func (o PrivateLinkAccessMapOutput) ToPrivateLinkAccessMapOutput() PrivateLinkAccessMapOutput {
	return o
}

func (o PrivateLinkAccessMapOutput) ToPrivateLinkAccessMapOutputWithContext(ctx context.Context) PrivateLinkAccessMapOutput {
	return o
}

func (o PrivateLinkAccessMapOutput) MapIndex(k pulumi.StringInput) PrivateLinkAccessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateLinkAccess {
		return vs[0].(map[string]*PrivateLinkAccess)[vs[1].(string)]
	}).(PrivateLinkAccessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessInput)(nil)).Elem(), &PrivateLinkAccess{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessArrayInput)(nil)).Elem(), PrivateLinkAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAccessMapInput)(nil)).Elem(), PrivateLinkAccessMap{})
	pulumi.RegisterOutputType(PrivateLinkAccessOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkAccessMapOutput{})
}
