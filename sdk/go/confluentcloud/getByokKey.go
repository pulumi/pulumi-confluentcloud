// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
//
// > **Note:** `ByokKey` data source is available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.\
// **Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluentâ€™s sole discretion.
//
// `ByokKey` describes a BYOK Key data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			azureKey, err := confluentcloud.LookupByokKey(ctx, &confluentcloud.LookupByokKeyArgs{
//				Id: "cck-abcde",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("byok", azureKey)
//			return nil
//		})
//	}
//
// ```
func LookupByokKey(ctx *pulumi.Context, args *LookupByokKeyArgs, opts ...pulumi.InvokeOption) (*LookupByokKeyResult, error) {
	var rv LookupByokKeyResult
	err := ctx.Invoke("confluentcloud:index/getByokKey:getByokKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getByokKey.
type LookupByokKeyArgs struct {
	// The ID of the BYOK key, for example, `cck-abcde`.
	Id string `pulumi:"id"`
}

// A collection of values returned by getByokKey.
type LookupByokKeyResult struct {
	// (Optional Configuration Block) supports the following:
	Aws []GetByokKeyAw `pulumi:"aws"`
	// (Optional Configuration Block) supports the following:
	Azures []GetByokKeyAzure `pulumi:"azures"`
	// (Required String) The ID of the BYOK key, for example, `cck-abcde`.
	Id string `pulumi:"id"`
}

func LookupByokKeyOutput(ctx *pulumi.Context, args LookupByokKeyOutputArgs, opts ...pulumi.InvokeOption) LookupByokKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupByokKeyResult, error) {
			args := v.(LookupByokKeyArgs)
			r, err := LookupByokKey(ctx, &args, opts...)
			var s LookupByokKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupByokKeyResultOutput)
}

// A collection of arguments for invoking getByokKey.
type LookupByokKeyOutputArgs struct {
	// The ID of the BYOK key, for example, `cck-abcde`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupByokKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupByokKeyArgs)(nil)).Elem()
}

// A collection of values returned by getByokKey.
type LookupByokKeyResultOutput struct{ *pulumi.OutputState }

func (LookupByokKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupByokKeyResult)(nil)).Elem()
}

func (o LookupByokKeyResultOutput) ToLookupByokKeyResultOutput() LookupByokKeyResultOutput {
	return o
}

func (o LookupByokKeyResultOutput) ToLookupByokKeyResultOutputWithContext(ctx context.Context) LookupByokKeyResultOutput {
	return o
}

// (Optional Configuration Block) supports the following:
func (o LookupByokKeyResultOutput) Aws() GetByokKeyAwArrayOutput {
	return o.ApplyT(func(v LookupByokKeyResult) []GetByokKeyAw { return v.Aws }).(GetByokKeyAwArrayOutput)
}

// (Optional Configuration Block) supports the following:
func (o LookupByokKeyResultOutput) Azures() GetByokKeyAzureArrayOutput {
	return o.ApplyT(func(v LookupByokKeyResult) []GetByokKeyAzure { return v.Azures }).(GetByokKeyAzureArrayOutput)
}

// (Required String) The ID of the BYOK key, for example, `cck-abcde`.
func (o LookupByokKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupByokKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupByokKeyResultOutput{})
}
