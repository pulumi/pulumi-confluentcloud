// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
//
// > **Note:** `NetworkLinkEndpoint` data source is available in **Early Access** for early adopters. Early Access features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.\
// **Early Access** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Early Access features. Early Access features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing Early Access releases of the Early Access features at any time in Confluentâ€™s sole discretion.
//
// `NetworkLinkEndpoint` describes a Network Link Endpoint data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			nle, err := confluentcloud.LookupNetworkLinkEndpoint(ctx, &confluentcloud.LookupNetworkLinkEndpointArgs{
//				Id: "nle-1357",
//				Environment: confluentcloud.GetNetworkLinkEndpointEnvironment{
//					Id: "env-1234",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("networkLinkEndpoint", nle)
//			return nil
//		})
//	}
//
// ```
func LookupNetworkLinkEndpoint(ctx *pulumi.Context, args *LookupNetworkLinkEndpointArgs, opts ...pulumi.InvokeOption) (*LookupNetworkLinkEndpointResult, error) {
	var rv LookupNetworkLinkEndpointResult
	err := ctx.Invoke("confluentcloud:index/getNetworkLinkEndpoint:getNetworkLinkEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkLinkEndpoint.
type LookupNetworkLinkEndpointArgs struct {
	Environment GetNetworkLinkEndpointEnvironment `pulumi:"environment"`
	// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
	Id string `pulumi:"id"`
}

// A collection of values returned by getNetworkLinkEndpoint.
type LookupNetworkLinkEndpointResult struct {
	// (Optional String) The description of the Network Link Endpoint.
	Description string `pulumi:"description"`
	// (Optional String) The name of the Network Link Endpoint.
	DisplayName string                            `pulumi:"displayName"`
	Environment GetNetworkLinkEndpointEnvironment `pulumi:"environment"`
	// (Required String) The ID of the Network Link Service
	Id string `pulumi:"id"`
	// (Required Configuration Block) supports the following:
	NetworkLinkServices []GetNetworkLinkEndpointNetworkLinkService `pulumi:"networkLinkServices"`
	// (Required Configuration Block) supports the following:
	Networks []GetNetworkLinkEndpointNetwork `pulumi:"networks"`
	// (Required String) The Confluent Resource Name of the Network Link Endpoint.
	ResourceName string `pulumi:"resourceName"`
}

func LookupNetworkLinkEndpointOutput(ctx *pulumi.Context, args LookupNetworkLinkEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkLinkEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkLinkEndpointResult, error) {
			args := v.(LookupNetworkLinkEndpointArgs)
			r, err := LookupNetworkLinkEndpoint(ctx, &args, opts...)
			var s LookupNetworkLinkEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkLinkEndpointResultOutput)
}

// A collection of arguments for invoking getNetworkLinkEndpoint.
type LookupNetworkLinkEndpointOutputArgs struct {
	Environment GetNetworkLinkEndpointEnvironmentInput `pulumi:"environment"`
	// The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupNetworkLinkEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkLinkEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkLinkEndpoint.
type LookupNetworkLinkEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkLinkEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkLinkEndpointResult)(nil)).Elem()
}

func (o LookupNetworkLinkEndpointResultOutput) ToLookupNetworkLinkEndpointResultOutput() LookupNetworkLinkEndpointResultOutput {
	return o
}

func (o LookupNetworkLinkEndpointResultOutput) ToLookupNetworkLinkEndpointResultOutputWithContext(ctx context.Context) LookupNetworkLinkEndpointResultOutput {
	return o
}

// (Optional String) The description of the Network Link Endpoint.
func (o LookupNetworkLinkEndpointResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) string { return v.Description }).(pulumi.StringOutput)
}

// (Optional String) The name of the Network Link Endpoint.
func (o LookupNetworkLinkEndpointResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupNetworkLinkEndpointResultOutput) Environment() GetNetworkLinkEndpointEnvironmentOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) GetNetworkLinkEndpointEnvironment { return v.Environment }).(GetNetworkLinkEndpointEnvironmentOutput)
}

// (Required String) The ID of the Network Link Service
func (o LookupNetworkLinkEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required Configuration Block) supports the following:
func (o LookupNetworkLinkEndpointResultOutput) NetworkLinkServices() GetNetworkLinkEndpointNetworkLinkServiceArrayOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) []GetNetworkLinkEndpointNetworkLinkService {
		return v.NetworkLinkServices
	}).(GetNetworkLinkEndpointNetworkLinkServiceArrayOutput)
}

// (Required Configuration Block) supports the following:
func (o LookupNetworkLinkEndpointResultOutput) Networks() GetNetworkLinkEndpointNetworkArrayOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) []GetNetworkLinkEndpointNetwork { return v.Networks }).(GetNetworkLinkEndpointNetworkArrayOutput)
}

// (Required String) The Confluent Resource Name of the Network Link Endpoint.
func (o LookupNetworkLinkEndpointResultOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkEndpointResult) string { return v.ResourceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkLinkEndpointResultOutput{})
}
