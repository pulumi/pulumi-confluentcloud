// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
// [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)
//
// > **Note:** `NetworkLinkService` data source is available in **Early Access** for early adopters. Early Access features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.\
// **Early Access** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Early Access features. Early Access features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing Early Access releases of the Early Access features at any time in Confluentâ€™s sole discretion.
//
// `NetworkLinkService` describes a Network Link Service data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			nls, err := confluentcloud.LookupNetworkLinkService(ctx, &confluentcloud.LookupNetworkLinkServiceArgs{
//				Id: "nls-zyw30",
//				Environment: confluentcloud.GetNetworkLinkServiceEnvironment{
//					Id: "env-1234",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("networkLinkService", nls)
//			return nil
//		})
//	}
//
// ```
func LookupNetworkLinkService(ctx *pulumi.Context, args *LookupNetworkLinkServiceArgs, opts ...pulumi.InvokeOption) (*LookupNetworkLinkServiceResult, error) {
	var rv LookupNetworkLinkServiceResult
	err := ctx.Invoke("confluentcloud:index/getNetworkLinkService:getNetworkLinkService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkLinkService.
type LookupNetworkLinkServiceArgs struct {
	// (Optional Configuration Block) supports the following:
	Accept      *GetNetworkLinkServiceAccept     `pulumi:"accept"`
	Environment GetNetworkLinkServiceEnvironment `pulumi:"environment"`
	// The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
	Id string `pulumi:"id"`
}

// A collection of values returned by getNetworkLinkService.
type LookupNetworkLinkServiceResult struct {
	// (Optional Configuration Block) supports the following:
	Accept GetNetworkLinkServiceAccept `pulumi:"accept"`
	// (Optional String) The description of the Network Link Service.
	Description string `pulumi:"description"`
	// (Optional String) The name of the Network Link Service.
	DisplayName string                           `pulumi:"displayName"`
	Environment GetNetworkLinkServiceEnvironment `pulumi:"environment"`
	// (Required String) The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
	Id string `pulumi:"id"`
	// (Required Configuration Block) supports the following:
	Networks []GetNetworkLinkServiceNetwork `pulumi:"networks"`
	// (Required String) The Confluent Resource Name of the Network Link Service.
	ResourceName string `pulumi:"resourceName"`
}

func LookupNetworkLinkServiceOutput(ctx *pulumi.Context, args LookupNetworkLinkServiceOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkLinkServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkLinkServiceResult, error) {
			args := v.(LookupNetworkLinkServiceArgs)
			r, err := LookupNetworkLinkService(ctx, &args, opts...)
			var s LookupNetworkLinkServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkLinkServiceResultOutput)
}

// A collection of arguments for invoking getNetworkLinkService.
type LookupNetworkLinkServiceOutputArgs struct {
	// (Optional Configuration Block) supports the following:
	Accept      GetNetworkLinkServiceAcceptPtrInput   `pulumi:"accept"`
	Environment GetNetworkLinkServiceEnvironmentInput `pulumi:"environment"`
	// The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupNetworkLinkServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkLinkServiceArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkLinkService.
type LookupNetworkLinkServiceResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkLinkServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkLinkServiceResult)(nil)).Elem()
}

func (o LookupNetworkLinkServiceResultOutput) ToLookupNetworkLinkServiceResultOutput() LookupNetworkLinkServiceResultOutput {
	return o
}

func (o LookupNetworkLinkServiceResultOutput) ToLookupNetworkLinkServiceResultOutputWithContext(ctx context.Context) LookupNetworkLinkServiceResultOutput {
	return o
}

// (Optional Configuration Block) supports the following:
func (o LookupNetworkLinkServiceResultOutput) Accept() GetNetworkLinkServiceAcceptOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) GetNetworkLinkServiceAccept { return v.Accept }).(GetNetworkLinkServiceAcceptOutput)
}

// (Optional String) The description of the Network Link Service.
func (o LookupNetworkLinkServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// (Optional String) The name of the Network Link Service.
func (o LookupNetworkLinkServiceResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupNetworkLinkServiceResultOutput) Environment() GetNetworkLinkServiceEnvironmentOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) GetNetworkLinkServiceEnvironment { return v.Environment }).(GetNetworkLinkServiceEnvironmentOutput)
}

// (Required String) The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
func (o LookupNetworkLinkServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Required Configuration Block) supports the following:
func (o LookupNetworkLinkServiceResultOutput) Networks() GetNetworkLinkServiceNetworkArrayOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) []GetNetworkLinkServiceNetwork { return v.Networks }).(GetNetworkLinkServiceNetworkArrayOutput)
}

// (Required String) The Confluent Resource Name of the Network Link Service.
func (o LookupNetworkLinkServiceResultOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkLinkServiceResult) string { return v.ResourceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkLinkServiceResultOutput{})
}
