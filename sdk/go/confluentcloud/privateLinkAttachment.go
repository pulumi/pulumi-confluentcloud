// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
//
// `PrivateLinkAttachment` provides a Private Link Attachment resource that enables creating, editing, and deleting Private Link Attachments on Confluent Cloud.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := confluentcloud.NewPrivateLinkAttachment(ctx, "main", &confluentcloud.PrivateLinkAttachmentArgs{
//				Cloud:       pulumi.String("AWS"),
//				Region:      pulumi.String("us-west-2"),
//				DisplayName: pulumi.String("staging-platt"),
//				Environment: &confluentcloud.PrivateLinkAttachmentEnvironmentArgs{
//					Id: pulumi.String("env-3732nw"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("privateLinkAttachment", main)
//			return nil
//		})
//	}
//
// ```
//
// ## Getting Started
//
// The following end-to-end examples might help to get started with `PrivateLinkAttachment` resource:
// * `enterprise-privatelinkattachment-aws-kafka-acls`: _Enterprise_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using ACLs
// * `enterprise-privatelinkattachment-azure-kafka-acls`: _Enterprise_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using ACLs
//
// ## Import
//
// You can import a Private Link Attachment by using Environment ID and Private Link Attachment ID, in the format `<Environment ID>/<Private Link Attachment ID>`. The following example shows how to import a Private Link Attachment:
//
// $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
//
// $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
//
// ```sh
// $ pulumi import confluentcloud:index/privateLinkAttachment:PrivateLinkAttachment main env-abc123/platt-abc123
// ```
//
// !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
type PrivateLinkAttachment struct {
	pulumi.CustomResourceState

	// (Optional Configuration Block) supports the following:
	Aws PrivateLinkAttachmentAwArrayOutput `pulumi:"aws"`
	// (Optional Configuration Block) supports the following:
	// - ` privateLinkServiceAlias  ` - (Required String) Azure Private Link service alias for the availability zone.
	Azures PrivateLinkAttachmentAzureArrayOutput `pulumi:"azures"`
	// The cloud service provider that hosts the resources to access with the Private Link Attachment.
	Cloud pulumi.StringOutput `pulumi:"cloud"`
	// The name of the Private Link Attachment.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// (Required String) The root DNS domain for the Private Link Attachment, for example, `pr123a.us-east-2.aws.confluent.cloud`.
	DnsDomain pulumi.StringOutput `pulumi:"dnsDomain"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAttachmentEnvironmentOutput `pulumi:"environment"`
	Gcps        PrivateLinkAttachmentGcpArrayOutput    `pulumi:"gcps"`
	// The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
	Region pulumi.StringOutput `pulumi:"region"`
	// (Required String) The Confluent Resource Name of the Private Link Attachment, for example `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-75gxp2/private-link-attachment=platt-1q0ky0`.
	ResourceName pulumi.StringOutput `pulumi:"resourceName"`
}

// NewPrivateLinkAttachment registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkAttachment(ctx *pulumi.Context,
	name string, args *PrivateLinkAttachmentArgs, opts ...pulumi.ResourceOption) (*PrivateLinkAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cloud == nil {
		return nil, errors.New("invalid value for required argument 'Cloud'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateLinkAttachment
	err := ctx.RegisterResource("confluentcloud:index/privateLinkAttachment:PrivateLinkAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkAttachment gets an existing PrivateLinkAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkAttachmentState, opts ...pulumi.ResourceOption) (*PrivateLinkAttachment, error) {
	var resource PrivateLinkAttachment
	err := ctx.ReadResource("confluentcloud:index/privateLinkAttachment:PrivateLinkAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkAttachment resources.
type privateLinkAttachmentState struct {
	// (Optional Configuration Block) supports the following:
	Aws []PrivateLinkAttachmentAw `pulumi:"aws"`
	// (Optional Configuration Block) supports the following:
	// - ` privateLinkServiceAlias  ` - (Required String) Azure Private Link service alias for the availability zone.
	Azures []PrivateLinkAttachmentAzure `pulumi:"azures"`
	// The cloud service provider that hosts the resources to access with the Private Link Attachment.
	Cloud *string `pulumi:"cloud"`
	// The name of the Private Link Attachment.
	DisplayName *string `pulumi:"displayName"`
	// (Required String) The root DNS domain for the Private Link Attachment, for example, `pr123a.us-east-2.aws.confluent.cloud`.
	DnsDomain *string `pulumi:"dnsDomain"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment *PrivateLinkAttachmentEnvironment `pulumi:"environment"`
	Gcps        []PrivateLinkAttachmentGcp        `pulumi:"gcps"`
	// The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
	Region *string `pulumi:"region"`
	// (Required String) The Confluent Resource Name of the Private Link Attachment, for example `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-75gxp2/private-link-attachment=platt-1q0ky0`.
	ResourceName *string `pulumi:"resourceName"`
}

type PrivateLinkAttachmentState struct {
	// (Optional Configuration Block) supports the following:
	Aws PrivateLinkAttachmentAwArrayInput
	// (Optional Configuration Block) supports the following:
	// - ` privateLinkServiceAlias  ` - (Required String) Azure Private Link service alias for the availability zone.
	Azures PrivateLinkAttachmentAzureArrayInput
	// The cloud service provider that hosts the resources to access with the Private Link Attachment.
	Cloud pulumi.StringPtrInput
	// The name of the Private Link Attachment.
	DisplayName pulumi.StringPtrInput
	// (Required String) The root DNS domain for the Private Link Attachment, for example, `pr123a.us-east-2.aws.confluent.cloud`.
	DnsDomain pulumi.StringPtrInput
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAttachmentEnvironmentPtrInput
	Gcps        PrivateLinkAttachmentGcpArrayInput
	// The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
	Region pulumi.StringPtrInput
	// (Required String) The Confluent Resource Name of the Private Link Attachment, for example `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-75gxp2/private-link-attachment=platt-1q0ky0`.
	ResourceName pulumi.StringPtrInput
}

func (PrivateLinkAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkAttachmentState)(nil)).Elem()
}

type privateLinkAttachmentArgs struct {
	// The cloud service provider that hosts the resources to access with the Private Link Attachment.
	Cloud string `pulumi:"cloud"`
	// The name of the Private Link Attachment.
	DisplayName *string `pulumi:"displayName"`
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAttachmentEnvironment `pulumi:"environment"`
	// The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
	Region string `pulumi:"region"`
}

// The set of arguments for constructing a PrivateLinkAttachment resource.
type PrivateLinkAttachmentArgs struct {
	// The cloud service provider that hosts the resources to access with the Private Link Attachment.
	Cloud pulumi.StringInput
	// The name of the Private Link Attachment.
	DisplayName pulumi.StringPtrInput
	// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
	Environment PrivateLinkAttachmentEnvironmentInput
	// The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
	Region pulumi.StringInput
}

func (PrivateLinkAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkAttachmentArgs)(nil)).Elem()
}

type PrivateLinkAttachmentInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentOutput() PrivateLinkAttachmentOutput
	ToPrivateLinkAttachmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentOutput
}

func (*PrivateLinkAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachment)(nil)).Elem()
}

func (i *PrivateLinkAttachment) ToPrivateLinkAttachmentOutput() PrivateLinkAttachmentOutput {
	return i.ToPrivateLinkAttachmentOutputWithContext(context.Background())
}

func (i *PrivateLinkAttachment) ToPrivateLinkAttachmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentOutput)
}

// PrivateLinkAttachmentArrayInput is an input type that accepts PrivateLinkAttachmentArray and PrivateLinkAttachmentArrayOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentArrayInput` via:
//
//	PrivateLinkAttachmentArray{ PrivateLinkAttachmentArgs{...} }
type PrivateLinkAttachmentArrayInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentArrayOutput() PrivateLinkAttachmentArrayOutput
	ToPrivateLinkAttachmentArrayOutputWithContext(context.Context) PrivateLinkAttachmentArrayOutput
}

type PrivateLinkAttachmentArray []PrivateLinkAttachmentInput

func (PrivateLinkAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkAttachment)(nil)).Elem()
}

func (i PrivateLinkAttachmentArray) ToPrivateLinkAttachmentArrayOutput() PrivateLinkAttachmentArrayOutput {
	return i.ToPrivateLinkAttachmentArrayOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentArray) ToPrivateLinkAttachmentArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentArrayOutput)
}

// PrivateLinkAttachmentMapInput is an input type that accepts PrivateLinkAttachmentMap and PrivateLinkAttachmentMapOutput values.
// You can construct a concrete instance of `PrivateLinkAttachmentMapInput` via:
//
//	PrivateLinkAttachmentMap{ "key": PrivateLinkAttachmentArgs{...} }
type PrivateLinkAttachmentMapInput interface {
	pulumi.Input

	ToPrivateLinkAttachmentMapOutput() PrivateLinkAttachmentMapOutput
	ToPrivateLinkAttachmentMapOutputWithContext(context.Context) PrivateLinkAttachmentMapOutput
}

type PrivateLinkAttachmentMap map[string]PrivateLinkAttachmentInput

func (PrivateLinkAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkAttachment)(nil)).Elem()
}

func (i PrivateLinkAttachmentMap) ToPrivateLinkAttachmentMapOutput() PrivateLinkAttachmentMapOutput {
	return i.ToPrivateLinkAttachmentMapOutputWithContext(context.Background())
}

func (i PrivateLinkAttachmentMap) ToPrivateLinkAttachmentMapOutputWithContext(ctx context.Context) PrivateLinkAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkAttachmentMapOutput)
}

type PrivateLinkAttachmentOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkAttachment)(nil)).Elem()
}

func (o PrivateLinkAttachmentOutput) ToPrivateLinkAttachmentOutput() PrivateLinkAttachmentOutput {
	return o
}

func (o PrivateLinkAttachmentOutput) ToPrivateLinkAttachmentOutputWithContext(ctx context.Context) PrivateLinkAttachmentOutput {
	return o
}

// (Optional Configuration Block) supports the following:
func (o PrivateLinkAttachmentOutput) Aws() PrivateLinkAttachmentAwArrayOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) PrivateLinkAttachmentAwArrayOutput { return v.Aws }).(PrivateLinkAttachmentAwArrayOutput)
}

// (Optional Configuration Block) supports the following:
// - ` privateLinkServiceAlias  ` - (Required String) Azure Private Link service alias for the availability zone.
func (o PrivateLinkAttachmentOutput) Azures() PrivateLinkAttachmentAzureArrayOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) PrivateLinkAttachmentAzureArrayOutput { return v.Azures }).(PrivateLinkAttachmentAzureArrayOutput)
}

// The cloud service provider that hosts the resources to access with the Private Link Attachment.
func (o PrivateLinkAttachmentOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) pulumi.StringOutput { return v.Cloud }).(pulumi.StringOutput)
}

// The name of the Private Link Attachment.
func (o PrivateLinkAttachmentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// (Required String) The root DNS domain for the Private Link Attachment, for example, `pr123a.us-east-2.aws.confluent.cloud`.
func (o PrivateLinkAttachmentOutput) DnsDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) pulumi.StringOutput { return v.DnsDomain }).(pulumi.StringOutput)
}

// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
func (o PrivateLinkAttachmentOutput) Environment() PrivateLinkAttachmentEnvironmentOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) PrivateLinkAttachmentEnvironmentOutput { return v.Environment }).(PrivateLinkAttachmentEnvironmentOutput)
}

func (o PrivateLinkAttachmentOutput) Gcps() PrivateLinkAttachmentGcpArrayOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) PrivateLinkAttachmentGcpArrayOutput { return v.Gcps }).(PrivateLinkAttachmentGcpArrayOutput)
}

// The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
func (o PrivateLinkAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// (Required String) The Confluent Resource Name of the Private Link Attachment, for example `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-75gxp2/private-link-attachment=platt-1q0ky0`.
func (o PrivateLinkAttachmentOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkAttachment) pulumi.StringOutput { return v.ResourceName }).(pulumi.StringOutput)
}

type PrivateLinkAttachmentArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkAttachment)(nil)).Elem()
}

func (o PrivateLinkAttachmentArrayOutput) ToPrivateLinkAttachmentArrayOutput() PrivateLinkAttachmentArrayOutput {
	return o
}

func (o PrivateLinkAttachmentArrayOutput) ToPrivateLinkAttachmentArrayOutputWithContext(ctx context.Context) PrivateLinkAttachmentArrayOutput {
	return o
}

func (o PrivateLinkAttachmentArrayOutput) Index(i pulumi.IntInput) PrivateLinkAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateLinkAttachment {
		return vs[0].([]*PrivateLinkAttachment)[vs[1].(int)]
	}).(PrivateLinkAttachmentOutput)
}

type PrivateLinkAttachmentMapOutput struct{ *pulumi.OutputState }

func (PrivateLinkAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkAttachment)(nil)).Elem()
}

func (o PrivateLinkAttachmentMapOutput) ToPrivateLinkAttachmentMapOutput() PrivateLinkAttachmentMapOutput {
	return o
}

func (o PrivateLinkAttachmentMapOutput) ToPrivateLinkAttachmentMapOutputWithContext(ctx context.Context) PrivateLinkAttachmentMapOutput {
	return o
}

func (o PrivateLinkAttachmentMapOutput) MapIndex(k pulumi.StringInput) PrivateLinkAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateLinkAttachment {
		return vs[0].(map[string]*PrivateLinkAttachment)[vs[1].(string)]
	}).(PrivateLinkAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentInput)(nil)).Elem(), &PrivateLinkAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentArrayInput)(nil)).Elem(), PrivateLinkAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkAttachmentMapInput)(nil)).Elem(), PrivateLinkAttachmentMap{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkAttachmentMapOutput{})
}
