// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package confluentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-confluentcloud/sdk/v2/go/confluentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
//
// `FlinkConnection` describes a Flink Connection data source.
//
// ## Example Usage
func LookupFlinkConnection(ctx *pulumi.Context, args *LookupFlinkConnectionArgs, opts ...pulumi.InvokeOption) (*LookupFlinkConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlinkConnectionResult
	err := ctx.Invoke("confluentcloud:index/getFlinkConnection:getFlinkConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFlinkConnection.
type LookupFlinkConnectionArgs struct {
	ComputePool *GetFlinkConnectionComputePool `pulumi:"computePool"`
	Credentials *GetFlinkConnectionCredentials `pulumi:"credentials"`
	// The name of the Flink Connection.
	DisplayName  string                          `pulumi:"displayName"`
	Environment  *GetFlinkConnectionEnvironment  `pulumi:"environment"`
	Organization *GetFlinkConnectionOrganization `pulumi:"organization"`
	Principal    *GetFlinkConnectionPrincipal    `pulumi:"principal"`
	// The REST endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`).
	RestEndpoint *string `pulumi:"restEndpoint"`
	// The type of the Flink Connection. The accepted values are: `OPENAI`, `AZUREML`, `AZUREOPENAI`, `BEDROCK`, `SAGEMAKER`, `GOOGLEAI`, `VERTEXAI`, `MONGODB`, `PINECONE`, `ELASTIC` and `COUCHBASE`.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getFlinkConnection.
type LookupFlinkConnectionResult struct {
	ComputePool GetFlinkConnectionComputePool  `pulumi:"computePool"`
	Credentials *GetFlinkConnectionCredentials `pulumi:"credentials"`
	// (Required String) The authentication data of the Flink Connection.
	Data        string `pulumi:"data"`
	DisplayName string `pulumi:"displayName"`
	// (Required String) The endpoint of the Flink Connection, for example, `https://api.openai.com/v1/chat/completions`
	Endpoint    string                        `pulumi:"endpoint"`
	Environment GetFlinkConnectionEnvironment `pulumi:"environment"`
	// The provider-assigned unique ID for this managed resource.
	Id           string                         `pulumi:"id"`
	Organization GetFlinkConnectionOrganization `pulumi:"organization"`
	Principal    GetFlinkConnectionPrincipal    `pulumi:"principal"`
	RestEndpoint *string                        `pulumi:"restEndpoint"`
	// (Required String) The status of the Flink Connection.
	Status string `pulumi:"status"`
	// (Required String) The status details of the Flink Connection.
	// ---
	StatusDetail string  `pulumi:"statusDetail"`
	Type         *string `pulumi:"type"`
}

func LookupFlinkConnectionOutput(ctx *pulumi.Context, args LookupFlinkConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupFlinkConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFlinkConnectionResultOutput, error) {
			args := v.(LookupFlinkConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("confluentcloud:index/getFlinkConnection:getFlinkConnection", args, LookupFlinkConnectionResultOutput{}, options).(LookupFlinkConnectionResultOutput), nil
		}).(LookupFlinkConnectionResultOutput)
}

// A collection of arguments for invoking getFlinkConnection.
type LookupFlinkConnectionOutputArgs struct {
	ComputePool GetFlinkConnectionComputePoolPtrInput `pulumi:"computePool"`
	Credentials GetFlinkConnectionCredentialsPtrInput `pulumi:"credentials"`
	// The name of the Flink Connection.
	DisplayName  pulumi.StringInput                     `pulumi:"displayName"`
	Environment  GetFlinkConnectionEnvironmentPtrInput  `pulumi:"environment"`
	Organization GetFlinkConnectionOrganizationPtrInput `pulumi:"organization"`
	Principal    GetFlinkConnectionPrincipalPtrInput    `pulumi:"principal"`
	// The REST endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`).
	RestEndpoint pulumi.StringPtrInput `pulumi:"restEndpoint"`
	// The type of the Flink Connection. The accepted values are: `OPENAI`, `AZUREML`, `AZUREOPENAI`, `BEDROCK`, `SAGEMAKER`, `GOOGLEAI`, `VERTEXAI`, `MONGODB`, `PINECONE`, `ELASTIC` and `COUCHBASE`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LookupFlinkConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlinkConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getFlinkConnection.
type LookupFlinkConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupFlinkConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlinkConnectionResult)(nil)).Elem()
}

func (o LookupFlinkConnectionResultOutput) ToLookupFlinkConnectionResultOutput() LookupFlinkConnectionResultOutput {
	return o
}

func (o LookupFlinkConnectionResultOutput) ToLookupFlinkConnectionResultOutputWithContext(ctx context.Context) LookupFlinkConnectionResultOutput {
	return o
}

func (o LookupFlinkConnectionResultOutput) ComputePool() GetFlinkConnectionComputePoolOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) GetFlinkConnectionComputePool { return v.ComputePool }).(GetFlinkConnectionComputePoolOutput)
}

func (o LookupFlinkConnectionResultOutput) Credentials() GetFlinkConnectionCredentialsPtrOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) *GetFlinkConnectionCredentials { return v.Credentials }).(GetFlinkConnectionCredentialsPtrOutput)
}

// (Required String) The authentication data of the Flink Connection.
func (o LookupFlinkConnectionResultOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) string { return v.Data }).(pulumi.StringOutput)
}

func (o LookupFlinkConnectionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// (Required String) The endpoint of the Flink Connection, for example, `https://api.openai.com/v1/chat/completions`
func (o LookupFlinkConnectionResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o LookupFlinkConnectionResultOutput) Environment() GetFlinkConnectionEnvironmentOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) GetFlinkConnectionEnvironment { return v.Environment }).(GetFlinkConnectionEnvironmentOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFlinkConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFlinkConnectionResultOutput) Organization() GetFlinkConnectionOrganizationOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) GetFlinkConnectionOrganization { return v.Organization }).(GetFlinkConnectionOrganizationOutput)
}

func (o LookupFlinkConnectionResultOutput) Principal() GetFlinkConnectionPrincipalOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) GetFlinkConnectionPrincipal { return v.Principal }).(GetFlinkConnectionPrincipalOutput)
}

func (o LookupFlinkConnectionResultOutput) RestEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) *string { return v.RestEndpoint }).(pulumi.StringPtrOutput)
}

// (Required String) The status of the Flink Connection.
func (o LookupFlinkConnectionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) string { return v.Status }).(pulumi.StringOutput)
}

// (Required String) The status details of the Flink Connection.
// ---
func (o LookupFlinkConnectionResultOutput) StatusDetail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) string { return v.StatusDetail }).(pulumi.StringOutput)
}

func (o LookupFlinkConnectionResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlinkConnectionResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlinkConnectionResultOutput{})
}
