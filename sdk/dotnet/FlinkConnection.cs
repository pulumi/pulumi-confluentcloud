// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// ## Import
    /// 
    /// You can import a Flink connection by using the Flink Connection name, for example:
    /// 
    /// Option #1: Manage multiple Flink Compute Pools in the same Pulumi Stack
    /// 
    /// $ export IMPORT_CONFLUENT_ORGANIZATION_ID="&lt;organization_id&gt;"
    /// 
    /// $ export IMPORT_CONFLUENT_ENVIRONMENT_ID="&lt;environment_id&gt;"
    /// 
    /// $ export IMPORT_FLINK_COMPUTE_POOL_ID="&lt;flink_compute_pool_id&gt;"
    /// 
    /// $ export IMPORT_FLINK_API_KEY="&lt;flink_api_key&gt;"
    /// 
    /// $ export IMPORT_FLINK_API_SECRET="&lt;flink_api_secret&gt;"
    /// 
    /// $ export IMPORT_FLINK_REST_ENDPOINT="&lt;flink_rest_endpoint&gt;"
    /// 
    /// $ export IMPORT_FLINK_PRINCIPAL_ID="&lt;flink_principal&gt;"
    /// 
    /// $ export API_KEY="&lt;API_KEY&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/flinkConnection:FlinkConnection example org-xyz123/env-abc123/connection1
    /// ```
    /// 
    /// Option #2: Manage a single Flink Compute Pool in the same Pulumi Stack
    /// 
    /// $ export API_KEY="&lt;API_KEY&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/flinkConnection:FlinkConnection example org-xyz123/env-abc123/connection1
    /// ```
    /// 
    /// !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/flinkConnection:FlinkConnection")]
    public partial class FlinkConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// API key for the type.
        /// </summary>
        [Output("apiKey")]
        public Output<string?> ApiKey { get; private set; } = null!;

        /// <summary>
        /// The schema version of this representation of a resource.
        /// </summary>
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// Access key for the type.
        /// </summary>
        [Output("awsAccessKey")]
        public Output<string?> AwsAccessKey { get; private set; } = null!;

        /// <summary>
        /// Secret key for the type.
        /// </summary>
        [Output("awsSecretKey")]
        public Output<string?> AwsSecretKey { get; private set; } = null!;

        /// <summary>
        /// Session token for the type.
        /// </summary>
        [Output("awsSessionToken")]
        public Output<string?> AwsSessionToken { get; private set; } = null!;

        [Output("computePool")]
        public Output<Outputs.FlinkConnectionComputePool> ComputePool { get; private set; } = null!;

        /// <summary>
        /// The Cluster API Credentials.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.FlinkConnectionCredentials?> Credentials { get; private set; } = null!;

        /// <summary>
        /// The unique name of the Flink Connection per organization, environment scope.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The endpoint of the flink connection.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        [Output("environment")]
        public Output<Outputs.FlinkConnectionEnvironment> Environment { get; private set; } = null!;

        /// <summary>
        /// The object this REST resource represents.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        [Output("organization")]
        public Output<Outputs.FlinkConnectionOrganization> Organization { get; private set; } = null!;

        /// <summary>
        /// Password for the type.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("principal")]
        public Output<Outputs.FlinkConnectionPrincipal> Principal { get; private set; } = null!;

        /// <summary>
        /// The REST endpoint of the Flink Connection cluster, for example,
        /// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
        /// </summary>
        [Output("restEndpoint")]
        public Output<string?> RestEndpoint { get; private set; } = null!;

        /// <summary>
        /// Service Key for the type.
        /// </summary>
        [Output("serviceKey")]
        public Output<string?> ServiceKey { get; private set; } = null!;

        /// <summary>
        /// The type of the flink connection.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Username for the type.
        /// </summary>
        [Output("username")]
        public Output<string?> Username { get; private set; } = null!;


        /// <summary>
        /// Create a FlinkConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FlinkConnection(string name, FlinkConnectionArgs args, CustomResourceOptions? options = null)
            : base("confluentcloud:index/flinkConnection:FlinkConnection", name, args ?? new FlinkConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FlinkConnection(string name, Input<string> id, FlinkConnectionState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/flinkConnection:FlinkConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "credentials",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FlinkConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FlinkConnection Get(string name, Input<string> id, FlinkConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new FlinkConnection(name, id, state, options);
        }
    }

    public sealed class FlinkConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API key for the type.
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// Access key for the type.
        /// </summary>
        [Input("awsAccessKey")]
        public Input<string>? AwsAccessKey { get; set; }

        /// <summary>
        /// Secret key for the type.
        /// </summary>
        [Input("awsSecretKey")]
        public Input<string>? AwsSecretKey { get; set; }

        /// <summary>
        /// Session token for the type.
        /// </summary>
        [Input("awsSessionToken")]
        public Input<string>? AwsSessionToken { get; set; }

        [Input("computePool")]
        public Input<Inputs.FlinkConnectionComputePoolArgs>? ComputePool { get; set; }

        [Input("credentials")]
        private Input<Inputs.FlinkConnectionCredentialsArgs>? _credentials;

        /// <summary>
        /// The Cluster API Credentials.
        /// </summary>
        public Input<Inputs.FlinkConnectionCredentialsArgs>? Credentials
        {
            get => _credentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _credentials = Output.Tuple<Input<Inputs.FlinkConnectionCredentialsArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The unique name of the Flink Connection per organization, environment scope.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The endpoint of the flink connection.
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        [Input("environment")]
        public Input<Inputs.FlinkConnectionEnvironmentArgs>? Environment { get; set; }

        [Input("organization")]
        public Input<Inputs.FlinkConnectionOrganizationArgs>? Organization { get; set; }

        /// <summary>
        /// Password for the type.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("principal")]
        public Input<Inputs.FlinkConnectionPrincipalArgs>? Principal { get; set; }

        /// <summary>
        /// The REST endpoint of the Flink Connection cluster, for example,
        /// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
        /// </summary>
        [Input("restEndpoint")]
        public Input<string>? RestEndpoint { get; set; }

        /// <summary>
        /// Service Key for the type.
        /// </summary>
        [Input("serviceKey")]
        public Input<string>? ServiceKey { get; set; }

        /// <summary>
        /// The type of the flink connection.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Username for the type.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public FlinkConnectionArgs()
        {
        }
        public static new FlinkConnectionArgs Empty => new FlinkConnectionArgs();
    }

    public sealed class FlinkConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// API key for the type.
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// The schema version of this representation of a resource.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// Access key for the type.
        /// </summary>
        [Input("awsAccessKey")]
        public Input<string>? AwsAccessKey { get; set; }

        /// <summary>
        /// Secret key for the type.
        /// </summary>
        [Input("awsSecretKey")]
        public Input<string>? AwsSecretKey { get; set; }

        /// <summary>
        /// Session token for the type.
        /// </summary>
        [Input("awsSessionToken")]
        public Input<string>? AwsSessionToken { get; set; }

        [Input("computePool")]
        public Input<Inputs.FlinkConnectionComputePoolGetArgs>? ComputePool { get; set; }

        [Input("credentials")]
        private Input<Inputs.FlinkConnectionCredentialsGetArgs>? _credentials;

        /// <summary>
        /// The Cluster API Credentials.
        /// </summary>
        public Input<Inputs.FlinkConnectionCredentialsGetArgs>? Credentials
        {
            get => _credentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _credentials = Output.Tuple<Input<Inputs.FlinkConnectionCredentialsGetArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The unique name of the Flink Connection per organization, environment scope.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The endpoint of the flink connection.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("environment")]
        public Input<Inputs.FlinkConnectionEnvironmentGetArgs>? Environment { get; set; }

        /// <summary>
        /// The object this REST resource represents.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("organization")]
        public Input<Inputs.FlinkConnectionOrganizationGetArgs>? Organization { get; set; }

        /// <summary>
        /// Password for the type.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("principal")]
        public Input<Inputs.FlinkConnectionPrincipalGetArgs>? Principal { get; set; }

        /// <summary>
        /// The REST endpoint of the Flink Connection cluster, for example,
        /// `https://flink.us-east-1.aws.confluent.cloud/sql/v1/organizations/1111aaaa-11aa-11aa-11aa-111111aaaaaa/environments/env-abc123`).
        /// </summary>
        [Input("restEndpoint")]
        public Input<string>? RestEndpoint { get; set; }

        /// <summary>
        /// Service Key for the type.
        /// </summary>
        [Input("serviceKey")]
        public Input<string>? ServiceKey { get; set; }

        /// <summary>
        /// The type of the flink connection.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Username for the type.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public FlinkConnectionState()
        {
        }
        public static new FlinkConnectionState Empty => new FlinkConnectionState();
    }
}
