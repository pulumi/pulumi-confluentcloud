// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
    /// 
    /// `confluentcloud.GroupMapping` provides a Group Mapping resource that enables creating, editing, and deleting group mappings on Confluent Cloud.
    /// 
    /// &gt; **Note:** See [Group Mapping in Confluent Cloud](https://docs.confluent.io/cloud/current/access-management/authenticate/sso/group-mapping/overview.html) for more details.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ConfluentCloud = Pulumi.ConfluentCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var application_developers = new ConfluentCloud.GroupMapping("application-developers", new()
    ///     {
    ///         DisplayName = "Application Developers",
    ///         Description = "Admin access to production environment for Engineering",
    ///         Filter = "\"engineering\" in groups",
    ///     });
    /// 
    ///     var envadmin = new ConfluentCloud.RoleBinding("envadmin", new()
    ///     {
    ///         Principal = application_developers.Id.Apply(id =&gt; $"User:{id}"),
    ///         RoleName = "EnvironmentAdmin",
    ///         CrnPattern = data.Confluent_environment.Prod.Resource_name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import a Group Mapping by using Group Mapping ID, for example:
    /// 
    ///  $ export CONFLUENT_CLOUD_API_KEY="&lt;cloud_api_key&gt;"
    /// 
    ///  $ export CONFLUENT_CLOUD_API_SECRET="&lt;cloud_api_secret&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/groupMapping:GroupMapping application-developers group-abc123
    /// ```
    /// 
    ///  !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/groupMapping:GroupMapping")]
    public partial class GroupMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description explaining the purpose and use of the group mapping.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the Group Mapping.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// A single group identifier or a condition based on [supported CEL operators](https://docs.confluent.io/cloud/current/access-management/authenticate/sso/group-mapping/overview.html#supported-cel-operators-for-group-mapping) that defines which groups are included.
        /// </summary>
        [Output("filter")]
        public Output<string> Filter { get; private set; } = null!;


        /// <summary>
        /// Create a GroupMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupMapping(string name, GroupMappingArgs args, CustomResourceOptions? options = null)
            : base("confluentcloud:index/groupMapping:GroupMapping", name, args ?? new GroupMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupMapping(string name, Input<string> id, GroupMappingState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/groupMapping:GroupMapping", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupMapping Get(string name, Input<string> id, GroupMappingState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupMapping(name, id, state, options);
        }
    }

    public sealed class GroupMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description explaining the purpose and use of the group mapping.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Group Mapping.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// A single group identifier or a condition based on [supported CEL operators](https://docs.confluent.io/cloud/current/access-management/authenticate/sso/group-mapping/overview.html#supported-cel-operators-for-group-mapping) that defines which groups are included.
        /// </summary>
        [Input("filter", required: true)]
        public Input<string> Filter { get; set; } = null!;

        public GroupMappingArgs()
        {
        }
        public static new GroupMappingArgs Empty => new GroupMappingArgs();
    }

    public sealed class GroupMappingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description explaining the purpose and use of the group mapping.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Group Mapping.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// A single group identifier or a condition based on [supported CEL operators](https://docs.confluent.io/cloud/current/access-management/authenticate/sso/group-mapping/overview.html#supported-cel-operators-for-group-mapping) that defines which groups are included.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        public GroupMappingState()
        {
        }
        public static new GroupMappingState Empty => new GroupMappingState();
    }
}
