// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ConfluentCloud = Pulumi.ConfluentCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var development = new ConfluentCloud.Environment("development");
    /// 
    ///     var main = new ConfluentCloud.FlinkComputePool("main", new()
    ///     {
    ///         DisplayName = "standard_compute_pool",
    ///         Cloud = "AWS",
    ///         Region = "us-east-1",
    ///         MaxCfu = 5,
    ///         Environment = new ConfluentCloud.Inputs.FlinkComputePoolEnvironmentArgs
    ///         {
    ///             Id = development.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import a Flink Compute Pool by using Environment ID and Flink Compute Pool ID, in the format `&lt;Environment ID&gt;/&lt;Flink Compute Pool ID&gt;`. The following example shows how to import a Flink Compute Pool$ export CONFLUENT_CLOUD_API_KEY="&lt;cloud_api_key&gt;" $ export CONFLUENT_CLOUD_API_SECRET="&lt;cloud_api_secret&gt;"
    /// 
    /// ```sh
    ///  $ pulumi import confluentcloud:index/flinkComputePool:FlinkComputePool main env-abc123/lfcp-abc123
    /// ```
    /// 
    ///  !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/flinkComputePool:FlinkComputePool")]
    public partial class FlinkComputePool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Required String) The API Version of the schema version of the Flink Compute Pool, for example, `fcpm/v2`.
        /// </summary>
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// The cloud service provider that runs the Flink Compute Pool.
        /// </summary>
        [Output("cloud")]
        public Output<string> Cloud { get; private set; } = null!;

        /// <summary>
        /// (Required Integer) The number of Confluent Flink Units (CFUs) currently allocated to this Flink compute pool.
        /// </summary>
        [Output("currentCfu")]
        public Output<int> CurrentCfu { get; private set; } = null!;

        /// <summary>
        /// The name of the Flink Compute Pool.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Output("environment")]
        public Output<Outputs.FlinkComputePoolEnvironment> Environment { get; private set; } = null!;

        /// <summary>
        /// (Required String) The kind of the Flink Compute Pool, for example, `ComputePool`.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Maximum number of Confluent Flink Units (CFUs) that the Flink compute pool should auto-scale to. The accepted values are: `5` and `10`.
        /// </summary>
        [Output("maxCfu")]
        public Output<int> MaxCfu { get; private set; } = null!;

        /// <summary>
        /// The cloud service provider region that hosts the Flink Compute Pool.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// (Required String) The Confluent Resource Name of the Flink Compute Pool.
        /// </summary>
        [Output("resourceName")]
        public Output<string> ResourceName { get; private set; } = null!;

        /// <summary>
        /// (Required String) The API endpoint of the Flink Compute Pool.
        /// </summary>
        [Output("restEndpoint")]
        public Output<string> RestEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a FlinkComputePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FlinkComputePool(string name, FlinkComputePoolArgs args, CustomResourceOptions? options = null)
            : base("confluentcloud:index/flinkComputePool:FlinkComputePool", name, args ?? new FlinkComputePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FlinkComputePool(string name, Input<string> id, FlinkComputePoolState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/flinkComputePool:FlinkComputePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FlinkComputePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FlinkComputePool Get(string name, Input<string> id, FlinkComputePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new FlinkComputePool(name, id, state, options);
        }
    }

    public sealed class FlinkComputePoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The cloud service provider that runs the Flink Compute Pool.
        /// </summary>
        [Input("cloud", required: true)]
        public Input<string> Cloud { get; set; } = null!;

        /// <summary>
        /// The name of the Flink Compute Pool.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment", required: true)]
        public Input<Inputs.FlinkComputePoolEnvironmentArgs> Environment { get; set; } = null!;

        /// <summary>
        /// Maximum number of Confluent Flink Units (CFUs) that the Flink compute pool should auto-scale to. The accepted values are: `5` and `10`.
        /// </summary>
        [Input("maxCfu")]
        public Input<int>? MaxCfu { get; set; }

        /// <summary>
        /// The cloud service provider region that hosts the Flink Compute Pool.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public FlinkComputePoolArgs()
        {
        }
        public static new FlinkComputePoolArgs Empty => new FlinkComputePoolArgs();
    }

    public sealed class FlinkComputePoolState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required String) The API Version of the schema version of the Flink Compute Pool, for example, `fcpm/v2`.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// The cloud service provider that runs the Flink Compute Pool.
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// (Required Integer) The number of Confluent Flink Units (CFUs) currently allocated to this Flink compute pool.
        /// </summary>
        [Input("currentCfu")]
        public Input<int>? CurrentCfu { get; set; }

        /// <summary>
        /// The name of the Flink Compute Pool.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment")]
        public Input<Inputs.FlinkComputePoolEnvironmentGetArgs>? Environment { get; set; }

        /// <summary>
        /// (Required String) The kind of the Flink Compute Pool, for example, `ComputePool`.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Maximum number of Confluent Flink Units (CFUs) that the Flink compute pool should auto-scale to. The accepted values are: `5` and `10`.
        /// </summary>
        [Input("maxCfu")]
        public Input<int>? MaxCfu { get; set; }

        /// <summary>
        /// The cloud service provider region that hosts the Flink Compute Pool.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (Required String) The Confluent Resource Name of the Flink Compute Pool.
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// (Required String) The API endpoint of the Flink Compute Pool.
        /// </summary>
        [Input("restEndpoint")]
        public Input<string>? RestEndpoint { get; set; }

        public FlinkComputePoolState()
        {
        }
        public static new FlinkComputePoolState Empty => new FlinkComputePoolState();
    }
}
