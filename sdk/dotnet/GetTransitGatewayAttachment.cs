// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetTransitGatewayAttachment
    {
        /// <summary>
        /// [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&amp;body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)
        /// 
        /// &gt; **Note:** `confluentcloud.TransitGatewayAttachment` data source is available in **Early Access** for early adopters. Early Access features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.  
        /// **Early Access** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Early Access features. Early Access features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Early Access features at any time in Confluent’s sole discretion.
        /// 
        /// `confluentcloud.TransitGatewayAttachment` describes a Transit Gateway Attachment data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingIdTransitGatewayAttachment = ConfluentCloud.GetTransitGatewayAttachment.Invoke(new()
        ///     {
        ///         Id = "tgwa-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetTransitGatewayAttachmentEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingNameTransitGatewayAttachment = ConfluentCloud.GetTransitGatewayAttachment.Invoke(new()
        ///     {
        ///         DisplayName = "my_tgwa",
        ///         Environment = new ConfluentCloud.Inputs.GetTransitGatewayAttachmentEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingIdTransitGatewayAttachment.Apply(getTransitGatewayAttachmentResult =&gt; getTransitGatewayAttachmentResult),
        ///         ["exampleUsingName"] = exampleUsingNameTransitGatewayAttachment.Apply(getTransitGatewayAttachmentResult =&gt; getTransitGatewayAttachmentResult),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTransitGatewayAttachmentResult> InvokeAsync(GetTransitGatewayAttachmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransitGatewayAttachmentResult>("confluentcloud:index/getTransitGatewayAttachment:getTransitGatewayAttachment", args ?? new GetTransitGatewayAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// [![Early Access](https://img.shields.io/badge/Lifecycle%20Stage-Early%20Access-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy) [![Request Access To Networking v1](https://img.shields.io/badge/-Request%20Access%20To%20Networking%20v1-%23bc8540)](mailto:ccloud-api-access+networking-v1-early-access@confluent.io?subject=Request%20to%20join%20networking/v1%20API%20Early%20Access&amp;body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Early%20Access%20for%20networking/v1%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)
        /// 
        /// &gt; **Note:** `confluentcloud.TransitGatewayAttachment` data source is available in **Early Access** for early adopters. Early Access features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.  
        /// **Early Access** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Early Access features. Early Access features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Early Access features at any time in Confluent’s sole discretion.
        /// 
        /// `confluentcloud.TransitGatewayAttachment` describes a Transit Gateway Attachment data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingIdTransitGatewayAttachment = ConfluentCloud.GetTransitGatewayAttachment.Invoke(new()
        ///     {
        ///         Id = "tgwa-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetTransitGatewayAttachmentEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingNameTransitGatewayAttachment = ConfluentCloud.GetTransitGatewayAttachment.Invoke(new()
        ///     {
        ///         DisplayName = "my_tgwa",
        ///         Environment = new ConfluentCloud.Inputs.GetTransitGatewayAttachmentEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingIdTransitGatewayAttachment.Apply(getTransitGatewayAttachmentResult =&gt; getTransitGatewayAttachmentResult),
        ///         ["exampleUsingName"] = exampleUsingNameTransitGatewayAttachment.Apply(getTransitGatewayAttachmentResult =&gt; getTransitGatewayAttachmentResult),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTransitGatewayAttachmentResult> Invoke(GetTransitGatewayAttachmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitGatewayAttachmentResult>("confluentcloud:index/getTransitGatewayAttachment:getTransitGatewayAttachment", args ?? new GetTransitGatewayAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitGatewayAttachmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human-readable name for the Transit Gateway Attachment.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Inputs.GetTransitGatewayAttachmentEnvironmentArgs Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetTransitGatewayAttachmentArgs()
        {
        }
        public static new GetTransitGatewayAttachmentArgs Empty => new GetTransitGatewayAttachmentArgs();
    }

    public sealed class GetTransitGatewayAttachmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human-readable name for the Transit Gateway Attachment.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Input<Inputs.GetTransitGatewayAttachmentEnvironmentInputArgs> Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetTransitGatewayAttachmentInvokeArgs()
        {
        }
        public static new GetTransitGatewayAttachmentInvokeArgs Empty => new GetTransitGatewayAttachmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransitGatewayAttachmentResult
    {
        /// <summary>
        /// (Required Configuration Block) The AWS-specific Transit Gateway Attachment details. It supports the following:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransitGatewayAttachmentAwResult> Aws;
        /// <summary>
        /// (Required String) The name of the Transit Gateway Attachment.
        /// - `environment` (Required Configuration Block) supports the following:
        /// </summary>
        public readonly string DisplayName;
        public readonly Outputs.GetTransitGatewayAttachmentEnvironmentResult Environment;
        /// <summary>
        /// (Required String) The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTransitGatewayAttachmentNetworkResult> Networks;

        [OutputConstructor]
        private GetTransitGatewayAttachmentResult(
            ImmutableArray<Outputs.GetTransitGatewayAttachmentAwResult> aws,

            string displayName,

            Outputs.GetTransitGatewayAttachmentEnvironmentResult environment,

            string id,

            ImmutableArray<Outputs.GetTransitGatewayAttachmentNetworkResult> networks)
        {
            Aws = aws;
            DisplayName = displayName;
            Environment = environment;
            Id = id;
            Networks = networks;
        }
    }
}
