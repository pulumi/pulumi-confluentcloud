// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetConnectArtifact
    {
        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.ConnectArtifact` data source represents a Connect Artifact in Confluent Cloud. Connect Artifacts are used to store and manage custom connector plugins in Confluent Cloud.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = ConfluentCloud.GetConnectArtifact.Invoke(new()
        ///     {
        ///         Id = "ca-123456",
        ///         Environment = new ConfluentCloud.Inputs.GetConnectArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-123456",
        ///         },
        ///         Cloud = "AWS",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["artifactName"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.DisplayName),
        ///         ["artifactCloud"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.Cloud),
        ///         ["artifactContentFormat"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.ContentFormat),
        ///         ["artifactDescription"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.Description),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectArtifactResult> InvokeAsync(GetConnectArtifactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectArtifactResult>("confluentcloud:index/getConnectArtifact:getConnectArtifact", args ?? new GetConnectArtifactArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.ConnectArtifact` data source represents a Connect Artifact in Confluent Cloud. Connect Artifacts are used to store and manage custom connector plugins in Confluent Cloud.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = ConfluentCloud.GetConnectArtifact.Invoke(new()
        ///     {
        ///         Id = "ca-123456",
        ///         Environment = new ConfluentCloud.Inputs.GetConnectArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-123456",
        ///         },
        ///         Cloud = "AWS",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["artifactName"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.DisplayName),
        ///         ["artifactCloud"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.Cloud),
        ///         ["artifactContentFormat"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.ContentFormat),
        ///         ["artifactDescription"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.Description),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectArtifactResult> Invoke(GetConnectArtifactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectArtifactResult>("confluentcloud:index/getConnectArtifact:getConnectArtifact", args ?? new GetConnectArtifactInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.ConnectArtifact` data source represents a Connect Artifact in Confluent Cloud. Connect Artifacts are used to store and manage custom connector plugins in Confluent Cloud.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = ConfluentCloud.GetConnectArtifact.Invoke(new()
        ///     {
        ///         Id = "ca-123456",
        ///         Environment = new ConfluentCloud.Inputs.GetConnectArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-123456",
        ///         },
        ///         Cloud = "AWS",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["artifactName"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.DisplayName),
        ///         ["artifactCloud"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.Cloud),
        ///         ["artifactContentFormat"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.ContentFormat),
        ///         ["artifactDescription"] = example.Apply(getConnectArtifactResult =&gt; getConnectArtifactResult.Description),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectArtifactResult> Invoke(GetConnectArtifactInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectArtifactResult>("confluentcloud:index/getConnectArtifact:getConnectArtifact", args ?? new GetConnectArtifactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectArtifactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloud provider where the Connect Artifact archive is uploaded.
        /// </summary>
        [Input("cloud", required: true)]
        public string Cloud { get; set; } = null!;

        [Input("environment", required: true)]
        public Inputs.GetConnectArtifactEnvironmentArgs Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Connect Artifact.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetConnectArtifactArgs()
        {
        }
        public static new GetConnectArtifactArgs Empty => new GetConnectArtifactArgs();
    }

    public sealed class GetConnectArtifactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloud provider where the Connect Artifact archive is uploaded.
        /// </summary>
        [Input("cloud", required: true)]
        public Input<string> Cloud { get; set; } = null!;

        [Input("environment", required: true)]
        public Input<Inputs.GetConnectArtifactEnvironmentInputArgs> Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Connect Artifact.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetConnectArtifactInvokeArgs()
        {
        }
        public static new GetConnectArtifactInvokeArgs Empty => new GetConnectArtifactInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectArtifactResult
    {
        public readonly string Cloud;
        /// <summary>
        /// (String) Archive format of the Connect Artifact. Supported formats are `JAR` and `ZIP`.
        /// </summary>
        public readonly string ContentFormat;
        /// <summary>
        /// (String) Description of the Connect Artifact.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// (String) The unique name of the Connect Artifact per cloud, environment scope.
        /// </summary>
        public readonly string DisplayName;
        public readonly Outputs.GetConnectArtifactEnvironmentResult Environment;
        public readonly string Id;

        [OutputConstructor]
        private GetConnectArtifactResult(
            string cloud,

            string contentFormat,

            string description,

            string displayName,

            Outputs.GetConnectArtifactEnvironmentResult environment,

            string id)
        {
            Cloud = cloud;
            ContentFormat = contentFormat;
            Description = description;
            DisplayName = displayName;
            Environment = environment;
            Id = id;
        }
    }
}
