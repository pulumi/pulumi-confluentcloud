// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetFlinkConnection
    {
        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.FlinkConnection` describes a Flink Connection data source.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Task<GetFlinkConnectionResult> InvokeAsync(GetFlinkConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlinkConnectionResult>("confluentcloud:index/getFlinkConnection:getFlinkConnection", args ?? new GetFlinkConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.FlinkConnection` describes a Flink Connection data source.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetFlinkConnectionResult> Invoke(GetFlinkConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlinkConnectionResult>("confluentcloud:index/getFlinkConnection:getFlinkConnection", args ?? new GetFlinkConnectionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.FlinkConnection` describes a Flink Connection data source.
        /// 
        /// ## Example Usage
        /// </summary>
        public static Output<GetFlinkConnectionResult> Invoke(GetFlinkConnectionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlinkConnectionResult>("confluentcloud:index/getFlinkConnection:getFlinkConnection", args ?? new GetFlinkConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlinkConnectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("computePool")]
        public Inputs.GetFlinkConnectionComputePoolArgs? ComputePool { get; set; }

        [Input("credentials")]
        private Inputs.GetFlinkConnectionCredentialsArgs? _credentials;
        public Inputs.GetFlinkConnectionCredentialsArgs? Credentials
        {
            get => _credentials;
            set => _credentials = value;
        }

        /// <summary>
        /// The name of the Flink Connection.
        /// </summary>
        [Input("displayName", required: true)]
        public string DisplayName { get; set; } = null!;

        [Input("environment")]
        public Inputs.GetFlinkConnectionEnvironmentArgs? Environment { get; set; }

        [Input("organization")]
        public Inputs.GetFlinkConnectionOrganizationArgs? Organization { get; set; }

        [Input("principal")]
        public Inputs.GetFlinkConnectionPrincipalArgs? Principal { get; set; }

        /// <summary>
        /// The REST endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`).
        /// </summary>
        [Input("restEndpoint")]
        public string? RestEndpoint { get; set; }

        /// <summary>
        /// The type of the Flink Connection. The accepted values are: `OPENAI`, `AZUREML`, `AZUREOPENAI`, `BEDROCK`, `SAGEMAKER`, `GOOGLEAI`, `VERTEXAI`, `MONGODB`, `PINECONE`, `ELASTIC` and `COUCHBASE`.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetFlinkConnectionArgs()
        {
        }
        public static new GetFlinkConnectionArgs Empty => new GetFlinkConnectionArgs();
    }

    public sealed class GetFlinkConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("computePool")]
        public Input<Inputs.GetFlinkConnectionComputePoolInputArgs>? ComputePool { get; set; }

        [Input("credentials")]
        private Input<Inputs.GetFlinkConnectionCredentialsInputArgs>? _credentials;
        public Input<Inputs.GetFlinkConnectionCredentialsInputArgs>? Credentials
        {
            get => _credentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _credentials = Output.Tuple<Input<Inputs.GetFlinkConnectionCredentialsInputArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the Flink Connection.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("environment")]
        public Input<Inputs.GetFlinkConnectionEnvironmentInputArgs>? Environment { get; set; }

        [Input("organization")]
        public Input<Inputs.GetFlinkConnectionOrganizationInputArgs>? Organization { get; set; }

        [Input("principal")]
        public Input<Inputs.GetFlinkConnectionPrincipalInputArgs>? Principal { get; set; }

        /// <summary>
        /// The REST endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`).
        /// </summary>
        [Input("restEndpoint")]
        public Input<string>? RestEndpoint { get; set; }

        /// <summary>
        /// The type of the Flink Connection. The accepted values are: `OPENAI`, `AZUREML`, `AZUREOPENAI`, `BEDROCK`, `SAGEMAKER`, `GOOGLEAI`, `VERTEXAI`, `MONGODB`, `PINECONE`, `ELASTIC` and `COUCHBASE`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetFlinkConnectionInvokeArgs()
        {
        }
        public static new GetFlinkConnectionInvokeArgs Empty => new GetFlinkConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlinkConnectionResult
    {
        public readonly Outputs.GetFlinkConnectionComputePoolResult ComputePool;
        public readonly Outputs.GetFlinkConnectionCredentialsResult? Credentials;
        /// <summary>
        /// (Required String) The authentication data of the Flink Connection.
        /// </summary>
        public readonly string Data;
        public readonly string DisplayName;
        /// <summary>
        /// (Required String) The endpoint of the Flink Connection, for example, `https://api.openai.com/v1/chat/completions`
        /// </summary>
        public readonly string Endpoint;
        public readonly Outputs.GetFlinkConnectionEnvironmentResult Environment;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetFlinkConnectionOrganizationResult Organization;
        public readonly Outputs.GetFlinkConnectionPrincipalResult Principal;
        public readonly string? RestEndpoint;
        /// <summary>
        /// (Required String) The status of the Flink Connection.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// (Required String) The status details of the Flink Connection.
        /// -
        /// </summary>
        public readonly string StatusDetail;
        public readonly string? Type;

        [OutputConstructor]
        private GetFlinkConnectionResult(
            Outputs.GetFlinkConnectionComputePoolResult computePool,

            Outputs.GetFlinkConnectionCredentialsResult? credentials,

            string data,

            string displayName,

            string endpoint,

            Outputs.GetFlinkConnectionEnvironmentResult environment,

            string id,

            Outputs.GetFlinkConnectionOrganizationResult organization,

            Outputs.GetFlinkConnectionPrincipalResult principal,

            string? restEndpoint,

            string status,

            string statusDetail,

            string? type)
        {
            ComputePool = computePool;
            Credentials = credentials;
            Data = data;
            DisplayName = displayName;
            Endpoint = endpoint;
            Environment = environment;
            Id = id;
            Organization = organization;
            Principal = principal;
            RestEndpoint = restEndpoint;
            Status = status;
            StatusDetail = statusDetail;
            Type = type;
        }
    }
}
