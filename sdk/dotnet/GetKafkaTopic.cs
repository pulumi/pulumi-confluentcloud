// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetKafkaTopic
    {
        public static Task<GetKafkaTopicResult> InvokeAsync(GetKafkaTopicArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKafkaTopicResult>("confluentcloud:index/getKafkaTopic:getKafkaTopic", args ?? new GetKafkaTopicArgs(), options.WithDefaults());

        public static Output<GetKafkaTopicResult> Invoke(GetKafkaTopicInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKafkaTopicResult>("confluentcloud:index/getKafkaTopic:getKafkaTopic", args ?? new GetKafkaTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKafkaTopicArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentials")]
        private Inputs.GetKafkaTopicCredentialsArgs? _credentials;
        public Inputs.GetKafkaTopicCredentialsArgs? Credentials
        {
            get => _credentials;
            set => _credentials = value;
        }

        [Input("httpEndpoint")]
        public string? HttpEndpoint { get; set; }

        [Input("kafkaCluster")]
        public Inputs.GetKafkaTopicKafkaClusterArgs? KafkaCluster { get; set; }

        /// <summary>
        /// The REST endpoint of the Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
        /// </summary>
        [Input("restEndpoint", required: true)]
        public string RestEndpoint { get; set; } = null!;

        /// <summary>
        /// The name of the topic, for example, `orders-1`. The topic name can be up to 255 characters in length and can contain only alphanumeric characters, hyphens, and underscores.
        /// </summary>
        [Input("topicName", required: true)]
        public string TopicName { get; set; } = null!;

        public GetKafkaTopicArgs()
        {
        }
        public static new GetKafkaTopicArgs Empty => new GetKafkaTopicArgs();
    }

    public sealed class GetKafkaTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("credentials")]
        private Input<Inputs.GetKafkaTopicCredentialsInputArgs>? _credentials;
        public Input<Inputs.GetKafkaTopicCredentialsInputArgs>? Credentials
        {
            get => _credentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _credentials = Output.Tuple<Input<Inputs.GetKafkaTopicCredentialsInputArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("httpEndpoint")]
        public Input<string>? HttpEndpoint { get; set; }

        [Input("kafkaCluster")]
        public Input<Inputs.GetKafkaTopicKafkaClusterInputArgs>? KafkaCluster { get; set; }

        /// <summary>
        /// The REST endpoint of the Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
        /// </summary>
        [Input("restEndpoint", required: true)]
        public Input<string> RestEndpoint { get; set; } = null!;

        /// <summary>
        /// The name of the topic, for example, `orders-1`. The topic name can be up to 255 characters in length and can contain only alphanumeric characters, hyphens, and underscores.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public GetKafkaTopicInvokeArgs()
        {
        }
        public static new GetKafkaTopicInvokeArgs Empty => new GetKafkaTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetKafkaTopicResult
    {
        /// <summary>
        /// (Optional Map) The custom topic settings:
        /// </summary>
        public readonly ImmutableDictionary<string, string> Config;
        public readonly Outputs.GetKafkaTopicCredentialsResult? Credentials;
        public readonly string HttpEndpoint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetKafkaTopicKafkaClusterResult? KafkaCluster;
        /// <summary>
        /// (Required Number) The number of partitions to create in the topic. Defaults to `6`.
        /// </summary>
        public readonly int PartitionsCount;
        public readonly string RestEndpoint;
        public readonly string TopicName;

        [OutputConstructor]
        private GetKafkaTopicResult(
            ImmutableDictionary<string, string> config,

            Outputs.GetKafkaTopicCredentialsResult? credentials,

            string httpEndpoint,

            string id,

            Outputs.GetKafkaTopicKafkaClusterResult? kafkaCluster,

            int partitionsCount,

            string restEndpoint,

            string topicName)
        {
            Config = config;
            Credentials = credentials;
            HttpEndpoint = httpEndpoint;
            Id = id;
            KafkaCluster = kafkaCluster;
            PartitionsCount = partitionsCount;
            RestEndpoint = restEndpoint;
            TopicName = topicName;
        }
    }
}
