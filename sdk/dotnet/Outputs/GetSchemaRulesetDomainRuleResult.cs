// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud.Outputs
{

    [OutputType]
    public sealed class GetSchemaRulesetDomainRuleResult
    {
        /// <summary>
        /// (Optional String) An optional description.
        /// </summary>
        public readonly string Doc;
        /// <summary>
        /// (Optional String) The body of the rule, which is optional.
        /// </summary>
        public readonly string Expr;
        /// <summary>
        /// (Optional String) Either `CONDITION` or `TRANSFORM`.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// (Optional String) The mode of the rule.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// (Optional String) A user-defined name that can be used to reference the rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type ERROR is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, as mentioned above.
        /// </summary>
        public readonly string OnFailure;
        /// <summary>
        /// (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type NONE is used. For UPDOWN and WRITEREAD rules, one can specify two actions separated by commas, such as “NONE,ERROR” for a WRITEREAD rule. In this case NONE applies to WRITE and ERROR applies to READ.
        /// </summary>
        public readonly string OnSuccess;
        /// <summary>
        /// (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Params;
        /// <summary>
        /// (Optional String List) The tags to which the rule applies, if any.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// (Optional String) The type of rule, which invokes a specific rule executor, such as Google Common Expression Language (CEL) or JSONata.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetSchemaRulesetDomainRuleResult(
            string doc,

            string expr,

            string kind,

            string mode,

            string name,

            string onFailure,

            string onSuccess,

            ImmutableDictionary<string, string> @params,

            ImmutableArray<string> tags,

            string type)
        {
            Doc = doc;
            Expr = expr;
            Kind = kind;
            Mode = mode;
            Name = name;
            OnFailure = onFailure;
            OnSuccess = onSuccess;
            Params = @params;
            Tags = tags;
            Type = type;
        }
    }
}
