// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud.Outputs
{

    [OutputType]
    public sealed class GetIpAddressesFilterResult
    {
        /// <summary>
        /// A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
        /// </summary>
        public readonly ImmutableArray<string> AddressTypes;
        /// <summary>
        /// A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
        /// </summary>
        public readonly ImmutableArray<string> Clouds;
        /// <summary>
        /// A list of regions to filter by.
        /// </summary>
        public readonly ImmutableArray<string> Regions;
        /// <summary>
        /// A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
        /// </summary>
        public readonly ImmutableArray<string> Services;

        [OutputConstructor]
        private GetIpAddressesFilterResult(
            ImmutableArray<string> addressTypes,

            ImmutableArray<string> clouds,

            ImmutableArray<string> regions,

            ImmutableArray<string> services)
        {
            AddressTypes = addressTypes;
            Clouds = clouds;
            Regions = regions;
            Services = services;
        }
    }
}
