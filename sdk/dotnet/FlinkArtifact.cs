// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ConfluentCloud = Pulumi.ConfluentCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var development = new ConfluentCloud.Environment("development", new()
    ///     {
    ///         DisplayName = "Development",
    ///     });
    /// 
    ///     var main = new ConfluentCloud.FlinkArtifact("main", new()
    ///     {
    ///         Cloud = "AWS",
    ///         Region = "us-west-2",
    ///         DisplayName = "my_flink_sumscalar_artifact",
    ///         ContentFormat = "JAR",
    ///         Environment = new ConfluentCloud.Inputs.FlinkArtifactEnvironmentArgs
    ///         {
    ///             Id = development.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import a Flink Artifact by using cloud, region, Flink Artifact ID and artifact file, in the format `&lt;Environment ID&gt;/&lt;region&gt;/&lt;cloud&gt;/&lt;Flink Artifact ID&gt;`. The following example shows how to import a Flink Artifact:
    /// 
    /// $ export CONFLUENT_CLOUD_API_KEY="&lt;cloud_api_key&gt;"
    /// 
    /// $ export CONFLUENT_CLOUD_API_SECRET="&lt;cloud_api_secret&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/flinkArtifact:FlinkArtifact main env-abc123/us-east-1/aws/fa-123
    /// ```
    /// 
    /// !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/flinkArtifact:FlinkArtifact")]
    public partial class FlinkArtifact : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Required String) The API Version of the schema version of the Flink Artifact Pool, for example, `fa/v2`.
        /// </summary>
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// The artifact file for Flink Artifact.
        /// </summary>
        [Output("artifactFile")]
        public Output<string?> ArtifactFile { get; private set; } = null!;

        /// <summary>
        /// Java class or alias for the Flink Artifact as provided by developer.
        /// </summary>
        [Output("class")]
        public Output<string?> Class { get; private set; } = null!;

        /// <summary>
        /// The cloud service provider that runs the Flink Artifact.
        /// </summary>
        [Output("cloud")]
        public Output<string> Cloud { get; private set; } = null!;

        /// <summary>
        /// (Optional String) Archive format of the Flink Artifact. Accepted values are: `JAR`, `ZIP`.
        /// </summary>
        [Output("contentFormat")]
        public Output<string> ContentFormat { get; private set; } = null!;

        /// <summary>
        /// (Optional String) Description of the Flink Artifact.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The unique name of the Flink Artifact per cloud, region, environment scope.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// (Optional String) Documentation link of the Flink Artifact.
        /// </summary>
        [Output("documentationLink")]
        public Output<string?> DocumentationLink { get; private set; } = null!;

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Output("environment")]
        public Output<Outputs.FlinkArtifactEnvironment> Environment { get; private set; } = null!;

        /// <summary>
        /// (Required String) The kind of the Flink Artifact Pool, for example, `FlinkArtifact`.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// The cloud service provider region that hosts the Flink Artifact.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// (Optional String) Runtime language of the Flink Artifact as `Python` or `Java`. Defaults to `Java`.
        /// </summary>
        [Output("runtimeLanguage")]
        public Output<string?> RuntimeLanguage { get; private set; } = null!;

        /// <summary>
        /// List of versions for this Flink Artifact.
        /// </summary>
        [Output("versions")]
        public Output<ImmutableArray<Outputs.FlinkArtifactVersion>> Versions { get; private set; } = null!;


        /// <summary>
        /// Create a FlinkArtifact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FlinkArtifact(string name, FlinkArtifactArgs args, CustomResourceOptions? options = null)
            : base("confluentcloud:index/flinkArtifact:FlinkArtifact", name, args ?? new FlinkArtifactArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FlinkArtifact(string name, Input<string> id, FlinkArtifactState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/flinkArtifact:FlinkArtifact", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FlinkArtifact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FlinkArtifact Get(string name, Input<string> id, FlinkArtifactState? state = null, CustomResourceOptions? options = null)
        {
            return new FlinkArtifact(name, id, state, options);
        }
    }

    public sealed class FlinkArtifactArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The artifact file for Flink Artifact.
        /// </summary>
        [Input("artifactFile")]
        public Input<string>? ArtifactFile { get; set; }

        /// <summary>
        /// Java class or alias for the Flink Artifact as provided by developer.
        /// </summary>
        [Input("class")]
        public Input<string>? Class { get; set; }

        /// <summary>
        /// The cloud service provider that runs the Flink Artifact.
        /// </summary>
        [Input("cloud", required: true)]
        public Input<string> Cloud { get; set; } = null!;

        /// <summary>
        /// (Optional String) Archive format of the Flink Artifact. Accepted values are: `JAR`, `ZIP`.
        /// </summary>
        [Input("contentFormat")]
        public Input<string>? ContentFormat { get; set; }

        /// <summary>
        /// (Optional String) Description of the Flink Artifact.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique name of the Flink Artifact per cloud, region, environment scope.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// (Optional String) Documentation link of the Flink Artifact.
        /// </summary>
        [Input("documentationLink")]
        public Input<string>? DocumentationLink { get; set; }

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment", required: true)]
        public Input<Inputs.FlinkArtifactEnvironmentArgs> Environment { get; set; } = null!;

        /// <summary>
        /// The cloud service provider region that hosts the Flink Artifact.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// (Optional String) Runtime language of the Flink Artifact as `Python` or `Java`. Defaults to `Java`.
        /// </summary>
        [Input("runtimeLanguage")]
        public Input<string>? RuntimeLanguage { get; set; }

        public FlinkArtifactArgs()
        {
        }
        public static new FlinkArtifactArgs Empty => new FlinkArtifactArgs();
    }

    public sealed class FlinkArtifactState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required String) The API Version of the schema version of the Flink Artifact Pool, for example, `fa/v2`.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// The artifact file for Flink Artifact.
        /// </summary>
        [Input("artifactFile")]
        public Input<string>? ArtifactFile { get; set; }

        /// <summary>
        /// Java class or alias for the Flink Artifact as provided by developer.
        /// </summary>
        [Input("class")]
        public Input<string>? Class { get; set; }

        /// <summary>
        /// The cloud service provider that runs the Flink Artifact.
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// (Optional String) Archive format of the Flink Artifact. Accepted values are: `JAR`, `ZIP`.
        /// </summary>
        [Input("contentFormat")]
        public Input<string>? ContentFormat { get; set; }

        /// <summary>
        /// (Optional String) Description of the Flink Artifact.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique name of the Flink Artifact per cloud, region, environment scope.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Optional String) Documentation link of the Flink Artifact.
        /// </summary>
        [Input("documentationLink")]
        public Input<string>? DocumentationLink { get; set; }

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment")]
        public Input<Inputs.FlinkArtifactEnvironmentGetArgs>? Environment { get; set; }

        /// <summary>
        /// (Required String) The kind of the Flink Artifact Pool, for example, `FlinkArtifact`.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// The cloud service provider region that hosts the Flink Artifact.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// (Optional String) Runtime language of the Flink Artifact as `Python` or `Java`. Defaults to `Java`.
        /// </summary>
        [Input("runtimeLanguage")]
        public Input<string>? RuntimeLanguage { get; set; }

        [Input("versions")]
        private InputList<Inputs.FlinkArtifactVersionGetArgs>? _versions;

        /// <summary>
        /// List of versions for this Flink Artifact.
        /// </summary>
        public InputList<Inputs.FlinkArtifactVersionGetArgs> Versions
        {
            get => _versions ?? (_versions = new InputList<Inputs.FlinkArtifactVersionGetArgs>());
            set => _versions = value;
        }

        public FlinkArtifactState()
        {
        }
        public static new FlinkArtifactState Empty => new FlinkArtifactState();
    }
}
