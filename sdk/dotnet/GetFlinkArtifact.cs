// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetFlinkArtifact
    {
        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.FlinkArtifact` describes a Flink Artifact data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingId = ConfluentCloud.GetFlinkArtifact.Invoke(new()
        ///     {
        ///         Id = "lfa-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetFlinkArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingName = ConfluentCloud.GetFlinkArtifact.Invoke(new()
        ///     {
        ///         DisplayName = "my_artifact",
        ///         Environment = new ConfluentCloud.Inputs.GetFlinkArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingId,
        ///         ["exampleUsingName"] = exampleUsingName,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetFlinkArtifactResult> InvokeAsync(GetFlinkArtifactArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlinkArtifactResult>("confluentcloud:index/getFlinkArtifact:getFlinkArtifact", args ?? new GetFlinkArtifactArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.FlinkArtifact` describes a Flink Artifact data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingId = ConfluentCloud.GetFlinkArtifact.Invoke(new()
        ///     {
        ///         Id = "lfa-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetFlinkArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingName = ConfluentCloud.GetFlinkArtifact.Invoke(new()
        ///     {
        ///         DisplayName = "my_artifact",
        ///         Environment = new ConfluentCloud.Inputs.GetFlinkArtifactEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingId,
        ///         ["exampleUsingName"] = exampleUsingName,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlinkArtifactResult> Invoke(GetFlinkArtifactInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlinkArtifactResult>("confluentcloud:index/getFlinkArtifact:getFlinkArtifact", args ?? new GetFlinkArtifactInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlinkArtifactArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
        /// </summary>
        [Input("cloud", required: true)]
        public string Cloud { get; set; } = null!;

        /// <summary>
        /// A human-readable name for the Flink Artifact.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Inputs.GetFlinkArtifactEnvironmentArgs Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Flink Artifact, for example, `lfa-abc123`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The cloud service provider region, for example, `us-east-1`.
        /// 
        /// &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
        /// </summary>
        [Input("region", required: true)]
        public string Region { get; set; } = null!;

        public GetFlinkArtifactArgs()
        {
        }
        public static new GetFlinkArtifactArgs Empty => new GetFlinkArtifactArgs();
    }

    public sealed class GetFlinkArtifactInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
        /// </summary>
        [Input("cloud", required: true)]
        public Input<string> Cloud { get; set; } = null!;

        /// <summary>
        /// A human-readable name for the Flink Artifact.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Input<Inputs.GetFlinkArtifactEnvironmentInputArgs> Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Flink Artifact, for example, `lfa-abc123`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The cloud service provider region, for example, `us-east-1`.
        /// 
        /// &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public GetFlinkArtifactInvokeArgs()
        {
        }
        public static new GetFlinkArtifactInvokeArgs Empty => new GetFlinkArtifactInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlinkArtifactResult
    {
        /// <summary>
        /// (Required String) The API Version of the schema version of the Flink Artifact, for example, `fa/v2`.
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// (Required String) Java class or alias for the Flink Artifact as provided by developer.
        /// </summary>
        public readonly string Class;
        public readonly string Cloud;
        /// <summary>
        /// (Required String) Archive format of the Flink Artifact.
        /// </summary>
        public readonly string ContentFormat;
        /// <summary>
        /// (Required String) Description of the Flink Artifact.
        /// </summary>
        public readonly string Description;
        public readonly string DisplayName;
        public readonly Outputs.GetFlinkArtifactEnvironmentResult Environment;
        public readonly string Id;
        /// <summary>
        /// (Required String) The kind of the Flink Artifact, for example, `FlinkArtifact`.
        /// </summary>
        public readonly string Kind;
        public readonly string Region;
        /// <summary>
        /// (Required String) Runtime language of the Flink Artifact. The default runtime language is JAVA.
        /// </summary>
        public readonly string RuntimeLanguage;
        public readonly ImmutableArray<Outputs.GetFlinkArtifactVersionResult> Versions;

        [OutputConstructor]
        private GetFlinkArtifactResult(
            string apiVersion,

            string @class,

            string cloud,

            string contentFormat,

            string description,

            string displayName,

            Outputs.GetFlinkArtifactEnvironmentResult environment,

            string id,

            string kind,

            string region,

            string runtimeLanguage,

            ImmutableArray<Outputs.GetFlinkArtifactVersionResult> versions)
        {
            ApiVersion = apiVersion;
            Class = @class;
            Cloud = cloud;
            ContentFormat = contentFormat;
            Description = description;
            DisplayName = displayName;
            Environment = environment;
            Id = id;
            Kind = kind;
            Region = region;
            RuntimeLanguage = runtimeLanguage;
            Versions = versions;
        }
    }
}
