// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ConfluentCloud = Pulumi.ConfluentCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new ConfluentCloud.ConnectArtifact("example", new()
    ///     {
    ///         DisplayName = "example-connect-artifact",
    ///         Cloud = "AWS",
    ///         Environment = new ConfluentCloud.Inputs.ConnectArtifactEnvironmentArgs
    ///         {
    ///             Id = "env-123456",
    ///         },
    ///         ContentFormat = "JAR",
    ///         ArtifactFile = "path/to/your/artifact.jar",
    ///         Description = "Example Connect Artifact",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import a Connect Artifact by using Environment ID, Cloud, and Connect Artifact ID in the format `&lt;Environment ID&gt;/&lt;cloud&gt;/&lt;Connect Artifact ID&gt;`, for example:
    /// 
    /// $ export CONFLUENT_CLOUD_API_KEY="&lt;cloud_api_key&gt;"
    /// 
    /// $ export CONFLUENT_CLOUD_API_SECRET="&lt;cloud_api_secret&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/connectArtifact:ConnectArtifact example env-123456/AWS/ca-123456
    /// ```
    /// 
    /// !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/connectArtifact:ConnectArtifact")]
    public partial class ConnectArtifact : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The artifact file for Connect Artifact in `JAR` or `ZIP` format. This can be relative or absolute path
        /// </summary>
        [Output("artifactFile")]
        public Output<string?> ArtifactFile { get; private set; } = null!;

        /// <summary>
        /// Cloud provider where the Connect Artifact archive is uploaded.
        /// </summary>
        [Output("cloud")]
        public Output<string> Cloud { get; private set; } = null!;

        /// <summary>
        /// Archive format of the Connect Artifact. Supported formats are `JAR` and `ZIP`.
        /// </summary>
        [Output("contentFormat")]
        public Output<string> ContentFormat { get; private set; } = null!;

        /// <summary>
        /// Description of the Connect Artifact.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The unique name of the Connect Artifact per cloud, environment scope.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Output("environment")]
        public Output<Outputs.ConnectArtifactEnvironment> Environment { get; private set; } = null!;

        /// <summary>
        /// Status of the Connect Artifact.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectArtifact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectArtifact(string name, ConnectArtifactArgs args, CustomResourceOptions? options = null)
            : base("confluentcloud:index/connectArtifact:ConnectArtifact", name, args ?? new ConnectArtifactArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectArtifact(string name, Input<string> id, ConnectArtifactState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/connectArtifact:ConnectArtifact", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectArtifact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectArtifact Get(string name, Input<string> id, ConnectArtifactState? state = null, CustomResourceOptions? options = null)
        {
            return new ConnectArtifact(name, id, state, options);
        }
    }

    public sealed class ConnectArtifactArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The artifact file for Connect Artifact in `JAR` or `ZIP` format. This can be relative or absolute path
        /// </summary>
        [Input("artifactFile")]
        public Input<string>? ArtifactFile { get; set; }

        /// <summary>
        /// Cloud provider where the Connect Artifact archive is uploaded.
        /// </summary>
        [Input("cloud", required: true)]
        public Input<string> Cloud { get; set; } = null!;

        /// <summary>
        /// Archive format of the Connect Artifact. Supported formats are `JAR` and `ZIP`.
        /// </summary>
        [Input("contentFormat", required: true)]
        public Input<string> ContentFormat { get; set; } = null!;

        /// <summary>
        /// Description of the Connect Artifact.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique name of the Connect Artifact per cloud, environment scope.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment", required: true)]
        public Input<Inputs.ConnectArtifactEnvironmentArgs> Environment { get; set; } = null!;

        public ConnectArtifactArgs()
        {
        }
        public static new ConnectArtifactArgs Empty => new ConnectArtifactArgs();
    }

    public sealed class ConnectArtifactState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The artifact file for Connect Artifact in `JAR` or `ZIP` format. This can be relative or absolute path
        /// </summary>
        [Input("artifactFile")]
        public Input<string>? ArtifactFile { get; set; }

        /// <summary>
        /// Cloud provider where the Connect Artifact archive is uploaded.
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// Archive format of the Connect Artifact. Supported formats are `JAR` and `ZIP`.
        /// </summary>
        [Input("contentFormat")]
        public Input<string>? ContentFormat { get; set; }

        /// <summary>
        /// Description of the Connect Artifact.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique name of the Connect Artifact per cloud, environment scope.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment")]
        public Input<Inputs.ConnectArtifactEnvironmentGetArgs>? Environment { get; set; }

        /// <summary>
        /// Status of the Connect Artifact.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ConnectArtifactState()
        {
        }
        public static new ConnectArtifactState Empty => new ConnectArtifactState();
    }
}
