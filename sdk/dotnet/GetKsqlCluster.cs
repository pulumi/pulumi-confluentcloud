// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetKsqlCluster
    {
        /// <summary>
        /// ## # confluentcloud.KsqlCluster Data Source
        /// 
        /// [![Open Preview](https://img.shields.io/badge/Lifecycle%20Stage-Open%20Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.KsqlCluster` describes a ksqlDB cluster data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingIdKsqlCluster = ConfluentCloud.GetKsqlCluster.Invoke(new()
        ///     {
        ///         Id = "lksqlc-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetKsqlClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingNameKsqlCluster = ConfluentCloud.GetKsqlCluster.Invoke(new()
        ///     {
        ///         DisplayName = "ksqldb_cluster",
        ///         Environment = new ConfluentCloud.Inputs.GetKsqlClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingIdKsqlCluster.Apply(getKsqlClusterResult =&gt; getKsqlClusterResult),
        ///         ["exampleUsingName"] = exampleUsingNameKsqlCluster.Apply(getKsqlClusterResult =&gt; getKsqlClusterResult),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKsqlClusterResult> InvokeAsync(GetKsqlClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKsqlClusterResult>("confluentcloud:index/getKsqlCluster:getKsqlCluster", args ?? new GetKsqlClusterArgs(), options.WithDefaults());

        /// <summary>
        /// ## # confluentcloud.KsqlCluster Data Source
        /// 
        /// [![Open Preview](https://img.shields.io/badge/Lifecycle%20Stage-Open%20Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `confluentcloud.KsqlCluster` describes a ksqlDB cluster data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingIdKsqlCluster = ConfluentCloud.GetKsqlCluster.Invoke(new()
        ///     {
        ///         Id = "lksqlc-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetKsqlClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingNameKsqlCluster = ConfluentCloud.GetKsqlCluster.Invoke(new()
        ///     {
        ///         DisplayName = "ksqldb_cluster",
        ///         Environment = new ConfluentCloud.Inputs.GetKsqlClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingIdKsqlCluster.Apply(getKsqlClusterResult =&gt; getKsqlClusterResult),
        ///         ["exampleUsingName"] = exampleUsingNameKsqlCluster.Apply(getKsqlClusterResult =&gt; getKsqlClusterResult),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKsqlClusterResult> Invoke(GetKsqlClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKsqlClusterResult>("confluentcloud:index/getKsqlCluster:getKsqlCluster", args ?? new GetKsqlClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKsqlClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ksqlDB cluster.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Inputs.GetKsqlClusterEnvironmentArgs Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetKsqlClusterArgs()
        {
        }
        public static new GetKsqlClusterArgs Empty => new GetKsqlClusterArgs();
    }

    public sealed class GetKsqlClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ksqlDB cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Input<Inputs.GetKsqlClusterEnvironmentInputArgs> Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetKsqlClusterInvokeArgs()
        {
        }
        public static new GetKsqlClusterInvokeArgs Empty => new GetKsqlClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetKsqlClusterResult
    {
        /// <summary>
        /// (Required String) An API Version of the schema version of the ksqlDB cluster, for example, `ksqldbcm/v2`.
        /// </summary>
        public readonly string ApiVersion;
        public readonly ImmutableArray<Outputs.GetKsqlClusterCredentialIdentityResult> CredentialIdentities;
        /// <summary>
        /// (Required Number) The number of CSUs (Confluent Streaming Units) in the ksqlDB cluster.
        /// - `use_detailed_processing_log` (Optional Boolean) Controls whether the row data should be included in the processing log topic.
        /// </summary>
        public readonly int Csu;
        public readonly string DisplayName;
        public readonly Outputs.GetKsqlClusterEnvironmentResult Environment;
        /// <summary>
        /// (Required String) The API endpoint of the ksqlDB cluster, for example, `https://pksqlc-00000.us-central1.gcp.glb.confluent.cloud`.
        /// - `kafka_cluster` (Optional Configuration Block) supports the following:
        /// </summary>
        public readonly string HttpEndpoint;
        /// <summary>
        /// (Required String) The ID of the service or user account that the ksqlDB cluster belongs to, for example, `sa-abc123`.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetKsqlClusterKafkaClusterResult> KafkaClusters;
        /// <summary>
        /// (Required String) A kind of the ksqlDB cluster, for example, `Cluster`.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// (Required Integer) The amount of storage (in GB) provisioned to this cluster.
        /// </summary>
        public readonly int Storage;
        /// <summary>
        /// (Required String) Topic name prefix used by this ksqlDB cluster. Used to assign ACLs for this ksqlDB cluster to use, for example, `pksqlc-00000`.
        /// </summary>
        public readonly string TopicPrefix;
        public readonly bool UseDetailedProcessingLog;

        [OutputConstructor]
        private GetKsqlClusterResult(
            string apiVersion,

            ImmutableArray<Outputs.GetKsqlClusterCredentialIdentityResult> credentialIdentities,

            int csu,

            string displayName,

            Outputs.GetKsqlClusterEnvironmentResult environment,

            string httpEndpoint,

            string id,

            ImmutableArray<Outputs.GetKsqlClusterKafkaClusterResult> kafkaClusters,

            string kind,

            int storage,

            string topicPrefix,

            bool useDetailedProcessingLog)
        {
            ApiVersion = apiVersion;
            CredentialIdentities = credentialIdentities;
            Csu = csu;
            DisplayName = displayName;
            Environment = environment;
            HttpEndpoint = httpEndpoint;
            Id = id;
            KafkaClusters = kafkaClusters;
            Kind = kind;
            Storage = storage;
            TopicPrefix = topicPrefix;
            UseDetailedProcessingLog = useDetailedProcessingLog;
        }
    }
}
