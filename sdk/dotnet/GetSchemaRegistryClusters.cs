// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetSchemaRegistryClusters
    {
        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `data.confluent_schema_registry_clusters` describes a data source for Schema Registry Clusters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = ConfluentCloud.GetSchemaRegistryClusters.Invoke(new()
        ///     {
        ///         Environment = new ConfluentCloud.Inputs.GetSchemaRegistryClustersEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSchemaRegistryClustersResult> InvokeAsync(GetSchemaRegistryClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchemaRegistryClustersResult>("confluentcloud:index/getSchemaRegistryClusters:getSchemaRegistryClusters", args ?? new GetSchemaRegistryClustersArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `data.confluent_schema_registry_clusters` describes a data source for Schema Registry Clusters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = ConfluentCloud.GetSchemaRegistryClusters.Invoke(new()
        ///     {
        ///         Environment = new ConfluentCloud.Inputs.GetSchemaRegistryClustersEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchemaRegistryClustersResult> Invoke(GetSchemaRegistryClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchemaRegistryClustersResult>("confluentcloud:index/getSchemaRegistryClusters:getSchemaRegistryClusters", args ?? new GetSchemaRegistryClustersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// `data.confluent_schema_registry_clusters` describes a data source for Schema Registry Clusters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = ConfluentCloud.GetSchemaRegistryClusters.Invoke(new()
        ///     {
        ///         Environment = new ConfluentCloud.Inputs.GetSchemaRegistryClustersEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchemaRegistryClustersResult> Invoke(GetSchemaRegistryClustersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchemaRegistryClustersResult>("confluentcloud:index/getSchemaRegistryClusters:getSchemaRegistryClusters", args ?? new GetSchemaRegistryClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchemaRegistryClustersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required Object) exports the following attributes:
        /// </summary>
        [Input("environment")]
        public Inputs.GetSchemaRegistryClustersEnvironmentArgs? Environment { get; set; }

        public GetSchemaRegistryClustersArgs()
        {
        }
        public static new GetSchemaRegistryClustersArgs Empty => new GetSchemaRegistryClustersArgs();
    }

    public sealed class GetSchemaRegistryClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// (Required Object) exports the following attributes:
        /// </summary>
        [Input("environment")]
        public Input<Inputs.GetSchemaRegistryClustersEnvironmentInputArgs>? Environment { get; set; }

        public GetSchemaRegistryClustersInvokeArgs()
        {
        }
        public static new GetSchemaRegistryClustersInvokeArgs Empty => new GetSchemaRegistryClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchemaRegistryClustersResult
    {
        /// <summary>
        /// (Required List of Object) List of Schema Registry clusters. Each Schema Registry cluster object exports the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSchemaRegistryClustersClusterResult> Clusters;
        /// <summary>
        /// (Required Object) exports the following attributes:
        /// </summary>
        public readonly Outputs.GetSchemaRegistryClustersEnvironmentResult Environment;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetSchemaRegistryClustersResult(
            ImmutableArray<Outputs.GetSchemaRegistryClustersClusterResult> clusters,

            Outputs.GetSchemaRegistryClustersEnvironmentResult environment,

            string id)
        {
            Clusters = clusters;
            Environment = environment;
            Id = id;
        }
    }
}
