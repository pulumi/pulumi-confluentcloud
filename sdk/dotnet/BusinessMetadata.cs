// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// ## Import
    /// 
    /// You can import a Business Metadata by using the Schema Registry cluster ID, Business Metadata name in the format `&lt;Schema Registry cluster ID&gt;/&lt;Business Metadata name&gt;`, for example:
    /// 
    ///  $ export IMPORT_SCHEMA_REGISTRY_API_KEY="&lt;schema_registry_api_key&gt;"
    /// 
    ///  $ export IMPORT_SCHEMA_REGISTRY_API_SECRET="&lt;schema_registry_api_secret&gt;"
    /// 
    ///  $ export IMPORT_SCHEMA_REGISTRY_REST_ENDPOINT="&lt;schema_registry_rest_endpoint&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/businessMetadata:BusinessMetadata pii lsrc-8wrx70/PII
    /// ```
    /// 
    ///  !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/businessMetadata:BusinessMetadata")]
    public partial class BusinessMetadata : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of attribute definitions (see [Business Metadata](https://docs.confluent.io/cloud/current/stream-governance/stream-catalog.html#business-metadata-for-schemas) for more details):
        /// </summary>
        [Output("attributeDefinitions")]
        public Output<ImmutableArray<Outputs.BusinessMetadataAttributeDefinition>> AttributeDefinitions { get; private set; } = null!;

        /// <summary>
        /// The Cluster API Credentials.
        /// </summary>
        [Output("credentials")]
        public Output<Outputs.BusinessMetadataCredentials?> Credentials { get; private set; } = null!;

        /// <summary>
        /// The description of the Business Metadata.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the attribute.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
        /// </summary>
        [Output("restEndpoint")]
        public Output<string?> RestEndpoint { get; private set; } = null!;

        [Output("schemaRegistryCluster")]
        public Output<Outputs.BusinessMetadataSchemaRegistryCluster?> SchemaRegistryCluster { get; private set; } = null!;

        /// <summary>
        /// (Required Integer) The version of the Business Metadata, for example, `1`.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a BusinessMetadata resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BusinessMetadata(string name, BusinessMetadataArgs? args = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/businessMetadata:BusinessMetadata", name, args ?? new BusinessMetadataArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BusinessMetadata(string name, Input<string> id, BusinessMetadataState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/businessMetadata:BusinessMetadata", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "credentials",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BusinessMetadata resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BusinessMetadata Get(string name, Input<string> id, BusinessMetadataState? state = null, CustomResourceOptions? options = null)
        {
            return new BusinessMetadata(name, id, state, options);
        }
    }

    public sealed class BusinessMetadataArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributeDefinitions")]
        private InputList<Inputs.BusinessMetadataAttributeDefinitionArgs>? _attributeDefinitions;

        /// <summary>
        /// The list of attribute definitions (see [Business Metadata](https://docs.confluent.io/cloud/current/stream-governance/stream-catalog.html#business-metadata-for-schemas) for more details):
        /// </summary>
        public InputList<Inputs.BusinessMetadataAttributeDefinitionArgs> AttributeDefinitions
        {
            get => _attributeDefinitions ?? (_attributeDefinitions = new InputList<Inputs.BusinessMetadataAttributeDefinitionArgs>());
            set => _attributeDefinitions = value;
        }

        [Input("credentials")]
        private Input<Inputs.BusinessMetadataCredentialsArgs>? _credentials;

        /// <summary>
        /// The Cluster API Credentials.
        /// </summary>
        public Input<Inputs.BusinessMetadataCredentialsArgs>? Credentials
        {
            get => _credentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _credentials = Output.Tuple<Input<Inputs.BusinessMetadataCredentialsArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The description of the Business Metadata.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the attribute.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
        /// </summary>
        [Input("restEndpoint")]
        public Input<string>? RestEndpoint { get; set; }

        [Input("schemaRegistryCluster")]
        public Input<Inputs.BusinessMetadataSchemaRegistryClusterArgs>? SchemaRegistryCluster { get; set; }

        public BusinessMetadataArgs()
        {
        }
        public static new BusinessMetadataArgs Empty => new BusinessMetadataArgs();
    }

    public sealed class BusinessMetadataState : global::Pulumi.ResourceArgs
    {
        [Input("attributeDefinitions")]
        private InputList<Inputs.BusinessMetadataAttributeDefinitionGetArgs>? _attributeDefinitions;

        /// <summary>
        /// The list of attribute definitions (see [Business Metadata](https://docs.confluent.io/cloud/current/stream-governance/stream-catalog.html#business-metadata-for-schemas) for more details):
        /// </summary>
        public InputList<Inputs.BusinessMetadataAttributeDefinitionGetArgs> AttributeDefinitions
        {
            get => _attributeDefinitions ?? (_attributeDefinitions = new InputList<Inputs.BusinessMetadataAttributeDefinitionGetArgs>());
            set => _attributeDefinitions = value;
        }

        [Input("credentials")]
        private Input<Inputs.BusinessMetadataCredentialsGetArgs>? _credentials;

        /// <summary>
        /// The Cluster API Credentials.
        /// </summary>
        public Input<Inputs.BusinessMetadataCredentialsGetArgs>? Credentials
        {
            get => _credentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _credentials = Output.Tuple<Input<Inputs.BusinessMetadataCredentialsGetArgs>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The description of the Business Metadata.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the attribute.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
        /// </summary>
        [Input("restEndpoint")]
        public Input<string>? RestEndpoint { get; set; }

        [Input("schemaRegistryCluster")]
        public Input<Inputs.BusinessMetadataSchemaRegistryClusterGetArgs>? SchemaRegistryCluster { get; set; }

        /// <summary>
        /// (Required Integer) The version of the Business Metadata, for example, `1`.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public BusinessMetadataState()
        {
        }
        public static new BusinessMetadataState Empty => new BusinessMetadataState();
    }
}
