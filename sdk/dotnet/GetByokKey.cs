// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetByokKey
    {
        /// <summary>
        /// [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// &gt; **Note:** `confluentcloud.ByokKey` data source is available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.  
        /// **Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
        /// 
        /// `confluentcloud.ByokKey` describes a BYOK Key data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var azureKey = ConfluentCloud.GetByokKey.Invoke(new()
        ///     {
        ///         Id = "cck-abcde",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["byok"] = azureKey,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetByokKeyResult> InvokeAsync(GetByokKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetByokKeyResult>("confluentcloud:index/getByokKey:getByokKey", args ?? new GetByokKeyArgs(), options.WithDefaults());

        /// <summary>
        /// [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// &gt; **Note:** `confluentcloud.ByokKey` data source is available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.  
        /// **Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Preview features at any time in Confluent’s sole discretion.
        /// 
        /// `confluentcloud.ByokKey` describes a BYOK Key data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var azureKey = ConfluentCloud.GetByokKey.Invoke(new()
        ///     {
        ///         Id = "cck-abcde",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["byok"] = azureKey,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetByokKeyResult> Invoke(GetByokKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetByokKeyResult>("confluentcloud:index/getByokKey:getByokKey", args ?? new GetByokKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetByokKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the BYOK key, for example, `cck-abcde`.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetByokKeyArgs()
        {
        }
        public static new GetByokKeyArgs Empty => new GetByokKeyArgs();
    }

    public sealed class GetByokKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the BYOK key, for example, `cck-abcde`.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetByokKeyInvokeArgs()
        {
        }
        public static new GetByokKeyInvokeArgs Empty => new GetByokKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetByokKeyResult
    {
        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetByokKeyAwResult> Aws;
        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetByokKeyAzureResult> Azures;
        /// <summary>
        /// (Required String) The ID of the BYOK key, for example, `cck-abcde`.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetByokKeyResult(
            ImmutableArray<Outputs.GetByokKeyAwResult> aws,

            ImmutableArray<Outputs.GetByokKeyAzureResult> azures,

            string id)
        {
            Aws = aws;
            Azures = azures;
            Id = id;
        }
    }
}
