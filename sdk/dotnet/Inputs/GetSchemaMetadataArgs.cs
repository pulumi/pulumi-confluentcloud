// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud.Inputs
{

    public sealed class GetSchemaMetadataInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("properties", required: true)]
        private InputMap<string>? _properties;

        /// <summary>
        /// (Optional Map) The custom properties to set:
        /// </summary>
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("sensitives", required: true)]
        private InputList<string>? _sensitives;

        /// <summary>
        /// (Optional List of Strings) A list of metadata properties to be encrypted.
        /// </summary>
        public InputList<string> Sensitives
        {
            get => _sensitives ?? (_sensitives = new InputList<string>());
            set => _sensitives = value;
        }

        [Input("tags", required: true)]
        private InputList<Inputs.GetSchemaMetadataTagInputArgs>? _tags;

        /// <summary>
        /// (Optional String List) The tags to which the rule applies, if any.
        /// </summary>
        public InputList<Inputs.GetSchemaMetadataTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetSchemaMetadataTagInputArgs>());
            set => _tags = value;
        }

        public GetSchemaMetadataInputArgs()
        {
        }
        public static new GetSchemaMetadataInputArgs Empty => new GetSchemaMetadataInputArgs();
    }
}
