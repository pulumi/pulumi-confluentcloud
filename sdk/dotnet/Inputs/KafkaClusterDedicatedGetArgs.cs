// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud.Inputs
{

    public sealed class KafkaClusterDedicatedGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
        /// 
        /// &gt; **Note:** Exactly one from the `basic`, `standard`, `dedicated`, `enterprise` or `freight` configuration blocks must be specified.
        /// 
        /// &gt; **Note:** The `freight` Kafka cluster type is currently available only on AWS.
        /// 
        /// &gt; **Note:** The `enterprise` Kafka cluster type is currently available only on AWS and Azure.
        /// 
        /// !&gt; **Warning:** You can only upgrade clusters from `basic` to `standard`.
        /// 
        /// &gt; **Note:** Currently, provisioning of a Dedicated Kafka cluster takes around 25 minutes on average but might take up to 24 hours. If you can't wait for the `pulumi up` step to finish, you can exit it and import the cluster by using the `pulumi import` command once it has been provisioned. When the cluster is provisioned, you will receive an email notification, and you can also follow updates on the Target Environment web page of the Confluent Cloud website.
        /// </summary>
        [Input("cku", required: true)]
        public Input<int> Cku { get; set; } = null!;

        /// <summary>
        /// The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
        /// </summary>
        [Input("encryptionKey")]
        public Input<string>? EncryptionKey { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// (Required List of String) The list of zones the cluster is in.
        /// - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public KafkaClusterDedicatedGetArgs()
        {
        }
        public static new KafkaClusterDedicatedGetArgs Empty => new KafkaClusterDedicatedGetArgs();
    }
}
