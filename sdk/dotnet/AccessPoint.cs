// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    /// <summary>
    /// [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
    /// 
    /// `confluentcloud.AccessPoint` provides a Access Point resource that enables creating, editing, and deleting Access Points on Confluent Cloud.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using ConfluentCloud = Pulumi.ConfluentCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var development = new ConfluentCloud.Environment("development", new()
    ///     {
    ///         DisplayName = "Development",
    ///     });
    /// 
    ///     var aws = new ConfluentCloud.AccessPoint("aws", new()
    ///     {
    ///         DisplayName = "access_point",
    ///         Environment = new ConfluentCloud.Inputs.AccessPointEnvironmentArgs
    ///         {
    ///             Id = development.Id,
    ///         },
    ///         Gateway = new ConfluentCloud.Inputs.AccessPointGatewayArgs
    ///         {
    ///             Id = main.Gateway[0].Id,
    ///         },
    ///         AwsEgressPrivateLinkEndpoint = new ConfluentCloud.Inputs.AccessPointAwsEgressPrivateLinkEndpointArgs
    ///         {
    ///             VpcEndpointServiceName = "com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000",
    ///         },
    ///     });
    /// 
    ///     var azure = new ConfluentCloud.AccessPoint("azure", new()
    ///     {
    ///         DisplayName = "access_point",
    ///         Environment = new ConfluentCloud.Inputs.AccessPointEnvironmentArgs
    ///         {
    ///             Id = development.Id,
    ///         },
    ///         Gateway = new ConfluentCloud.Inputs.AccessPointGatewayArgs
    ///         {
    ///             Id = main.Gateway[0].Id,
    ///         },
    ///         AzureEgressPrivateLinkEndpoint = new ConfluentCloud.Inputs.AccessPointAzureEgressPrivateLinkEndpointArgs
    ///         {
    ///             PrivateLinkServiceResourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/s-abcde/providers/Microsoft.Network/privateLinkServices/pls-plt-abcdef-az3",
    ///             PrivateLinkSubresourceName = "sqlServer",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You can import a Access Point by using Environment ID and Access Point ID, in the format `&lt;Environment ID&gt;/&lt;Access Point ID&gt;`. The following example shows how to import a Access Point:
    /// 
    /// $ export CONFLUENT_CLOUD_API_KEY="&lt;cloud_api_key&gt;"
    /// 
    /// $ export CONFLUENT_CLOUD_API_SECRET="&lt;cloud_api_secret&gt;"
    /// 
    /// ```sh
    /// $ pulumi import confluentcloud:index/accessPoint:AccessPoint main env-abc123/ap-abc123
    /// ```
    /// 
    /// !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
    /// </summary>
    [ConfluentCloudResourceType("confluentcloud:index/accessPoint:AccessPoint")]
    public partial class AccessPoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Output("awsEgressPrivateLinkEndpoint")]
        public Output<Outputs.AccessPointAwsEgressPrivateLinkEndpoint?> AwsEgressPrivateLinkEndpoint { get; private set; } = null!;

        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Output("awsPrivateNetworkInterface")]
        public Output<Outputs.AccessPointAwsPrivateNetworkInterface?> AwsPrivateNetworkInterface { get; private set; } = null!;

        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Output("azureEgressPrivateLinkEndpoint")]
        public Output<Outputs.AccessPointAzureEgressPrivateLinkEndpoint?> AzureEgressPrivateLinkEndpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the Access Point.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Output("environment")]
        public Output<Outputs.AccessPointEnvironment> Environment { get; private set; } = null!;

        [Output("gateway")]
        public Output<Outputs.AccessPointGateway> Gateway { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPoint(string name, AccessPointArgs args, CustomResourceOptions? options = null)
            : base("confluentcloud:index/accessPoint:AccessPoint", name, args ?? new AccessPointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPoint(string name, Input<string> id, AccessPointState? state = null, CustomResourceOptions? options = null)
            : base("confluentcloud:index/accessPoint:AccessPoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPoint Get(string name, Input<string> id, AccessPointState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPoint(name, id, state, options);
        }
    }

    public sealed class AccessPointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Input("awsEgressPrivateLinkEndpoint")]
        public Input<Inputs.AccessPointAwsEgressPrivateLinkEndpointArgs>? AwsEgressPrivateLinkEndpoint { get; set; }

        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Input("awsPrivateNetworkInterface")]
        public Input<Inputs.AccessPointAwsPrivateNetworkInterfaceArgs>? AwsPrivateNetworkInterface { get; set; }

        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Input("azureEgressPrivateLinkEndpoint")]
        public Input<Inputs.AccessPointAzureEgressPrivateLinkEndpointArgs>? AzureEgressPrivateLinkEndpoint { get; set; }

        /// <summary>
        /// The name of the Access Point.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment", required: true)]
        public Input<Inputs.AccessPointEnvironmentArgs> Environment { get; set; } = null!;

        [Input("gateway", required: true)]
        public Input<Inputs.AccessPointGatewayArgs> Gateway { get; set; } = null!;

        public AccessPointArgs()
        {
        }
        public static new AccessPointArgs Empty => new AccessPointArgs();
    }

    public sealed class AccessPointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Input("awsEgressPrivateLinkEndpoint")]
        public Input<Inputs.AccessPointAwsEgressPrivateLinkEndpointGetArgs>? AwsEgressPrivateLinkEndpoint { get; set; }

        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Input("awsPrivateNetworkInterface")]
        public Input<Inputs.AccessPointAwsPrivateNetworkInterfaceGetArgs>? AwsPrivateNetworkInterface { get; set; }

        /// <summary>
        /// (Optional Configuration Block) supports the following:
        /// </summary>
        [Input("azureEgressPrivateLinkEndpoint")]
        public Input<Inputs.AccessPointAzureEgressPrivateLinkEndpointGetArgs>? AzureEgressPrivateLinkEndpoint { get; set; }

        /// <summary>
        /// The name of the Access Point.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
        /// </summary>
        [Input("environment")]
        public Input<Inputs.AccessPointEnvironmentGetArgs>? Environment { get; set; }

        [Input("gateway")]
        public Input<Inputs.AccessPointGatewayGetArgs>? Gateway { get; set; }

        public AccessPointState()
        {
        }
        public static new AccessPointState Empty => new AccessPointState();
    }
}
