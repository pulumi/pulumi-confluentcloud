// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.ConfluentCloud
{
    public static class GetStreatGovernanceCluster
    {
        /// <summary>
        /// [![Open Preview](https://img.shields.io/badge/Lifecycle%20Stage-Open%20Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// !&gt; **WARNING:** `confluentcloud.StreamGovernanceCluster` data source is deprecated and will be removed in the next version. Use `confluentcloud.SchemaRegistryCluster` instead.
        /// 
        /// &gt; **Note:** `confluentcloud.StreamGovernanceCluster` resource is available in **Open Preview** for early adopters. Open Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.  
        /// **Open Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Open Preview features. Open Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Open Preview features at any time in Confluent’s sole discretion.
        /// 
        /// `confluentcloud.StreamGovernanceCluster` describes a Stream Governance cluster data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingIdStreatGovernanceCluster = ConfluentCloud.GetStreatGovernanceCluster.Invoke(new()
        ///     {
        ///         Id = "lsrc-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetStreatGovernanceClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingNameStreatGovernanceCluster = ConfluentCloud.GetStreatGovernanceCluster.Invoke(new()
        ///     {
        ///         DisplayName = "Stream Governance Package",
        ///         Environment = new ConfluentCloud.Inputs.GetStreatGovernanceClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingIdStreatGovernanceCluster.Apply(getStreatGovernanceClusterResult =&gt; getStreatGovernanceClusterResult),
        ///         ["exampleUsingName"] = exampleUsingNameStreatGovernanceCluster.Apply(getStreatGovernanceClusterResult =&gt; getStreatGovernanceClusterResult),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetStreatGovernanceClusterResult> InvokeAsync(GetStreatGovernanceClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreatGovernanceClusterResult>("confluentcloud:index/getStreatGovernanceCluster:getStreatGovernanceCluster", args ?? new GetStreatGovernanceClusterArgs(), options.WithDefaults());

        /// <summary>
        /// [![Open Preview](https://img.shields.io/badge/Lifecycle%20Stage-Open%20Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
        /// 
        /// !&gt; **WARNING:** `confluentcloud.StreamGovernanceCluster` data source is deprecated and will be removed in the next version. Use `confluentcloud.SchemaRegistryCluster` instead.
        /// 
        /// &gt; **Note:** `confluentcloud.StreamGovernanceCluster` resource is available in **Open Preview** for early adopters. Open Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.  
        /// **Open Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Open Preview features. Open Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Open Preview features at any time in Confluent’s sole discretion.
        /// 
        /// `confluentcloud.StreamGovernanceCluster` describes a Stream Governance cluster data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using ConfluentCloud = Pulumi.ConfluentCloud;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleUsingIdStreatGovernanceCluster = ConfluentCloud.GetStreatGovernanceCluster.Invoke(new()
        ///     {
        ///         Id = "lsrc-abc123",
        ///         Environment = new ConfluentCloud.Inputs.GetStreatGovernanceClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     var exampleUsingNameStreatGovernanceCluster = ConfluentCloud.GetStreatGovernanceCluster.Invoke(new()
        ///     {
        ///         DisplayName = "Stream Governance Package",
        ///         Environment = new ConfluentCloud.Inputs.GetStreatGovernanceClusterEnvironmentInputArgs
        ///         {
        ///             Id = "env-xyz456",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["exampleUsingId"] = exampleUsingIdStreatGovernanceCluster.Apply(getStreatGovernanceClusterResult =&gt; getStreatGovernanceClusterResult),
        ///         ["exampleUsingName"] = exampleUsingNameStreatGovernanceCluster.Apply(getStreatGovernanceClusterResult =&gt; getStreatGovernanceClusterResult),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetStreatGovernanceClusterResult> Invoke(GetStreatGovernanceClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreatGovernanceClusterResult>("confluentcloud:index/getStreatGovernanceCluster:getStreatGovernanceCluster", args ?? new GetStreatGovernanceClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreatGovernanceClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name for the Stream Governance cluster.
        /// </summary>
        [Input("displayName")]
        public string? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Inputs.GetStreatGovernanceClusterEnvironmentArgs Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment that the Stream Governance cluster belongs to, for example, `env-xyz456`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetStreatGovernanceClusterArgs()
        {
        }
        public static new GetStreatGovernanceClusterArgs Empty => new GetStreatGovernanceClusterArgs();
    }

    public sealed class GetStreatGovernanceClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name for the Stream Governance cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("environment", required: true)]
        public Input<Inputs.GetStreatGovernanceClusterEnvironmentInputArgs> Environment { get; set; } = null!;

        /// <summary>
        /// The ID of the Environment that the Stream Governance cluster belongs to, for example, `env-xyz456`.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetStreatGovernanceClusterInvokeArgs()
        {
        }
        public static new GetStreatGovernanceClusterInvokeArgs Empty => new GetStreatGovernanceClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreatGovernanceClusterResult
    {
        /// <summary>
        /// (Required String) An API Version of the schema version of the Stream Governance cluster, for example, `stream-governance/v2`.
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// (Required String) The name of the Stream Governance cluster, for example, `Stream Governance Package`.
        /// </summary>
        public readonly string DisplayName;
        public readonly Outputs.GetStreatGovernanceClusterEnvironmentResult Environment;
        /// <summary>
        /// (Required String) The HTTP endpoint of the Stream Governance cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
        /// </summary>
        public readonly string HttpEndpoint;
        public readonly string Id;
        /// <summary>
        /// (Required String) A kind of the Stream Governance cluster, for example, `Cluster`.
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// (Required String) The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
        /// - `region` (Required Configuration Block) supports the following:
        /// </summary>
        public readonly string Package;
        public readonly ImmutableArray<Outputs.GetStreatGovernanceClusterRegionResult> Regions;
        /// <summary>
        /// (Required String) The Confluent Resource Name of the Stream Governance cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
        /// </summary>
        public readonly string ResourceName;

        [OutputConstructor]
        private GetStreatGovernanceClusterResult(
            string apiVersion,

            string displayName,

            Outputs.GetStreatGovernanceClusterEnvironmentResult environment,

            string httpEndpoint,

            string id,

            string kind,

            string package,

            ImmutableArray<Outputs.GetStreatGovernanceClusterRegionResult> regions,

            string resourceName)
        {
            ApiVersion = apiVersion;
            DisplayName = displayName;
            Environment = environment;
            HttpEndpoint = httpEndpoint;
            Id = id;
            Kind = kind;
            Package = package;
            Regions = regions;
            ResourceName = resourceName;
        }
    }
}
