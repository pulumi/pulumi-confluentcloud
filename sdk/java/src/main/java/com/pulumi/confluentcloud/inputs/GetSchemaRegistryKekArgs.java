// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetSchemaRegistryKekCredentialsArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryKekSchemaRegistryClusterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchemaRegistryKekArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchemaRegistryKekArgs Empty = new GetSchemaRegistryKekArgs();

    @Import(name="credentials")
    private @Nullable Output<GetSchemaRegistryKekCredentialsArgs> credentials;

    public Optional<Output<GetSchemaRegistryKekCredentialsArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="restEndpoint")
    private @Nullable Output<String> restEndpoint;

    public Optional<Output<String>> restEndpoint() {
        return Optional.ofNullable(this.restEndpoint);
    }

    @Import(name="schemaRegistryCluster")
    private @Nullable Output<GetSchemaRegistryKekSchemaRegistryClusterArgs> schemaRegistryCluster;

    public Optional<Output<GetSchemaRegistryKekSchemaRegistryClusterArgs>> schemaRegistryCluster() {
        return Optional.ofNullable(this.schemaRegistryCluster);
    }

    private GetSchemaRegistryKekArgs() {}

    private GetSchemaRegistryKekArgs(GetSchemaRegistryKekArgs $) {
        this.credentials = $.credentials;
        this.name = $.name;
        this.restEndpoint = $.restEndpoint;
        this.schemaRegistryCluster = $.schemaRegistryCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaRegistryKekArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaRegistryKekArgs $;

        public Builder() {
            $ = new GetSchemaRegistryKekArgs();
        }

        public Builder(GetSchemaRegistryKekArgs defaults) {
            $ = new GetSchemaRegistryKekArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentials(@Nullable Output<GetSchemaRegistryKekCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        public Builder credentials(GetSchemaRegistryKekCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder restEndpoint(@Nullable Output<String> restEndpoint) {
            $.restEndpoint = restEndpoint;
            return this;
        }

        public Builder restEndpoint(String restEndpoint) {
            return restEndpoint(Output.of(restEndpoint));
        }

        public Builder schemaRegistryCluster(@Nullable Output<GetSchemaRegistryKekSchemaRegistryClusterArgs> schemaRegistryCluster) {
            $.schemaRegistryCluster = schemaRegistryCluster;
            return this;
        }

        public Builder schemaRegistryCluster(GetSchemaRegistryKekSchemaRegistryClusterArgs schemaRegistryCluster) {
            return schemaRegistryCluster(Output.of(schemaRegistryCluster));
        }

        public GetSchemaRegistryKekArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetSchemaRegistryKekArgs", "name");
            }
            return $;
        }
    }

}
