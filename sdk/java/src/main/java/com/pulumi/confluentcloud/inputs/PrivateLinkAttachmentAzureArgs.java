// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateLinkAttachmentAzureArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateLinkAttachmentAzureArgs Empty = new PrivateLinkAttachmentAzureArgs();

    /**
     * (Required String) Azure Private Link service alias for the availability zone.
     * 
     */
    @Import(name="privateLinkServiceAlias")
    private @Nullable Output<String> privateLinkServiceAlias;

    /**
     * @return (Required String) Azure Private Link service alias for the availability zone.
     * 
     */
    public Optional<Output<String>> privateLinkServiceAlias() {
        return Optional.ofNullable(this.privateLinkServiceAlias);
    }

    /**
     * (Required String) Azure Private Link service resource ID for the availability zone.
     * 
     */
    @Import(name="privateLinkServiceResourceId")
    private @Nullable Output<String> privateLinkServiceResourceId;

    /**
     * @return (Required String) Azure Private Link service resource ID for the availability zone.
     * 
     */
    public Optional<Output<String>> privateLinkServiceResourceId() {
        return Optional.ofNullable(this.privateLinkServiceResourceId);
    }

    private PrivateLinkAttachmentAzureArgs() {}

    private PrivateLinkAttachmentAzureArgs(PrivateLinkAttachmentAzureArgs $) {
        this.privateLinkServiceAlias = $.privateLinkServiceAlias;
        this.privateLinkServiceResourceId = $.privateLinkServiceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkAttachmentAzureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkAttachmentAzureArgs $;

        public Builder() {
            $ = new PrivateLinkAttachmentAzureArgs();
        }

        public Builder(PrivateLinkAttachmentAzureArgs defaults) {
            $ = new PrivateLinkAttachmentAzureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateLinkServiceAlias (Required String) Azure Private Link service alias for the availability zone.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceAlias(@Nullable Output<String> privateLinkServiceAlias) {
            $.privateLinkServiceAlias = privateLinkServiceAlias;
            return this;
        }

        /**
         * @param privateLinkServiceAlias (Required String) Azure Private Link service alias for the availability zone.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceAlias(String privateLinkServiceAlias) {
            return privateLinkServiceAlias(Output.of(privateLinkServiceAlias));
        }

        /**
         * @param privateLinkServiceResourceId (Required String) Azure Private Link service resource ID for the availability zone.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceResourceId(@Nullable Output<String> privateLinkServiceResourceId) {
            $.privateLinkServiceResourceId = privateLinkServiceResourceId;
            return this;
        }

        /**
         * @param privateLinkServiceResourceId (Required String) Azure Private Link service resource ID for the availability zone.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkServiceResourceId(String privateLinkServiceResourceId) {
            return privateLinkServiceResourceId(Output.of(privateLinkServiceResourceId));
        }

        public PrivateLinkAttachmentAzureArgs build() {
            return $;
        }
    }

}
