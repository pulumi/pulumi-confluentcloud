// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIdentityProviderResult {
    /**
     * @return (Required String) A description for the Identity Provider.
     * 
     */
    private String description;
    /**
     * @return (Required String) A human-readable name for the Identity Provider.
     * 
     */
    private String displayName;
    /**
     * @return (Required String) The ID of the Identity Provider, for example, `op-abc123`.
     * 
     */
    private String id;
    /**
     * @return (Required String) A publicly reachable issuer URI for the Identity Provider. The unique issuer URI string represents the entity for issuing tokens.
     * 
     */
    private String issuer;
    /**
     * @return (Required String) A publicly reachable JSON Web Key Set (JWKS) URI for the Identity Provider. A JSON Web Key Set (JWKS) provides a set of keys containing the public keys used to verify any JSON Web Token (JWT) issued by your OAuth 2.0 identity provider.
     * 
     */
    private String jwksUri;

    private GetIdentityProviderResult() {}
    /**
     * @return (Required String) A description for the Identity Provider.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return (Required String) A human-readable name for the Identity Provider.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return (Required String) The ID of the Identity Provider, for example, `op-abc123`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Required String) A publicly reachable issuer URI for the Identity Provider. The unique issuer URI string represents the entity for issuing tokens.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return (Required String) A publicly reachable JSON Web Key Set (JWKS) URI for the Identity Provider. A JSON Web Key Set (JWKS) provides a set of keys containing the public keys used to verify any JSON Web Token (JWT) issued by your OAuth 2.0 identity provider.
     * 
     */
    public String jwksUri() {
        return this.jwksUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIdentityProviderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String id;
        private String issuer;
        private String jwksUri;
        public Builder() {}
        public Builder(GetIdentityProviderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.issuer = defaults.issuer;
    	      this.jwksUri = defaults.jwksUri;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIdentityProviderResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetIdentityProviderResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIdentityProviderResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            if (issuer == null) {
              throw new MissingRequiredPropertyException("GetIdentityProviderResult", "issuer");
            }
            this.issuer = issuer;
            return this;
        }
        @CustomType.Setter
        public Builder jwksUri(String jwksUri) {
            if (jwksUri == null) {
              throw new MissingRequiredPropertyException("GetIdentityProviderResult", "jwksUri");
            }
            this.jwksUri = jwksUri;
            return this;
        }
        public GetIdentityProviderResult build() {
            final var _resultValue = new GetIdentityProviderResult();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.issuer = issuer;
            _resultValue.jwksUri = jwksUri;
            return _resultValue;
        }
    }
}
