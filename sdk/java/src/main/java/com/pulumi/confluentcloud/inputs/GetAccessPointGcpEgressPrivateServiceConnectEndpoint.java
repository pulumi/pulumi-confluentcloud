// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAccessPointGcpEgressPrivateServiceConnectEndpoint extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessPointGcpEgressPrivateServiceConnectEndpoint Empty = new GetAccessPointGcpEgressPrivateServiceConnectEndpoint();

    /**
     * (Required String) Connection ID of the Private Service Connect Endpoint that is connected to the endpoint target.
     * 
     */
    @Import(name="privateServiceConnectEndpointConnectionId", required=true)
    private String privateServiceConnectEndpointConnectionId;

    /**
     * @return (Required String) Connection ID of the Private Service Connect Endpoint that is connected to the endpoint target.
     * 
     */
    public String privateServiceConnectEndpointConnectionId() {
        return this.privateServiceConnectEndpointConnectionId;
    }

    /**
     * (Required String) IP address of the Private Service Connect Endpoint that is connected to the endpoint target.
     * 
     */
    @Import(name="privateServiceConnectEndpointIpAddress", required=true)
    private String privateServiceConnectEndpointIpAddress;

    /**
     * @return (Required String) IP address of the Private Service Connect Endpoint that is connected to the endpoint target.
     * 
     */
    public String privateServiceConnectEndpointIpAddress() {
        return this.privateServiceConnectEndpointIpAddress;
    }

    /**
     * (Required String) Name of the Private Service Connect Endpoint that is connected to the endpoint target.
     * 
     */
    @Import(name="privateServiceConnectEndpointName", required=true)
    private String privateServiceConnectEndpointName;

    /**
     * @return (Required String) Name of the Private Service Connect Endpoint that is connected to the endpoint target.
     * 
     */
    public String privateServiceConnectEndpointName() {
        return this.privateServiceConnectEndpointName;
    }

    /**
     * (Required String) URI of the service attachment for the published service that the Private Service Connect Endpoint connects to, or &#34;ALL_GOOGLE_APIS&#34; or &#34;all-google-apis&#34; for global Google APIs.
     * 
     */
    @Import(name="privateServiceConnectEndpointTarget", required=true)
    private String privateServiceConnectEndpointTarget;

    /**
     * @return (Required String) URI of the service attachment for the published service that the Private Service Connect Endpoint connects to, or &#34;ALL_GOOGLE_APIS&#34; or &#34;all-google-apis&#34; for global Google APIs.
     * 
     */
    public String privateServiceConnectEndpointTarget() {
        return this.privateServiceConnectEndpointTarget;
    }

    private GetAccessPointGcpEgressPrivateServiceConnectEndpoint() {}

    private GetAccessPointGcpEgressPrivateServiceConnectEndpoint(GetAccessPointGcpEgressPrivateServiceConnectEndpoint $) {
        this.privateServiceConnectEndpointConnectionId = $.privateServiceConnectEndpointConnectionId;
        this.privateServiceConnectEndpointIpAddress = $.privateServiceConnectEndpointIpAddress;
        this.privateServiceConnectEndpointName = $.privateServiceConnectEndpointName;
        this.privateServiceConnectEndpointTarget = $.privateServiceConnectEndpointTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessPointGcpEgressPrivateServiceConnectEndpoint defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessPointGcpEgressPrivateServiceConnectEndpoint $;

        public Builder() {
            $ = new GetAccessPointGcpEgressPrivateServiceConnectEndpoint();
        }

        public Builder(GetAccessPointGcpEgressPrivateServiceConnectEndpoint defaults) {
            $ = new GetAccessPointGcpEgressPrivateServiceConnectEndpoint(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateServiceConnectEndpointConnectionId (Required String) Connection ID of the Private Service Connect Endpoint that is connected to the endpoint target.
         * 
         * @return builder
         * 
         */
        public Builder privateServiceConnectEndpointConnectionId(String privateServiceConnectEndpointConnectionId) {
            $.privateServiceConnectEndpointConnectionId = privateServiceConnectEndpointConnectionId;
            return this;
        }

        /**
         * @param privateServiceConnectEndpointIpAddress (Required String) IP address of the Private Service Connect Endpoint that is connected to the endpoint target.
         * 
         * @return builder
         * 
         */
        public Builder privateServiceConnectEndpointIpAddress(String privateServiceConnectEndpointIpAddress) {
            $.privateServiceConnectEndpointIpAddress = privateServiceConnectEndpointIpAddress;
            return this;
        }

        /**
         * @param privateServiceConnectEndpointName (Required String) Name of the Private Service Connect Endpoint that is connected to the endpoint target.
         * 
         * @return builder
         * 
         */
        public Builder privateServiceConnectEndpointName(String privateServiceConnectEndpointName) {
            $.privateServiceConnectEndpointName = privateServiceConnectEndpointName;
            return this;
        }

        /**
         * @param privateServiceConnectEndpointTarget (Required String) URI of the service attachment for the published service that the Private Service Connect Endpoint connects to, or &#34;ALL_GOOGLE_APIS&#34; or &#34;all-google-apis&#34; for global Google APIs.
         * 
         * @return builder
         * 
         */
        public Builder privateServiceConnectEndpointTarget(String privateServiceConnectEndpointTarget) {
            $.privateServiceConnectEndpointTarget = privateServiceConnectEndpointTarget;
            return this;
        }

        public GetAccessPointGcpEgressPrivateServiceConnectEndpoint build() {
            if ($.privateServiceConnectEndpointConnectionId == null) {
                throw new MissingRequiredPropertyException("GetAccessPointGcpEgressPrivateServiceConnectEndpoint", "privateServiceConnectEndpointConnectionId");
            }
            if ($.privateServiceConnectEndpointIpAddress == null) {
                throw new MissingRequiredPropertyException("GetAccessPointGcpEgressPrivateServiceConnectEndpoint", "privateServiceConnectEndpointIpAddress");
            }
            if ($.privateServiceConnectEndpointName == null) {
                throw new MissingRequiredPropertyException("GetAccessPointGcpEgressPrivateServiceConnectEndpoint", "privateServiceConnectEndpointName");
            }
            if ($.privateServiceConnectEndpointTarget == null) {
                throw new MissingRequiredPropertyException("GetAccessPointGcpEgressPrivateServiceConnectEndpoint", "privateServiceConnectEndpointTarget");
            }
            return $;
        }
    }

}
