// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.NetworkLinkServiceAcceptArgs;
import com.pulumi.confluentcloud.inputs.NetworkLinkServiceEnvironmentArgs;
import com.pulumi.confluentcloud.inputs.NetworkLinkServiceNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkLinkServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkLinkServiceArgs Empty = new NetworkLinkServiceArgs();

    @Import(name="accept")
    private @Nullable Output<NetworkLinkServiceAcceptArgs> accept;

    public Optional<Output<NetworkLinkServiceAcceptArgs>> accept() {
        return Optional.ofNullable(this.accept);
    }

    /**
     * The description of the Network Link Service.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Network Link Service.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the Network Link Service.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Network Link Service.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment", required=true)
    private Output<NetworkLinkServiceEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<NetworkLinkServiceEnvironmentArgs> environment() {
        return this.environment;
    }

    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     * 
     */
    @Import(name="network", required=true)
    private Output<NetworkLinkServiceNetworkArgs> network;

    /**
     * @return Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     * 
     */
    public Output<NetworkLinkServiceNetworkArgs> network() {
        return this.network;
    }

    private NetworkLinkServiceArgs() {}

    private NetworkLinkServiceArgs(NetworkLinkServiceArgs $) {
        this.accept = $.accept;
        this.description = $.description;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.network = $.network;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkLinkServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkLinkServiceArgs $;

        public Builder() {
            $ = new NetworkLinkServiceArgs();
        }

        public Builder(NetworkLinkServiceArgs defaults) {
            $ = new NetworkLinkServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder accept(@Nullable Output<NetworkLinkServiceAcceptArgs> accept) {
            $.accept = accept;
            return this;
        }

        public Builder accept(NetworkLinkServiceAcceptArgs accept) {
            return accept(Output.of(accept));
        }

        /**
         * @param description The description of the Network Link Service.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Network Link Service.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The name of the Network Link Service.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Network Link Service.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<NetworkLinkServiceEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(NetworkLinkServiceEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param network Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
         * accounts.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<NetworkLinkServiceNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
         * accounts.
         * 
         * @return builder
         * 
         */
        public Builder network(NetworkLinkServiceNetworkArgs network) {
            return network(Output.of(network));
        }

        public NetworkLinkServiceArgs build() {
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("NetworkLinkServiceArgs", "environment");
            }
            if ($.network == null) {
                throw new MissingRequiredPropertyException("NetworkLinkServiceArgs", "network");
            }
            return $;
        }
    }

}
