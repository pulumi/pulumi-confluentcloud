// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetProviderIntegrationSetupEnvironment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProviderIntegrationSetupResult {
    /**
     * @return (Computed String) The cloud service provider. Values are `AZURE` and `GCP`.
     * 
     */
    private String cloud;
    /**
     * @return (Required String) The display name of the Provider Integration.
     * 
     */
    private String displayName;
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    private GetProviderIntegrationSetupEnvironment environment;
    /**
     * @return (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
     * 
     */
    private String id;
    /**
     * @return (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
     * 
     */
    private String status;
    /**
     * @return (Required List of Strings) List of resource CRNs where this provider integration is being used.
     * 
     */
    private List<String> usages;

    private GetProviderIntegrationSetupResult() {}
    /**
     * @return (Computed String) The cloud service provider. Values are `AZURE` and `GCP`.
     * 
     */
    public String cloud() {
        return this.cloud;
    }
    /**
     * @return (Required String) The display name of the Provider Integration.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    public GetProviderIntegrationSetupEnvironment environment() {
        return this.environment;
    }
    /**
     * @return (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return (Required List of Strings) List of resource CRNs where this provider integration is being used.
     * 
     */
    public List<String> usages() {
        return this.usages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProviderIntegrationSetupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloud;
        private String displayName;
        private GetProviderIntegrationSetupEnvironment environment;
        private String id;
        private String status;
        private List<String> usages;
        public Builder() {}
        public Builder(GetProviderIntegrationSetupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloud = defaults.cloud;
    	      this.displayName = defaults.displayName;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.status = defaults.status;
    	      this.usages = defaults.usages;
        }

        @CustomType.Setter
        public Builder cloud(String cloud) {
            if (cloud == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationSetupResult", "cloud");
            }
            this.cloud = cloud;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationSetupResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environment(GetProviderIntegrationSetupEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationSetupResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationSetupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationSetupResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder usages(List<String> usages) {
            if (usages == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationSetupResult", "usages");
            }
            this.usages = usages;
            return this;
        }
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }
        public GetProviderIntegrationSetupResult build() {
            final var _resultValue = new GetProviderIntegrationSetupResult();
            _resultValue.cloud = cloud;
            _resultValue.displayName = displayName;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.status = status;
            _resultValue.usages = usages;
            return _resultValue;
        }
    }
}
