// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetProviderIntegrationAuthorizationEnvironment;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetProviderIntegrationAuthorizationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProviderIntegrationAuthorizationPlainArgs Empty = new GetProviderIntegrationAuthorizationPlainArgs();

    /**
     * (Required Configuration Block) supports the following:
     * 
     */
    @Import(name="environment", required=true)
    private GetProviderIntegrationAuthorizationEnvironment environment;

    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    public GetProviderIntegrationAuthorizationEnvironment environment() {
        return this.environment;
    }

    /**
     * The ID of the Provider Integration Authorization, for example, `cspi-4xg0q`.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The ID of the Provider Integration Authorization, for example, `cspi-4xg0q`.
     * 
     */
    public String id() {
        return this.id;
    }

    private GetProviderIntegrationAuthorizationPlainArgs() {}

    private GetProviderIntegrationAuthorizationPlainArgs(GetProviderIntegrationAuthorizationPlainArgs $) {
        this.environment = $.environment;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProviderIntegrationAuthorizationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProviderIntegrationAuthorizationPlainArgs $;

        public Builder() {
            $ = new GetProviderIntegrationAuthorizationPlainArgs();
        }

        public Builder(GetProviderIntegrationAuthorizationPlainArgs defaults) {
            $ = new GetProviderIntegrationAuthorizationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environment (Required Configuration Block) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder environment(GetProviderIntegrationAuthorizationEnvironment environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param id The ID of the Provider Integration Authorization, for example, `cspi-4xg0q`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public GetProviderIntegrationAuthorizationPlainArgs build() {
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationPlainArgs", "environment");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationPlainArgs", "id");
            }
            return $;
        }
    }

}
