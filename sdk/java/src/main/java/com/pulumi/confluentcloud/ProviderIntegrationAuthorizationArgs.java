// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.ProviderIntegrationAuthorizationAzureArgs;
import com.pulumi.confluentcloud.inputs.ProviderIntegrationAuthorizationEnvironmentArgs;
import com.pulumi.confluentcloud.inputs.ProviderIntegrationAuthorizationGcpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderIntegrationAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderIntegrationAuthorizationArgs Empty = new ProviderIntegrationAuthorizationArgs();

    /**
     * (Optional Configuration Block) Azure-specific configuration details. It supports the following:
     * 
     */
    @Import(name="azure")
    private @Nullable Output<ProviderIntegrationAuthorizationAzureArgs> azure;

    /**
     * @return (Optional Configuration Block) Azure-specific configuration details. It supports the following:
     * 
     */
    public Optional<Output<ProviderIntegrationAuthorizationAzureArgs>> azure() {
        return Optional.ofNullable(this.azure);
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment", required=true)
    private Output<ProviderIntegrationAuthorizationEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<ProviderIntegrationAuthorizationEnvironmentArgs> environment() {
        return this.environment;
    }

    /**
     * (Optional Configuration Block) GCP-specific configuration details. It supports the following:
     * 
     */
    @Import(name="gcp")
    private @Nullable Output<ProviderIntegrationAuthorizationGcpArgs> gcp;

    /**
     * @return (Optional Configuration Block) GCP-specific configuration details. It supports the following:
     * 
     */
    public Optional<Output<ProviderIntegrationAuthorizationGcpArgs>> gcp() {
        return Optional.ofNullable(this.gcp);
    }

    /**
     * The ID of the provider integration to authorize.
     * 
     */
    @Import(name="providerIntegrationId", required=true)
    private Output<String> providerIntegrationId;

    /**
     * @return The ID of the provider integration to authorize.
     * 
     */
    public Output<String> providerIntegrationId() {
        return this.providerIntegrationId;
    }

    private ProviderIntegrationAuthorizationArgs() {}

    private ProviderIntegrationAuthorizationArgs(ProviderIntegrationAuthorizationArgs $) {
        this.azure = $.azure;
        this.environment = $.environment;
        this.gcp = $.gcp;
        this.providerIntegrationId = $.providerIntegrationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderIntegrationAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderIntegrationAuthorizationArgs $;

        public Builder() {
            $ = new ProviderIntegrationAuthorizationArgs();
        }

        public Builder(ProviderIntegrationAuthorizationArgs defaults) {
            $ = new ProviderIntegrationAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azure (Optional Configuration Block) Azure-specific configuration details. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder azure(@Nullable Output<ProviderIntegrationAuthorizationAzureArgs> azure) {
            $.azure = azure;
            return this;
        }

        /**
         * @param azure (Optional Configuration Block) Azure-specific configuration details. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder azure(ProviderIntegrationAuthorizationAzureArgs azure) {
            return azure(Output.of(azure));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<ProviderIntegrationAuthorizationEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(ProviderIntegrationAuthorizationEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param gcp (Optional Configuration Block) GCP-specific configuration details. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder gcp(@Nullable Output<ProviderIntegrationAuthorizationGcpArgs> gcp) {
            $.gcp = gcp;
            return this;
        }

        /**
         * @param gcp (Optional Configuration Block) GCP-specific configuration details. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder gcp(ProviderIntegrationAuthorizationGcpArgs gcp) {
            return gcp(Output.of(gcp));
        }

        /**
         * @param providerIntegrationId The ID of the provider integration to authorize.
         * 
         * @return builder
         * 
         */
        public Builder providerIntegrationId(Output<String> providerIntegrationId) {
            $.providerIntegrationId = providerIntegrationId;
            return this;
        }

        /**
         * @param providerIntegrationId The ID of the provider integration to authorize.
         * 
         * @return builder
         * 
         */
        public Builder providerIntegrationId(String providerIntegrationId) {
            return providerIntegrationId(Output.of(providerIntegrationId));
        }

        public ProviderIntegrationAuthorizationArgs build() {
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("ProviderIntegrationAuthorizationArgs", "environment");
            }
            if ($.providerIntegrationId == null) {
                throw new MissingRequiredPropertyException("ProviderIntegrationAuthorizationArgs", "providerIntegrationId");
            }
            return $;
        }
    }

}
