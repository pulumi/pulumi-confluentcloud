// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FlinkArtifactVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlinkArtifactVersionArgs Empty = new FlinkArtifactVersionArgs();

    /**
     * The version of this Flink Artifact.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The version of this Flink Artifact.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private FlinkArtifactVersionArgs() {}

    private FlinkArtifactVersionArgs(FlinkArtifactVersionArgs $) {
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlinkArtifactVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlinkArtifactVersionArgs $;

        public Builder() {
            $ = new FlinkArtifactVersionArgs();
        }

        public Builder(FlinkArtifactVersionArgs defaults) {
            $ = new FlinkArtifactVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param version The version of this Flink Artifact.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of this Flink Artifact.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public FlinkArtifactVersionArgs build() {
            if ($.version == null) {
                throw new MissingRequiredPropertyException("FlinkArtifactVersionArgs", "version");
            }
            return $;
        }
    }

}
