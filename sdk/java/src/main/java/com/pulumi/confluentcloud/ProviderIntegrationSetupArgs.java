// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.ProviderIntegrationSetupEnvironmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ProviderIntegrationSetupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderIntegrationSetupArgs Empty = new ProviderIntegrationSetupArgs();

    /**
     * The cloud service provider. Supported values are `AZURE` and `GCP`.
     * 
     */
    @Import(name="cloud", required=true)
    private Output<String> cloud;

    /**
     * @return The cloud service provider. Supported values are `AZURE` and `GCP`.
     * 
     */
    public Output<String> cloud() {
        return this.cloud;
    }

    /**
     * The name of the Provider Integration.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The name of the Provider Integration.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment", required=true)
    private Output<ProviderIntegrationSetupEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<ProviderIntegrationSetupEnvironmentArgs> environment() {
        return this.environment;
    }

    private ProviderIntegrationSetupArgs() {}

    private ProviderIntegrationSetupArgs(ProviderIntegrationSetupArgs $) {
        this.cloud = $.cloud;
        this.displayName = $.displayName;
        this.environment = $.environment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderIntegrationSetupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderIntegrationSetupArgs $;

        public Builder() {
            $ = new ProviderIntegrationSetupArgs();
        }

        public Builder(ProviderIntegrationSetupArgs defaults) {
            $ = new ProviderIntegrationSetupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloud The cloud service provider. Supported values are `AZURE` and `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder cloud(Output<String> cloud) {
            $.cloud = cloud;
            return this;
        }

        /**
         * @param cloud The cloud service provider. Supported values are `AZURE` and `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder cloud(String cloud) {
            return cloud(Output.of(cloud));
        }

        /**
         * @param displayName The name of the Provider Integration.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Provider Integration.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<ProviderIntegrationSetupEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(ProviderIntegrationSetupEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        public ProviderIntegrationSetupArgs build() {
            if ($.cloud == null) {
                throw new MissingRequiredPropertyException("ProviderIntegrationSetupArgs", "cloud");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ProviderIntegrationSetupArgs", "displayName");
            }
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("ProviderIntegrationSetupArgs", "environment");
            }
            return $;
        }
    }

}
