// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class ConnectorOffset {
    /**
     * @return Block with offset information that supports different keys depending on the connector type. For sink connectors, use `kafkaOffset`. For source connectors, the applicable keys differ by kind—refer to the [Source connectors page](https://docs.confluent.io/cloud/current/connectors/offsets.html#source-connectors) for the full list of supported keys. Alternatively, use the [Manage custom offsets section](https://docs.confluent.io/cloud/current/connectors/cc-github-source.html#manage-custom-offsets) on the homepage of the target source connector.
     * 
     */
    private Map<String,String> offset;
    /**
     * @return Block with partition information that supports different keys depending on the connector type. For sink connectors, use `kafkaPartition` and `kafkaTopic`. For source connectors, the applicable keys differ by kind—refer to the [Source connectors page](https://docs.confluent.io/cloud/current/connectors/offsets.html#source-connectors) for the full list of supported keys.
     * 
     */
    private Map<String,String> partition;

    private ConnectorOffset() {}
    /**
     * @return Block with offset information that supports different keys depending on the connector type. For sink connectors, use `kafkaOffset`. For source connectors, the applicable keys differ by kind—refer to the [Source connectors page](https://docs.confluent.io/cloud/current/connectors/offsets.html#source-connectors) for the full list of supported keys. Alternatively, use the [Manage custom offsets section](https://docs.confluent.io/cloud/current/connectors/cc-github-source.html#manage-custom-offsets) on the homepage of the target source connector.
     * 
     */
    public Map<String,String> offset() {
        return this.offset;
    }
    /**
     * @return Block with partition information that supports different keys depending on the connector type. For sink connectors, use `kafkaPartition` and `kafkaTopic`. For source connectors, the applicable keys differ by kind—refer to the [Source connectors page](https://docs.confluent.io/cloud/current/connectors/offsets.html#source-connectors) for the full list of supported keys.
     * 
     */
    public Map<String,String> partition() {
        return this.partition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorOffset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> offset;
        private Map<String,String> partition;
        public Builder() {}
        public Builder(ConnectorOffset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.offset = defaults.offset;
    	      this.partition = defaults.partition;
        }

        @CustomType.Setter
        public Builder offset(Map<String,String> offset) {
            if (offset == null) {
              throw new MissingRequiredPropertyException("ConnectorOffset", "offset");
            }
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder partition(Map<String,String> partition) {
            if (partition == null) {
              throw new MissingRequiredPropertyException("ConnectorOffset", "partition");
            }
            this.partition = partition;
            return this;
        }
        public ConnectorOffset build() {
            final var _resultValue = new ConnectorOffset();
            _resultValue.offset = offset;
            _resultValue.partition = partition;
            return _resultValue;
        }
    }
}
