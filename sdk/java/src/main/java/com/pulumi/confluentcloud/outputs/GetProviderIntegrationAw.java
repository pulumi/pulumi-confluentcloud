// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProviderIntegrationAw {
    /**
     * @return (Required String) Amazon Resource Name (ARN) that identifies the AWS Identity and Access Management (IAM) role that Confluent Cloud assumes when it accesses resources in your AWS account, and must be unique in the same environment.
     * 
     */
    private String customerRoleArn;
    /**
     * @return (Required String) Unique external ID that Confluent Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.
     * 
     */
    private String externalId;
    /**
     * @return (Required String) The IAM role ARN used in Confluent Cloud internally, bundled with `customerRoleArn`.
     * 
     */
    private String iamRoleArn;

    private GetProviderIntegrationAw() {}
    /**
     * @return (Required String) Amazon Resource Name (ARN) that identifies the AWS Identity and Access Management (IAM) role that Confluent Cloud assumes when it accesses resources in your AWS account, and must be unique in the same environment.
     * 
     */
    public String customerRoleArn() {
        return this.customerRoleArn;
    }
    /**
     * @return (Required String) Unique external ID that Confluent Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return (Required String) The IAM role ARN used in Confluent Cloud internally, bundled with `customerRoleArn`.
     * 
     */
    public String iamRoleArn() {
        return this.iamRoleArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProviderIntegrationAw defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String customerRoleArn;
        private String externalId;
        private String iamRoleArn;
        public Builder() {}
        public Builder(GetProviderIntegrationAw defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerRoleArn = defaults.customerRoleArn;
    	      this.externalId = defaults.externalId;
    	      this.iamRoleArn = defaults.iamRoleArn;
        }

        @CustomType.Setter
        public Builder customerRoleArn(String customerRoleArn) {
            if (customerRoleArn == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAw", "customerRoleArn");
            }
            this.customerRoleArn = customerRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAw", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder iamRoleArn(String iamRoleArn) {
            if (iamRoleArn == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAw", "iamRoleArn");
            }
            this.iamRoleArn = iamRoleArn;
            return this;
        }
        public GetProviderIntegrationAw build() {
            final var _resultValue = new GetProviderIntegrationAw();
            _resultValue.customerRoleArn = customerRoleArn;
            _resultValue.externalId = externalId;
            _resultValue.iamRoleArn = iamRoleArn;
            return _resultValue;
        }
    }
}
