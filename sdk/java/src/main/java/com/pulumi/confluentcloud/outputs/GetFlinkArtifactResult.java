// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetFlinkArtifactEnvironment;
import com.pulumi.confluentcloud.outputs.GetFlinkArtifactVersion;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFlinkArtifactResult {
    /**
     * @return (Required String) The API Version of the schema version of the Flink Artifact, for example, `fa/v2`.
     * 
     */
    private String apiVersion;
    /**
     * @return (Required String) Java class or alias for the Flink Artifact as provided by developer.
     * 
     * @deprecated
     * The &#34;class&#34; attribute has been deprecated and will be removed in the next major version of the provider (3.0.0). Refer to the Upgrade Guide at https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/guides/version-3-upgrade for more details. The guide will be published once version 3.0.0 is released.
     * 
     */
    @Deprecated /* The ""class"" attribute has been deprecated and will be removed in the next major version of the provider (3.0.0). Refer to the Upgrade Guide at https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/guides/version-3-upgrade for more details. The guide will be published once version 3.0.0 is released. */
    private String class_;
    private String cloud;
    /**
     * @return (Required String) Archive format of the Flink Artifact.
     * 
     */
    private String contentFormat;
    /**
     * @return (Required String) Description of the Flink Artifact.
     * 
     */
    private String description;
    private String displayName;
    private String documentationLink;
    private GetFlinkArtifactEnvironment environment;
    private String id;
    /**
     * @return (Required String) The kind of the Flink Artifact, for example, `FlinkArtifact`.
     * 
     */
    private String kind;
    private String region;
    /**
     * @return (Required String) Runtime language of the Flink Artifact. The default runtime language is JAVA.
     * 
     */
    private String runtimeLanguage;
    private List<GetFlinkArtifactVersion> versions;

    private GetFlinkArtifactResult() {}
    /**
     * @return (Required String) The API Version of the schema version of the Flink Artifact, for example, `fa/v2`.
     * 
     */
    public String apiVersion() {
        return this.apiVersion;
    }
    /**
     * @return (Required String) Java class or alias for the Flink Artifact as provided by developer.
     * 
     * @deprecated
     * The &#34;class&#34; attribute has been deprecated and will be removed in the next major version of the provider (3.0.0). Refer to the Upgrade Guide at https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/guides/version-3-upgrade for more details. The guide will be published once version 3.0.0 is released.
     * 
     */
    @Deprecated /* The ""class"" attribute has been deprecated and will be removed in the next major version of the provider (3.0.0). Refer to the Upgrade Guide at https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/guides/version-3-upgrade for more details. The guide will be published once version 3.0.0 is released. */
    public String class_() {
        return this.class_;
    }
    public String cloud() {
        return this.cloud;
    }
    /**
     * @return (Required String) Archive format of the Flink Artifact.
     * 
     */
    public String contentFormat() {
        return this.contentFormat;
    }
    /**
     * @return (Required String) Description of the Flink Artifact.
     * 
     */
    public String description() {
        return this.description;
    }
    public String displayName() {
        return this.displayName;
    }
    public String documentationLink() {
        return this.documentationLink;
    }
    public GetFlinkArtifactEnvironment environment() {
        return this.environment;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return (Required String) The kind of the Flink Artifact, for example, `FlinkArtifact`.
     * 
     */
    public String kind() {
        return this.kind;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return (Required String) Runtime language of the Flink Artifact. The default runtime language is JAVA.
     * 
     */
    public String runtimeLanguage() {
        return this.runtimeLanguage;
    }
    public List<GetFlinkArtifactVersion> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlinkArtifactResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiVersion;
        private String class_;
        private String cloud;
        private String contentFormat;
        private String description;
        private String displayName;
        private String documentationLink;
        private GetFlinkArtifactEnvironment environment;
        private String id;
        private String kind;
        private String region;
        private String runtimeLanguage;
        private List<GetFlinkArtifactVersion> versions;
        public Builder() {}
        public Builder(GetFlinkArtifactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.class_ = defaults.class_;
    	      this.cloud = defaults.cloud;
    	      this.contentFormat = defaults.contentFormat;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.documentationLink = defaults.documentationLink;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.region = defaults.region;
    	      this.runtimeLanguage = defaults.runtimeLanguage;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder apiVersion(String apiVersion) {
            if (apiVersion == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "apiVersion");
            }
            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter("class")
        public Builder class_(String class_) {
            if (class_ == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "class_");
            }
            this.class_ = class_;
            return this;
        }
        @CustomType.Setter
        public Builder cloud(String cloud) {
            if (cloud == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "cloud");
            }
            this.cloud = cloud;
            return this;
        }
        @CustomType.Setter
        public Builder contentFormat(String contentFormat) {
            if (contentFormat == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "contentFormat");
            }
            this.contentFormat = contentFormat;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder documentationLink(String documentationLink) {
            if (documentationLink == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "documentationLink");
            }
            this.documentationLink = documentationLink;
            return this;
        }
        @CustomType.Setter
        public Builder environment(GetFlinkArtifactEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder runtimeLanguage(String runtimeLanguage) {
            if (runtimeLanguage == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "runtimeLanguage");
            }
            this.runtimeLanguage = runtimeLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<GetFlinkArtifactVersion> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetFlinkArtifactResult", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(GetFlinkArtifactVersion... versions) {
            return versions(List.of(versions));
        }
        public GetFlinkArtifactResult build() {
            final var _resultValue = new GetFlinkArtifactResult();
            _resultValue.apiVersion = apiVersion;
            _resultValue.class_ = class_;
            _resultValue.cloud = cloud;
            _resultValue.contentFormat = contentFormat;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.documentationLink = documentationLink;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.kind = kind;
            _resultValue.region = region;
            _resultValue.runtimeLanguage = runtimeLanguage;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
