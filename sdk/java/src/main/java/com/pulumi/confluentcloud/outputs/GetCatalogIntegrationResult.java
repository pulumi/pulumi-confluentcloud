// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetCatalogIntegrationAwsGlue;
import com.pulumi.confluentcloud.outputs.GetCatalogIntegrationCredentials;
import com.pulumi.confluentcloud.outputs.GetCatalogIntegrationEnvironment;
import com.pulumi.confluentcloud.outputs.GetCatalogIntegrationKafkaCluster;
import com.pulumi.confluentcloud.outputs.GetCatalogIntegrationSnowflake;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCatalogIntegrationResult {
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    private List<GetCatalogIntegrationAwsGlue> awsGlues;
    private @Nullable GetCatalogIntegrationCredentials credentials;
    /**
     * @return (Required String) The name of the catalog integration.
     * 
     */
    private String displayName;
    private GetCatalogIntegrationEnvironment environment;
    private String id;
    private GetCatalogIntegrationKafkaCluster kafkaCluster;
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    private List<GetCatalogIntegrationSnowflake> snowflakes;
    /**
     * @return (Optional Boolean) Indicates whether the Catalog Integration should be suspended.
     * 
     */
    private Boolean suspended;

    private GetCatalogIntegrationResult() {}
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    public List<GetCatalogIntegrationAwsGlue> awsGlues() {
        return this.awsGlues;
    }
    public Optional<GetCatalogIntegrationCredentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return (Required String) The name of the catalog integration.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public GetCatalogIntegrationEnvironment environment() {
        return this.environment;
    }
    public String id() {
        return this.id;
    }
    public GetCatalogIntegrationKafkaCluster kafkaCluster() {
        return this.kafkaCluster;
    }
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    public List<GetCatalogIntegrationSnowflake> snowflakes() {
        return this.snowflakes;
    }
    /**
     * @return (Optional Boolean) Indicates whether the Catalog Integration should be suspended.
     * 
     */
    public Boolean suspended() {
        return this.suspended;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogIntegrationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCatalogIntegrationAwsGlue> awsGlues;
        private @Nullable GetCatalogIntegrationCredentials credentials;
        private String displayName;
        private GetCatalogIntegrationEnvironment environment;
        private String id;
        private GetCatalogIntegrationKafkaCluster kafkaCluster;
        private List<GetCatalogIntegrationSnowflake> snowflakes;
        private Boolean suspended;
        public Builder() {}
        public Builder(GetCatalogIntegrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsGlues = defaults.awsGlues;
    	      this.credentials = defaults.credentials;
    	      this.displayName = defaults.displayName;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.kafkaCluster = defaults.kafkaCluster;
    	      this.snowflakes = defaults.snowflakes;
    	      this.suspended = defaults.suspended;
        }

        @CustomType.Setter
        public Builder awsGlues(List<GetCatalogIntegrationAwsGlue> awsGlues) {
            if (awsGlues == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "awsGlues");
            }
            this.awsGlues = awsGlues;
            return this;
        }
        public Builder awsGlues(GetCatalogIntegrationAwsGlue... awsGlues) {
            return awsGlues(List.of(awsGlues));
        }
        @CustomType.Setter
        public Builder credentials(@Nullable GetCatalogIntegrationCredentials credentials) {

            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environment(GetCatalogIntegrationEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaCluster(GetCatalogIntegrationKafkaCluster kafkaCluster) {
            if (kafkaCluster == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "kafkaCluster");
            }
            this.kafkaCluster = kafkaCluster;
            return this;
        }
        @CustomType.Setter
        public Builder snowflakes(List<GetCatalogIntegrationSnowflake> snowflakes) {
            if (snowflakes == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "snowflakes");
            }
            this.snowflakes = snowflakes;
            return this;
        }
        public Builder snowflakes(GetCatalogIntegrationSnowflake... snowflakes) {
            return snowflakes(List.of(snowflakes));
        }
        @CustomType.Setter
        public Builder suspended(Boolean suspended) {
            if (suspended == null) {
              throw new MissingRequiredPropertyException("GetCatalogIntegrationResult", "suspended");
            }
            this.suspended = suspended;
            return this;
        }
        public GetCatalogIntegrationResult build() {
            final var _resultValue = new GetCatalogIntegrationResult();
            _resultValue.awsGlues = awsGlues;
            _resultValue.credentials = credentials;
            _resultValue.displayName = displayName;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.kafkaCluster = kafkaCluster;
            _resultValue.snowflakes = snowflakes;
            _resultValue.suspended = suspended;
            return _resultValue;
        }
    }
}
