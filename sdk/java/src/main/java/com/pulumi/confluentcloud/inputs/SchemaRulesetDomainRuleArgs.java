// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchemaRulesetDomainRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaRulesetDomainRuleArgs Empty = new SchemaRulesetDomainRuleArgs();

    @Import(name="doc")
    private @Nullable Output<String> doc;

    public Optional<Output<String>> doc() {
        return Optional.ofNullable(this.doc);
    }

    @Import(name="expr")
    private @Nullable Output<String> expr;

    public Optional<Output<String>> expr() {
        return Optional.ofNullable(this.expr);
    }

    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="onFailure")
    private @Nullable Output<String> onFailure;

    public Optional<Output<String>> onFailure() {
        return Optional.ofNullable(this.onFailure);
    }

    @Import(name="onSuccess")
    private @Nullable Output<String> onSuccess;

    public Optional<Output<String>> onSuccess() {
        return Optional.ofNullable(this.onSuccess);
    }

    @Import(name="params")
    private @Nullable Output<Map<String,String>> params;

    public Optional<Output<Map<String,String>>> params() {
        return Optional.ofNullable(this.params);
    }

    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SchemaRulesetDomainRuleArgs() {}

    private SchemaRulesetDomainRuleArgs(SchemaRulesetDomainRuleArgs $) {
        this.doc = $.doc;
        this.expr = $.expr;
        this.kind = $.kind;
        this.mode = $.mode;
        this.name = $.name;
        this.onFailure = $.onFailure;
        this.onSuccess = $.onSuccess;
        this.params = $.params;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaRulesetDomainRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaRulesetDomainRuleArgs $;

        public Builder() {
            $ = new SchemaRulesetDomainRuleArgs();
        }

        public Builder(SchemaRulesetDomainRuleArgs defaults) {
            $ = new SchemaRulesetDomainRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder doc(@Nullable Output<String> doc) {
            $.doc = doc;
            return this;
        }

        public Builder doc(String doc) {
            return doc(Output.of(doc));
        }

        public Builder expr(@Nullable Output<String> expr) {
            $.expr = expr;
            return this;
        }

        public Builder expr(String expr) {
            return expr(Output.of(expr));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder onFailure(@Nullable Output<String> onFailure) {
            $.onFailure = onFailure;
            return this;
        }

        public Builder onFailure(String onFailure) {
            return onFailure(Output.of(onFailure));
        }

        public Builder onSuccess(@Nullable Output<String> onSuccess) {
            $.onSuccess = onSuccess;
            return this;
        }

        public Builder onSuccess(String onSuccess) {
            return onSuccess(Output.of(onSuccess));
        }

        public Builder params(@Nullable Output<Map<String,String>> params) {
            $.params = params;
            return this;
        }

        public Builder params(Map<String,String> params) {
            return params(Output.of(params));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SchemaRulesetDomainRuleArgs build() {
            return $;
        }
    }

}
