// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetFlinkComputePoolEnvironment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFlinkComputePoolResult {
    /**
     * @return (Required String) The API Version of the schema version of the Flink Compute Pool, for example, `fcpm/v2`.
     * 
     */
    private String apiVersion;
    /**
     * @return (Required String) The cloud service provider that runs the Flink Compute Pool.
     * 
     */
    private String cloud;
    /**
     * @return (Required Integer, **Deprecated**) The number of Confluent Flink Units (CFUs) currently allocated to this Flink compute pool.
     * 
     * @deprecated
     * `confluent_flink_compute_pool` data source&#39;s `current_cfu` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage).
     * 
     */
    @Deprecated /* `confluent_flink_compute_pool` data source's `current_cfu` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage). */
    private Integer currentCfu;
    /**
     * @return (Required String) The name of the Flink Compute Pool.
     * 
     */
    private String displayName;
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    private GetFlinkComputePoolEnvironment environment;
    /**
     * @return (Required String) The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
     * 
     */
    private String id;
    /**
     * @return (Required String) The kind of the Flink Compute Pool, for example, `ComputePool`.
     * 
     */
    private String kind;
    /**
     * @return (Required Integer) Maximum number of Confluent Flink Units (CFUs) that the Flink compute pool should auto-scale to.
     * 
     */
    private Integer maxCfu;
    /**
     * @return (Required String) The cloud service provider region that hosts the Flink Compute Pool.
     * 
     */
    private String region;
    /**
     * @return (Required String) The Confluent Resource Name of the Flink Compute Pool.
     * 
     */
    private String resourceName;
    /**
     * @return (Required String, **Deprecated** use `confluentcloud.getFlinkRegion` data source&#39;s `rest_endpoint` attribute instead) The API endpoint of the Flink Compute Pool.
     * 
     * @deprecated
     * `confluent_flink_compute_pool` data source&#39;s `rest_endpoint` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage). Use `confluent_flink_region` data source&#39;s `rest_endpoint` attribute instead.
     * 
     */
    @Deprecated /* `confluent_flink_compute_pool` data source's `rest_endpoint` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage). Use `confluent_flink_region` data source's `rest_endpoint` attribute instead. */
    private String restEndpoint;

    private GetFlinkComputePoolResult() {}
    /**
     * @return (Required String) The API Version of the schema version of the Flink Compute Pool, for example, `fcpm/v2`.
     * 
     */
    public String apiVersion() {
        return this.apiVersion;
    }
    /**
     * @return (Required String) The cloud service provider that runs the Flink Compute Pool.
     * 
     */
    public String cloud() {
        return this.cloud;
    }
    /**
     * @return (Required Integer, **Deprecated**) The number of Confluent Flink Units (CFUs) currently allocated to this Flink compute pool.
     * 
     * @deprecated
     * `confluent_flink_compute_pool` data source&#39;s `current_cfu` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage).
     * 
     */
    @Deprecated /* `confluent_flink_compute_pool` data source's `current_cfu` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage). */
    public Integer currentCfu() {
        return this.currentCfu;
    }
    /**
     * @return (Required String) The name of the Flink Compute Pool.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    public GetFlinkComputePoolEnvironment environment() {
        return this.environment;
    }
    /**
     * @return (Required String) The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Required String) The kind of the Flink Compute Pool, for example, `ComputePool`.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return (Required Integer) Maximum number of Confluent Flink Units (CFUs) that the Flink compute pool should auto-scale to.
     * 
     */
    public Integer maxCfu() {
        return this.maxCfu;
    }
    /**
     * @return (Required String) The cloud service provider region that hosts the Flink Compute Pool.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return (Required String) The Confluent Resource Name of the Flink Compute Pool.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return (Required String, **Deprecated** use `confluentcloud.getFlinkRegion` data source&#39;s `rest_endpoint` attribute instead) The API endpoint of the Flink Compute Pool.
     * 
     * @deprecated
     * `confluent_flink_compute_pool` data source&#39;s `rest_endpoint` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage). Use `confluent_flink_region` data source&#39;s `rest_endpoint` attribute instead.
     * 
     */
    @Deprecated /* `confluent_flink_compute_pool` data source's `rest_endpoint` attribute has been deprecated and will be removed in a future minor version (as `confluent_flink_compute_pool` data source is still in a Preview lifecycle stage). Use `confluent_flink_region` data source's `rest_endpoint` attribute instead. */
    public String restEndpoint() {
        return this.restEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlinkComputePoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiVersion;
        private String cloud;
        private Integer currentCfu;
        private String displayName;
        private GetFlinkComputePoolEnvironment environment;
        private String id;
        private String kind;
        private Integer maxCfu;
        private String region;
        private String resourceName;
        private String restEndpoint;
        public Builder() {}
        public Builder(GetFlinkComputePoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.cloud = defaults.cloud;
    	      this.currentCfu = defaults.currentCfu;
    	      this.displayName = defaults.displayName;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.maxCfu = defaults.maxCfu;
    	      this.region = defaults.region;
    	      this.resourceName = defaults.resourceName;
    	      this.restEndpoint = defaults.restEndpoint;
        }

        @CustomType.Setter
        public Builder apiVersion(String apiVersion) {
            if (apiVersion == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "apiVersion");
            }
            this.apiVersion = apiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder cloud(String cloud) {
            if (cloud == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "cloud");
            }
            this.cloud = cloud;
            return this;
        }
        @CustomType.Setter
        public Builder currentCfu(Integer currentCfu) {
            if (currentCfu == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "currentCfu");
            }
            this.currentCfu = currentCfu;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environment(GetFlinkComputePoolEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder maxCfu(Integer maxCfu) {
            if (maxCfu == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "maxCfu");
            }
            this.maxCfu = maxCfu;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(String resourceName) {
            if (resourceName == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "resourceName");
            }
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder restEndpoint(String restEndpoint) {
            if (restEndpoint == null) {
              throw new MissingRequiredPropertyException("GetFlinkComputePoolResult", "restEndpoint");
            }
            this.restEndpoint = restEndpoint;
            return this;
        }
        public GetFlinkComputePoolResult build() {
            final var _resultValue = new GetFlinkComputePoolResult();
            _resultValue.apiVersion = apiVersion;
            _resultValue.cloud = cloud;
            _resultValue.currentCfu = currentCfu;
            _resultValue.displayName = displayName;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.kind = kind;
            _resultValue.maxCfu = maxCfu;
            _resultValue.region = region;
            _resultValue.resourceName = resourceName;
            _resultValue.restEndpoint = restEndpoint;
            return _resultValue;
        }
    }
}
