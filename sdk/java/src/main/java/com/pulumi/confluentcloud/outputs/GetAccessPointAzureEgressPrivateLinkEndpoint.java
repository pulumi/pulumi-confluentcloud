// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccessPointAzureEgressPrivateLinkEndpoint {
    /**
     * @return (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
     * 
     */
    private String privateEndpointDomain;
    /**
     * @return (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
     * 
     */
    private String privateEndpointIpAddress;
    /**
     * @return (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
     * 
     */
    private String privateEndpointResourceId;
    /**
     * @return (Required String) Resource ID of the Azure Private Link service.
     * 
     */
    private String privateLinkServiceResourceId;
    /**
     * @return (Required String) Name of the subresource for the Private Endpoint to connect to.
     * 
     */
    private String privateLinkSubresourceName;

    private GetAccessPointAzureEgressPrivateLinkEndpoint() {}
    /**
     * @return (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
     * 
     */
    public String privateEndpointDomain() {
        return this.privateEndpointDomain;
    }
    /**
     * @return (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
     * 
     */
    public String privateEndpointIpAddress() {
        return this.privateEndpointIpAddress;
    }
    /**
     * @return (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
     * 
     */
    public String privateEndpointResourceId() {
        return this.privateEndpointResourceId;
    }
    /**
     * @return (Required String) Resource ID of the Azure Private Link service.
     * 
     */
    public String privateLinkServiceResourceId() {
        return this.privateLinkServiceResourceId;
    }
    /**
     * @return (Required String) Name of the subresource for the Private Endpoint to connect to.
     * 
     */
    public String privateLinkSubresourceName() {
        return this.privateLinkSubresourceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessPointAzureEgressPrivateLinkEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String privateEndpointDomain;
        private String privateEndpointIpAddress;
        private String privateEndpointResourceId;
        private String privateLinkServiceResourceId;
        private String privateLinkSubresourceName;
        public Builder() {}
        public Builder(GetAccessPointAzureEgressPrivateLinkEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.privateEndpointDomain = defaults.privateEndpointDomain;
    	      this.privateEndpointIpAddress = defaults.privateEndpointIpAddress;
    	      this.privateEndpointResourceId = defaults.privateEndpointResourceId;
    	      this.privateLinkServiceResourceId = defaults.privateLinkServiceResourceId;
    	      this.privateLinkSubresourceName = defaults.privateLinkSubresourceName;
        }

        @CustomType.Setter
        public Builder privateEndpointDomain(String privateEndpointDomain) {
            if (privateEndpointDomain == null) {
              throw new MissingRequiredPropertyException("GetAccessPointAzureEgressPrivateLinkEndpoint", "privateEndpointDomain");
            }
            this.privateEndpointDomain = privateEndpointDomain;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointIpAddress(String privateEndpointIpAddress) {
            if (privateEndpointIpAddress == null) {
              throw new MissingRequiredPropertyException("GetAccessPointAzureEgressPrivateLinkEndpoint", "privateEndpointIpAddress");
            }
            this.privateEndpointIpAddress = privateEndpointIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointResourceId(String privateEndpointResourceId) {
            if (privateEndpointResourceId == null) {
              throw new MissingRequiredPropertyException("GetAccessPointAzureEgressPrivateLinkEndpoint", "privateEndpointResourceId");
            }
            this.privateEndpointResourceId = privateEndpointResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkServiceResourceId(String privateLinkServiceResourceId) {
            if (privateLinkServiceResourceId == null) {
              throw new MissingRequiredPropertyException("GetAccessPointAzureEgressPrivateLinkEndpoint", "privateLinkServiceResourceId");
            }
            this.privateLinkServiceResourceId = privateLinkServiceResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkSubresourceName(String privateLinkSubresourceName) {
            if (privateLinkSubresourceName == null) {
              throw new MissingRequiredPropertyException("GetAccessPointAzureEgressPrivateLinkEndpoint", "privateLinkSubresourceName");
            }
            this.privateLinkSubresourceName = privateLinkSubresourceName;
            return this;
        }
        public GetAccessPointAzureEgressPrivateLinkEndpoint build() {
            final var _resultValue = new GetAccessPointAzureEgressPrivateLinkEndpoint();
            _resultValue.privateEndpointDomain = privateEndpointDomain;
            _resultValue.privateEndpointIpAddress = privateEndpointIpAddress;
            _resultValue.privateEndpointResourceId = privateEndpointResourceId;
            _resultValue.privateLinkServiceResourceId = privateLinkServiceResourceId;
            _resultValue.privateLinkSubresourceName = privateLinkSubresourceName;
            return _resultValue;
        }
    }
}
