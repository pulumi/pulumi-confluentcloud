// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.ProviderIntegrationAuthorizationArgs;
import com.pulumi.confluentcloud.Utilities;
import com.pulumi.confluentcloud.inputs.ProviderIntegrationAuthorizationState;
import com.pulumi.confluentcloud.outputs.ProviderIntegrationAuthorizationAzure;
import com.pulumi.confluentcloud.outputs.ProviderIntegrationAuthorizationEnvironment;
import com.pulumi.confluentcloud.outputs.ProviderIntegrationAuthorizationGcp;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * You can import a Provider Integration Authorization by using Environment ID and Provider Integration ID, in the format `&lt;Environment ID&gt;/&lt;Provider Integration ID&gt;`. The following example shows how to import a Provider Integration Authorization:
 * 
 * $ export CONFLUENT_CLOUD_API_KEY=&#34;&lt;cloud_api_key&gt;&#34;
 * 
 * $ export CONFLUENT_CLOUD_API_SECRET=&#34;&lt;cloud_api_secret&gt;&#34;
 * 
 * ```sh
 * $ pulumi import confluentcloud:index/providerIntegrationAuthorization:ProviderIntegrationAuthorization main env-abc123/cspi-4xg0q
 * ```
 * 
 * !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 * 
 */
@ResourceType(type="confluentcloud:index/providerIntegrationAuthorization:ProviderIntegrationAuthorization")
public class ProviderIntegrationAuthorization extends com.pulumi.resources.CustomResource {
    /**
     * (Optional Configuration Block) Azure-specific configuration details. It supports the following:
     * 
     */
    @Export(name="azure", refs={ProviderIntegrationAuthorizationAzure.class}, tree="[0]")
    private Output</* @Nullable */ ProviderIntegrationAuthorizationAzure> azure;

    /**
     * @return (Optional Configuration Block) Azure-specific configuration details. It supports the following:
     * 
     */
    public Output<Optional<ProviderIntegrationAuthorizationAzure>> azure() {
        return Codegen.optional(this.azure);
    }
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Export(name="environment", refs={ProviderIntegrationAuthorizationEnvironment.class}, tree="[0]")
    private Output<ProviderIntegrationAuthorizationEnvironment> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<ProviderIntegrationAuthorizationEnvironment> environment() {
        return this.environment;
    }
    /**
     * (Optional Configuration Block) GCP-specific configuration details. It supports the following:
     * 
     */
    @Export(name="gcp", refs={ProviderIntegrationAuthorizationGcp.class}, tree="[0]")
    private Output</* @Nullable */ ProviderIntegrationAuthorizationGcp> gcp;

    /**
     * @return (Optional Configuration Block) GCP-specific configuration details. It supports the following:
     * 
     */
    public Output<Optional<ProviderIntegrationAuthorizationGcp>> gcp() {
        return Codegen.optional(this.gcp);
    }
    /**
     * The ID of the provider integration to authorize.
     * 
     */
    @Export(name="providerIntegrationId", refs={String.class}, tree="[0]")
    private Output<String> providerIntegrationId;

    /**
     * @return The ID of the provider integration to authorize.
     * 
     */
    public Output<String> providerIntegrationId() {
        return this.providerIntegrationId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProviderIntegrationAuthorization(java.lang.String name) {
        this(name, ProviderIntegrationAuthorizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProviderIntegrationAuthorization(java.lang.String name, ProviderIntegrationAuthorizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProviderIntegrationAuthorization(java.lang.String name, ProviderIntegrationAuthorizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/providerIntegrationAuthorization:ProviderIntegrationAuthorization", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ProviderIntegrationAuthorization(java.lang.String name, Output<java.lang.String> id, @Nullable ProviderIntegrationAuthorizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/providerIntegrationAuthorization:ProviderIntegrationAuthorization", name, state, makeResourceOptions(options, id), false);
    }

    private static ProviderIntegrationAuthorizationArgs makeArgs(ProviderIntegrationAuthorizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProviderIntegrationAuthorizationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProviderIntegrationAuthorization get(java.lang.String name, Output<java.lang.String> id, @Nullable ProviderIntegrationAuthorizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProviderIntegrationAuthorization(name, id, state, options);
    }
}
