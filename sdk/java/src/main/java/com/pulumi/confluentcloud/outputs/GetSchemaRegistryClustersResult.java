// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetSchemaRegistryClustersCluster;
import com.pulumi.confluentcloud.outputs.GetSchemaRegistryClustersEnvironment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSchemaRegistryClustersResult {
    /**
     * @return (Required List of Object) List of Schema Registry clusters. Each Schema Registry cluster object exports the following attributes:
     * 
     */
    private List<GetSchemaRegistryClustersCluster> clusters;
    /**
     * @return (Required Object) exports the following attributes:
     * 
     */
    private GetSchemaRegistryClustersEnvironment environment;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetSchemaRegistryClustersResult() {}
    /**
     * @return (Required List of Object) List of Schema Registry clusters. Each Schema Registry cluster object exports the following attributes:
     * 
     */
    public List<GetSchemaRegistryClustersCluster> clusters() {
        return this.clusters;
    }
    /**
     * @return (Required Object) exports the following attributes:
     * 
     */
    public GetSchemaRegistryClustersEnvironment environment() {
        return this.environment;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchemaRegistryClustersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSchemaRegistryClustersCluster> clusters;
        private GetSchemaRegistryClustersEnvironment environment;
        private String id;
        public Builder() {}
        public Builder(GetSchemaRegistryClustersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusters = defaults.clusters;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder clusters(List<GetSchemaRegistryClustersCluster> clusters) {
            if (clusters == null) {
              throw new MissingRequiredPropertyException("GetSchemaRegistryClustersResult", "clusters");
            }
            this.clusters = clusters;
            return this;
        }
        public Builder clusters(GetSchemaRegistryClustersCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder environment(GetSchemaRegistryClustersEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetSchemaRegistryClustersResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchemaRegistryClustersResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetSchemaRegistryClustersResult build() {
            final var _resultValue = new GetSchemaRegistryClustersResult();
            _resultValue.clusters = clusters;
            _resultValue.environment = environment;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
