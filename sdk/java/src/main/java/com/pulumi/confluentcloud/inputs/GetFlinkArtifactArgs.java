// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetFlinkArtifactEnvironmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFlinkArtifactArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFlinkArtifactArgs Empty = new GetFlinkArtifactArgs();

    /**
     * The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     * 
     */
    @Import(name="cloud", required=true)
    private Output<String> cloud;

    /**
     * @return The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     * 
     */
    public Output<String> cloud() {
        return this.cloud;
    }

    /**
     * A human-readable name for the Flink Artifact.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A human-readable name for the Flink Artifact.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="environment", required=true)
    private Output<GetFlinkArtifactEnvironmentArgs> environment;

    public Output<GetFlinkArtifactEnvironmentArgs> environment() {
        return this.environment;
    }

    /**
     * The ID of the Flink Artifact, for example, `lfa-abc123`.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the Flink Artifact, for example, `lfa-abc123`.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The cloud service provider region, for example, `us-east-1`.
     * 
     * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The cloud service provider region, for example, `us-east-1`.
     * 
     * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private GetFlinkArtifactArgs() {}

    private GetFlinkArtifactArgs(GetFlinkArtifactArgs $) {
        this.cloud = $.cloud;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.id = $.id;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFlinkArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFlinkArtifactArgs $;

        public Builder() {
            $ = new GetFlinkArtifactArgs();
        }

        public Builder(GetFlinkArtifactArgs defaults) {
            $ = new GetFlinkArtifactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloud The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder cloud(Output<String> cloud) {
            $.cloud = cloud;
            return this;
        }

        /**
         * @param cloud The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder cloud(String cloud) {
            return cloud(Output.of(cloud));
        }

        /**
         * @param displayName A human-readable name for the Flink Artifact.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A human-readable name for the Flink Artifact.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder environment(Output<GetFlinkArtifactEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        public Builder environment(GetFlinkArtifactEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param id The ID of the Flink Artifact, for example, `lfa-abc123`.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the Flink Artifact, for example, `lfa-abc123`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param region The cloud service provider region, for example, `us-east-1`.
         * 
         * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The cloud service provider region, for example, `us-east-1`.
         * 
         * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public GetFlinkArtifactArgs build() {
            if ($.cloud == null) {
                throw new MissingRequiredPropertyException("GetFlinkArtifactArgs", "cloud");
            }
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("GetFlinkArtifactArgs", "environment");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetFlinkArtifactArgs", "region");
            }
            return $;
        }
    }

}
