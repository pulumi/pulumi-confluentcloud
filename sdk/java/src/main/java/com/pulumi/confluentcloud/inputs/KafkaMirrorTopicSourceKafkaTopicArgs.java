// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class KafkaMirrorTopicSourceKafkaTopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaMirrorTopicSourceKafkaTopicArgs Empty = new KafkaMirrorTopicSourceKafkaTopicArgs();

    /**
     * The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
     * 
     */
    @Import(name="topicName", required=true)
    private Output<String> topicName;

    /**
     * @return The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
     * 
     */
    public Output<String> topicName() {
        return this.topicName;
    }

    private KafkaMirrorTopicSourceKafkaTopicArgs() {}

    private KafkaMirrorTopicSourceKafkaTopicArgs(KafkaMirrorTopicSourceKafkaTopicArgs $) {
        this.topicName = $.topicName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaMirrorTopicSourceKafkaTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaMirrorTopicSourceKafkaTopicArgs $;

        public Builder() {
            $ = new KafkaMirrorTopicSourceKafkaTopicArgs();
        }

        public Builder(KafkaMirrorTopicSourceKafkaTopicArgs defaults) {
            $ = new KafkaMirrorTopicSourceKafkaTopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param topicName The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
         * 
         * @return builder
         * 
         */
        public Builder topicName(Output<String> topicName) {
            $.topicName = topicName;
            return this;
        }

        /**
         * @param topicName The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
         * 
         * @return builder
         * 
         */
        public Builder topicName(String topicName) {
            return topicName(Output.of(topicName));
        }

        public KafkaMirrorTopicSourceKafkaTopicArgs build() {
            $.topicName = Objects.requireNonNull($.topicName, "expected parameter 'topicName' to be non-null");
            return $;
        }
    }

}
