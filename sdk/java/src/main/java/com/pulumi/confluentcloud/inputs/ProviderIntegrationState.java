// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.ProviderIntegrationAwsArgs;
import com.pulumi.confluentcloud.inputs.ProviderIntegrationEnvironmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderIntegrationState extends com.pulumi.resources.ResourceArgs {

    public static final ProviderIntegrationState Empty = new ProviderIntegrationState();

    /**
     * (Required Configuration Block) The AWS-specific Provider Integration config details. It supports the following:
     * 
     */
    @Import(name="aws")
    private @Nullable Output<ProviderIntegrationAwsArgs> aws;

    /**
     * @return (Required Configuration Block) The AWS-specific Provider Integration config details. It supports the following:
     * 
     */
    public Optional<Output<ProviderIntegrationAwsArgs>> aws() {
        return Optional.ofNullable(this.aws);
    }

    /**
     * The name of the Provider Integration.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Provider Integration.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<ProviderIntegrationEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Optional<Output<ProviderIntegrationEnvironmentArgs>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * (Required List of Strings) List of resource CRNs where this provider integration is being used.
     * 
     */
    @Import(name="usages")
    private @Nullable Output<List<String>> usages;

    /**
     * @return (Required List of Strings) List of resource CRNs where this provider integration is being used.
     * 
     */
    public Optional<Output<List<String>>> usages() {
        return Optional.ofNullable(this.usages);
    }

    private ProviderIntegrationState() {}

    private ProviderIntegrationState(ProviderIntegrationState $) {
        this.aws = $.aws;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.usages = $.usages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderIntegrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderIntegrationState $;

        public Builder() {
            $ = new ProviderIntegrationState();
        }

        public Builder(ProviderIntegrationState defaults) {
            $ = new ProviderIntegrationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aws (Required Configuration Block) The AWS-specific Provider Integration config details. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder aws(@Nullable Output<ProviderIntegrationAwsArgs> aws) {
            $.aws = aws;
            return this;
        }

        /**
         * @param aws (Required Configuration Block) The AWS-specific Provider Integration config details. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder aws(ProviderIntegrationAwsArgs aws) {
            return aws(Output.of(aws));
        }

        /**
         * @param displayName The name of the Provider Integration.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Provider Integration.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<ProviderIntegrationEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(ProviderIntegrationEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param usages (Required List of Strings) List of resource CRNs where this provider integration is being used.
         * 
         * @return builder
         * 
         */
        public Builder usages(@Nullable Output<List<String>> usages) {
            $.usages = usages;
            return this;
        }

        /**
         * @param usages (Required List of Strings) List of resource CRNs where this provider integration is being used.
         * 
         * @return builder
         * 
         */
        public Builder usages(List<String> usages) {
            return usages(Output.of(usages));
        }

        /**
         * @param usages (Required List of Strings) List of resource CRNs where this provider integration is being used.
         * 
         * @return builder
         * 
         */
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }

        public ProviderIntegrationState build() {
            return $;
        }
    }

}
