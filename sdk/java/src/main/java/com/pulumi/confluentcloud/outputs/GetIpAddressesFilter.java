// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetIpAddressesFilter {
    /**
     * @return A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
     * 
     */
    private @Nullable List<String> addressTypes;
    /**
     * @return A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     * 
     */
    private @Nullable List<String> clouds;
    /**
     * @return A list of regions to filter by.
     * 
     */
    private @Nullable List<String> regions;
    /**
     * @return A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
     * 
     */
    private @Nullable List<String> services;

    private GetIpAddressesFilter() {}
    /**
     * @return A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
     * 
     */
    public List<String> addressTypes() {
        return this.addressTypes == null ? List.of() : this.addressTypes;
    }
    /**
     * @return A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     * 
     */
    public List<String> clouds() {
        return this.clouds == null ? List.of() : this.clouds;
    }
    /**
     * @return A list of regions to filter by.
     * 
     */
    public List<String> regions() {
        return this.regions == null ? List.of() : this.regions;
    }
    /**
     * @return A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
     * 
     */
    public List<String> services() {
        return this.services == null ? List.of() : this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpAddressesFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> addressTypes;
        private @Nullable List<String> clouds;
        private @Nullable List<String> regions;
        private @Nullable List<String> services;
        public Builder() {}
        public Builder(GetIpAddressesFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressTypes = defaults.addressTypes;
    	      this.clouds = defaults.clouds;
    	      this.regions = defaults.regions;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder addressTypes(@Nullable List<String> addressTypes) {
            this.addressTypes = addressTypes;
            return this;
        }
        public Builder addressTypes(String... addressTypes) {
            return addressTypes(List.of(addressTypes));
        }
        @CustomType.Setter
        public Builder clouds(@Nullable List<String> clouds) {
            this.clouds = clouds;
            return this;
        }
        public Builder clouds(String... clouds) {
            return clouds(List.of(clouds));
        }
        @CustomType.Setter
        public Builder regions(@Nullable List<String> regions) {
            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder services(@Nullable List<String> services) {
            this.services = services;
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        public GetIpAddressesFilter build() {
            final var o = new GetIpAddressesFilter();
            o.addressTypes = addressTypes;
            o.clouds = clouds;
            o.regions = regions;
            o.services = services;
            return o;
        }
    }
}
