// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PeeringAws {
    /**
     * @return The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
     * 
     */
    private String account;
    /**
     * @return The region of the AWS peer VPC.
     * 
     */
    private String customerRegion;
    /**
     * @return The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs &gt; Target VPC &gt; Details** section of the AWS Management Console.
     * 
     */
    private List<String> routes;
    /**
     * @return The AWS VPC ID of the peer VPC that you&#39;re peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
     * 
     */
    private String vpc;

    private PeeringAws() {}
    /**
     * @return The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
     * 
     */
    public String account() {
        return this.account;
    }
    /**
     * @return The region of the AWS peer VPC.
     * 
     */
    public String customerRegion() {
        return this.customerRegion;
    }
    /**
     * @return The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs &gt; Target VPC &gt; Details** section of the AWS Management Console.
     * 
     */
    public List<String> routes() {
        return this.routes;
    }
    /**
     * @return The AWS VPC ID of the peer VPC that you&#39;re peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
     * 
     */
    public String vpc() {
        return this.vpc;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeeringAws defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String account;
        private String customerRegion;
        private List<String> routes;
        private String vpc;
        public Builder() {}
        public Builder(PeeringAws defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.account = defaults.account;
    	      this.customerRegion = defaults.customerRegion;
    	      this.routes = defaults.routes;
    	      this.vpc = defaults.vpc;
        }

        @CustomType.Setter
        public Builder account(String account) {
            if (account == null) {
              throw new MissingRequiredPropertyException("PeeringAws", "account");
            }
            this.account = account;
            return this;
        }
        @CustomType.Setter
        public Builder customerRegion(String customerRegion) {
            if (customerRegion == null) {
              throw new MissingRequiredPropertyException("PeeringAws", "customerRegion");
            }
            this.customerRegion = customerRegion;
            return this;
        }
        @CustomType.Setter
        public Builder routes(List<String> routes) {
            if (routes == null) {
              throw new MissingRequiredPropertyException("PeeringAws", "routes");
            }
            this.routes = routes;
            return this;
        }
        public Builder routes(String... routes) {
            return routes(List.of(routes));
        }
        @CustomType.Setter
        public Builder vpc(String vpc) {
            if (vpc == null) {
              throw new MissingRequiredPropertyException("PeeringAws", "vpc");
            }
            this.vpc = vpc;
            return this;
        }
        public PeeringAws build() {
            final var _resultValue = new PeeringAws();
            _resultValue.account = account;
            _resultValue.customerRegion = customerRegion;
            _resultValue.routes = routes;
            _resultValue.vpc = vpc;
            return _resultValue;
        }
    }
}
