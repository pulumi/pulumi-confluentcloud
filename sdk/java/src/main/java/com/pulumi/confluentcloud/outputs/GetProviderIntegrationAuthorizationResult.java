// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetProviderIntegrationAuthorizationAzure;
import com.pulumi.confluentcloud.outputs.GetProviderIntegrationAuthorizationEnvironment;
import com.pulumi.confluentcloud.outputs.GetProviderIntegrationAuthorizationGcp;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProviderIntegrationAuthorizationResult {
    /**
     * @return (Optional Configuration Block) Azure-specific configuration details. Present for Azure integrations. It supports the following:
     * 
     */
    private List<GetProviderIntegrationAuthorizationAzure> azures;
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    private GetProviderIntegrationAuthorizationEnvironment environment;
    /**
     * @return (Optional Configuration Block) GCP-specific configuration details. Present for GCP integrations. It supports the following:
     * 
     */
    private List<GetProviderIntegrationAuthorizationGcp> gcps;
    /**
     * @return (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
     * 
     */
    private String id;
    /**
     * @return (Required String) The ID of the provider integration.
     * 
     */
    private String providerIntegrationId;

    private GetProviderIntegrationAuthorizationResult() {}
    /**
     * @return (Optional Configuration Block) Azure-specific configuration details. Present for Azure integrations. It supports the following:
     * 
     */
    public List<GetProviderIntegrationAuthorizationAzure> azures() {
        return this.azures;
    }
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    public GetProviderIntegrationAuthorizationEnvironment environment() {
        return this.environment;
    }
    /**
     * @return (Optional Configuration Block) GCP-specific configuration details. Present for GCP integrations. It supports the following:
     * 
     */
    public List<GetProviderIntegrationAuthorizationGcp> gcps() {
        return this.gcps;
    }
    /**
     * @return (Required String) The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Required String) The ID of the provider integration.
     * 
     */
    public String providerIntegrationId() {
        return this.providerIntegrationId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProviderIntegrationAuthorizationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetProviderIntegrationAuthorizationAzure> azures;
        private GetProviderIntegrationAuthorizationEnvironment environment;
        private List<GetProviderIntegrationAuthorizationGcp> gcps;
        private String id;
        private String providerIntegrationId;
        public Builder() {}
        public Builder(GetProviderIntegrationAuthorizationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azures = defaults.azures;
    	      this.environment = defaults.environment;
    	      this.gcps = defaults.gcps;
    	      this.id = defaults.id;
    	      this.providerIntegrationId = defaults.providerIntegrationId;
        }

        @CustomType.Setter
        public Builder azures(List<GetProviderIntegrationAuthorizationAzure> azures) {
            if (azures == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationResult", "azures");
            }
            this.azures = azures;
            return this;
        }
        public Builder azures(GetProviderIntegrationAuthorizationAzure... azures) {
            return azures(List.of(azures));
        }
        @CustomType.Setter
        public Builder environment(GetProviderIntegrationAuthorizationEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder gcps(List<GetProviderIntegrationAuthorizationGcp> gcps) {
            if (gcps == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationResult", "gcps");
            }
            this.gcps = gcps;
            return this;
        }
        public Builder gcps(GetProviderIntegrationAuthorizationGcp... gcps) {
            return gcps(List.of(gcps));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder providerIntegrationId(String providerIntegrationId) {
            if (providerIntegrationId == null) {
              throw new MissingRequiredPropertyException("GetProviderIntegrationAuthorizationResult", "providerIntegrationId");
            }
            this.providerIntegrationId = providerIntegrationId;
            return this;
        }
        public GetProviderIntegrationAuthorizationResult build() {
            final var _resultValue = new GetProviderIntegrationAuthorizationResult();
            _resultValue.azures = azures;
            _resultValue.environment = environment;
            _resultValue.gcps = gcps;
            _resultValue.id = id;
            _resultValue.providerIntegrationId = providerIntegrationId;
            return _resultValue;
        }
    }
}
