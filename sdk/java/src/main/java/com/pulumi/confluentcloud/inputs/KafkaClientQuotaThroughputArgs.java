// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class KafkaClientQuotaThroughputArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaClientQuotaThroughputArgs Empty = new KafkaClientQuotaThroughputArgs();

    /**
     * The egress throughput limit in bytes per second.
     * 
     */
    @Import(name="egressByteRate", required=true)
    private Output<String> egressByteRate;

    /**
     * @return The egress throughput limit in bytes per second.
     * 
     */
    public Output<String> egressByteRate() {
        return this.egressByteRate;
    }

    /**
     * The ingress throughput limit in bytes per second.
     * 
     */
    @Import(name="ingressByteRate", required=true)
    private Output<String> ingressByteRate;

    /**
     * @return The ingress throughput limit in bytes per second.
     * 
     */
    public Output<String> ingressByteRate() {
        return this.ingressByteRate;
    }

    private KafkaClientQuotaThroughputArgs() {}

    private KafkaClientQuotaThroughputArgs(KafkaClientQuotaThroughputArgs $) {
        this.egressByteRate = $.egressByteRate;
        this.ingressByteRate = $.ingressByteRate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaClientQuotaThroughputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaClientQuotaThroughputArgs $;

        public Builder() {
            $ = new KafkaClientQuotaThroughputArgs();
        }

        public Builder(KafkaClientQuotaThroughputArgs defaults) {
            $ = new KafkaClientQuotaThroughputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param egressByteRate The egress throughput limit in bytes per second.
         * 
         * @return builder
         * 
         */
        public Builder egressByteRate(Output<String> egressByteRate) {
            $.egressByteRate = egressByteRate;
            return this;
        }

        /**
         * @param egressByteRate The egress throughput limit in bytes per second.
         * 
         * @return builder
         * 
         */
        public Builder egressByteRate(String egressByteRate) {
            return egressByteRate(Output.of(egressByteRate));
        }

        /**
         * @param ingressByteRate The ingress throughput limit in bytes per second.
         * 
         * @return builder
         * 
         */
        public Builder ingressByteRate(Output<String> ingressByteRate) {
            $.ingressByteRate = ingressByteRate;
            return this;
        }

        /**
         * @param ingressByteRate The ingress throughput limit in bytes per second.
         * 
         * @return builder
         * 
         */
        public Builder ingressByteRate(String ingressByteRate) {
            return ingressByteRate(Output.of(ingressByteRate));
        }

        public KafkaClientQuotaThroughputArgs build() {
            $.egressByteRate = Objects.requireNonNull($.egressByteRate, "expected parameter 'egressByteRate' to be non-null");
            $.ingressByteRate = Objects.requireNonNull($.ingressByteRate, "expected parameter 'ingressByteRate' to be non-null");
            return $;
        }
    }

}
