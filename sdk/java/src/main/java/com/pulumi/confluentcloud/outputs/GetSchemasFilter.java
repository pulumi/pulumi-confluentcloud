// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSchemasFilter {
    /**
     * @return The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
     * 
     */
    private @Nullable Boolean deleted;
    /**
     * @return The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
     * 
     */
    private @Nullable Boolean latestOnly;
    /**
     * @return The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
     * 
     */
    private @Nullable String subjectPrefix;

    private GetSchemasFilter() {}
    /**
     * @return The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
     * 
     */
    public Optional<Boolean> deleted() {
        return Optional.ofNullable(this.deleted);
    }
    /**
     * @return The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
     * 
     */
    public Optional<Boolean> latestOnly() {
        return Optional.ofNullable(this.latestOnly);
    }
    /**
     * @return The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
     * 
     */
    public Optional<String> subjectPrefix() {
        return Optional.ofNullable(this.subjectPrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchemasFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deleted;
        private @Nullable Boolean latestOnly;
        private @Nullable String subjectPrefix;
        public Builder() {}
        public Builder(GetSchemasFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleted = defaults.deleted;
    	      this.latestOnly = defaults.latestOnly;
    	      this.subjectPrefix = defaults.subjectPrefix;
        }

        @CustomType.Setter
        public Builder deleted(@Nullable Boolean deleted) {
            this.deleted = deleted;
            return this;
        }
        @CustomType.Setter
        public Builder latestOnly(@Nullable Boolean latestOnly) {
            this.latestOnly = latestOnly;
            return this;
        }
        @CustomType.Setter
        public Builder subjectPrefix(@Nullable String subjectPrefix) {
            this.subjectPrefix = subjectPrefix;
            return this;
        }
        public GetSchemasFilter build() {
            final var o = new GetSchemasFilter();
            o.deleted = deleted;
            o.latestOnly = latestOnly;
            o.subjectPrefix = subjectPrefix;
            return o;
        }
    }
}
