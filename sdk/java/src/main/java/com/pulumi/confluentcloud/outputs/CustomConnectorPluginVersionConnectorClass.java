// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CustomConnectorPluginVersionConnectorClass {
    /**
     * @return The name of the connector class.
     * 
     */
    private String connectorClassName;
    /**
     * @return The type of the Custom Connector Plugin. Accepted values are: `SOURCE`, `SINK`.
     * 
     */
    private String connectorType;

    private CustomConnectorPluginVersionConnectorClass() {}
    /**
     * @return The name of the connector class.
     * 
     */
    public String connectorClassName() {
        return this.connectorClassName;
    }
    /**
     * @return The type of the Custom Connector Plugin. Accepted values are: `SOURCE`, `SINK`.
     * 
     */
    public String connectorType() {
        return this.connectorType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomConnectorPluginVersionConnectorClass defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectorClassName;
        private String connectorType;
        public Builder() {}
        public Builder(CustomConnectorPluginVersionConnectorClass defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorClassName = defaults.connectorClassName;
    	      this.connectorType = defaults.connectorType;
        }

        @CustomType.Setter
        public Builder connectorClassName(String connectorClassName) {
            if (connectorClassName == null) {
              throw new MissingRequiredPropertyException("CustomConnectorPluginVersionConnectorClass", "connectorClassName");
            }
            this.connectorClassName = connectorClassName;
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(String connectorType) {
            if (connectorType == null) {
              throw new MissingRequiredPropertyException("CustomConnectorPluginVersionConnectorClass", "connectorType");
            }
            this.connectorType = connectorType;
            return this;
        }
        public CustomConnectorPluginVersionConnectorClass build() {
            final var _resultValue = new CustomConnectorPluginVersionConnectorClass();
            _resultValue.connectorClassName = connectorClassName;
            _resultValue.connectorType = connectorType;
            return _resultValue;
        }
    }
}
