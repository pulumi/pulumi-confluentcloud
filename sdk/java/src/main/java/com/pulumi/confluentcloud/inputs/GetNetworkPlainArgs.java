// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetNetworkAw;
import com.pulumi.confluentcloud.inputs.GetNetworkAzure;
import com.pulumi.confluentcloud.inputs.GetNetworkDnsConfig;
import com.pulumi.confluentcloud.inputs.GetNetworkEnvironment;
import com.pulumi.confluentcloud.inputs.GetNetworkGcp;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetworkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkPlainArgs Empty = new GetNetworkPlainArgs();

    /**
     * (Optional Configuration Block) The AWS-specific network details if available. It supports the following:
     * 
     */
    @Import(name="aws")
    private @Nullable List<GetNetworkAw> aws;

    /**
     * @return (Optional Configuration Block) The AWS-specific network details if available. It supports the following:
     * 
     */
    public Optional<List<GetNetworkAw>> aws() {
        return Optional.ofNullable(this.aws);
    }

    /**
     * (Optional Configuration Block) The Azure-specific network details if available. It supports the following:
     * 
     */
    @Import(name="azures")
    private @Nullable List<GetNetworkAzure> azures;

    /**
     * @return (Optional Configuration Block) The Azure-specific network details if available. It supports the following:
     * 
     */
    public Optional<List<GetNetworkAzure>> azures() {
        return Optional.ofNullable(this.azures);
    }

    /**
     * A human-readable name for the Network.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A human-readable name for the Network.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Optional Configuration Block) Network DNS config. It applies only to the PRIVATELINK network connection type. It supports the following:
     * 
     */
    @Import(name="dnsConfigs")
    private @Nullable List<GetNetworkDnsConfig> dnsConfigs;

    /**
     * @return (Optional Configuration Block) Network DNS config. It applies only to the PRIVATELINK network connection type. It supports the following:
     * 
     */
    public Optional<List<GetNetworkDnsConfig>> dnsConfigs() {
        return Optional.ofNullable(this.dnsConfigs);
    }

    @Import(name="environment", required=true)
    private GetNetworkEnvironment environment;

    public GetNetworkEnvironment environment() {
        return this.environment;
    }

    /**
     * (Optional Configuration Block) The GCP-specific network details if available. It supports the following:
     * 
     */
    @Import(name="gcps")
    private @Nullable List<GetNetworkGcp> gcps;

    /**
     * @return (Optional Configuration Block) The GCP-specific network details if available. It supports the following:
     * 
     */
    public Optional<List<GetNetworkGcp>> gcps() {
        return Optional.ofNullable(this.gcps);
    }

    /**
     * The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
     * 
     * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
     * 
     * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    private GetNetworkPlainArgs() {}

    private GetNetworkPlainArgs(GetNetworkPlainArgs $) {
        this.aws = $.aws;
        this.azures = $.azures;
        this.displayName = $.displayName;
        this.dnsConfigs = $.dnsConfigs;
        this.environment = $.environment;
        this.gcps = $.gcps;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkPlainArgs $;

        public Builder() {
            $ = new GetNetworkPlainArgs();
        }

        public Builder(GetNetworkPlainArgs defaults) {
            $ = new GetNetworkPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aws (Optional Configuration Block) The AWS-specific network details if available. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder aws(@Nullable List<GetNetworkAw> aws) {
            $.aws = aws;
            return this;
        }

        /**
         * @param aws (Optional Configuration Block) The AWS-specific network details if available. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder aws(GetNetworkAw... aws) {
            return aws(List.of(aws));
        }

        /**
         * @param azures (Optional Configuration Block) The Azure-specific network details if available. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder azures(@Nullable List<GetNetworkAzure> azures) {
            $.azures = azures;
            return this;
        }

        /**
         * @param azures (Optional Configuration Block) The Azure-specific network details if available. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder azures(GetNetworkAzure... azures) {
            return azures(List.of(azures));
        }

        /**
         * @param displayName A human-readable name for the Network.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param dnsConfigs (Optional Configuration Block) Network DNS config. It applies only to the PRIVATELINK network connection type. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder dnsConfigs(@Nullable List<GetNetworkDnsConfig> dnsConfigs) {
            $.dnsConfigs = dnsConfigs;
            return this;
        }

        /**
         * @param dnsConfigs (Optional Configuration Block) Network DNS config. It applies only to the PRIVATELINK network connection type. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder dnsConfigs(GetNetworkDnsConfig... dnsConfigs) {
            return dnsConfigs(List.of(dnsConfigs));
        }

        public Builder environment(GetNetworkEnvironment environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param gcps (Optional Configuration Block) The GCP-specific network details if available. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder gcps(@Nullable List<GetNetworkGcp> gcps) {
            $.gcps = gcps;
            return this;
        }

        /**
         * @param gcps (Optional Configuration Block) The GCP-specific network details if available. It supports the following:
         * 
         * @return builder
         * 
         */
        public Builder gcps(GetNetworkGcp... gcps) {
            return gcps(List.of(gcps));
        }

        /**
         * @param id The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
         * 
         * &gt; **Note:** Exactly one from the `id` and `display_name` attributes must be specified.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        public GetNetworkPlainArgs build() {
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("GetNetworkPlainArgs", "environment");
            }
            return $;
        }
    }

}
