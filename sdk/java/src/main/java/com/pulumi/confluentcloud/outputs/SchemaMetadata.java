// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.SchemaMetadataTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SchemaMetadata {
    /**
     * @return The custom properties to set:
     * 
     */
    private @Nullable Map<String,String> properties;
    /**
     * @return A list of metadata properties to be encrypted.
     * 
     */
    private @Nullable List<String> sensitives;
    /**
     * @return The tags to which the rule applies, if any.
     * 
     */
    private @Nullable List<SchemaMetadataTag> tags;

    private SchemaMetadata() {}
    /**
     * @return The custom properties to set:
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return A list of metadata properties to be encrypted.
     * 
     */
    public List<String> sensitives() {
        return this.sensitives == null ? List.of() : this.sensitives;
    }
    /**
     * @return The tags to which the rule applies, if any.
     * 
     */
    public List<SchemaMetadataTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchemaMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> properties;
        private @Nullable List<String> sensitives;
        private @Nullable List<SchemaMetadataTag> tags;
        public Builder() {}
        public Builder(SchemaMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.properties = defaults.properties;
    	      this.sensitives = defaults.sensitives;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder properties(@Nullable Map<String,String> properties) {

            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder sensitives(@Nullable List<String> sensitives) {

            this.sensitives = sensitives;
            return this;
        }
        public Builder sensitives(String... sensitives) {
            return sensitives(List.of(sensitives));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<SchemaMetadataTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(SchemaMetadataTag... tags) {
            return tags(List.of(tags));
        }
        public SchemaMetadata build() {
            final var _resultValue = new SchemaMetadata();
            _resultValue.properties = properties;
            _resultValue.sensitives = sensitives;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
