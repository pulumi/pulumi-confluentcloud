// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetNetworkLinkServiceAcceptArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetNetworkLinkServiceAcceptArgs Empty = new GetNetworkLinkServiceAcceptArgs();

    /**
     * (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
     * 
     */
    @Import(name="environments", required=true)
    private Output<List<String>> environments;

    /**
     * @return (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
     * 
     */
    public Output<List<String>> environments() {
        return this.environments;
    }

    /**
     * (Optional List of Strings) List of network ids from which connections can be accepted.
     * 
     */
    @Import(name="networks", required=true)
    private Output<List<String>> networks;

    /**
     * @return (Optional List of Strings) List of network ids from which connections can be accepted.
     * 
     */
    public Output<List<String>> networks() {
        return this.networks;
    }

    private GetNetworkLinkServiceAcceptArgs() {}

    private GetNetworkLinkServiceAcceptArgs(GetNetworkLinkServiceAcceptArgs $) {
        this.environments = $.environments;
        this.networks = $.networks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkLinkServiceAcceptArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkLinkServiceAcceptArgs $;

        public Builder() {
            $ = new GetNetworkLinkServiceAcceptArgs();
        }

        public Builder(GetNetworkLinkServiceAcceptArgs defaults) {
            $ = new GetNetworkLinkServiceAcceptArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environments (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder environments(Output<List<String>> environments) {
            $.environments = environments;
            return this;
        }

        /**
         * @param environments (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder environments(List<String> environments) {
            return environments(Output.of(environments));
        }

        /**
         * @param environments (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder environments(String... environments) {
            return environments(List.of(environments));
        }

        /**
         * @param networks (Optional List of Strings) List of network ids from which connections can be accepted.
         * 
         * @return builder
         * 
         */
        public Builder networks(Output<List<String>> networks) {
            $.networks = networks;
            return this;
        }

        /**
         * @param networks (Optional List of Strings) List of network ids from which connections can be accepted.
         * 
         * @return builder
         * 
         */
        public Builder networks(List<String> networks) {
            return networks(Output.of(networks));
        }

        /**
         * @param networks (Optional List of Strings) List of network ids from which connections can be accepted.
         * 
         * @return builder
         * 
         */
        public Builder networks(String... networks) {
            return networks(List.of(networks));
        }

        public GetNetworkLinkServiceAcceptArgs build() {
            if ($.environments == null) {
                throw new MissingRequiredPropertyException("GetNetworkLinkServiceAcceptArgs", "environments");
            }
            if ($.networks == null) {
                throw new MissingRequiredPropertyException("GetNetworkLinkServiceAcceptArgs", "networks");
            }
            return $;
        }
    }

}
