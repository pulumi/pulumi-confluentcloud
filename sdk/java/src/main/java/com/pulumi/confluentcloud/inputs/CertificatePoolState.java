// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.CertificatePoolCertificateAuthorityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificatePoolState extends com.pulumi.resources.ResourceArgs {

    public static final CertificatePoolState Empty = new CertificatePoolState();

    @Import(name="certificateAuthority")
    private @Nullable Output<CertificatePoolCertificateAuthorityArgs> certificateAuthority;

    public Optional<Output<CertificatePoolCertificateAuthorityArgs>> certificateAuthority() {
        return Optional.ofNullable(this.certificateAuthority);
    }

    /**
     * A description of the Certificate Pool.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the Certificate Pool.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the Certificate Pool.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Certificate Pool.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The certificate field that will be used to represent the pool&#39;s external identity for audit logging.
     * 
     */
    @Import(name="externalIdentifier")
    private @Nullable Output<String> externalIdentifier;

    /**
     * @return The certificate field that will be used to represent the pool&#39;s external identity for audit logging.
     * 
     */
    public Optional<Output<String>> externalIdentifier() {
        return Optional.ofNullable(this.externalIdentifier);
    }

    /**
     * A filter expression in [Supported Common Expression Language (CEL)](https://docs.confluent.io/cloud/current/access-management/authenticate/mtls/cel-filters.html) that specifies which identities can authenticate using your certificate pool.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return A filter expression in [Supported Common Expression Language (CEL)](https://docs.confluent.io/cloud/current/access-management/authenticate/mtls/cel-filters.html) that specifies which identities can authenticate using your certificate pool.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    private CertificatePoolState() {}

    private CertificatePoolState(CertificatePoolState $) {
        this.certificateAuthority = $.certificateAuthority;
        this.description = $.description;
        this.displayName = $.displayName;
        this.externalIdentifier = $.externalIdentifier;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificatePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificatePoolState $;

        public Builder() {
            $ = new CertificatePoolState();
        }

        public Builder(CertificatePoolState defaults) {
            $ = new CertificatePoolState(Objects.requireNonNull(defaults));
        }

        public Builder certificateAuthority(@Nullable Output<CertificatePoolCertificateAuthorityArgs> certificateAuthority) {
            $.certificateAuthority = certificateAuthority;
            return this;
        }

        public Builder certificateAuthority(CertificatePoolCertificateAuthorityArgs certificateAuthority) {
            return certificateAuthority(Output.of(certificateAuthority));
        }

        /**
         * @param description A description of the Certificate Pool.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the Certificate Pool.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The name of the Certificate Pool.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Certificate Pool.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param externalIdentifier The certificate field that will be used to represent the pool&#39;s external identity for audit logging.
         * 
         * @return builder
         * 
         */
        public Builder externalIdentifier(@Nullable Output<String> externalIdentifier) {
            $.externalIdentifier = externalIdentifier;
            return this;
        }

        /**
         * @param externalIdentifier The certificate field that will be used to represent the pool&#39;s external identity for audit logging.
         * 
         * @return builder
         * 
         */
        public Builder externalIdentifier(String externalIdentifier) {
            return externalIdentifier(Output.of(externalIdentifier));
        }

        /**
         * @param filter A filter expression in [Supported Common Expression Language (CEL)](https://docs.confluent.io/cloud/current/access-management/authenticate/mtls/cel-filters.html) that specifies which identities can authenticate using your certificate pool.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter A filter expression in [Supported Common Expression Language (CEL)](https://docs.confluent.io/cloud/current/access-management/authenticate/mtls/cel-filters.html) that specifies which identities can authenticate using your certificate pool.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public CertificatePoolState build() {
            return $;
        }
    }

}
