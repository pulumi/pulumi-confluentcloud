// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderIntegrationAuthorizationAzureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderIntegrationAuthorizationAzureArgs Empty = new ProviderIntegrationAuthorizationAzureArgs();

    /**
     * (Computed String) Confluent Multi-Tenant App ID used to access customer Azure resources.
     * 
     */
    @Import(name="confluentMultiTenantAppId")
    private @Nullable Output<String> confluentMultiTenantAppId;

    /**
     * @return (Computed String) Confluent Multi-Tenant App ID used to access customer Azure resources.
     * 
     */
    public Optional<Output<String>> confluentMultiTenantAppId() {
        return Optional.ofNullable(this.confluentMultiTenantAppId);
    }

    /**
     * Customer&#39;s Azure Tenant ID.
     * 
     */
    @Import(name="customerAzureTenantId", required=true)
    private Output<String> customerAzureTenantId;

    /**
     * @return Customer&#39;s Azure Tenant ID.
     * 
     */
    public Output<String> customerAzureTenantId() {
        return this.customerAzureTenantId;
    }

    private ProviderIntegrationAuthorizationAzureArgs() {}

    private ProviderIntegrationAuthorizationAzureArgs(ProviderIntegrationAuthorizationAzureArgs $) {
        this.confluentMultiTenantAppId = $.confluentMultiTenantAppId;
        this.customerAzureTenantId = $.customerAzureTenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderIntegrationAuthorizationAzureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderIntegrationAuthorizationAzureArgs $;

        public Builder() {
            $ = new ProviderIntegrationAuthorizationAzureArgs();
        }

        public Builder(ProviderIntegrationAuthorizationAzureArgs defaults) {
            $ = new ProviderIntegrationAuthorizationAzureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param confluentMultiTenantAppId (Computed String) Confluent Multi-Tenant App ID used to access customer Azure resources.
         * 
         * @return builder
         * 
         */
        public Builder confluentMultiTenantAppId(@Nullable Output<String> confluentMultiTenantAppId) {
            $.confluentMultiTenantAppId = confluentMultiTenantAppId;
            return this;
        }

        /**
         * @param confluentMultiTenantAppId (Computed String) Confluent Multi-Tenant App ID used to access customer Azure resources.
         * 
         * @return builder
         * 
         */
        public Builder confluentMultiTenantAppId(String confluentMultiTenantAppId) {
            return confluentMultiTenantAppId(Output.of(confluentMultiTenantAppId));
        }

        /**
         * @param customerAzureTenantId Customer&#39;s Azure Tenant ID.
         * 
         * @return builder
         * 
         */
        public Builder customerAzureTenantId(Output<String> customerAzureTenantId) {
            $.customerAzureTenantId = customerAzureTenantId;
            return this;
        }

        /**
         * @param customerAzureTenantId Customer&#39;s Azure Tenant ID.
         * 
         * @return builder
         * 
         */
        public Builder customerAzureTenantId(String customerAzureTenantId) {
            return customerAzureTenantId(Output.of(customerAzureTenantId));
        }

        public ProviderIntegrationAuthorizationAzureArgs build() {
            if ($.customerAzureTenantId == null) {
                throw new MissingRequiredPropertyException("ProviderIntegrationAuthorizationAzureArgs", "customerAzureTenantId");
            }
            return $;
        }
    }

}
