// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.TableflowTopicByobAwsArgs;
import com.pulumi.confluentcloud.inputs.TableflowTopicCredentialsArgs;
import com.pulumi.confluentcloud.inputs.TableflowTopicEnvironmentArgs;
import com.pulumi.confluentcloud.inputs.TableflowTopicKafkaClusterArgs;
import com.pulumi.confluentcloud.inputs.TableflowTopicManagedStorageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableflowTopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableflowTopicArgs Empty = new TableflowTopicArgs();

    /**
     * supports the following (See [Quick Start with Custom Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-custom-storage-glue.html#cloud-tableflow-quick-start) for more details):
     * 
     */
    @Import(name="byobAws")
    private @Nullable Output<TableflowTopicByobAwsArgs> byobAws;

    /**
     * @return supports the following (See [Quick Start with Custom Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-custom-storage-glue.html#cloud-tableflow-quick-start) for more details):
     * 
     */
    public Optional<Output<TableflowTopicByobAwsArgs>> byobAws() {
        return Optional.ofNullable(this.byobAws);
    }

    /**
     * The Cluster API Credentials.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<TableflowTopicCredentialsArgs> credentials;

    /**
     * @return The Cluster API Credentials.
     * 
     */
    public Optional<Output<TableflowTopicCredentialsArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * The name of the Kafka topic for which Tableflow is enabled.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The name of the Kafka topic for which Tableflow is enabled.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment", required=true)
    private Output<TableflowTopicEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<TableflowTopicEnvironmentArgs> environment() {
        return this.environment;
    }

    @Import(name="kafkaCluster", required=true)
    private Output<TableflowTopicKafkaClusterArgs> kafkaCluster;

    public Output<TableflowTopicKafkaClusterArgs> kafkaCluster() {
        return this.kafkaCluster;
    }

    /**
     * The configuration of the Confluent managed storage. See [Quick Start with Managed Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-managed-storage.html#cloud-tableflow-quick-start-managed-storage) for more details.
     * 
     */
    @Import(name="managedStorages")
    private @Nullable Output<List<TableflowTopicManagedStorageArgs>> managedStorages;

    /**
     * @return The configuration of the Confluent managed storage. See [Quick Start with Managed Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-managed-storage.html#cloud-tableflow-quick-start-managed-storage) for more details.
     * 
     */
    public Optional<Output<List<TableflowTopicManagedStorageArgs>>> managedStorages() {
        return Optional.ofNullable(this.managedStorages);
    }

    /**
     * The strategy to handle record failures in the Tableflow enabled topic during materialization. Accepted values are `SKIP`, `SUSPEND`. For `SKIP`, we skip the bad records and move to the next record. For `SUSPEND`, we suspend the materialization of the topic.
     * 
     */
    @Import(name="recordFailureStrategy")
    private @Nullable Output<String> recordFailureStrategy;

    /**
     * @return The strategy to handle record failures in the Tableflow enabled topic during materialization. Accepted values are `SKIP`, `SUSPEND`. For `SKIP`, we skip the bad records and move to the next record. For `SUSPEND`, we suspend the materialization of the topic.
     * 
     */
    public Optional<Output<String>> recordFailureStrategy() {
        return Optional.ofNullable(this.recordFailureStrategy);
    }

    /**
     * The max age of snapshots (Iceberg) or versions (Delta) (snapshot/version expiration) to keep on the table in milliseconds for the Tableflow enabled topic.
     * 
     */
    @Import(name="retentionMs")
    private @Nullable Output<String> retentionMs;

    /**
     * @return The max age of snapshots (Iceberg) or versions (Delta) (snapshot/version expiration) to keep on the table in milliseconds for the Tableflow enabled topic.
     * 
     */
    public Optional<Output<String>> retentionMs() {
        return Optional.ofNullable(this.retentionMs);
    }

    /**
     * The supported table formats for the Tableflow-enabled topic. Accepted values are `DELTA`, `ICEBERG`.
     * 
     */
    @Import(name="tableFormats")
    private @Nullable Output<List<String>> tableFormats;

    /**
     * @return The supported table formats for the Tableflow-enabled topic. Accepted values are `DELTA`, `ICEBERG`.
     * 
     */
    public Optional<Output<List<String>>> tableFormats() {
        return Optional.ofNullable(this.tableFormats);
    }

    private TableflowTopicArgs() {}

    private TableflowTopicArgs(TableflowTopicArgs $) {
        this.byobAws = $.byobAws;
        this.credentials = $.credentials;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.kafkaCluster = $.kafkaCluster;
        this.managedStorages = $.managedStorages;
        this.recordFailureStrategy = $.recordFailureStrategy;
        this.retentionMs = $.retentionMs;
        this.tableFormats = $.tableFormats;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableflowTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableflowTopicArgs $;

        public Builder() {
            $ = new TableflowTopicArgs();
        }

        public Builder(TableflowTopicArgs defaults) {
            $ = new TableflowTopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param byobAws supports the following (See [Quick Start with Custom Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-custom-storage-glue.html#cloud-tableflow-quick-start) for more details):
         * 
         * @return builder
         * 
         */
        public Builder byobAws(@Nullable Output<TableflowTopicByobAwsArgs> byobAws) {
            $.byobAws = byobAws;
            return this;
        }

        /**
         * @param byobAws supports the following (See [Quick Start with Custom Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-custom-storage-glue.html#cloud-tableflow-quick-start) for more details):
         * 
         * @return builder
         * 
         */
        public Builder byobAws(TableflowTopicByobAwsArgs byobAws) {
            return byobAws(Output.of(byobAws));
        }

        /**
         * @param credentials The Cluster API Credentials.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<TableflowTopicCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials The Cluster API Credentials.
         * 
         * @return builder
         * 
         */
        public Builder credentials(TableflowTopicCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param displayName The name of the Kafka topic for which Tableflow is enabled.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Kafka topic for which Tableflow is enabled.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<TableflowTopicEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(TableflowTopicEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        public Builder kafkaCluster(Output<TableflowTopicKafkaClusterArgs> kafkaCluster) {
            $.kafkaCluster = kafkaCluster;
            return this;
        }

        public Builder kafkaCluster(TableflowTopicKafkaClusterArgs kafkaCluster) {
            return kafkaCluster(Output.of(kafkaCluster));
        }

        /**
         * @param managedStorages The configuration of the Confluent managed storage. See [Quick Start with Managed Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-managed-storage.html#cloud-tableflow-quick-start-managed-storage) for more details.
         * 
         * @return builder
         * 
         */
        public Builder managedStorages(@Nullable Output<List<TableflowTopicManagedStorageArgs>> managedStorages) {
            $.managedStorages = managedStorages;
            return this;
        }

        /**
         * @param managedStorages The configuration of the Confluent managed storage. See [Quick Start with Managed Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-managed-storage.html#cloud-tableflow-quick-start-managed-storage) for more details.
         * 
         * @return builder
         * 
         */
        public Builder managedStorages(List<TableflowTopicManagedStorageArgs> managedStorages) {
            return managedStorages(Output.of(managedStorages));
        }

        /**
         * @param managedStorages The configuration of the Confluent managed storage. See [Quick Start with Managed Storage](https://docs.confluent.io/cloud/current/topics/tableflow/get-started/quick-start-managed-storage.html#cloud-tableflow-quick-start-managed-storage) for more details.
         * 
         * @return builder
         * 
         */
        public Builder managedStorages(TableflowTopicManagedStorageArgs... managedStorages) {
            return managedStorages(List.of(managedStorages));
        }

        /**
         * @param recordFailureStrategy The strategy to handle record failures in the Tableflow enabled topic during materialization. Accepted values are `SKIP`, `SUSPEND`. For `SKIP`, we skip the bad records and move to the next record. For `SUSPEND`, we suspend the materialization of the topic.
         * 
         * @return builder
         * 
         */
        public Builder recordFailureStrategy(@Nullable Output<String> recordFailureStrategy) {
            $.recordFailureStrategy = recordFailureStrategy;
            return this;
        }

        /**
         * @param recordFailureStrategy The strategy to handle record failures in the Tableflow enabled topic during materialization. Accepted values are `SKIP`, `SUSPEND`. For `SKIP`, we skip the bad records and move to the next record. For `SUSPEND`, we suspend the materialization of the topic.
         * 
         * @return builder
         * 
         */
        public Builder recordFailureStrategy(String recordFailureStrategy) {
            return recordFailureStrategy(Output.of(recordFailureStrategy));
        }

        /**
         * @param retentionMs The max age of snapshots (Iceberg) or versions (Delta) (snapshot/version expiration) to keep on the table in milliseconds for the Tableflow enabled topic.
         * 
         * @return builder
         * 
         */
        public Builder retentionMs(@Nullable Output<String> retentionMs) {
            $.retentionMs = retentionMs;
            return this;
        }

        /**
         * @param retentionMs The max age of snapshots (Iceberg) or versions (Delta) (snapshot/version expiration) to keep on the table in milliseconds for the Tableflow enabled topic.
         * 
         * @return builder
         * 
         */
        public Builder retentionMs(String retentionMs) {
            return retentionMs(Output.of(retentionMs));
        }

        /**
         * @param tableFormats The supported table formats for the Tableflow-enabled topic. Accepted values are `DELTA`, `ICEBERG`.
         * 
         * @return builder
         * 
         */
        public Builder tableFormats(@Nullable Output<List<String>> tableFormats) {
            $.tableFormats = tableFormats;
            return this;
        }

        /**
         * @param tableFormats The supported table formats for the Tableflow-enabled topic. Accepted values are `DELTA`, `ICEBERG`.
         * 
         * @return builder
         * 
         */
        public Builder tableFormats(List<String> tableFormats) {
            return tableFormats(Output.of(tableFormats));
        }

        /**
         * @param tableFormats The supported table formats for the Tableflow-enabled topic. Accepted values are `DELTA`, `ICEBERG`.
         * 
         * @return builder
         * 
         */
        public Builder tableFormats(String... tableFormats) {
            return tableFormats(List.of(tableFormats));
        }

        public TableflowTopicArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("TableflowTopicArgs", "displayName");
            }
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("TableflowTopicArgs", "environment");
            }
            if ($.kafkaCluster == null) {
                throw new MissingRequiredPropertyException("TableflowTopicArgs", "kafkaCluster");
            }
            return $;
        }
    }

}
