// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTableflowTopicErrorHandling {
    /**
     * @return (Optional String) The topic to which the bad records will be logged for error handling mode `LOG`. The default topic is &#34;errorLog&#34; if error handling mode is `LOG`, and empty otherwise.
     * 
     */
    private String logTarget;
    /**
     * @return (Optional String) The error handling mode. For `SUSPEND`, the materialization of the topic is suspended in case of record failures. For `SKIP`, bad records are skipped and the materialization continues with the next record. For `LOG`, bad records are logged to a dead-letter queue (DLQ) topic and the materialization continues with the next record. The default mode is `SUSPEND`.
     * 
     */
    private String mode;

    private GetTableflowTopicErrorHandling() {}
    /**
     * @return (Optional String) The topic to which the bad records will be logged for error handling mode `LOG`. The default topic is &#34;errorLog&#34; if error handling mode is `LOG`, and empty otherwise.
     * 
     */
    public String logTarget() {
        return this.logTarget;
    }
    /**
     * @return (Optional String) The error handling mode. For `SUSPEND`, the materialization of the topic is suspended in case of record failures. For `SKIP`, bad records are skipped and the materialization continues with the next record. For `LOG`, bad records are logged to a dead-letter queue (DLQ) topic and the materialization continues with the next record. The default mode is `SUSPEND`.
     * 
     */
    public String mode() {
        return this.mode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableflowTopicErrorHandling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String logTarget;
        private String mode;
        public Builder() {}
        public Builder(GetTableflowTopicErrorHandling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logTarget = defaults.logTarget;
    	      this.mode = defaults.mode;
        }

        @CustomType.Setter
        public Builder logTarget(String logTarget) {
            if (logTarget == null) {
              throw new MissingRequiredPropertyException("GetTableflowTopicErrorHandling", "logTarget");
            }
            this.logTarget = logTarget;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetTableflowTopicErrorHandling", "mode");
            }
            this.mode = mode;
            return this;
        }
        public GetTableflowTopicErrorHandling build() {
            final var _resultValue = new GetTableflowTopicErrorHandling();
            _resultValue.logTarget = logTarget;
            _resultValue.mode = mode;
            return _resultValue;
        }
    }
}
