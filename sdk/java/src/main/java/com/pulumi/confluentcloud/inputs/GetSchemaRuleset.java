// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetSchemaRulesetDomainRule;
import com.pulumi.confluentcloud.inputs.GetSchemaRulesetMigrationRule;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;


public final class GetSchemaRuleset extends com.pulumi.resources.InvokeArgs {

    public static final GetSchemaRuleset Empty = new GetSchemaRuleset();

    /**
     * (Optional List of Blocks) supports the following:
     * 
     */
    @Import(name="domainRules", required=true)
    private List<GetSchemaRulesetDomainRule> domainRules;

    /**
     * @return (Optional List of Blocks) supports the following:
     * 
     */
    public List<GetSchemaRulesetDomainRule> domainRules() {
        return this.domainRules;
    }

    @Import(name="migrationRules", required=true)
    private List<GetSchemaRulesetMigrationRule> migrationRules;

    public List<GetSchemaRulesetMigrationRule> migrationRules() {
        return this.migrationRules;
    }

    private GetSchemaRuleset() {}

    private GetSchemaRuleset(GetSchemaRuleset $) {
        this.domainRules = $.domainRules;
        this.migrationRules = $.migrationRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaRuleset defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaRuleset $;

        public Builder() {
            $ = new GetSchemaRuleset();
        }

        public Builder(GetSchemaRuleset defaults) {
            $ = new GetSchemaRuleset(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainRules (Optional List of Blocks) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder domainRules(List<GetSchemaRulesetDomainRule> domainRules) {
            $.domainRules = domainRules;
            return this;
        }

        /**
         * @param domainRules (Optional List of Blocks) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder domainRules(GetSchemaRulesetDomainRule... domainRules) {
            return domainRules(List.of(domainRules));
        }

        public Builder migrationRules(List<GetSchemaRulesetMigrationRule> migrationRules) {
            $.migrationRules = migrationRules;
            return this;
        }

        public Builder migrationRules(GetSchemaRulesetMigrationRule... migrationRules) {
            return migrationRules(List.of(migrationRules));
        }

        public GetSchemaRuleset build() {
            if ($.domainRules == null) {
                throw new MissingRequiredPropertyException("GetSchemaRuleset", "domainRules");
            }
            if ($.migrationRules == null) {
                throw new MissingRequiredPropertyException("GetSchemaRuleset", "migrationRules");
            }
            return $;
        }
    }

}
