// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetSchemaRulesetDomainRule;
import com.pulumi.confluentcloud.inputs.GetSchemaRulesetMigrationRule;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchemaRuleset extends com.pulumi.resources.InvokeArgs {

    public static final GetSchemaRuleset Empty = new GetSchemaRuleset();

    /**
     * (Optional List of Blocks) supports the following:
     * 
     */
    @Import(name="domainRules")
    private @Nullable List<GetSchemaRulesetDomainRule> domainRules;

    /**
     * @return (Optional List of Blocks) supports the following:
     * 
     */
    public Optional<List<GetSchemaRulesetDomainRule>> domainRules() {
        return Optional.ofNullable(this.domainRules);
    }

    /**
     * (Optional List of Blocks) supports the following:
     * 
     */
    @Import(name="migrationRules")
    private @Nullable List<GetSchemaRulesetMigrationRule> migrationRules;

    /**
     * @return (Optional List of Blocks) supports the following:
     * 
     */
    public Optional<List<GetSchemaRulesetMigrationRule>> migrationRules() {
        return Optional.ofNullable(this.migrationRules);
    }

    private GetSchemaRuleset() {}

    private GetSchemaRuleset(GetSchemaRuleset $) {
        this.domainRules = $.domainRules;
        this.migrationRules = $.migrationRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaRuleset defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaRuleset $;

        public Builder() {
            $ = new GetSchemaRuleset();
        }

        public Builder(GetSchemaRuleset defaults) {
            $ = new GetSchemaRuleset(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainRules (Optional List of Blocks) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder domainRules(@Nullable List<GetSchemaRulesetDomainRule> domainRules) {
            $.domainRules = domainRules;
            return this;
        }

        /**
         * @param domainRules (Optional List of Blocks) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder domainRules(GetSchemaRulesetDomainRule... domainRules) {
            return domainRules(List.of(domainRules));
        }

        /**
         * @param migrationRules (Optional List of Blocks) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder migrationRules(@Nullable List<GetSchemaRulesetMigrationRule> migrationRules) {
            $.migrationRules = migrationRules;
            return this;
        }

        /**
         * @param migrationRules (Optional List of Blocks) supports the following:
         * 
         * @return builder
         * 
         */
        public Builder migrationRules(GetSchemaRulesetMigrationRule... migrationRules) {
            return migrationRules(List.of(migrationRules));
        }

        public GetSchemaRuleset build() {
            return $;
        }
    }

}
