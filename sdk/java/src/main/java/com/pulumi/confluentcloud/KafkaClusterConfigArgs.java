// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.KafkaClusterConfigCredentialsArgs;
import com.pulumi.confluentcloud.inputs.KafkaClusterConfigKafkaClusterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaClusterConfigArgs Empty = new KafkaClusterConfigArgs();

    /**
     * The custom cluster settings to set:
     * 
     */
    @Import(name="config", required=true)
    private Output<Map<String,String>> config;

    /**
     * @return The custom cluster settings to set:
     * 
     */
    public Output<Map<String,String>> config() {
        return this.config;
    }

    /**
     * The Cluster API Credentials.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<KafkaClusterConfigCredentialsArgs> credentials;

    /**
     * @return The Cluster API Credentials.
     * 
     */
    public Optional<Output<KafkaClusterConfigCredentialsArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    @Import(name="kafkaCluster")
    private @Nullable Output<KafkaClusterConfigKafkaClusterArgs> kafkaCluster;

    public Optional<Output<KafkaClusterConfigKafkaClusterArgs>> kafkaCluster() {
        return Optional.ofNullable(this.kafkaCluster);
    }

    /**
     * The REST endpoint of the Dedicated Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     * 
     */
    @Import(name="restEndpoint")
    private @Nullable Output<String> restEndpoint;

    /**
     * @return The REST endpoint of the Dedicated Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     * 
     */
    public Optional<Output<String>> restEndpoint() {
        return Optional.ofNullable(this.restEndpoint);
    }

    private KafkaClusterConfigArgs() {}

    private KafkaClusterConfigArgs(KafkaClusterConfigArgs $) {
        this.config = $.config;
        this.credentials = $.credentials;
        this.kafkaCluster = $.kafkaCluster;
        this.restEndpoint = $.restEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaClusterConfigArgs $;

        public Builder() {
            $ = new KafkaClusterConfigArgs();
        }

        public Builder(KafkaClusterConfigArgs defaults) {
            $ = new KafkaClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The custom cluster settings to set:
         * 
         * @return builder
         * 
         */
        public Builder config(Output<Map<String,String>> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The custom cluster settings to set:
         * 
         * @return builder
         * 
         */
        public Builder config(Map<String,String> config) {
            return config(Output.of(config));
        }

        /**
         * @param credentials The Cluster API Credentials.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<KafkaClusterConfigCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials The Cluster API Credentials.
         * 
         * @return builder
         * 
         */
        public Builder credentials(KafkaClusterConfigCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        public Builder kafkaCluster(@Nullable Output<KafkaClusterConfigKafkaClusterArgs> kafkaCluster) {
            $.kafkaCluster = kafkaCluster;
            return this;
        }

        public Builder kafkaCluster(KafkaClusterConfigKafkaClusterArgs kafkaCluster) {
            return kafkaCluster(Output.of(kafkaCluster));
        }

        /**
         * @param restEndpoint The REST endpoint of the Dedicated Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
         * 
         * @return builder
         * 
         */
        public Builder restEndpoint(@Nullable Output<String> restEndpoint) {
            $.restEndpoint = restEndpoint;
            return this;
        }

        /**
         * @param restEndpoint The REST endpoint of the Dedicated Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
         * 
         * @return builder
         * 
         */
        public Builder restEndpoint(String restEndpoint) {
            return restEndpoint(Output.of(restEndpoint));
        }

        public KafkaClusterConfigArgs build() {
            $.config = Objects.requireNonNull($.config, "expected parameter 'config' to be non-null");
            return $;
        }
    }

}
