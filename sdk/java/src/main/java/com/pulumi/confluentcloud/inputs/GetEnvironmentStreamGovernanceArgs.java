// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetEnvironmentStreamGovernanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetEnvironmentStreamGovernanceArgs Empty = new GetEnvironmentStreamGovernanceArgs();

    /**
     * Stream Governance Package. &#39;ESSENTIALS&#39; or &#39;ADVANCED&#39;
     * 
     */
    @Import(name="package", required=true)
    private Output<String> package_;

    /**
     * @return Stream Governance Package. &#39;ESSENTIALS&#39; or &#39;ADVANCED&#39;
     * 
     */
    public Output<String> package_() {
        return this.package_;
    }

    private GetEnvironmentStreamGovernanceArgs() {}

    private GetEnvironmentStreamGovernanceArgs(GetEnvironmentStreamGovernanceArgs $) {
        this.package_ = $.package_;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentStreamGovernanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentStreamGovernanceArgs $;

        public Builder() {
            $ = new GetEnvironmentStreamGovernanceArgs();
        }

        public Builder(GetEnvironmentStreamGovernanceArgs defaults) {
            $ = new GetEnvironmentStreamGovernanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param package_ Stream Governance Package. &#39;ESSENTIALS&#39; or &#39;ADVANCED&#39;
         * 
         * @return builder
         * 
         */
        public Builder package_(Output<String> package_) {
            $.package_ = package_;
            return this;
        }

        /**
         * @param package_ Stream Governance Package. &#39;ESSENTIALS&#39; or &#39;ADVANCED&#39;
         * 
         * @return builder
         * 
         */
        public Builder package_(String package_) {
            return package_(Output.of(package_));
        }

        public GetEnvironmentStreamGovernanceArgs build() {
            if ($.package_ == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentStreamGovernanceArgs", "package_");
            }
            return $;
        }
    }

}
