// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.PrivateLinkAttachmentEnvironmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateLinkAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateLinkAttachmentArgs Empty = new PrivateLinkAttachmentArgs();

    /**
     * The cloud service provider that hosts the resources to access with the Private Link Attachment.
     * 
     */
    @Import(name="cloud", required=true)
    private Output<String> cloud;

    /**
     * @return The cloud service provider that hosts the resources to access with the Private Link Attachment.
     * 
     */
    public Output<String> cloud() {
        return this.cloud;
    }

    /**
     * The name of the Private Link Attachment.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Private Link Attachment.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment", required=true)
    private Output<PrivateLinkAttachmentEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<PrivateLinkAttachmentEnvironmentArgs> environment() {
        return this.environment;
    }

    /**
     * The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private PrivateLinkAttachmentArgs() {}

    private PrivateLinkAttachmentArgs(PrivateLinkAttachmentArgs $) {
        this.cloud = $.cloud;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkAttachmentArgs $;

        public Builder() {
            $ = new PrivateLinkAttachmentArgs();
        }

        public Builder(PrivateLinkAttachmentArgs defaults) {
            $ = new PrivateLinkAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloud The cloud service provider that hosts the resources to access with the Private Link Attachment.
         * 
         * @return builder
         * 
         */
        public Builder cloud(Output<String> cloud) {
            $.cloud = cloud;
            return this;
        }

        /**
         * @param cloud The cloud service provider that hosts the resources to access with the Private Link Attachment.
         * 
         * @return builder
         * 
         */
        public Builder cloud(String cloud) {
            return cloud(Output.of(cloud));
        }

        /**
         * @param displayName The name of the Private Link Attachment.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Private Link Attachment.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<PrivateLinkAttachmentEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(PrivateLinkAttachmentEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param region The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public PrivateLinkAttachmentArgs build() {
            $.cloud = Objects.requireNonNull($.cloud, "expected parameter 'cloud' to be non-null");
            $.environment = Objects.requireNonNull($.environment, "expected parameter 'environment' to be non-null");
            $.region = Objects.requireNonNull($.region, "expected parameter 'region' to be non-null");
            return $;
        }
    }

}
