// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.GetKafkaTopicCredentialsArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaTopicKafkaClusterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKafkaTopicArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKafkaTopicArgs Empty = new GetKafkaTopicArgs();

    @Import(name="credentials")
    private @Nullable Output<GetKafkaTopicCredentialsArgs> credentials;

    public Optional<Output<GetKafkaTopicCredentialsArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    @Import(name="kafkaCluster")
    private @Nullable Output<GetKafkaTopicKafkaClusterArgs> kafkaCluster;

    public Optional<Output<GetKafkaTopicKafkaClusterArgs>> kafkaCluster() {
        return Optional.ofNullable(this.kafkaCluster);
    }

    /**
     * The REST endpoint of the Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     * 
     */
    @Import(name="restEndpoint", required=true)
    private Output<String> restEndpoint;

    /**
     * @return The REST endpoint of the Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     * 
     */
    public Output<String> restEndpoint() {
        return this.restEndpoint;
    }

    /**
     * The name of the topic, for example, `orders-1`. The topic name can be up to 255 characters in length and can contain only alphanumeric characters, hyphens, and underscores.
     * 
     */
    @Import(name="topicName", required=true)
    private Output<String> topicName;

    /**
     * @return The name of the topic, for example, `orders-1`. The topic name can be up to 255 characters in length and can contain only alphanumeric characters, hyphens, and underscores.
     * 
     */
    public Output<String> topicName() {
        return this.topicName;
    }

    private GetKafkaTopicArgs() {}

    private GetKafkaTopicArgs(GetKafkaTopicArgs $) {
        this.credentials = $.credentials;
        this.kafkaCluster = $.kafkaCluster;
        this.restEndpoint = $.restEndpoint;
        this.topicName = $.topicName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKafkaTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKafkaTopicArgs $;

        public Builder() {
            $ = new GetKafkaTopicArgs();
        }

        public Builder(GetKafkaTopicArgs defaults) {
            $ = new GetKafkaTopicArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentials(@Nullable Output<GetKafkaTopicCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        public Builder credentials(GetKafkaTopicCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        public Builder kafkaCluster(@Nullable Output<GetKafkaTopicKafkaClusterArgs> kafkaCluster) {
            $.kafkaCluster = kafkaCluster;
            return this;
        }

        public Builder kafkaCluster(GetKafkaTopicKafkaClusterArgs kafkaCluster) {
            return kafkaCluster(Output.of(kafkaCluster));
        }

        /**
         * @param restEndpoint The REST endpoint of the Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
         * 
         * @return builder
         * 
         */
        public Builder restEndpoint(Output<String> restEndpoint) {
            $.restEndpoint = restEndpoint;
            return this;
        }

        /**
         * @param restEndpoint The REST endpoint of the Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
         * 
         * @return builder
         * 
         */
        public Builder restEndpoint(String restEndpoint) {
            return restEndpoint(Output.of(restEndpoint));
        }

        /**
         * @param topicName The name of the topic, for example, `orders-1`. The topic name can be up to 255 characters in length and can contain only alphanumeric characters, hyphens, and underscores.
         * 
         * @return builder
         * 
         */
        public Builder topicName(Output<String> topicName) {
            $.topicName = topicName;
            return this;
        }

        /**
         * @param topicName The name of the topic, for example, `orders-1`. The topic name can be up to 255 characters in length and can contain only alphanumeric characters, hyphens, and underscores.
         * 
         * @return builder
         * 
         */
        public Builder topicName(String topicName) {
            return topicName(Output.of(topicName));
        }

        public GetKafkaTopicArgs build() {
            if ($.restEndpoint == null) {
                throw new MissingRequiredPropertyException("GetKafkaTopicArgs", "restEndpoint");
            }
            if ($.topicName == null) {
                throw new MissingRequiredPropertyException("GetKafkaTopicArgs", "topicName");
            }
            return $;
        }
    }

}
