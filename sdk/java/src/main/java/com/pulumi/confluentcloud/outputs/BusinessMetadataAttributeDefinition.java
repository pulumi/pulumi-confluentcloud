// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BusinessMetadataAttributeDefinition {
    /**
     * @return The default value of this attribute.
     * 
     */
    private @Nullable String defaultValue;
    /**
     * @return The description of the Business Metadata.
     * 
     */
    private @Nullable String description;
    /**
     * @return An optional flag to control whether the attribute should be optional or required. The default value is `false`.
     * 
     */
    private @Nullable Boolean isOptional;
    /**
     * @return The name of the attribute.
     * 
     */
    private String name;
    /**
     * @return (Optional Map) Block for the attribute options:
     * 
     */
    private @Nullable Map<String,String> options;
    /**
     * @return (Required String) The type of the attribute, it always returns `string`.
     * 
     */
    private @Nullable String type;

    private BusinessMetadataAttributeDefinition() {}
    /**
     * @return The default value of this attribute.
     * 
     */
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    /**
     * @return The description of the Business Metadata.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return An optional flag to control whether the attribute should be optional or required. The default value is `false`.
     * 
     */
    public Optional<Boolean> isOptional() {
        return Optional.ofNullable(this.isOptional);
    }
    /**
     * @return The name of the attribute.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return (Optional Map) Block for the attribute options:
     * 
     */
    public Map<String,String> options() {
        return this.options == null ? Map.of() : this.options;
    }
    /**
     * @return (Required String) The type of the attribute, it always returns `string`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BusinessMetadataAttributeDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultValue;
        private @Nullable String description;
        private @Nullable Boolean isOptional;
        private String name;
        private @Nullable Map<String,String> options;
        private @Nullable String type;
        public Builder() {}
        public Builder(BusinessMetadataAttributeDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.isOptional = defaults.isOptional;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder defaultValue(@Nullable String defaultValue) {

            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isOptional(@Nullable Boolean isOptional) {

            this.isOptional = isOptional;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("BusinessMetadataAttributeDefinition", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder options(@Nullable Map<String,String> options) {

            this.options = options;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public BusinessMetadataAttributeDefinition build() {
            final var _resultValue = new BusinessMetadataAttributeDefinition();
            _resultValue.defaultValue = defaultValue;
            _resultValue.description = description;
            _resultValue.isOptional = isOptional;
            _resultValue.name = name;
            _resultValue.options = options;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
