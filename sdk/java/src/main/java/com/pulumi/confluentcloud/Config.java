// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("confluentcloud");
/**
 * The Stream Catalog REST Endpoint.
 * 
 */
    public Optional<String> catalogRestEndpoint() {
        return Codegen.stringProp("catalogRestEndpoint").config(config).get();
    }
/**
 * The Confluent Cloud API Key.
 * 
 */
    public Optional<String> cloudApiKey() {
        return Codegen.stringProp("cloudApiKey").config(config).get();
    }
/**
 * The Confluent Cloud API Secret.
 * 
 */
    public Optional<String> cloudApiSecret() {
        return Codegen.stringProp("cloudApiSecret").config(config).get();
    }
/**
 * The base endpoint of Confluent Cloud API.
 * 
 */
    public Optional<String> endpoint() {
        return Codegen.stringProp("endpoint").config(config).get();
    }
/**
 * The Flink Environment ID.
 * 
 */
    public Optional<String> environmentId() {
        return Codegen.stringProp("environmentId").config(config).get();
    }
/**
 * The Flink API Key.
 * 
 */
    public Optional<String> flinkApiKey() {
        return Codegen.stringProp("flinkApiKey").config(config).get();
    }
/**
 * The Flink API Secret.
 * 
 */
    public Optional<String> flinkApiSecret() {
        return Codegen.stringProp("flinkApiSecret").config(config).get();
    }
/**
 * The Flink Compute Pool ID.
 * 
 */
    public Optional<String> flinkComputePoolId() {
        return Codegen.stringProp("flinkComputePoolId").config(config).get();
    }
/**
 * The Flink Principal ID.
 * 
 */
    public Optional<String> flinkPrincipalId() {
        return Codegen.stringProp("flinkPrincipalId").config(config).get();
    }
/**
 * The Flink REST Endpoint.
 * 
 */
    public Optional<String> flinkRestEndpoint() {
        return Codegen.stringProp("flinkRestEndpoint").config(config).get();
    }
/**
 * The Kafka Cluster API Key.
 * 
 */
    public Optional<String> kafkaApiKey() {
        return Codegen.stringProp("kafkaApiKey").config(config).get();
    }
/**
 * The Kafka Cluster API Secret.
 * 
 */
    public Optional<String> kafkaApiSecret() {
        return Codegen.stringProp("kafkaApiSecret").config(config).get();
    }
/**
 * The Kafka Cluster ID.
 * 
 */
    public Optional<String> kafkaId() {
        return Codegen.stringProp("kafkaId").config(config).get();
    }
/**
 * The Kafka Cluster REST Endpoint.
 * 
 */
    public Optional<String> kafkaRestEndpoint() {
        return Codegen.stringProp("kafkaRestEndpoint").config(config).get();
    }
/**
 * Maximum number of retries of HTTP client. Defaults to 4.
 * 
 */
    public Optional<Integer> maxRetries() {
        return Codegen.integerProp("maxRetries").config(config).get();
    }
/**
 * The Flink Organization ID.
 * 
 */
    public Optional<String> organizationId() {
        return Codegen.stringProp("organizationId").config(config).get();
    }
/**
 * The Schema Registry Cluster API Key.
 * 
 */
    public Optional<String> schemaRegistryApiKey() {
        return Codegen.stringProp("schemaRegistryApiKey").config(config).get();
    }
/**
 * The Schema Registry Cluster API Secret.
 * 
 */
    public Optional<String> schemaRegistryApiSecret() {
        return Codegen.stringProp("schemaRegistryApiSecret").config(config).get();
    }
/**
 * The Schema Registry Cluster ID.
 * 
 */
    public Optional<String> schemaRegistryId() {
        return Codegen.stringProp("schemaRegistryId").config(config).get();
    }
/**
 * The Schema Registry Cluster REST Endpoint.
 * 
 */
    public Optional<String> schemaRegistryRestEndpoint() {
        return Codegen.stringProp("schemaRegistryRestEndpoint").config(config).get();
    }
}
