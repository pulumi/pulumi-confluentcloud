// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetSubjectConfigCredentials;
import com.pulumi.confluentcloud.outputs.GetSubjectConfigSchemaRegistryCluster;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubjectConfigResult {
    /**
     * @return (Required String) The Compatibility Level of the specified subject. Accepted values are: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, and `NONE`. See the [Compatibility Types](https://docs.confluent.io/platform/current/schema-registry/avro.html#compatibility-types) for more details.
     * 
     */
    private String compatibilityLevel;
    private @Nullable GetSubjectConfigCredentials credentials;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String restEndpoint;
    private @Nullable GetSubjectConfigSchemaRegistryCluster schemaRegistryCluster;
    private String subjectName;

    private GetSubjectConfigResult() {}
    /**
     * @return (Required String) The Compatibility Level of the specified subject. Accepted values are: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, and `NONE`. See the [Compatibility Types](https://docs.confluent.io/platform/current/schema-registry/avro.html#compatibility-types) for more details.
     * 
     */
    public String compatibilityLevel() {
        return this.compatibilityLevel;
    }
    public Optional<GetSubjectConfigCredentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> restEndpoint() {
        return Optional.ofNullable(this.restEndpoint);
    }
    public Optional<GetSubjectConfigSchemaRegistryCluster> schemaRegistryCluster() {
        return Optional.ofNullable(this.schemaRegistryCluster);
    }
    public String subjectName() {
        return this.subjectName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubjectConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compatibilityLevel;
        private @Nullable GetSubjectConfigCredentials credentials;
        private String id;
        private @Nullable String restEndpoint;
        private @Nullable GetSubjectConfigSchemaRegistryCluster schemaRegistryCluster;
        private String subjectName;
        public Builder() {}
        public Builder(GetSubjectConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.credentials = defaults.credentials;
    	      this.id = defaults.id;
    	      this.restEndpoint = defaults.restEndpoint;
    	      this.schemaRegistryCluster = defaults.schemaRegistryCluster;
    	      this.subjectName = defaults.subjectName;
        }

        @CustomType.Setter
        public Builder compatibilityLevel(String compatibilityLevel) {
            this.compatibilityLevel = Objects.requireNonNull(compatibilityLevel);
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable GetSubjectConfigCredentials credentials) {
            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder restEndpoint(@Nullable String restEndpoint) {
            this.restEndpoint = restEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder schemaRegistryCluster(@Nullable GetSubjectConfigSchemaRegistryCluster schemaRegistryCluster) {
            this.schemaRegistryCluster = schemaRegistryCluster;
            return this;
        }
        @CustomType.Setter
        public Builder subjectName(String subjectName) {
            this.subjectName = Objects.requireNonNull(subjectName);
            return this;
        }
        public GetSubjectConfigResult build() {
            final var o = new GetSubjectConfigResult();
            o.compatibilityLevel = compatibilityLevel;
            o.credentials = credentials;
            o.id = id;
            o.restEndpoint = restEndpoint;
            o.schemaRegistryCluster = schemaRegistryCluster;
            o.subjectName = subjectName;
            return o;
        }
    }
}
