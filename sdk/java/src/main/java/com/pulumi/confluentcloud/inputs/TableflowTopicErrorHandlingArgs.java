// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableflowTopicErrorHandlingArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableflowTopicErrorHandlingArgs Empty = new TableflowTopicErrorHandlingArgs();

    /**
     * The topic to which the bad records will be logged for error handling mode `LOG`. Creates the topic if it doesn&#39;t already exist. The default topic is &#34;errorLog&#34; if error handling mode is `LOG`, and empty otherwise.
     * 
     */
    @Import(name="logTarget")
    private @Nullable Output<String> logTarget;

    /**
     * @return The topic to which the bad records will be logged for error handling mode `LOG`. Creates the topic if it doesn&#39;t already exist. The default topic is &#34;errorLog&#34; if error handling mode is `LOG`, and empty otherwise.
     * 
     */
    public Optional<Output<String>> logTarget() {
        return Optional.ofNullable(this.logTarget);
    }

    /**
     * The error handling mode. For `SUSPEND`, the materialization of the topic is suspended in case of record failures. For `SKIP`, bad records are skipped and the materialization continues with the next record. For `LOG`, bad records are logged to a dead-letter queue (DLQ) topic and the materialization continues with the next record. The default mode is `SUSPEND`.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The error handling mode. For `SUSPEND`, the materialization of the topic is suspended in case of record failures. For `SKIP`, bad records are skipped and the materialization continues with the next record. For `LOG`, bad records are logged to a dead-letter queue (DLQ) topic and the materialization continues with the next record. The default mode is `SUSPEND`.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    private TableflowTopicErrorHandlingArgs() {}

    private TableflowTopicErrorHandlingArgs(TableflowTopicErrorHandlingArgs $) {
        this.logTarget = $.logTarget;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableflowTopicErrorHandlingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableflowTopicErrorHandlingArgs $;

        public Builder() {
            $ = new TableflowTopicErrorHandlingArgs();
        }

        public Builder(TableflowTopicErrorHandlingArgs defaults) {
            $ = new TableflowTopicErrorHandlingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logTarget The topic to which the bad records will be logged for error handling mode `LOG`. Creates the topic if it doesn&#39;t already exist. The default topic is &#34;errorLog&#34; if error handling mode is `LOG`, and empty otherwise.
         * 
         * @return builder
         * 
         */
        public Builder logTarget(@Nullable Output<String> logTarget) {
            $.logTarget = logTarget;
            return this;
        }

        /**
         * @param logTarget The topic to which the bad records will be logged for error handling mode `LOG`. Creates the topic if it doesn&#39;t already exist. The default topic is &#34;errorLog&#34; if error handling mode is `LOG`, and empty otherwise.
         * 
         * @return builder
         * 
         */
        public Builder logTarget(String logTarget) {
            return logTarget(Output.of(logTarget));
        }

        /**
         * @param mode The error handling mode. For `SUSPEND`, the materialization of the topic is suspended in case of record failures. For `SKIP`, bad records are skipped and the materialization continues with the next record. For `LOG`, bad records are logged to a dead-letter queue (DLQ) topic and the materialization continues with the next record. The default mode is `SUSPEND`.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The error handling mode. For `SUSPEND`, the materialization of the topic is suspended in case of record failures. For `SKIP`, bad records are skipped and the materialization continues with the next record. For `LOG`, bad records are logged to a dead-letter queue (DLQ) topic and the materialization continues with the next record. The default mode is `SUSPEND`.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public TableflowTopicErrorHandlingArgs build() {
            return $;
        }
    }

}
