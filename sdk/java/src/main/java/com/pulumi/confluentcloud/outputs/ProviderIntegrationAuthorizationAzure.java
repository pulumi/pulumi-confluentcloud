// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProviderIntegrationAuthorizationAzure {
    /**
     * @return (Computed String) Confluent Multi-Tenant App ID used to access customer Azure resources.
     * 
     */
    private @Nullable String confluentMultiTenantAppId;
    /**
     * @return Customer&#39;s Azure Tenant ID.
     * 
     */
    private String customerAzureTenantId;

    private ProviderIntegrationAuthorizationAzure() {}
    /**
     * @return (Computed String) Confluent Multi-Tenant App ID used to access customer Azure resources.
     * 
     */
    public Optional<String> confluentMultiTenantAppId() {
        return Optional.ofNullable(this.confluentMultiTenantAppId);
    }
    /**
     * @return Customer&#39;s Azure Tenant ID.
     * 
     */
    public String customerAzureTenantId() {
        return this.customerAzureTenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderIntegrationAuthorizationAzure defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String confluentMultiTenantAppId;
        private String customerAzureTenantId;
        public Builder() {}
        public Builder(ProviderIntegrationAuthorizationAzure defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.confluentMultiTenantAppId = defaults.confluentMultiTenantAppId;
    	      this.customerAzureTenantId = defaults.customerAzureTenantId;
        }

        @CustomType.Setter
        public Builder confluentMultiTenantAppId(@Nullable String confluentMultiTenantAppId) {

            this.confluentMultiTenantAppId = confluentMultiTenantAppId;
            return this;
        }
        @CustomType.Setter
        public Builder customerAzureTenantId(String customerAzureTenantId) {
            if (customerAzureTenantId == null) {
              throw new MissingRequiredPropertyException("ProviderIntegrationAuthorizationAzure", "customerAzureTenantId");
            }
            this.customerAzureTenantId = customerAzureTenantId;
            return this;
        }
        public ProviderIntegrationAuthorizationAzure build() {
            final var _resultValue = new ProviderIntegrationAuthorizationAzure();
            _resultValue.confluentMultiTenantAppId = confluentMultiTenantAppId;
            _resultValue.customerAzureTenantId = customerAzureTenantId;
            return _resultValue;
        }
    }
}
