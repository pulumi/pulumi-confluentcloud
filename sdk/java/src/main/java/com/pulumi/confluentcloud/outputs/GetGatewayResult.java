// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetGatewayAwsEgressPrivateLinkGateway;
import com.pulumi.confluentcloud.outputs.GetGatewayAwsPeeringGateway;
import com.pulumi.confluentcloud.outputs.GetGatewayEnvironment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGatewayResult {
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    private List<GetGatewayAwsEgressPrivateLinkGateway> awsEgressPrivateLinkGateways;
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    private List<GetGatewayAwsPeeringGateway> awsPeeringGateways;
    /**
     * @return (Required String) A human-readable name for the Gateway.
     * 
     */
    private String displayName;
    private GetGatewayEnvironment environment;
    private String id;

    private GetGatewayResult() {}
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    public List<GetGatewayAwsEgressPrivateLinkGateway> awsEgressPrivateLinkGateways() {
        return this.awsEgressPrivateLinkGateways;
    }
    /**
     * @return (Optional Configuration Block) supports the following:
     * 
     */
    public List<GetGatewayAwsPeeringGateway> awsPeeringGateways() {
        return this.awsPeeringGateways;
    }
    /**
     * @return (Required String) A human-readable name for the Gateway.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public GetGatewayEnvironment environment() {
        return this.environment;
    }
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGatewayAwsEgressPrivateLinkGateway> awsEgressPrivateLinkGateways;
        private List<GetGatewayAwsPeeringGateway> awsPeeringGateways;
        private String displayName;
        private GetGatewayEnvironment environment;
        private String id;
        public Builder() {}
        public Builder(GetGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsEgressPrivateLinkGateways = defaults.awsEgressPrivateLinkGateways;
    	      this.awsPeeringGateways = defaults.awsPeeringGateways;
    	      this.displayName = defaults.displayName;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder awsEgressPrivateLinkGateways(List<GetGatewayAwsEgressPrivateLinkGateway> awsEgressPrivateLinkGateways) {
            if (awsEgressPrivateLinkGateways == null) {
              throw new MissingRequiredPropertyException("GetGatewayResult", "awsEgressPrivateLinkGateways");
            }
            this.awsEgressPrivateLinkGateways = awsEgressPrivateLinkGateways;
            return this;
        }
        public Builder awsEgressPrivateLinkGateways(GetGatewayAwsEgressPrivateLinkGateway... awsEgressPrivateLinkGateways) {
            return awsEgressPrivateLinkGateways(List.of(awsEgressPrivateLinkGateways));
        }
        @CustomType.Setter
        public Builder awsPeeringGateways(List<GetGatewayAwsPeeringGateway> awsPeeringGateways) {
            if (awsPeeringGateways == null) {
              throw new MissingRequiredPropertyException("GetGatewayResult", "awsPeeringGateways");
            }
            this.awsPeeringGateways = awsPeeringGateways;
            return this;
        }
        public Builder awsPeeringGateways(GetGatewayAwsPeeringGateway... awsPeeringGateways) {
            return awsPeeringGateways(List.of(awsPeeringGateways));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetGatewayResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environment(GetGatewayEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetGatewayResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGatewayResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetGatewayResult build() {
            final var _resultValue = new GetGatewayResult();
            _resultValue.awsEgressPrivateLinkGateways = awsEgressPrivateLinkGateways;
            _resultValue.awsPeeringGateways = awsPeeringGateways;
            _resultValue.displayName = displayName;
            _resultValue.environment = environment;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
