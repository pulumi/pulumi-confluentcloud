// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class GetNetworkGcp extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkGcp Empty = new GetNetworkGcp();

    /**
     * (Optional Map) The mapping of zones to Private Service Connect service attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     * 
     */
    @Import(name="privateServiceConnectServiceAttachments", required=true)
    private Map<String,String> privateServiceConnectServiceAttachments;

    /**
     * @return (Optional Map) The mapping of zones to Private Service Connect service attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     * 
     */
    public Map<String,String> privateServiceConnectServiceAttachments() {
        return this.privateServiceConnectServiceAttachments;
    }

    /**
     * (Required String) The GCP project ID.
     * 
     */
    @Import(name="project", required=true)
    private String project;

    /**
     * @return (Required String) The GCP project ID.
     * 
     */
    public String project() {
        return this.project;
    }

    /**
     * (Required String) The GCP VPC network name.
     * 
     */
    @Import(name="vpcNetwork", required=true)
    private String vpcNetwork;

    /**
     * @return (Required String) The GCP VPC network name.
     * 
     */
    public String vpcNetwork() {
        return this.vpcNetwork;
    }

    private GetNetworkGcp() {}

    private GetNetworkGcp(GetNetworkGcp $) {
        this.privateServiceConnectServiceAttachments = $.privateServiceConnectServiceAttachments;
        this.project = $.project;
        this.vpcNetwork = $.vpcNetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkGcp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkGcp $;

        public Builder() {
            $ = new GetNetworkGcp();
        }

        public Builder(GetNetworkGcp defaults) {
            $ = new GetNetworkGcp(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateServiceConnectServiceAttachments (Optional Map) The mapping of zones to Private Service Connect service attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
         * 
         * @return builder
         * 
         */
        public Builder privateServiceConnectServiceAttachments(Map<String,String> privateServiceConnectServiceAttachments) {
            $.privateServiceConnectServiceAttachments = privateServiceConnectServiceAttachments;
            return this;
        }

        /**
         * @param project (Required String) The GCP project ID.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            $.project = project;
            return this;
        }

        /**
         * @param vpcNetwork (Required String) The GCP VPC network name.
         * 
         * @return builder
         * 
         */
        public Builder vpcNetwork(String vpcNetwork) {
            $.vpcNetwork = vpcNetwork;
            return this;
        }

        public GetNetworkGcp build() {
            $.privateServiceConnectServiceAttachments = Objects.requireNonNull($.privateServiceConnectServiceAttachments, "expected parameter 'privateServiceConnectServiceAttachments' to be non-null");
            $.project = Objects.requireNonNull($.project, "expected parameter 'project' to be non-null");
            $.vpcNetwork = Objects.requireNonNull($.vpcNetwork, "expected parameter 'vpcNetwork' to be non-null");
            return $;
        }
    }

}
