// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.AccessPointArgs;
import com.pulumi.confluentcloud.Utilities;
import com.pulumi.confluentcloud.inputs.AccessPointState;
import com.pulumi.confluentcloud.outputs.AccessPointAwsEgressPrivateLinkEndpoint;
import com.pulumi.confluentcloud.outputs.AccessPointEnvironment;
import com.pulumi.confluentcloud.outputs.AccessPointGateway;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 * 
 * `confluentcloud.AccessPoint` provides a Access Point resource that enables creating, editing, and deleting Access Points on Confluent Cloud.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.confluentcloud.Environment;
 * import com.pulumi.confluentcloud.EnvironmentArgs;
 * import com.pulumi.confluentcloud.AccessPoint;
 * import com.pulumi.confluentcloud.AccessPointArgs;
 * import com.pulumi.confluentcloud.inputs.AccessPointEnvironmentArgs;
 * import com.pulumi.confluentcloud.inputs.AccessPointGatewayArgs;
 * import com.pulumi.confluentcloud.inputs.AccessPointAwsEgressPrivateLinkEndpointArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var development = new Environment(&#34;development&#34;, EnvironmentArgs.builder()        
 *             .displayName(&#34;Development&#34;)
 *             .build());
 * 
 *         var main = new AccessPoint(&#34;main&#34;, AccessPointArgs.builder()        
 *             .displayName(&#34;access_point&#34;)
 *             .environment(AccessPointEnvironmentArgs.builder()
 *                 .id(development.id())
 *                 .build())
 *             .gateway(AccessPointGatewayArgs.builder()
 *                 .id(mainConfluentNetwork.gateway()[0].id())
 *                 .build())
 *             .awsEgressPrivateLinkEndpoint(AccessPointAwsEgressPrivateLinkEndpointArgs.builder()
 *                 .vpcEndpointServiceName(&#34;com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * You can import a Access Point by using Environment ID and Access Point ID, in the format `&lt;Environment ID&gt;/&lt;Access Point ID&gt;`. The following example shows how to import a Access Point:
 * 
 * $ export CONFLUENT_CLOUD_API_KEY=&#34;&lt;cloud_api_key&gt;&#34;
 * 
 * $ export CONFLUENT_CLOUD_API_SECRET=&#34;&lt;cloud_api_secret&gt;&#34;
 * 
 * ```sh
 * $ pulumi import confluentcloud:index/accessPoint:AccessPoint main env-abc123/ap-abc123
 * ```
 * 
 * !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 * 
 */
@ResourceType(type="confluentcloud:index/accessPoint:AccessPoint")
public class AccessPoint extends com.pulumi.resources.CustomResource {
    @Export(name="awsEgressPrivateLinkEndpoint", refs={AccessPointAwsEgressPrivateLinkEndpoint.class}, tree="[0]")
    private Output</* @Nullable */ AccessPointAwsEgressPrivateLinkEndpoint> awsEgressPrivateLinkEndpoint;

    public Output<Optional<AccessPointAwsEgressPrivateLinkEndpoint>> awsEgressPrivateLinkEndpoint() {
        return Codegen.optional(this.awsEgressPrivateLinkEndpoint);
    }
    /**
     * The name of the Access Point.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The name of the Access Point.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Export(name="environment", refs={AccessPointEnvironment.class}, tree="[0]")
    private Output<AccessPointEnvironment> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<AccessPointEnvironment> environment() {
        return this.environment;
    }
    @Export(name="gateway", refs={AccessPointGateway.class}, tree="[0]")
    private Output<AccessPointGateway> gateway;

    public Output<AccessPointGateway> gateway() {
        return this.gateway;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessPoint(String name) {
        this(name, AccessPointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessPoint(String name, AccessPointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessPoint(String name, AccessPointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/accessPoint:AccessPoint", name, args == null ? AccessPointArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccessPoint(String name, Output<String> id, @Nullable AccessPointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/accessPoint:AccessPoint", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessPoint get(String name, Output<String> id, @Nullable AccessPointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessPoint(name, id, state, options);
    }
}
