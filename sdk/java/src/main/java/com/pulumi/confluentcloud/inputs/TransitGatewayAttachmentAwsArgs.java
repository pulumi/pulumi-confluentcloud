// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitGatewayAttachmentAwsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitGatewayAttachmentAwsArgs Empty = new TransitGatewayAttachmentAwsArgs();

    /**
     * The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
     * 
     */
    @Import(name="ramResourceShareArn", required=true)
    private Output<String> ramResourceShareArn;

    /**
     * @return The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
     * 
     */
    public Output<String> ramResourceShareArn() {
        return this.ramResourceShareArn;
    }

    /**
     * List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
     * 
     * &gt; **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
     * 
     */
    @Import(name="routes", required=true)
    private Output<List<String>> routes;

    /**
     * @return List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
     * 
     * &gt; **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
     * 
     */
    public Output<List<String>> routes() {
        return this.routes;
    }

    /**
     * (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
     * 
     */
    @Import(name="transitGatewayAttachmentId")
    private @Nullable Output<String> transitGatewayAttachmentId;

    /**
     * @return (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
     * 
     */
    public Optional<Output<String>> transitGatewayAttachmentId() {
        return Optional.ofNullable(this.transitGatewayAttachmentId);
    }

    /**
     * The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
     * 
     */
    @Import(name="transitGatewayId", required=true)
    private Output<String> transitGatewayId;

    /**
     * @return The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
     * 
     */
    public Output<String> transitGatewayId() {
        return this.transitGatewayId;
    }

    private TransitGatewayAttachmentAwsArgs() {}

    private TransitGatewayAttachmentAwsArgs(TransitGatewayAttachmentAwsArgs $) {
        this.ramResourceShareArn = $.ramResourceShareArn;
        this.routes = $.routes;
        this.transitGatewayAttachmentId = $.transitGatewayAttachmentId;
        this.transitGatewayId = $.transitGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitGatewayAttachmentAwsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitGatewayAttachmentAwsArgs $;

        public Builder() {
            $ = new TransitGatewayAttachmentAwsArgs();
        }

        public Builder(TransitGatewayAttachmentAwsArgs defaults) {
            $ = new TransitGatewayAttachmentAwsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ramResourceShareArn The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
         * 
         * @return builder
         * 
         */
        public Builder ramResourceShareArn(Output<String> ramResourceShareArn) {
            $.ramResourceShareArn = ramResourceShareArn;
            return this;
        }

        /**
         * @param ramResourceShareArn The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
         * 
         * @return builder
         * 
         */
        public Builder ramResourceShareArn(String ramResourceShareArn) {
            return ramResourceShareArn(Output.of(ramResourceShareArn));
        }

        /**
         * @param routes List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
         * 
         * &gt; **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
         * 
         * @return builder
         * 
         */
        public Builder routes(Output<List<String>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
         * 
         * &gt; **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
         * 
         * @return builder
         * 
         */
        public Builder routes(List<String> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
         * 
         * &gt; **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
         * 
         * @return builder
         * 
         */
        public Builder routes(String... routes) {
            return routes(List.of(routes));
        }

        /**
         * @param transitGatewayAttachmentId (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(@Nullable Output<String> transitGatewayAttachmentId) {
            $.transitGatewayAttachmentId = transitGatewayAttachmentId;
            return this;
        }

        /**
         * @param transitGatewayAttachmentId (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayAttachmentId(String transitGatewayAttachmentId) {
            return transitGatewayAttachmentId(Output.of(transitGatewayAttachmentId));
        }

        /**
         * @param transitGatewayId The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayId(Output<String> transitGatewayId) {
            $.transitGatewayId = transitGatewayId;
            return this;
        }

        /**
         * @param transitGatewayId The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
         * 
         * @return builder
         * 
         */
        public Builder transitGatewayId(String transitGatewayId) {
            return transitGatewayId(Output.of(transitGatewayId));
        }

        public TransitGatewayAttachmentAwsArgs build() {
            if ($.ramResourceShareArn == null) {
                throw new MissingRequiredPropertyException("TransitGatewayAttachmentAwsArgs", "ramResourceShareArn");
            }
            if ($.routes == null) {
                throw new MissingRequiredPropertyException("TransitGatewayAttachmentAwsArgs", "routes");
            }
            if ($.transitGatewayId == null) {
                throw new MissingRequiredPropertyException("TransitGatewayAttachmentAwsArgs", "transitGatewayId");
            }
            return $;
        }
    }

}
