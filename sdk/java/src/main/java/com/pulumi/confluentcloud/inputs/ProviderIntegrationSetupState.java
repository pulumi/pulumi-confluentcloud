// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.ProviderIntegrationSetupEnvironmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderIntegrationSetupState extends com.pulumi.resources.ResourceArgs {

    public static final ProviderIntegrationSetupState Empty = new ProviderIntegrationSetupState();

    /**
     * The cloud service provider. Supported values are `AZURE` and `GCP`.
     * 
     */
    @Import(name="cloud")
    private @Nullable Output<String> cloud;

    /**
     * @return The cloud service provider. Supported values are `AZURE` and `GCP`.
     * 
     */
    public Optional<Output<String>> cloud() {
        return Optional.ofNullable(this.cloud);
    }

    /**
     * The name of the Provider Integration.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Provider Integration.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<ProviderIntegrationSetupEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Optional<Output<ProviderIntegrationSetupEnvironmentArgs>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Required List of Strings) List of resource CRNs where this provider integration is being used.
     * 
     */
    @Import(name="usages")
    private @Nullable Output<List<String>> usages;

    /**
     * @return (Required List of Strings) List of resource CRNs where this provider integration is being used.
     * 
     */
    public Optional<Output<List<String>>> usages() {
        return Optional.ofNullable(this.usages);
    }

    private ProviderIntegrationSetupState() {}

    private ProviderIntegrationSetupState(ProviderIntegrationSetupState $) {
        this.cloud = $.cloud;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.status = $.status;
        this.usages = $.usages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderIntegrationSetupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderIntegrationSetupState $;

        public Builder() {
            $ = new ProviderIntegrationSetupState();
        }

        public Builder(ProviderIntegrationSetupState defaults) {
            $ = new ProviderIntegrationSetupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloud The cloud service provider. Supported values are `AZURE` and `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder cloud(@Nullable Output<String> cloud) {
            $.cloud = cloud;
            return this;
        }

        /**
         * @param cloud The cloud service provider. Supported values are `AZURE` and `GCP`.
         * 
         * @return builder
         * 
         */
        public Builder cloud(String cloud) {
            return cloud(Output.of(cloud));
        }

        /**
         * @param displayName The name of the Provider Integration.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Provider Integration.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<ProviderIntegrationSetupEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(ProviderIntegrationSetupEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param status (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Required String) The status of the Provider Integration. Values are `DRAFT` and `CREATED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param usages (Required List of Strings) List of resource CRNs where this provider integration is being used.
         * 
         * @return builder
         * 
         */
        public Builder usages(@Nullable Output<List<String>> usages) {
            $.usages = usages;
            return this;
        }

        /**
         * @param usages (Required List of Strings) List of resource CRNs where this provider integration is being used.
         * 
         * @return builder
         * 
         */
        public Builder usages(List<String> usages) {
            return usages(Output.of(usages));
        }

        /**
         * @param usages (Required List of Strings) List of resource CRNs where this provider integration is being used.
         * 
         * @return builder
         * 
         */
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }

        public ProviderIntegrationSetupState build() {
            return $;
        }
    }

}
