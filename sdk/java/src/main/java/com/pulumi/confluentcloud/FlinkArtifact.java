// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.FlinkArtifactArgs;
import com.pulumi.confluentcloud.Utilities;
import com.pulumi.confluentcloud.inputs.FlinkArtifactState;
import com.pulumi.confluentcloud.outputs.FlinkArtifactEnvironment;
import com.pulumi.confluentcloud.outputs.FlinkArtifactVersion;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.confluentcloud.Environment;
 * import com.pulumi.confluentcloud.EnvironmentArgs;
 * import com.pulumi.confluentcloud.FlinkArtifact;
 * import com.pulumi.confluentcloud.FlinkArtifactArgs;
 * import com.pulumi.confluentcloud.inputs.FlinkArtifactEnvironmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var development = new Environment("development", EnvironmentArgs.builder()
 *             .displayName("Development")
 *             .build());
 * 
 *         var main = new FlinkArtifact("main", FlinkArtifactArgs.builder()
 *             .cloud("AWS")
 *             .region("us-west-2")
 *             .displayName("my_flink_sumscalar_artifact")
 *             .contentFormat("JAR")
 *             .environment(FlinkArtifactEnvironmentArgs.builder()
 *                 .id(development.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * You can import a Flink Artifact by using cloud, region, Flink Artifact ID and artifact file, in the format `&lt;Environment ID&gt;/&lt;region&gt;/&lt;cloud&gt;/&lt;Flink Artifact ID&gt;`. The following example shows how to import a Flink Artifact:
 * 
 * $ export CONFLUENT_CLOUD_API_KEY=&#34;&lt;cloud_api_key&gt;&#34;
 * 
 * $ export CONFLUENT_CLOUD_API_SECRET=&#34;&lt;cloud_api_secret&gt;&#34;
 * 
 * ```sh
 * $ pulumi import confluentcloud:index/flinkArtifact:FlinkArtifact main env-abc123/us-east-1/aws/fa-123
 * ```
 * 
 * !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 * 
 */
@ResourceType(type="confluentcloud:index/flinkArtifact:FlinkArtifact")
public class FlinkArtifact extends com.pulumi.resources.CustomResource {
    /**
     * (Required String) The API Version of the schema version of the Flink Artifact Pool, for example, `fa/v2`.
     * 
     */
    @Export(name="apiVersion", refs={String.class}, tree="[0]")
    private Output<String> apiVersion;

    /**
     * @return (Required String) The API Version of the schema version of the Flink Artifact Pool, for example, `fa/v2`.
     * 
     */
    public Output<String> apiVersion() {
        return this.apiVersion;
    }
    /**
     * The artifact file for Flink Artifact.
     * 
     */
    @Export(name="artifactFile", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> artifactFile;

    /**
     * @return The artifact file for Flink Artifact.
     * 
     */
    public Output<Optional<String>> artifactFile() {
        return Codegen.optional(this.artifactFile);
    }
    /**
     * Java class or alias for the Flink Artifact as provided by developer.
     * 
     * @deprecated
     * The &#34;class&#34; attribute has been deprecated and will be removed in the next major version of the provider (3.0.0). Refer to the Upgrade Guide at https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/guides/version-3-upgrade for more details. The guide will be published once version 3.0.0 is released.
     * 
     */
    @Deprecated /* The ""class"" attribute has been deprecated and will be removed in the next major version of the provider (3.0.0). Refer to the Upgrade Guide at https://registry.terraform.io/providers/confluentinc/confluent/latest/docs/guides/version-3-upgrade for more details. The guide will be published once version 3.0.0 is released. */
    @Export(name="class", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> class_;

    /**
     * @return Java class or alias for the Flink Artifact as provided by developer.
     * 
     */
    public Output<Optional<String>> class_() {
        return Codegen.optional(this.class_);
    }
    /**
     * The cloud service provider that runs the Flink Artifact. Accepted values are: `AWS`, `AZURE`.
     * 
     */
    @Export(name="cloud", refs={String.class}, tree="[0]")
    private Output<String> cloud;

    /**
     * @return The cloud service provider that runs the Flink Artifact. Accepted values are: `AWS`, `AZURE`.
     * 
     */
    public Output<String> cloud() {
        return this.cloud;
    }
    /**
     * (Optional String) Archive format of the Flink Artifact. Accepted values are: `JAR`, `ZIP`.
     * 
     */
    @Export(name="contentFormat", refs={String.class}, tree="[0]")
    private Output<String> contentFormat;

    /**
     * @return (Optional String) Archive format of the Flink Artifact. Accepted values are: `JAR`, `ZIP`.
     * 
     */
    public Output<String> contentFormat() {
        return this.contentFormat;
    }
    /**
     * (Optional String) Description of the Flink Artifact.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return (Optional String) Description of the Flink Artifact.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The unique name of the Flink Artifact per cloud, region, environment scope.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The unique name of the Flink Artifact per cloud, region, environment scope.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Optional String) Documentation link of the Flink Artifact.
     * 
     */
    @Export(name="documentationLink", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> documentationLink;

    /**
     * @return (Optional String) Documentation link of the Flink Artifact.
     * 
     */
    public Output<Optional<String>> documentationLink() {
        return Codegen.optional(this.documentationLink);
    }
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Export(name="environment", refs={FlinkArtifactEnvironment.class}, tree="[0]")
    private Output<FlinkArtifactEnvironment> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<FlinkArtifactEnvironment> environment() {
        return this.environment;
    }
    /**
     * (Required String) The kind of the Flink Artifact Pool, for example, `FlinkArtifact`.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output<String> kind;

    /**
     * @return (Required String) The kind of the Flink Artifact Pool, for example, `FlinkArtifact`.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The cloud service provider region that hosts the Flink Artifact.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The cloud service provider region that hosts the Flink Artifact.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * (Optional String) Runtime language of the Flink Artifact as `Python` or `Java`. Defaults to `Java`.
     * 
     */
    @Export(name="runtimeLanguage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runtimeLanguage;

    /**
     * @return (Optional String) Runtime language of the Flink Artifact as `Python` or `Java`. Defaults to `Java`.
     * 
     */
    public Output<Optional<String>> runtimeLanguage() {
        return Codegen.optional(this.runtimeLanguage);
    }
    /**
     * List of versions for this Flink Artifact.
     * 
     */
    @Export(name="versions", refs={List.class,FlinkArtifactVersion.class}, tree="[0,1]")
    private Output<List<FlinkArtifactVersion>> versions;

    /**
     * @return List of versions for this Flink Artifact.
     * 
     */
    public Output<List<FlinkArtifactVersion>> versions() {
        return this.versions;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlinkArtifact(java.lang.String name) {
        this(name, FlinkArtifactArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlinkArtifact(java.lang.String name, FlinkArtifactArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlinkArtifact(java.lang.String name, FlinkArtifactArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/flinkArtifact:FlinkArtifact", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FlinkArtifact(java.lang.String name, Output<java.lang.String> id, @Nullable FlinkArtifactState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/flinkArtifact:FlinkArtifact", name, state, makeResourceOptions(options, id), false);
    }

    private static FlinkArtifactArgs makeArgs(FlinkArtifactArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlinkArtifactArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlinkArtifact get(java.lang.String name, Output<java.lang.String> id, @Nullable FlinkArtifactState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlinkArtifact(name, id, state, options);
    }
}
