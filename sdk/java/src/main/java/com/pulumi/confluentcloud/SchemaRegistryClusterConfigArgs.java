// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.inputs.SchemaRegistryClusterConfigCredentialsArgs;
import com.pulumi.confluentcloud.inputs.SchemaRegistryClusterConfigSchemaRegistryClusterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchemaRegistryClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchemaRegistryClusterConfigArgs Empty = new SchemaRegistryClusterConfigArgs();

    /**
     * The global Schema Registry compatibility group.
     * 
     */
    @Import(name="compatibilityGroup")
    private @Nullable Output<String> compatibilityGroup;

    /**
     * @return The global Schema Registry compatibility group.
     * 
     */
    public Optional<Output<String>> compatibilityGroup() {
        return Optional.ofNullable(this.compatibilityGroup);
    }

    /**
     * The global Schema Registry compatibility level. Accepted values are: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, and `NONE`. See the [Compatibility Types](https://docs.confluent.io/platform/current/schema-registry/avro.html#compatibility-types) for more details.
     * 
     */
    @Import(name="compatibilityLevel")
    private @Nullable Output<String> compatibilityLevel;

    /**
     * @return The global Schema Registry compatibility level. Accepted values are: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, and `NONE`. See the [Compatibility Types](https://docs.confluent.io/platform/current/schema-registry/avro.html#compatibility-types) for more details.
     * 
     */
    public Optional<Output<String>> compatibilityLevel() {
        return Optional.ofNullable(this.compatibilityLevel);
    }

    /**
     * The Cluster API Credentials.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<SchemaRegistryClusterConfigCredentialsArgs> credentials;

    /**
     * @return The Cluster API Credentials.
     * 
     */
    public Optional<Output<SchemaRegistryClusterConfigCredentialsArgs>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
     * 
     */
    @Import(name="restEndpoint")
    private @Nullable Output<String> restEndpoint;

    /**
     * @return The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
     * 
     */
    public Optional<Output<String>> restEndpoint() {
        return Optional.ofNullable(this.restEndpoint);
    }

    @Import(name="schemaRegistryCluster")
    private @Nullable Output<SchemaRegistryClusterConfigSchemaRegistryClusterArgs> schemaRegistryCluster;

    public Optional<Output<SchemaRegistryClusterConfigSchemaRegistryClusterArgs>> schemaRegistryCluster() {
        return Optional.ofNullable(this.schemaRegistryCluster);
    }

    private SchemaRegistryClusterConfigArgs() {}

    private SchemaRegistryClusterConfigArgs(SchemaRegistryClusterConfigArgs $) {
        this.compatibilityGroup = $.compatibilityGroup;
        this.compatibilityLevel = $.compatibilityLevel;
        this.credentials = $.credentials;
        this.restEndpoint = $.restEndpoint;
        this.schemaRegistryCluster = $.schemaRegistryCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchemaRegistryClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchemaRegistryClusterConfigArgs $;

        public Builder() {
            $ = new SchemaRegistryClusterConfigArgs();
        }

        public Builder(SchemaRegistryClusterConfigArgs defaults) {
            $ = new SchemaRegistryClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compatibilityGroup The global Schema Registry compatibility group.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityGroup(@Nullable Output<String> compatibilityGroup) {
            $.compatibilityGroup = compatibilityGroup;
            return this;
        }

        /**
         * @param compatibilityGroup The global Schema Registry compatibility group.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityGroup(String compatibilityGroup) {
            return compatibilityGroup(Output.of(compatibilityGroup));
        }

        /**
         * @param compatibilityLevel The global Schema Registry compatibility level. Accepted values are: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, and `NONE`. See the [Compatibility Types](https://docs.confluent.io/platform/current/schema-registry/avro.html#compatibility-types) for more details.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityLevel(@Nullable Output<String> compatibilityLevel) {
            $.compatibilityLevel = compatibilityLevel;
            return this;
        }

        /**
         * @param compatibilityLevel The global Schema Registry compatibility level. Accepted values are: `BACKWARD`, `BACKWARD_TRANSITIVE`, `FORWARD`, `FORWARD_TRANSITIVE`, `FULL`, `FULL_TRANSITIVE`, and `NONE`. See the [Compatibility Types](https://docs.confluent.io/platform/current/schema-registry/avro.html#compatibility-types) for more details.
         * 
         * @return builder
         * 
         */
        public Builder compatibilityLevel(String compatibilityLevel) {
            return compatibilityLevel(Output.of(compatibilityLevel));
        }

        /**
         * @param credentials The Cluster API Credentials.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<SchemaRegistryClusterConfigCredentialsArgs> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials The Cluster API Credentials.
         * 
         * @return builder
         * 
         */
        public Builder credentials(SchemaRegistryClusterConfigCredentialsArgs credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param restEndpoint The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
         * 
         * @return builder
         * 
         */
        public Builder restEndpoint(@Nullable Output<String> restEndpoint) {
            $.restEndpoint = restEndpoint;
            return this;
        }

        /**
         * @param restEndpoint The REST endpoint of the Schema Registry cluster, for example, `https://psrc-00000.us-central1.gcp.confluent.cloud:443`).
         * 
         * @return builder
         * 
         */
        public Builder restEndpoint(String restEndpoint) {
            return restEndpoint(Output.of(restEndpoint));
        }

        public Builder schemaRegistryCluster(@Nullable Output<SchemaRegistryClusterConfigSchemaRegistryClusterArgs> schemaRegistryCluster) {
            $.schemaRegistryCluster = schemaRegistryCluster;
            return this;
        }

        public Builder schemaRegistryCluster(SchemaRegistryClusterConfigSchemaRegistryClusterArgs schemaRegistryCluster) {
            return schemaRegistryCluster(Output.of(schemaRegistryCluster));
        }

        public SchemaRegistryClusterConfigArgs build() {
            return $;
        }
    }

}
