// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.StreamGovernanceClusterArgs;
import com.pulumi.confluentcloud.Utilities;
import com.pulumi.confluentcloud.inputs.StreamGovernanceClusterState;
import com.pulumi.confluentcloud.outputs.StreamGovernanceClusterEnvironment;
import com.pulumi.confluentcloud.outputs.StreamGovernanceClusterRegion;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.confluentcloud.Environment;
 * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
 * import com.pulumi.confluentcloud.inputs.GetStreamGovernanceRegionArgs;
 * import com.pulumi.confluentcloud.StreamGovernanceCluster;
 * import com.pulumi.confluentcloud.StreamGovernanceClusterArgs;
 * import com.pulumi.confluentcloud.inputs.StreamGovernanceClusterEnvironmentArgs;
 * import com.pulumi.confluentcloud.inputs.StreamGovernanceClusterRegionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var development = new Environment(&#34;development&#34;);
 * 
 *         final var example = ConfluentcloudFunctions.getStreamGovernanceRegion(GetStreamGovernanceRegionArgs.builder()
 *             .cloud(&#34;AWS&#34;)
 *             .region(&#34;us-east-2&#34;)
 *             .package_(&#34;ESSENTIALS&#34;)
 *             .build());
 * 
 *         var essentials = new StreamGovernanceCluster(&#34;essentials&#34;, StreamGovernanceClusterArgs.builder()        
 *             .package_(example.applyValue(getStreamGovernanceRegionResult -&gt; getStreamGovernanceRegionResult.package()))
 *             .environment(StreamGovernanceClusterEnvironmentArgs.builder()
 *                 .id(development.id())
 *                 .build())
 *             .region(StreamGovernanceClusterRegionArgs.builder()
 *                 .id(example.applyValue(getStreamGovernanceRegionResult -&gt; getStreamGovernanceRegionResult.id()))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * You can import a Stream Governance cluster by using Environment ID and Stream Governance cluster ID, in the format `&lt;Environment ID&gt;/&lt;Stream Governance cluster ID&gt;`, for example$ export CONFLUENT_CLOUD_API_KEY=&#34;&lt;cloud_api_key&gt;&#34; $ export CONFLUENT_CLOUD_API_SECRET=&#34;&lt;cloud_api_secret&gt;&#34;
 * 
 * ```sh
 *  $ pulumi import confluentcloud:index/streamGovernanceCluster:StreamGovernanceCluster example env-abc123/lsrc-abc123
 * ```
 * 
 *  !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 * 
 */
@ResourceType(type="confluentcloud:index/streamGovernanceCluster:StreamGovernanceCluster")
public class StreamGovernanceCluster extends com.pulumi.resources.CustomResource {
    /**
     * (Required String) An API Version of the schema version of the Stream Governance cluster, for example, `stream-governance/v2`.
     * 
     */
    @Export(name="apiVersion", type=String.class, parameters={})
    private Output<String> apiVersion;

    /**
     * @return (Required String) An API Version of the schema version of the Stream Governance cluster, for example, `stream-governance/v2`.
     * 
     */
    public Output<String> apiVersion() {
        return this.apiVersion;
    }
    /**
     * (Required String) The name of the Stream Governance cluster, for example, `Stream Governance Package`.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Required String) The name of the Stream Governance cluster, for example, `Stream Governance Package`.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Export(name="environment", type=StreamGovernanceClusterEnvironment.class, parameters={})
    private Output<StreamGovernanceClusterEnvironment> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Output<StreamGovernanceClusterEnvironment> environment() {
        return this.environment;
    }
    /**
     * (Required String) The HTTP endpoint of the Stream Governance cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
     * 
     */
    @Export(name="httpEndpoint", type=String.class, parameters={})
    private Output<String> httpEndpoint;

    /**
     * @return (Required String) The HTTP endpoint of the Stream Governance cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
     * 
     */
    public Output<String> httpEndpoint() {
        return this.httpEndpoint;
    }
    /**
     * (Required String) A kind of the Stream Governance cluster, for example, `Cluster`.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return (Required String) A kind of the Stream Governance cluster, for example, `Cluster`.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
     * 
     */
    @Export(name="package", type=String.class, parameters={})
    private Output<String> package_;

    /**
     * @return The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
     * 
     */
    public Output<String> package_() {
        return this.package_;
    }
    @Export(name="region", type=StreamGovernanceClusterRegion.class, parameters={})
    private Output<StreamGovernanceClusterRegion> region;

    public Output<StreamGovernanceClusterRegion> region() {
        return this.region;
    }
    /**
     * (Required String) The Confluent Resource Name of the Stream Governance cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
     * 
     */
    @Export(name="resourceName", type=String.class, parameters={})
    private Output<String> resourceName;

    /**
     * @return (Required String) The Confluent Resource Name of the Stream Governance cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamGovernanceCluster(String name) {
        this(name, StreamGovernanceClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamGovernanceCluster(String name, StreamGovernanceClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamGovernanceCluster(String name, StreamGovernanceClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/streamGovernanceCluster:StreamGovernanceCluster", name, args == null ? StreamGovernanceClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StreamGovernanceCluster(String name, Output<String> id, @Nullable StreamGovernanceClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/streamGovernanceCluster:StreamGovernanceCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamGovernanceCluster get(String name, Output<String> id, @Nullable StreamGovernanceClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamGovernanceCluster(name, id, state, options);
    }
}
