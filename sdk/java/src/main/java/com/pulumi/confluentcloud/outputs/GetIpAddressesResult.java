// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetIpAddressesFilter;
import com.pulumi.confluentcloud.outputs.GetIpAddressesIpAddress;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpAddressesResult {
    private @Nullable GetIpAddressesFilter filter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (List of Object) List of schemas. Each schema object exports the following attributes:
     * 
     */
    private List<GetIpAddressesIpAddress> ipAddresses;

    private GetIpAddressesResult() {}
    public Optional<GetIpAddressesFilter> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (List of Object) List of schemas. Each schema object exports the following attributes:
     * 
     */
    public List<GetIpAddressesIpAddress> ipAddresses() {
        return this.ipAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpAddressesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetIpAddressesFilter filter;
        private String id;
        private List<GetIpAddressesIpAddress> ipAddresses;
        public Builder() {}
        public Builder(GetIpAddressesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.ipAddresses = defaults.ipAddresses;
        }

        @CustomType.Setter
        public Builder filter(@Nullable GetIpAddressesFilter filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddresses(List<GetIpAddressesIpAddress> ipAddresses) {
            this.ipAddresses = Objects.requireNonNull(ipAddresses);
            return this;
        }
        public Builder ipAddresses(GetIpAddressesIpAddress... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        public GetIpAddressesResult build() {
            final var o = new GetIpAddressesResult();
            o.filter = filter;
            o.id = id;
            o.ipAddresses = ipAddresses;
            return o;
        }
    }
}
