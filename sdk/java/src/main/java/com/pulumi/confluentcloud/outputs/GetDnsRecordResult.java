// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetDnsRecordEnvironment;
import com.pulumi.confluentcloud.outputs.GetDnsRecordGateway;
import com.pulumi.confluentcloud.outputs.GetDnsRecordPrivateLinkAccessPoint;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDnsRecordResult {
    /**
     * @return (Required String) A human-readable name for the DNS Record.
     * 
     */
    private String displayName;
    /**
     * @return (Required String) The fully qualified domain name of the DNS Record.
     * 
     */
    private String domain;
    private GetDnsRecordEnvironment environment;
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    private List<GetDnsRecordGateway> gateways;
    /**
     * @return (Required String) The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
     * 
     */
    private String id;
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    private List<GetDnsRecordPrivateLinkAccessPoint> privateLinkAccessPoints;

    private GetDnsRecordResult() {}
    /**
     * @return (Required String) A human-readable name for the DNS Record.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return (Required String) The fully qualified domain name of the DNS Record.
     * 
     */
    public String domain() {
        return this.domain;
    }
    public GetDnsRecordEnvironment environment() {
        return this.environment;
    }
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    public List<GetDnsRecordGateway> gateways() {
        return this.gateways;
    }
    /**
     * @return (Required String) The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Required Configuration Block) supports the following:
     * 
     */
    public List<GetDnsRecordPrivateLinkAccessPoint> privateLinkAccessPoints() {
        return this.privateLinkAccessPoints;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDnsRecordResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String domain;
        private GetDnsRecordEnvironment environment;
        private List<GetDnsRecordGateway> gateways;
        private String id;
        private List<GetDnsRecordPrivateLinkAccessPoint> privateLinkAccessPoints;
        public Builder() {}
        public Builder(GetDnsRecordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.domain = defaults.domain;
    	      this.environment = defaults.environment;
    	      this.gateways = defaults.gateways;
    	      this.id = defaults.id;
    	      this.privateLinkAccessPoints = defaults.privateLinkAccessPoints;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDnsRecordResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetDnsRecordResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder environment(GetDnsRecordEnvironment environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetDnsRecordResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder gateways(List<GetDnsRecordGateway> gateways) {
            if (gateways == null) {
              throw new MissingRequiredPropertyException("GetDnsRecordResult", "gateways");
            }
            this.gateways = gateways;
            return this;
        }
        public Builder gateways(GetDnsRecordGateway... gateways) {
            return gateways(List.of(gateways));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDnsRecordResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkAccessPoints(List<GetDnsRecordPrivateLinkAccessPoint> privateLinkAccessPoints) {
            if (privateLinkAccessPoints == null) {
              throw new MissingRequiredPropertyException("GetDnsRecordResult", "privateLinkAccessPoints");
            }
            this.privateLinkAccessPoints = privateLinkAccessPoints;
            return this;
        }
        public Builder privateLinkAccessPoints(GetDnsRecordPrivateLinkAccessPoint... privateLinkAccessPoints) {
            return privateLinkAccessPoints(List.of(privateLinkAccessPoints));
        }
        public GetDnsRecordResult build() {
            final var _resultValue = new GetDnsRecordResult();
            _resultValue.displayName = displayName;
            _resultValue.domain = domain;
            _resultValue.environment = environment;
            _resultValue.gateways = gateways;
            _resultValue.id = id;
            _resultValue.privateLinkAccessPoints = privateLinkAccessPoints;
            return _resultValue;
        }
    }
}
