// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PeeringGcp {
    /**
     * @return The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
     * 
     */
    private final @Nullable Boolean importCustomRoutes;
    /**
     * @return The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
     * 
     */
    private final String project;
    /**
     * @return The VPC network name that you&#39;re peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
     * 
     */
    private final String vpcNetwork;

    @CustomType.Constructor
    private PeeringGcp(
        @CustomType.Parameter("importCustomRoutes") @Nullable Boolean importCustomRoutes,
        @CustomType.Parameter("project") String project,
        @CustomType.Parameter("vpcNetwork") String vpcNetwork) {
        this.importCustomRoutes = importCustomRoutes;
        this.project = project;
        this.vpcNetwork = vpcNetwork;
    }

    /**
     * @return The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
     * 
     */
    public Optional<Boolean> importCustomRoutes() {
        return Optional.ofNullable(this.importCustomRoutes);
    }
    /**
     * @return The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The VPC network name that you&#39;re peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
     * 
     */
    public String vpcNetwork() {
        return this.vpcNetwork;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PeeringGcp defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean importCustomRoutes;
        private String project;
        private String vpcNetwork;

        public Builder() {
    	      // Empty
        }

        public Builder(PeeringGcp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.importCustomRoutes = defaults.importCustomRoutes;
    	      this.project = defaults.project;
    	      this.vpcNetwork = defaults.vpcNetwork;
        }

        public Builder importCustomRoutes(@Nullable Boolean importCustomRoutes) {
            this.importCustomRoutes = importCustomRoutes;
            return this;
        }
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public Builder vpcNetwork(String vpcNetwork) {
            this.vpcNetwork = Objects.requireNonNull(vpcNetwork);
            return this;
        }        public PeeringGcp build() {
            return new PeeringGcp(importCustomRoutes, project, vpcNetwork);
        }
    }
}
