// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGatewayGcpPeeringGateway {
    /**
     * @return (Required String) The IAM principal used by the GCP Peering Gateway.
     * 
     */
    private String iamPrincipal;
    /**
     * @return (Required String) GCP region of the Peering Gateway.
     * 
     */
    private String region;

    private GetGatewayGcpPeeringGateway() {}
    /**
     * @return (Required String) The IAM principal used by the GCP Peering Gateway.
     * 
     */
    public String iamPrincipal() {
        return this.iamPrincipal;
    }
    /**
     * @return (Required String) GCP region of the Peering Gateway.
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayGcpPeeringGateway defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String iamPrincipal;
        private String region;
        public Builder() {}
        public Builder(GetGatewayGcpPeeringGateway defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.iamPrincipal = defaults.iamPrincipal;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder iamPrincipal(String iamPrincipal) {
            if (iamPrincipal == null) {
              throw new MissingRequiredPropertyException("GetGatewayGcpPeeringGateway", "iamPrincipal");
            }
            this.iamPrincipal = iamPrincipal;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetGatewayGcpPeeringGateway", "region");
            }
            this.region = region;
            return this;
        }
        public GetGatewayGcpPeeringGateway build() {
            final var _resultValue = new GetGatewayGcpPeeringGateway();
            _resultValue.iamPrincipal = iamPrincipal;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
