// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.confluentcloud.inputs.KafkaClientQuotaEnvironmentArgs;
import com.pulumi.confluentcloud.inputs.KafkaClientQuotaKafkaClusterArgs;
import com.pulumi.confluentcloud.inputs.KafkaClientQuotaThroughputArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaClientQuotaState extends com.pulumi.resources.ResourceArgs {

    public static final KafkaClientQuotaState Empty = new KafkaClientQuotaState();

    /**
     * The description of the Kafka Client Quota.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Kafka Client Quota.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the Kafka Client Quota.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Kafka Client Quota.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<KafkaClientQuotaEnvironmentArgs> environment;

    /**
     * @return Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     * 
     */
    public Optional<Output<KafkaClientQuotaEnvironmentArgs>> environment() {
        return Optional.ofNullable(this.environment);
    }

    @Import(name="kafkaCluster")
    private @Nullable Output<KafkaClientQuotaKafkaClusterArgs> kafkaCluster;

    public Optional<Output<KafkaClientQuotaKafkaClusterArgs>> kafkaCluster() {
        return Optional.ofNullable(this.kafkaCluster);
    }

    /**
     * The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, `&#34;&lt;default&gt;&#34;`, to represent the default quota for all users and service accounts.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<String>> principals;

    /**
     * @return The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, `&#34;&lt;default&gt;&#34;`, to represent the default quota for all users and service accounts.
     * 
     */
    public Optional<Output<List<String>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * Block for representing a Kafka Quota.
     * 
     */
    @Import(name="throughput")
    private @Nullable Output<KafkaClientQuotaThroughputArgs> throughput;

    /**
     * @return Block for representing a Kafka Quota.
     * 
     */
    public Optional<Output<KafkaClientQuotaThroughputArgs>> throughput() {
        return Optional.ofNullable(this.throughput);
    }

    private KafkaClientQuotaState() {}

    private KafkaClientQuotaState(KafkaClientQuotaState $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.environment = $.environment;
        this.kafkaCluster = $.kafkaCluster;
        this.principals = $.principals;
        this.throughput = $.throughput;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaClientQuotaState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaClientQuotaState $;

        public Builder() {
            $ = new KafkaClientQuotaState();
        }

        public Builder(KafkaClientQuotaState defaults) {
            $ = new KafkaClientQuotaState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Kafka Client Quota.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Kafka Client Quota.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The name of the Kafka Client Quota.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Kafka Client Quota.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<KafkaClientQuotaEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
         * 
         * @return builder
         * 
         */
        public Builder environment(KafkaClientQuotaEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        public Builder kafkaCluster(@Nullable Output<KafkaClientQuotaKafkaClusterArgs> kafkaCluster) {
            $.kafkaCluster = kafkaCluster;
            return this;
        }

        public Builder kafkaCluster(KafkaClientQuotaKafkaClusterArgs kafkaCluster) {
            return kafkaCluster(Output.of(kafkaCluster));
        }

        /**
         * @param principals The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, `&#34;&lt;default&gt;&#34;`, to represent the default quota for all users and service accounts.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<String>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, `&#34;&lt;default&gt;&#34;`, to represent the default quota for all users and service accounts.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<String> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, `&#34;&lt;default&gt;&#34;`, to represent the default quota for all users and service accounts.
         * 
         * @return builder
         * 
         */
        public Builder principals(String... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param throughput Block for representing a Kafka Quota.
         * 
         * @return builder
         * 
         */
        public Builder throughput(@Nullable Output<KafkaClientQuotaThroughputArgs> throughput) {
            $.throughput = throughput;
            return this;
        }

        /**
         * @param throughput Block for representing a Kafka Quota.
         * 
         * @return builder
         * 
         */
        public Builder throughput(KafkaClientQuotaThroughputArgs throughput) {
            return throughput(Output.of(throughput));
        }

        public KafkaClientQuotaState build() {
            return $;
        }
    }

}
