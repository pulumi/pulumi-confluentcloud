// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.outputs;

import com.pulumi.confluentcloud.outputs.GetClusterLinkCredentials;
import com.pulumi.confluentcloud.outputs.GetClusterLinkKafkaCluster;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterLinkResult {
    /**
     * @return (Required String) The actual Cluster Link ID assigned from Confluent Cloud that uniquely represents a link between two Kafka clusters, for example, `qz0HDEV-Qz2B5aPFpcWQJQ`.
     * 
     */
    private String clusterLinkId;
    /**
     * @return (Optional Map) The custom cluster link settings retrieved:
     * 
     */
    private Map<String,String> config;
    private @Nullable GetClusterLinkCredentials credentials;
    /**
     * @return (Required String) The composite ID of the Cluster Link data-source, in the format `&lt;Kafka cluster ID&gt;/&lt;Cluster link name&gt;`, for example, `lkc-abc123/my-cluster-link`.
     * 
     */
    private String id;
    private @Nullable GetClusterLinkKafkaCluster kafkaCluster;
    private String linkName;
    /**
     * @return (Required String) The current state of the Cluster Link.
     * 
     */
    private String linkState;
    private @Nullable String restEndpoint;

    private GetClusterLinkResult() {}
    /**
     * @return (Required String) The actual Cluster Link ID assigned from Confluent Cloud that uniquely represents a link between two Kafka clusters, for example, `qz0HDEV-Qz2B5aPFpcWQJQ`.
     * 
     */
    public String clusterLinkId() {
        return this.clusterLinkId;
    }
    /**
     * @return (Optional Map) The custom cluster link settings retrieved:
     * 
     */
    public Map<String,String> config() {
        return this.config;
    }
    public Optional<GetClusterLinkCredentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }
    /**
     * @return (Required String) The composite ID of the Cluster Link data-source, in the format `&lt;Kafka cluster ID&gt;/&lt;Cluster link name&gt;`, for example, `lkc-abc123/my-cluster-link`.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<GetClusterLinkKafkaCluster> kafkaCluster() {
        return Optional.ofNullable(this.kafkaCluster);
    }
    public String linkName() {
        return this.linkName;
    }
    /**
     * @return (Required String) The current state of the Cluster Link.
     * 
     */
    public String linkState() {
        return this.linkState;
    }
    public Optional<String> restEndpoint() {
        return Optional.ofNullable(this.restEndpoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterLinkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterLinkId;
        private Map<String,String> config;
        private @Nullable GetClusterLinkCredentials credentials;
        private String id;
        private @Nullable GetClusterLinkKafkaCluster kafkaCluster;
        private String linkName;
        private String linkState;
        private @Nullable String restEndpoint;
        public Builder() {}
        public Builder(GetClusterLinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterLinkId = defaults.clusterLinkId;
    	      this.config = defaults.config;
    	      this.credentials = defaults.credentials;
    	      this.id = defaults.id;
    	      this.kafkaCluster = defaults.kafkaCluster;
    	      this.linkName = defaults.linkName;
    	      this.linkState = defaults.linkState;
    	      this.restEndpoint = defaults.restEndpoint;
        }

        @CustomType.Setter
        public Builder clusterLinkId(String clusterLinkId) {
            if (clusterLinkId == null) {
              throw new MissingRequiredPropertyException("GetClusterLinkResult", "clusterLinkId");
            }
            this.clusterLinkId = clusterLinkId;
            return this;
        }
        @CustomType.Setter
        public Builder config(Map<String,String> config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetClusterLinkResult", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable GetClusterLinkCredentials credentials) {

            this.credentials = credentials;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterLinkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaCluster(@Nullable GetClusterLinkKafkaCluster kafkaCluster) {

            this.kafkaCluster = kafkaCluster;
            return this;
        }
        @CustomType.Setter
        public Builder linkName(String linkName) {
            if (linkName == null) {
              throw new MissingRequiredPropertyException("GetClusterLinkResult", "linkName");
            }
            this.linkName = linkName;
            return this;
        }
        @CustomType.Setter
        public Builder linkState(String linkState) {
            if (linkState == null) {
              throw new MissingRequiredPropertyException("GetClusterLinkResult", "linkState");
            }
            this.linkState = linkState;
            return this;
        }
        @CustomType.Setter
        public Builder restEndpoint(@Nullable String restEndpoint) {

            this.restEndpoint = restEndpoint;
            return this;
        }
        public GetClusterLinkResult build() {
            final var _resultValue = new GetClusterLinkResult();
            _resultValue.clusterLinkId = clusterLinkId;
            _resultValue.config = config;
            _resultValue.credentials = credentials;
            _resultValue.id = id;
            _resultValue.kafkaCluster = kafkaCluster;
            _resultValue.linkName = linkName;
            _resultValue.linkState = linkState;
            _resultValue.restEndpoint = restEndpoint;
            return _resultValue;
        }
    }
}
