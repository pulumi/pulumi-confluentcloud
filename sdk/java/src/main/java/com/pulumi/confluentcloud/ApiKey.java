// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.ApiKeyArgs;
import com.pulumi.confluentcloud.Utilities;
import com.pulumi.confluentcloud.inputs.ApiKeyState;
import com.pulumi.confluentcloud.outputs.ApiKeyManagedResource;
import com.pulumi.confluentcloud.outputs.ApiKeyOwner;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Example Kafka API Key
 * 
 * ### Example ksqlDB API Key
 * 
 * ### Example Schema Registry API Key
 * 
 * ### Example Flink API Key
 * 
 * ### Example Tableflow API Key
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.confluentcloud.ApiKey;
 * import com.pulumi.confluentcloud.ApiKeyArgs;
 * import com.pulumi.confluentcloud.inputs.ApiKeyOwnerArgs;
 * import com.pulumi.confluentcloud.inputs.ApiKeyManagedResourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var env_manager_tableflow_api_key = new ApiKey("env-manager-tableflow-api-key", ApiKeyArgs.builder()
 *             .displayName("env-manager-tableflow-api-key")
 *             .description("Tableflow API Key that is owned by 'env-manager' service account")
 *             .owner(ApiKeyOwnerArgs.builder()
 *                 .id(env_manager.id())
 *                 .apiVersion(env_manager.apiVersion())
 *                 .kind(env_manager.kind())
 *                 .build())
 *             .managedResource(ApiKeyManagedResourceArgs.builder()
 *                 .id("tableflow")
 *                 .apiVersion("tableflow/v1")
 *                 .kind("Tableflow")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Example Cloud API Key
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.confluentcloud.ApiKey;
 * import com.pulumi.confluentcloud.ApiKeyArgs;
 * import com.pulumi.confluentcloud.inputs.ApiKeyOwnerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var env_manager_cloud_api_key = new ApiKey("env-manager-cloud-api-key", ApiKeyArgs.builder()
 *             .displayName("env-manager-cloud-api-key")
 *             .description("Cloud API Key that is owned by 'env-manager' service account")
 *             .owner(ApiKeyOwnerArgs.builder()
 *                 .id(env_manager.id())
 *                 .apiVersion(env_manager.apiVersion())
 *                 .kind(env_manager.kind())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Getting Started
 * 
 * The following end-to-end examples might help to get started with `confluentcloud.ApiKey` resource:
 *   * basic-kafka-acls: _Basic_ Kafka cluster with authorization using ACLs
 *   * basic-kafka-acls-with-alias: _Basic_ Kafka cluster with authorization using ACLs
 *   * standard-kafka-acls: _Standard_ Kafka cluster with authorization using ACLs
 *   * standard-kafka-rbac: _Standard_ Kafka cluster with authorization using RBAC
 *   * dedicated-public-kafka-acls: _Dedicated_ Kafka cluster that is accessible over the public internet with authorization using ACLs
 *   * dedicated-public-kafka-rbac: _Dedicated_ Kafka cluster that is accessible over the public internet with authorization using RBAC
 *   * dedicated-privatelink-aws-kafka-acls: _Dedicated_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using ACLs
 *   * dedicated-privatelink-aws-kafka-rbac: _Dedicated_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using RBAC
 *   * dedicated-privatelink-azure-kafka-rbac: _Dedicated_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using RBAC
 *   * dedicated-privatelink-azure-kafka-acls: _Dedicated_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using ACLs
 *   * dedicated-private-service-connect-gcp-kafka-acls: _Dedicated_ Kafka cluster on GCP that is accessible via Private Service Connect connections with authorization using ACLs
 *   * dedicated-private-service-connect-gcp-kafka-rbac: _Dedicated_ Kafka cluster on GCP that is accessible via Private Service Connect connections with authorization using RBAC
 *   * dedicated-vnet-peering-azure-kafka-acls: _Dedicated_ Kafka cluster on Azure that is accessible via VPC Peering connections with authorization using ACLs
 *   * dedicated-vnet-peering-azure-kafka-rbac: _Dedicated_ Kafka cluster on Azure that is accessible via VPC Peering connections with authorization using RBAC
 *   * dedicated-vpc-peering-aws-kafka-acls: _Dedicated_ Kafka cluster on AWS that is accessible via VPC Peering connections with authorization using ACLs
 *   * dedicated-vpc-peering-aws-kafka-rbac: _Dedicated_ Kafka cluster on AWS that is accessible via VPC Peering connections with authorization using RBAC
 *   * dedicated-vpc-peering-gcp-kafka-acls: _Dedicated_ Kafka cluster on GCP that is accessible via VPC Peering connections with authorization using ACLs
 *   * dedicated-vpc-peering-gcp-kafka-rbac: _Dedicated_ Kafka cluster on GCP that is accessible via VPC Peering connections with authorization using RBAC
 *   * dedicated-transit-gateway-attachment-aws-kafka-acls: _Dedicated_ Kafka cluster on AWS that is accessible via Transit Gateway Endpoint with authorization using ACLs
 *   * dedicated-transit-gateway-attachment-aws-kafka-rbac: _Dedicated_ Kafka cluster on AWS that is accessible via Transit Gateway Endpoint with authorization using RBAC
 *   * enterprise-privatelinkattachment-aws-kafka-acls: _Enterprise_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using ACLs
 * 
 * ## Import
 * 
 * You can import a Cluster API Key by using the Environment ID and Cluster API Key ID in the format `&lt;Environment ID&gt;/&lt;Cluster API Key ID&gt;`, for example:
 * 
 * $ export CONFLUENT_CLOUD_API_KEY=&#34;&lt;cloud_api_key&gt;&#34;
 * 
 * $ export CONFLUENT_CLOUD_API_SECRET=&#34;&lt;cloud_api_secret&gt;&#34;
 * 
 * $ export API_KEY_SECRET=&#34;&lt;api_key_secret&gt;&#34;
 * 
 * Option #1: Cluster API Key
 * 
 * ```sh
 * $ pulumi import confluentcloud:index/apiKey:ApiKey example_kafka_api_key &#34;env-abc123/UTT6WDRXX7FHD2GV&#34;
 * ```
 * 
 * You can import a Cloud or Tableflow API Key by using Cloud or Tableflow API Key ID, for example:
 * 
 * $ export CONFLUENT_CLOUD_API_KEY=&#34;&lt;cloud_api_key&gt;&#34;
 * 
 * $ export CONFLUENT_CLOUD_API_SECRET=&#34;&lt;cloud_api_secret&gt;&#34;
 * 
 * $ export API_KEY_SECRET=&#34;&lt;api_key_secret&gt;&#34;
 * 
 * Option #2: Cloud or Tableflow API Key
 * 
 * ```sh
 * $ pulumi import confluentcloud:index/apiKey:ApiKey example_cloud_api_key &#34;4UEXOMMWIBE5KZQG&#34;
 * ```
 * 
 * !&gt; **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 * 
 */
@ResourceType(type="confluentcloud:index/apiKey:ApiKey")
public class ApiKey extends com.pulumi.resources.CustomResource {
    /**
     * A free-form description of the API Account.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A free-form description of the API Account.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * An optional flag to disable wait-for-readiness on create. Its primary use case is for Cluster API Keys for private networking options when readiness check fails. Must be unset when importing. Defaults to `false`.
     * 
     */
    @Export(name="disableWaitForReady", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableWaitForReady;

    /**
     * @return An optional flag to disable wait-for-readiness on create. Its primary use case is for Cluster API Keys for private networking options when readiness check fails. Must be unset when importing. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> disableWaitForReady() {
        return Codegen.optional(this.disableWaitForReady);
    }
    /**
     * A human-readable name for the API Key.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return A human-readable name for the API Key.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The resource associated with this object. The only resource that is supported is &#39;cmk.v2.Cluster&#39;, &#39;srcm.v2.Cluster&#39;, &#39;srcm.v3.Cluster&#39;.
     * 
     */
    @Export(name="managedResource", refs={ApiKeyManagedResource.class}, tree="[0]")
    private Output</* @Nullable */ ApiKeyManagedResource> managedResource;

    /**
     * @return The resource associated with this object. The only resource that is supported is &#39;cmk.v2.Cluster&#39;, &#39;srcm.v2.Cluster&#39;, &#39;srcm.v3.Cluster&#39;.
     * 
     */
    public Output<Optional<ApiKeyManagedResource>> managedResource() {
        return Codegen.optional(this.managedResource);
    }
    /**
     * The owner to which the API Key belongs. The owner can be one of &#39;iam.v2.User&#39;, &#39;iam.v2.ServiceAccount&#39;.
     * 
     */
    @Export(name="owner", refs={ApiKeyOwner.class}, tree="[0]")
    private Output<ApiKeyOwner> owner;

    /**
     * @return The owner to which the API Key belongs. The owner can be one of &#39;iam.v2.User&#39;, &#39;iam.v2.ServiceAccount&#39;.
     * 
     */
    public Output<ApiKeyOwner> owner() {
        return this.owner;
    }
    /**
     * (Required String, Sensitive) The secret of the API Key.
     * 
     */
    @Export(name="secret", refs={String.class}, tree="[0]")
    private Output<String> secret;

    /**
     * @return (Required String, Sensitive) The secret of the API Key.
     * 
     */
    public Output<String> secret() {
        return this.secret;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApiKey(java.lang.String name) {
        this(name, ApiKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApiKey(java.lang.String name, ApiKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApiKey(java.lang.String name, ApiKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/apiKey:ApiKey", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ApiKey(java.lang.String name, Output<java.lang.String> id, @Nullable ApiKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("confluentcloud:index/apiKey:ApiKey", name, state, makeResourceOptions(options, id), false);
    }

    private static ApiKeyArgs makeArgs(ApiKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ApiKeyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApiKey get(java.lang.String name, Output<java.lang.String> id, @Nullable ApiKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApiKey(name, id, state, options);
    }
}
