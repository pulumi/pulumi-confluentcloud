// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ByokKeyAzureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ByokKeyAzureArgs Empty = new ByokKeyAzureArgs();

    /**
     * (Optional String) The Application ID created for this key-environment combination.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return (Optional String) The Application ID created for this key-environment combination.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * The unique Key Object Identifier URL of an Azure Key Vault key.
     * 
     */
    @Import(name="keyIdentifier", required=true)
    private Output<String> keyIdentifier;

    /**
     * @return The unique Key Object Identifier URL of an Azure Key Vault key.
     * 
     */
    public Output<String> keyIdentifier() {
        return this.keyIdentifier;
    }

    /**
     * Key Vault ID containing the key.
     * 
     */
    @Import(name="keyVaultId", required=true)
    private Output<String> keyVaultId;

    /**
     * @return Key Vault ID containing the key.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }

    /**
     * Tenant ID (uuid) hosting the Key Vault containing the key.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return Tenant ID (uuid) hosting the Key Vault containing the key.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private ByokKeyAzureArgs() {}

    private ByokKeyAzureArgs(ByokKeyAzureArgs $) {
        this.applicationId = $.applicationId;
        this.keyIdentifier = $.keyIdentifier;
        this.keyVaultId = $.keyVaultId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ByokKeyAzureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ByokKeyAzureArgs $;

        public Builder() {
            $ = new ByokKeyAzureArgs();
        }

        public Builder(ByokKeyAzureArgs defaults) {
            $ = new ByokKeyAzureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId (Optional String) The Application ID created for this key-environment combination.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId (Optional String) The Application ID created for this key-environment combination.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param keyIdentifier The unique Key Object Identifier URL of an Azure Key Vault key.
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(Output<String> keyIdentifier) {
            $.keyIdentifier = keyIdentifier;
            return this;
        }

        /**
         * @param keyIdentifier The unique Key Object Identifier URL of an Azure Key Vault key.
         * 
         * @return builder
         * 
         */
        public Builder keyIdentifier(String keyIdentifier) {
            return keyIdentifier(Output.of(keyIdentifier));
        }

        /**
         * @param keyVaultId Key Vault ID containing the key.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(Output<String> keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultId Key Vault ID containing the key.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(String keyVaultId) {
            return keyVaultId(Output.of(keyVaultId));
        }

        /**
         * @param tenantId Tenant ID (uuid) hosting the Key Vault containing the key.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Tenant ID (uuid) hosting the Key Vault containing the key.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public ByokKeyAzureArgs build() {
            if ($.keyIdentifier == null) {
                throw new MissingRequiredPropertyException("ByokKeyAzureArgs", "keyIdentifier");
            }
            if ($.keyVaultId == null) {
                throw new MissingRequiredPropertyException("ByokKeyAzureArgs", "keyVaultId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("ByokKeyAzureArgs", "tenantId");
            }
            return $;
        }
    }

}
