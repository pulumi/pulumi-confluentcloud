// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.confluentcloud;

import com.pulumi.confluentcloud.Utilities;
import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
import com.pulumi.confluentcloud.inputs.GetEnvironmentPlainArgs;
import com.pulumi.confluentcloud.inputs.GetIdentityPoolArgs;
import com.pulumi.confluentcloud.inputs.GetIdentityPoolPlainArgs;
import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
import com.pulumi.confluentcloud.inputs.GetIdentityProviderPlainArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaClientQuotaArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaClientQuotaPlainArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaClusterArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaClusterPlainArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaTopicArgs;
import com.pulumi.confluentcloud.inputs.GetKafkaTopicPlainArgs;
import com.pulumi.confluentcloud.inputs.GetKsqlClusterArgs;
import com.pulumi.confluentcloud.inputs.GetKsqlClusterPlainArgs;
import com.pulumi.confluentcloud.inputs.GetNetworkArgs;
import com.pulumi.confluentcloud.inputs.GetNetworkPlainArgs;
import com.pulumi.confluentcloud.inputs.GetPeeringArgs;
import com.pulumi.confluentcloud.inputs.GetPeeringPlainArgs;
import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessArgs;
import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessPlainArgs;
import com.pulumi.confluentcloud.inputs.GetRoleBindingArgs;
import com.pulumi.confluentcloud.inputs.GetRoleBindingPlainArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaPlainArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterConfigArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterConfigPlainArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterModeArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterModePlainArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterPlainArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryRegionArgs;
import com.pulumi.confluentcloud.inputs.GetSchemaRegistryRegionPlainArgs;
import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
import com.pulumi.confluentcloud.inputs.GetServiceAccountPlainArgs;
import com.pulumi.confluentcloud.inputs.GetSubjectConfigArgs;
import com.pulumi.confluentcloud.inputs.GetSubjectConfigPlainArgs;
import com.pulumi.confluentcloud.inputs.GetSubjectModeArgs;
import com.pulumi.confluentcloud.inputs.GetSubjectModePlainArgs;
import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentArgs;
import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentPlainArgs;
import com.pulumi.confluentcloud.inputs.GetUserArgs;
import com.pulumi.confluentcloud.inputs.GetUserPlainArgs;
import com.pulumi.confluentcloud.outputs.GetEnvironmentResult;
import com.pulumi.confluentcloud.outputs.GetIdentityPoolResult;
import com.pulumi.confluentcloud.outputs.GetIdentityProviderResult;
import com.pulumi.confluentcloud.outputs.GetKafkaClientQuotaResult;
import com.pulumi.confluentcloud.outputs.GetKafkaClusterResult;
import com.pulumi.confluentcloud.outputs.GetKafkaTopicResult;
import com.pulumi.confluentcloud.outputs.GetKsqlClusterResult;
import com.pulumi.confluentcloud.outputs.GetNetworkResult;
import com.pulumi.confluentcloud.outputs.GetOrganizationResult;
import com.pulumi.confluentcloud.outputs.GetPeeringResult;
import com.pulumi.confluentcloud.outputs.GetPrivateLinkAccessResult;
import com.pulumi.confluentcloud.outputs.GetRoleBindingResult;
import com.pulumi.confluentcloud.outputs.GetSchemaRegistryClusterConfigResult;
import com.pulumi.confluentcloud.outputs.GetSchemaRegistryClusterModeResult;
import com.pulumi.confluentcloud.outputs.GetSchemaRegistryClusterResult;
import com.pulumi.confluentcloud.outputs.GetSchemaRegistryRegionResult;
import com.pulumi.confluentcloud.outputs.GetSchemaResult;
import com.pulumi.confluentcloud.outputs.GetServiceAccountResult;
import com.pulumi.confluentcloud.outputs.GetSubjectConfigResult;
import com.pulumi.confluentcloud.outputs.GetSubjectModeResult;
import com.pulumi.confluentcloud.outputs.GetTransitGatewayAttachmentResult;
import com.pulumi.confluentcloud.outputs.GetUserResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class ConfluentcloudFunctions {
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Environment` describes an Environment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .id(&#34;env-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult));
     *         final var exampleUsingNameEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .displayName(&#34;stag&#34;)
     *             .build());
     * 
     *         final var exampleUsingNameServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingNameServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult.id())))
     *             .roleName(&#34;EnvironmentAdmin&#34;)
     *             .crnPattern(exampleUsingNameEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult.resourceName()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment() {
        return getEnvironment(GetEnvironmentArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Environment` describes an Environment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .id(&#34;env-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult));
     *         final var exampleUsingNameEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .displayName(&#34;stag&#34;)
     *             .build());
     * 
     *         final var exampleUsingNameServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingNameServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult.id())))
     *             .roleName(&#34;EnvironmentAdmin&#34;)
     *             .crnPattern(exampleUsingNameEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult.resourceName()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain() {
        return getEnvironmentPlain(GetEnvironmentPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Environment` describes an Environment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .id(&#34;env-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult));
     *         final var exampleUsingNameEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .displayName(&#34;stag&#34;)
     *             .build());
     * 
     *         final var exampleUsingNameServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingNameServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult.id())))
     *             .roleName(&#34;EnvironmentAdmin&#34;)
     *             .crnPattern(exampleUsingNameEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult.resourceName()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args) {
        return getEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Environment` describes an Environment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .id(&#34;env-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult));
     *         final var exampleUsingNameEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .displayName(&#34;stag&#34;)
     *             .build());
     * 
     *         final var exampleUsingNameServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingNameServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult.id())))
     *             .roleName(&#34;EnvironmentAdmin&#34;)
     *             .crnPattern(exampleUsingNameEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult.resourceName()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args) {
        return getEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Environment` describes an Environment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .id(&#34;env-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult));
     *         final var exampleUsingNameEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .displayName(&#34;stag&#34;)
     *             .build());
     * 
     *         final var exampleUsingNameServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingNameServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult.id())))
     *             .roleName(&#34;EnvironmentAdmin&#34;)
     *             .crnPattern(exampleUsingNameEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult.resourceName()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Environment` describes an Environment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetEnvironmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .id(&#34;env-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult));
     *         final var exampleUsingNameEnvironment = ConfluentcloudFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .displayName(&#34;stag&#34;)
     *             .build());
     * 
     *         final var exampleUsingNameServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingNameServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult.id())))
     *             .roleName(&#34;EnvironmentAdmin&#34;)
     *             .crnPattern(exampleUsingNameEnvironment.applyValue(getEnvironmentResult -&gt; getEnvironmentResult.resourceName()))
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityPool` describes an Identity Pool data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolArgs;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .id(&#34;pool-xyz456&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *         final var exampleUsingNameIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .displayName(&#34;My Identity Pool&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIdentityPoolResult> getIdentityPool(GetIdentityPoolArgs args) {
        return getIdentityPool(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityPool` describes an Identity Pool data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolArgs;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .id(&#34;pool-xyz456&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *         final var exampleUsingNameIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .displayName(&#34;My Identity Pool&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIdentityPoolResult> getIdentityPoolPlain(GetIdentityPoolPlainArgs args) {
        return getIdentityPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityPool` describes an Identity Pool data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolArgs;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .id(&#34;pool-xyz456&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *         final var exampleUsingNameIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .displayName(&#34;My Identity Pool&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIdentityPoolResult> getIdentityPool(GetIdentityPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getIdentityPool:getIdentityPool", TypeShape.of(GetIdentityPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityPool` describes an Identity Pool data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolArgs;
     * import com.pulumi.confluentcloud.inputs.GetIdentityPoolIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .id(&#34;pool-xyz456&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *         final var exampleUsingNameIdentityPool = ConfluentcloudFunctions.getIdentityPool(GetIdentityPoolArgs.builder()
     *             .displayName(&#34;My Identity Pool&#34;)
     *             .identityProvider(GetIdentityPoolIdentityProviderArgs.builder()
     *                 .id(&#34;op-abc123&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityPool.applyValue(getIdentityPoolResult -&gt; getIdentityPoolResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIdentityPoolResult> getIdentityPoolPlain(GetIdentityPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getIdentityPool:getIdentityPool", TypeShape.of(GetIdentityPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .id(&#34;op-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *         final var exampleUsingNameIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .displayName(&#34;My OIDC Provider: Azure AD&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIdentityProviderResult> getIdentityProvider() {
        return getIdentityProvider(GetIdentityProviderArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .id(&#34;op-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *         final var exampleUsingNameIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .displayName(&#34;My OIDC Provider: Azure AD&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIdentityProviderResult> getIdentityProviderPlain() {
        return getIdentityProviderPlain(GetIdentityProviderPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .id(&#34;op-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *         final var exampleUsingNameIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .displayName(&#34;My OIDC Provider: Azure AD&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIdentityProviderResult> getIdentityProvider(GetIdentityProviderArgs args) {
        return getIdentityProvider(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .id(&#34;op-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *         final var exampleUsingNameIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .displayName(&#34;My OIDC Provider: Azure AD&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIdentityProviderResult> getIdentityProviderPlain(GetIdentityProviderPlainArgs args) {
        return getIdentityProviderPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .id(&#34;op-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *         final var exampleUsingNameIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .displayName(&#34;My OIDC Provider: Azure AD&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetIdentityProviderResult> getIdentityProvider(GetIdentityProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getIdentityProvider:getIdentityProvider", TypeShape.of(GetIdentityProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetIdentityProviderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .id(&#34;op-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *         final var exampleUsingNameIdentityProvider = ConfluentcloudFunctions.getIdentityProvider(GetIdentityProviderArgs.builder()
     *             .displayName(&#34;My OIDC Provider: Azure AD&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameIdentityProvider.applyValue(getIdentityProviderResult -&gt; getIdentityProviderResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetIdentityProviderResult> getIdentityProviderPlain(GetIdentityProviderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getIdentityProvider:getIdentityProvider", TypeShape.of(GetIdentityProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaClientQuota` describes a Kafka Client Quota.
     * 
     * &gt; **Note:** See [Control application usage with Client Quotas](https://docs.confluent.io/cloud/current/clusters/client-quotas.html#control-application-usage-with-client-quotas) for more details.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClientQuotaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaClientQuota = ConfluentcloudFunctions.getKafkaClientQuota(GetKafkaClientQuotaArgs.builder()
     *             .id(&#34;cq-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleKafkaClientQuota.applyValue(getKafkaClientQuotaResult -&gt; getKafkaClientQuotaResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKafkaClientQuotaResult> getKafkaClientQuota(GetKafkaClientQuotaArgs args) {
        return getKafkaClientQuota(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaClientQuota` describes a Kafka Client Quota.
     * 
     * &gt; **Note:** See [Control application usage with Client Quotas](https://docs.confluent.io/cloud/current/clusters/client-quotas.html#control-application-usage-with-client-quotas) for more details.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClientQuotaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaClientQuota = ConfluentcloudFunctions.getKafkaClientQuota(GetKafkaClientQuotaArgs.builder()
     *             .id(&#34;cq-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleKafkaClientQuota.applyValue(getKafkaClientQuotaResult -&gt; getKafkaClientQuotaResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKafkaClientQuotaResult> getKafkaClientQuotaPlain(GetKafkaClientQuotaPlainArgs args) {
        return getKafkaClientQuotaPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaClientQuota` describes a Kafka Client Quota.
     * 
     * &gt; **Note:** See [Control application usage with Client Quotas](https://docs.confluent.io/cloud/current/clusters/client-quotas.html#control-application-usage-with-client-quotas) for more details.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClientQuotaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaClientQuota = ConfluentcloudFunctions.getKafkaClientQuota(GetKafkaClientQuotaArgs.builder()
     *             .id(&#34;cq-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleKafkaClientQuota.applyValue(getKafkaClientQuotaResult -&gt; getKafkaClientQuotaResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKafkaClientQuotaResult> getKafkaClientQuota(GetKafkaClientQuotaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getKafkaClientQuota:getKafkaClientQuota", TypeShape.of(GetKafkaClientQuotaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaClientQuota` describes a Kafka Client Quota.
     * 
     * &gt; **Note:** See [Control application usage with Client Quotas](https://docs.confluent.io/cloud/current/clusters/client-quotas.html#control-application-usage-with-client-quotas) for more details.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClientQuotaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleKafkaClientQuota = ConfluentcloudFunctions.getKafkaClientQuota(GetKafkaClientQuotaArgs.builder()
     *             .id(&#34;cq-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleKafkaClientQuota.applyValue(getKafkaClientQuotaResult -&gt; getKafkaClientQuotaResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKafkaClientQuotaResult> getKafkaClientQuotaPlain(GetKafkaClientQuotaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getKafkaClientQuota:getKafkaClientQuota", TypeShape.of(GetKafkaClientQuotaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaCluster` describes a Kafka cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .id(&#34;lkc-abc123&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;app_mgr for %s&#34;, exampleUsingId.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameKafkaCluster = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .displayName(&#34;basic_kafka_cluster&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKafkaCluster.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKafkaClusterResult> getKafkaCluster(GetKafkaClusterArgs args) {
        return getKafkaCluster(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaCluster` describes a Kafka cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .id(&#34;lkc-abc123&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;app_mgr for %s&#34;, exampleUsingId.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameKafkaCluster = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .displayName(&#34;basic_kafka_cluster&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKafkaCluster.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKafkaClusterResult> getKafkaClusterPlain(GetKafkaClusterPlainArgs args) {
        return getKafkaClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaCluster` describes a Kafka cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .id(&#34;lkc-abc123&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;app_mgr for %s&#34;, exampleUsingId.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameKafkaCluster = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .displayName(&#34;basic_kafka_cluster&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKafkaCluster.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKafkaClusterResult> getKafkaCluster(GetKafkaClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getKafkaCluster:getKafkaCluster", TypeShape.of(GetKafkaClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KafkaCluster` describes a Kafka cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .id(&#34;lkc-abc123&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;app_mgr for %s&#34;, exampleUsingId.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameKafkaCluster = ConfluentcloudFunctions.getKafkaCluster(GetKafkaClusterArgs.builder()
     *             .displayName(&#34;basic_kafka_cluster&#34;)
     *             .environment(GetKafkaClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKafkaCluster.applyValue(getKafkaClusterResult -&gt; getKafkaClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKafkaClusterResult> getKafkaClusterPlain(GetKafkaClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getKafkaCluster:getKafkaCluster", TypeShape.of(GetKafkaClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetKafkaTopicResult> getKafkaTopic(GetKafkaTopicArgs args) {
        return getKafkaTopic(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetKafkaTopicResult> getKafkaTopicPlain(GetKafkaTopicPlainArgs args) {
        return getKafkaTopicPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetKafkaTopicResult> getKafkaTopic(GetKafkaTopicArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getKafkaTopic:getKafkaTopic", TypeShape.of(GetKafkaTopicResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetKafkaTopicResult> getKafkaTopicPlain(GetKafkaTopicPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getKafkaTopic:getKafkaTopic", TypeShape.of(GetKafkaTopicResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## # confluentcloud.KsqlCluster Data Source
     * 
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KsqlCluster` describes a ksqlDB cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .id(&#34;lksqlc-abc123&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *         final var exampleUsingNameKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .displayName(&#34;ksqldb_cluster&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKsqlClusterResult> getKsqlCluster(GetKsqlClusterArgs args) {
        return getKsqlCluster(args, InvokeOptions.Empty);
    }
    /**
     * ## # confluentcloud.KsqlCluster Data Source
     * 
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KsqlCluster` describes a ksqlDB cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .id(&#34;lksqlc-abc123&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *         final var exampleUsingNameKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .displayName(&#34;ksqldb_cluster&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKsqlClusterResult> getKsqlClusterPlain(GetKsqlClusterPlainArgs args) {
        return getKsqlClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## # confluentcloud.KsqlCluster Data Source
     * 
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KsqlCluster` describes a ksqlDB cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .id(&#34;lksqlc-abc123&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *         final var exampleUsingNameKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .displayName(&#34;ksqldb_cluster&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetKsqlClusterResult> getKsqlCluster(GetKsqlClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getKsqlCluster:getKsqlCluster", TypeShape.of(GetKsqlClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## # confluentcloud.KsqlCluster Data Source
     * 
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.KsqlCluster` describes a ksqlDB cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetKsqlClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .id(&#34;lksqlc-abc123&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *         final var exampleUsingNameKsqlCluster = ConfluentcloudFunctions.getKsqlCluster(GetKsqlClusterArgs.builder()
     *             .displayName(&#34;ksqldb_cluster&#34;)
     *             .environment(GetKsqlClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameKsqlCluster.applyValue(getKsqlClusterResult -&gt; getKsqlClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetKsqlClusterResult> getKsqlClusterPlain(GetKsqlClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getKsqlCluster:getKsqlCluster", TypeShape.of(GetKsqlClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Network` describes a Network data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetNetworkArgs;
     * import com.pulumi.confluentcloud.inputs.GetNetworkEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .id(&#34;n-abc123&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;test_sa for %s&#34;, exampleUsingId.applyValue(getNetworkResult -&gt; getNetworkResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameNetwork = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .displayName(&#34;my_network&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameNetwork.applyValue(getNetworkResult -&gt; getNetworkResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNetworkResult> getNetwork(GetNetworkArgs args) {
        return getNetwork(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Network` describes a Network data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetNetworkArgs;
     * import com.pulumi.confluentcloud.inputs.GetNetworkEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .id(&#34;n-abc123&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;test_sa for %s&#34;, exampleUsingId.applyValue(getNetworkResult -&gt; getNetworkResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameNetwork = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .displayName(&#34;my_network&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameNetwork.applyValue(getNetworkResult -&gt; getNetworkResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain(GetNetworkPlainArgs args) {
        return getNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Network` describes a Network data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetNetworkArgs;
     * import com.pulumi.confluentcloud.inputs.GetNetworkEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .id(&#34;n-abc123&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;test_sa for %s&#34;, exampleUsingId.applyValue(getNetworkResult -&gt; getNetworkResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameNetwork = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .displayName(&#34;my_network&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameNetwork.applyValue(getNetworkResult -&gt; getNetworkResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNetworkResult> getNetwork(GetNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getNetwork:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Network` describes a Network data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetNetworkArgs;
     * import com.pulumi.confluentcloud.inputs.GetNetworkEnvironmentArgs;
     * import com.pulumi.confluentcloud.ServiceAccount;
     * import com.pulumi.confluentcloud.ServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingId = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .id(&#34;n-abc123&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         var test_sa = new ServiceAccount(&#34;test-sa&#34;, ServiceAccountArgs.builder()        
     *             .description(String.format(&#34;test_sa for %s&#34;, exampleUsingId.applyValue(getNetworkResult -&gt; getNetworkResult.displayName())))
     *             .build());
     * 
     *         final var exampleUsingNameNetwork = ConfluentcloudFunctions.getNetwork(GetNetworkArgs.builder()
     *             .displayName(&#34;my_network&#34;)
     *             .environment(GetNetworkEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameNetwork.applyValue(getNetworkResult -&gt; getNetworkResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain(GetNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getNetwork:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getOrganization` describes an Organization data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOrganization = ConfluentcloudFunctions.getOrganization();
     * 
     *         ctx.export(&#34;example&#34;, exampleOrganization.applyValue(getOrganizationResult -&gt; getOrganizationResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrganizationResult> getOrganization() {
        return getOrganization(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getOrganization` describes an Organization data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOrganization = ConfluentcloudFunctions.getOrganization();
     * 
     *         ctx.export(&#34;example&#34;, exampleOrganization.applyValue(getOrganizationResult -&gt; getOrganizationResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain() {
        return getOrganizationPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getOrganization` describes an Organization data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOrganization = ConfluentcloudFunctions.getOrganization();
     * 
     *         ctx.export(&#34;example&#34;, exampleOrganization.applyValue(getOrganizationResult -&gt; getOrganizationResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(InvokeArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getOrganization` describes an Organization data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOrganization = ConfluentcloudFunctions.getOrganization();
     * 
     *         ctx.export(&#34;example&#34;, exampleOrganization.applyValue(getOrganizationResult -&gt; getOrganizationResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(InvokeArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getOrganization` describes an Organization data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOrganization = ConfluentcloudFunctions.getOrganization();
     * 
     *         ctx.export(&#34;example&#34;, exampleOrganization.applyValue(getOrganizationResult -&gt; getOrganizationResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getOrganization` describes an Organization data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleOrganization = ConfluentcloudFunctions.getOrganization();
     * 
     *         ctx.export(&#34;example&#34;, exampleOrganization.applyValue(getOrganizationResult -&gt; getOrganizationResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Peering` describes a Peering data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPeeringArgs;
     * import com.pulumi.confluentcloud.inputs.GetPeeringEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .id(&#34;peer-abc123&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *         final var exampleUsingNamePeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .displayName(&#34;my_peering&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPeeringResult> getPeering(GetPeeringArgs args) {
        return getPeering(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Peering` describes a Peering data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPeeringArgs;
     * import com.pulumi.confluentcloud.inputs.GetPeeringEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .id(&#34;peer-abc123&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *         final var exampleUsingNamePeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .displayName(&#34;my_peering&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPeeringResult> getPeeringPlain(GetPeeringPlainArgs args) {
        return getPeeringPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Peering` describes a Peering data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPeeringArgs;
     * import com.pulumi.confluentcloud.inputs.GetPeeringEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .id(&#34;peer-abc123&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *         final var exampleUsingNamePeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .displayName(&#34;my_peering&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPeeringResult> getPeering(GetPeeringArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getPeering:getPeering", TypeShape.of(GetPeeringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.Peering` describes a Peering data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPeeringArgs;
     * import com.pulumi.confluentcloud.inputs.GetPeeringEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .id(&#34;peer-abc123&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *         final var exampleUsingNamePeering = ConfluentcloudFunctions.getPeering(GetPeeringArgs.builder()
     *             .displayName(&#34;my_peering&#34;)
     *             .environment(GetPeeringEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePeering.applyValue(getPeeringResult -&gt; getPeeringResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPeeringResult> getPeeringPlain(GetPeeringPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getPeering:getPeering", TypeShape.of(GetPeeringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.PrivateLinkAccess` describes a Private Link Access data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessArgs;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .id(&#34;pla-abc123&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *         final var exampleUsingNamePrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .displayName(&#34;my_pla&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPrivateLinkAccessResult> getPrivateLinkAccess(GetPrivateLinkAccessArgs args) {
        return getPrivateLinkAccess(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.PrivateLinkAccess` describes a Private Link Access data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessArgs;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .id(&#34;pla-abc123&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *         final var exampleUsingNamePrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .displayName(&#34;my_pla&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPrivateLinkAccessResult> getPrivateLinkAccessPlain(GetPrivateLinkAccessPlainArgs args) {
        return getPrivateLinkAccessPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.PrivateLinkAccess` describes a Private Link Access data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessArgs;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .id(&#34;pla-abc123&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *         final var exampleUsingNamePrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .displayName(&#34;my_pla&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPrivateLinkAccessResult> getPrivateLinkAccess(GetPrivateLinkAccessArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getPrivateLinkAccess:getPrivateLinkAccess", TypeShape.of(GetPrivateLinkAccessResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.PrivateLinkAccess` describes a Private Link Access data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessArgs;
     * import com.pulumi.confluentcloud.inputs.GetPrivateLinkAccessEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdPrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .id(&#34;pla-abc123&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdPrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *         final var exampleUsingNamePrivateLinkAccess = ConfluentcloudFunctions.getPrivateLinkAccess(GetPrivateLinkAccessArgs.builder()
     *             .displayName(&#34;my_pla&#34;)
     *             .environment(GetPrivateLinkAccessEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNamePrivateLinkAccess.applyValue(getPrivateLinkAccessResult -&gt; getPrivateLinkAccessResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPrivateLinkAccessResult> getPrivateLinkAccessPlain(GetPrivateLinkAccessPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getPrivateLinkAccess:getPrivateLinkAccess", TypeShape.of(GetPrivateLinkAccessResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.RoleBinding` describes a Role Binding.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetRoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRoleBinding = ConfluentcloudFunctions.getRoleBinding(GetRoleBindingArgs.builder()
     *             .id(&#34;rb-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleRoleBinding.applyValue(getRoleBindingResult -&gt; getRoleBindingResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleBindingResult> getRoleBinding(GetRoleBindingArgs args) {
        return getRoleBinding(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.RoleBinding` describes a Role Binding.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetRoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRoleBinding = ConfluentcloudFunctions.getRoleBinding(GetRoleBindingArgs.builder()
     *             .id(&#34;rb-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleRoleBinding.applyValue(getRoleBindingResult -&gt; getRoleBindingResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleBindingResult> getRoleBindingPlain(GetRoleBindingPlainArgs args) {
        return getRoleBindingPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.RoleBinding` describes a Role Binding.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetRoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRoleBinding = ConfluentcloudFunctions.getRoleBinding(GetRoleBindingArgs.builder()
     *             .id(&#34;rb-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleRoleBinding.applyValue(getRoleBindingResult -&gt; getRoleBindingResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleBindingResult> getRoleBinding(GetRoleBindingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getRoleBinding:getRoleBinding", TypeShape.of(GetRoleBindingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.RoleBinding` describes a Role Binding.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetRoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleRoleBinding = ConfluentcloudFunctions.getRoleBinding(GetRoleBindingArgs.builder()
     *             .id(&#34;rb-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleRoleBinding.applyValue(getRoleBindingResult -&gt; getRoleBindingResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleBindingResult> getRoleBindingPlain(GetRoleBindingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getRoleBinding:getRoleBinding", TypeShape.of(GetRoleBindingResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSchemaResult> getSchema(GetSchemaArgs args) {
        return getSchema(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSchemaResult> getSchemaPlain(GetSchemaPlainArgs args) {
        return getSchemaPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSchemaResult> getSchema(GetSchemaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSchema:getSchema", TypeShape.of(GetSchemaResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSchemaResult> getSchemaPlain(GetSchemaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSchema:getSchema", TypeShape.of(GetSchemaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.SchemaRegistryCluster` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .id(&#34;lsrc-abc123&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *         final var exampleUsingNameSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .displayName(&#34;Stream Governance Package&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSchemaRegistryClusterResult> getSchemaRegistryCluster(GetSchemaRegistryClusterArgs args) {
        return getSchemaRegistryCluster(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.SchemaRegistryCluster` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .id(&#34;lsrc-abc123&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *         final var exampleUsingNameSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .displayName(&#34;Stream Governance Package&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSchemaRegistryClusterResult> getSchemaRegistryClusterPlain(GetSchemaRegistryClusterPlainArgs args) {
        return getSchemaRegistryClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.SchemaRegistryCluster` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .id(&#34;lsrc-abc123&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *         final var exampleUsingNameSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .displayName(&#34;Stream Governance Package&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSchemaRegistryClusterResult> getSchemaRegistryCluster(GetSchemaRegistryClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSchemaRegistryCluster:getSchemaRegistryCluster", TypeShape.of(GetSchemaRegistryClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.SchemaRegistryCluster` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterArgs;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryClusterEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .id(&#34;lsrc-abc123&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *         final var exampleUsingNameSchemaRegistryCluster = ConfluentcloudFunctions.getSchemaRegistryCluster(GetSchemaRegistryClusterArgs.builder()
     *             .displayName(&#34;Stream Governance Package&#34;)
     *             .environment(GetSchemaRegistryClusterEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameSchemaRegistryCluster.applyValue(getSchemaRegistryClusterResult -&gt; getSchemaRegistryClusterResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSchemaRegistryClusterResult> getSchemaRegistryClusterPlain(GetSchemaRegistryClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSchemaRegistryCluster:getSchemaRegistryCluster", TypeShape.of(GetSchemaRegistryClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSchemaRegistryClusterConfigResult> getSchemaRegistryClusterConfig() {
        return getSchemaRegistryClusterConfig(GetSchemaRegistryClusterConfigArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSchemaRegistryClusterConfigResult> getSchemaRegistryClusterConfigPlain() {
        return getSchemaRegistryClusterConfigPlain(GetSchemaRegistryClusterConfigPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetSchemaRegistryClusterConfigResult> getSchemaRegistryClusterConfig(GetSchemaRegistryClusterConfigArgs args) {
        return getSchemaRegistryClusterConfig(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSchemaRegistryClusterConfigResult> getSchemaRegistryClusterConfigPlain(GetSchemaRegistryClusterConfigPlainArgs args) {
        return getSchemaRegistryClusterConfigPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSchemaRegistryClusterConfigResult> getSchemaRegistryClusterConfig(GetSchemaRegistryClusterConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSchemaRegistryClusterConfig:getSchemaRegistryClusterConfig", TypeShape.of(GetSchemaRegistryClusterConfigResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSchemaRegistryClusterConfigResult> getSchemaRegistryClusterConfigPlain(GetSchemaRegistryClusterConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSchemaRegistryClusterConfig:getSchemaRegistryClusterConfig", TypeShape.of(GetSchemaRegistryClusterConfigResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSchemaRegistryClusterModeResult> getSchemaRegistryClusterMode() {
        return getSchemaRegistryClusterMode(GetSchemaRegistryClusterModeArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSchemaRegistryClusterModeResult> getSchemaRegistryClusterModePlain() {
        return getSchemaRegistryClusterModePlain(GetSchemaRegistryClusterModePlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetSchemaRegistryClusterModeResult> getSchemaRegistryClusterMode(GetSchemaRegistryClusterModeArgs args) {
        return getSchemaRegistryClusterMode(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSchemaRegistryClusterModeResult> getSchemaRegistryClusterModePlain(GetSchemaRegistryClusterModePlainArgs args) {
        return getSchemaRegistryClusterModePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSchemaRegistryClusterModeResult> getSchemaRegistryClusterMode(GetSchemaRegistryClusterModeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSchemaRegistryClusterMode:getSchemaRegistryClusterMode", TypeShape.of(GetSchemaRegistryClusterModeResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSchemaRegistryClusterModeResult> getSchemaRegistryClusterModePlain(GetSchemaRegistryClusterModePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSchemaRegistryClusterMode:getSchemaRegistryClusterMode", TypeShape.of(GetSchemaRegistryClusterModeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getSchemaRegistryRegion` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSchemaRegistryRegion = ConfluentcloudFunctions.getSchemaRegistryRegion(GetSchemaRegistryRegionArgs.builder()
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-east-2&#34;)
     *             .package_(&#34;ESSENTIALS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleSchemaRegistryRegion.applyValue(getSchemaRegistryRegionResult -&gt; getSchemaRegistryRegionResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSchemaRegistryRegionResult> getSchemaRegistryRegion(GetSchemaRegistryRegionArgs args) {
        return getSchemaRegistryRegion(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getSchemaRegistryRegion` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSchemaRegistryRegion = ConfluentcloudFunctions.getSchemaRegistryRegion(GetSchemaRegistryRegionArgs.builder()
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-east-2&#34;)
     *             .package_(&#34;ESSENTIALS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleSchemaRegistryRegion.applyValue(getSchemaRegistryRegionResult -&gt; getSchemaRegistryRegionResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSchemaRegistryRegionResult> getSchemaRegistryRegionPlain(GetSchemaRegistryRegionPlainArgs args) {
        return getSchemaRegistryRegionPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getSchemaRegistryRegion` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSchemaRegistryRegion = ConfluentcloudFunctions.getSchemaRegistryRegion(GetSchemaRegistryRegionArgs.builder()
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-east-2&#34;)
     *             .package_(&#34;ESSENTIALS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleSchemaRegistryRegion.applyValue(getSchemaRegistryRegionResult -&gt; getSchemaRegistryRegionResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSchemaRegistryRegionResult> getSchemaRegistryRegion(GetSchemaRegistryRegionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSchemaRegistryRegion:getSchemaRegistryRegion", TypeShape.of(GetSchemaRegistryRegionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getSchemaRegistryRegion` describes a Schema Registry cluster data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetSchemaRegistryRegionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleSchemaRegistryRegion = ConfluentcloudFunctions.getSchemaRegistryRegion(GetSchemaRegistryRegionArgs.builder()
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-east-2&#34;)
     *             .package_(&#34;ESSENTIALS&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;example&#34;, exampleSchemaRegistryRegion.applyValue(getSchemaRegistryRegionResult -&gt; getSchemaRegistryRegionResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSchemaRegistryRegionResult> getSchemaRegistryRegionPlain(GetSchemaRegistryRegionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSchemaRegistryRegion:getSchemaRegistryRegion", TypeShape.of(GetSchemaRegistryRegionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.ServiceAccount` describes a Service Account data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .id(&#34;sa-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult));
     *         final var exampleUsingName = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount() {
        return getServiceAccount(GetServiceAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.ServiceAccount` describes a Service Account data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .id(&#34;sa-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult));
     *         final var exampleUsingName = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain() {
        return getServiceAccountPlain(GetServiceAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.ServiceAccount` describes a Service Account data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .id(&#34;sa-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult));
     *         final var exampleUsingName = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args) {
        return getServiceAccount(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.ServiceAccount` describes a Service Account data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .id(&#34;sa-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult));
     *         final var exampleUsingName = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain(GetServiceAccountPlainArgs args) {
        return getServiceAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.ServiceAccount` describes a Service Account data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .id(&#34;sa-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult));
     *         final var exampleUsingName = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getServiceAccount:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.ServiceAccount` describes a Service Account data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetServiceAccountArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdServiceAccount = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .id(&#34;sa-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdServiceAccount.applyValue(getServiceAccountResult -&gt; getServiceAccountResult));
     *         final var exampleUsingName = ConfluentcloudFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .displayName(&#34;test_sa&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain(GetServiceAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getServiceAccount:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSubjectConfigResult> getSubjectConfig(GetSubjectConfigArgs args) {
        return getSubjectConfig(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSubjectConfigResult> getSubjectConfigPlain(GetSubjectConfigPlainArgs args) {
        return getSubjectConfigPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSubjectConfigResult> getSubjectConfig(GetSubjectConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSubjectConfig:getSubjectConfig", TypeShape.of(GetSubjectConfigResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSubjectConfigResult> getSubjectConfigPlain(GetSubjectConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSubjectConfig:getSubjectConfig", TypeShape.of(GetSubjectConfigResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetSubjectModeResult> getSubjectMode(GetSubjectModeArgs args) {
        return getSubjectMode(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetSubjectModeResult> getSubjectModePlain(GetSubjectModePlainArgs args) {
        return getSubjectModePlain(args, InvokeOptions.Empty);
    }
    public static Output<GetSubjectModeResult> getSubjectMode(GetSubjectModeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getSubjectMode:getSubjectMode", TypeShape.of(GetSubjectModeResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetSubjectModeResult> getSubjectModePlain(GetSubjectModePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getSubjectMode:getSubjectMode", TypeShape.of(GetSubjectModeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.TransitGatewayAttachment` describes a Transit Gateway Attachment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .id(&#34;tgwa-abc123&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *         final var exampleUsingNameTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .displayName(&#34;my_tgwa&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTransitGatewayAttachmentResult> getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs args) {
        return getTransitGatewayAttachment(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.TransitGatewayAttachment` describes a Transit Gateway Attachment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .id(&#34;tgwa-abc123&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *         final var exampleUsingNameTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .displayName(&#34;my_tgwa&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTransitGatewayAttachmentResult> getTransitGatewayAttachmentPlain(GetTransitGatewayAttachmentPlainArgs args) {
        return getTransitGatewayAttachmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.TransitGatewayAttachment` describes a Transit Gateway Attachment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .id(&#34;tgwa-abc123&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *         final var exampleUsingNameTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .displayName(&#34;my_tgwa&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTransitGatewayAttachmentResult> getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getTransitGatewayAttachment:getTransitGatewayAttachment", TypeShape.of(GetTransitGatewayAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.TransitGatewayAttachment` describes a Transit Gateway Attachment data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentArgs;
     * import com.pulumi.confluentcloud.inputs.GetTransitGatewayAttachmentEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .id(&#34;tgwa-abc123&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *         final var exampleUsingNameTransitGatewayAttachment = ConfluentcloudFunctions.getTransitGatewayAttachment(GetTransitGatewayAttachmentArgs.builder()
     *             .displayName(&#34;my_tgwa&#34;)
     *             .environment(GetTransitGatewayAttachmentEnvironmentArgs.builder()
     *                 .id(&#34;env-xyz456&#34;)
     *                 .build())
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingName&#34;, exampleUsingNameTransitGatewayAttachment.applyValue(getTransitGatewayAttachmentResult -&gt; getTransitGatewayAttachmentResult));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTransitGatewayAttachmentResult> getTransitGatewayAttachmentPlain(GetTransitGatewayAttachmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getTransitGatewayAttachment:getTransitGatewayAttachment", TypeShape.of(GetTransitGatewayAttachmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getUser` describes a User data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetUserArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import com.pulumi.confluentcloud.KafkaCluster;
     * import com.pulumi.confluentcloud.KafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterStandardArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdUser = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .id(&#34;u-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdUser.applyValue(getUserResult -&gt; getUserResult));
     *         final var exampleUsingEmail = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;test123@gmail.com&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *         var standard_cluster_on_aws = new KafkaCluster(&#34;standard-cluster-on-aws&#34;, KafkaClusterArgs.builder()        
     *             .availability(&#34;SINGLE_ZONE&#34;)
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-west-2&#34;)
     *             .standard()
     *             .environment(KafkaClusterEnvironmentArgs.builder()
     *                 .id(test_env.id())
     *                 .build())
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingEmail.applyValue(getUserResult -&gt; getUserResult.id())))
     *             .roleName(&#34;CloudClusterAdmin&#34;)
     *             .crnPattern(standard_cluster_on_aws.rbacCrn())
     *             .build());
     * 
     *         final var exampleUsingFullName = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .fullName(&#34;John Doe&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser() {
        return getUser(GetUserArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getUser` describes a User data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetUserArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import com.pulumi.confluentcloud.KafkaCluster;
     * import com.pulumi.confluentcloud.KafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterStandardArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdUser = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .id(&#34;u-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdUser.applyValue(getUserResult -&gt; getUserResult));
     *         final var exampleUsingEmail = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;test123@gmail.com&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *         var standard_cluster_on_aws = new KafkaCluster(&#34;standard-cluster-on-aws&#34;, KafkaClusterArgs.builder()        
     *             .availability(&#34;SINGLE_ZONE&#34;)
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-west-2&#34;)
     *             .standard()
     *             .environment(KafkaClusterEnvironmentArgs.builder()
     *                 .id(test_env.id())
     *                 .build())
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingEmail.applyValue(getUserResult -&gt; getUserResult.id())))
     *             .roleName(&#34;CloudClusterAdmin&#34;)
     *             .crnPattern(standard_cluster_on_aws.rbacCrn())
     *             .build());
     * 
     *         final var exampleUsingFullName = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .fullName(&#34;John Doe&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain() {
        return getUserPlain(GetUserPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getUser` describes a User data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetUserArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import com.pulumi.confluentcloud.KafkaCluster;
     * import com.pulumi.confluentcloud.KafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterStandardArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdUser = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .id(&#34;u-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdUser.applyValue(getUserResult -&gt; getUserResult));
     *         final var exampleUsingEmail = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;test123@gmail.com&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *         var standard_cluster_on_aws = new KafkaCluster(&#34;standard-cluster-on-aws&#34;, KafkaClusterArgs.builder()        
     *             .availability(&#34;SINGLE_ZONE&#34;)
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-west-2&#34;)
     *             .standard()
     *             .environment(KafkaClusterEnvironmentArgs.builder()
     *                 .id(test_env.id())
     *                 .build())
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingEmail.applyValue(getUserResult -&gt; getUserResult.id())))
     *             .roleName(&#34;CloudClusterAdmin&#34;)
     *             .crnPattern(standard_cluster_on_aws.rbacCrn())
     *             .build());
     * 
     *         final var exampleUsingFullName = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .fullName(&#34;John Doe&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getUser` describes a User data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetUserArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import com.pulumi.confluentcloud.KafkaCluster;
     * import com.pulumi.confluentcloud.KafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterStandardArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdUser = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .id(&#34;u-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdUser.applyValue(getUserResult -&gt; getUserResult));
     *         final var exampleUsingEmail = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;test123@gmail.com&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *         var standard_cluster_on_aws = new KafkaCluster(&#34;standard-cluster-on-aws&#34;, KafkaClusterArgs.builder()        
     *             .availability(&#34;SINGLE_ZONE&#34;)
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-west-2&#34;)
     *             .standard()
     *             .environment(KafkaClusterEnvironmentArgs.builder()
     *                 .id(test_env.id())
     *                 .build())
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingEmail.applyValue(getUserResult -&gt; getUserResult.id())))
     *             .roleName(&#34;CloudClusterAdmin&#34;)
     *             .crnPattern(standard_cluster_on_aws.rbacCrn())
     *             .build());
     * 
     *         final var exampleUsingFullName = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .fullName(&#34;John Doe&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getUser` describes a User data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetUserArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import com.pulumi.confluentcloud.KafkaCluster;
     * import com.pulumi.confluentcloud.KafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterStandardArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdUser = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .id(&#34;u-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdUser.applyValue(getUserResult -&gt; getUserResult));
     *         final var exampleUsingEmail = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;test123@gmail.com&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *         var standard_cluster_on_aws = new KafkaCluster(&#34;standard-cluster-on-aws&#34;, KafkaClusterArgs.builder()        
     *             .availability(&#34;SINGLE_ZONE&#34;)
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-west-2&#34;)
     *             .standard()
     *             .environment(KafkaClusterEnvironmentArgs.builder()
     *                 .id(test_env.id())
     *                 .build())
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingEmail.applyValue(getUserResult -&gt; getUserResult.id())))
     *             .roleName(&#34;CloudClusterAdmin&#34;)
     *             .crnPattern(standard_cluster_on_aws.rbacCrn())
     *             .build());
     * 
     *         final var exampleUsingFullName = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .fullName(&#34;John Doe&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("confluentcloud:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
     * 
     * `confluentcloud.getUser` describes a User data source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.confluentcloud.ConfluentcloudFunctions;
     * import com.pulumi.confluentcloud.inputs.GetUserArgs;
     * import com.pulumi.confluentcloud.Environment;
     * import com.pulumi.confluentcloud.KafkaCluster;
     * import com.pulumi.confluentcloud.KafkaClusterArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterStandardArgs;
     * import com.pulumi.confluentcloud.inputs.KafkaClusterEnvironmentArgs;
     * import com.pulumi.confluentcloud.RoleBinding;
     * import com.pulumi.confluentcloud.RoleBindingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleUsingIdUser = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .id(&#34;u-abc123&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;exampleUsingId&#34;, exampleUsingIdUser.applyValue(getUserResult -&gt; getUserResult));
     *         final var exampleUsingEmail = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .email(&#34;test123@gmail.com&#34;)
     *             .build());
     * 
     *         var test_env = new Environment(&#34;test-env&#34;);
     * 
     *         var standard_cluster_on_aws = new KafkaCluster(&#34;standard-cluster-on-aws&#34;, KafkaClusterArgs.builder()        
     *             .availability(&#34;SINGLE_ZONE&#34;)
     *             .cloud(&#34;AWS&#34;)
     *             .region(&#34;us-west-2&#34;)
     *             .standard()
     *             .environment(KafkaClusterEnvironmentArgs.builder()
     *                 .id(test_env.id())
     *                 .build())
     *             .build());
     * 
     *         var test_role_binding = new RoleBinding(&#34;test-role-binding&#34;, RoleBindingArgs.builder()        
     *             .principal(String.format(&#34;User:%s&#34;, exampleUsingEmail.applyValue(getUserResult -&gt; getUserResult.id())))
     *             .roleName(&#34;CloudClusterAdmin&#34;)
     *             .crnPattern(standard_cluster_on_aws.rbacCrn())
     *             .build());
     * 
     *         final var exampleUsingFullName = ConfluentcloudFunctions.getUser(GetUserArgs.builder()
     *             .fullName(&#34;John Doe&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("confluentcloud:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
}
