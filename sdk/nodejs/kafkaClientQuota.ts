// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const example = new confluentcloud.KafkaClientQuota("example", {
 *     displayName: "test-quota",
 *     description: "Test Quota",
 *     throughput: {
 *         ingressByteRate: "100",
 *         egressByteRate: "200",
 *     },
 *     principals: [
 *         appManager.id,
 *         appManager2.id,
 *     ],
 *     kafkaCluster: {
 *         id: dedicated.id,
 *     },
 *     environment: {
 *         id: development.id,
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * You can import a Kafka Client Quota by using Kafka Client Quota ID. The following example shows how to import a Kafka Client Quota ID:
 *
 * $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
 *
 * $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
 *
 * ```sh
 * $ pulumi import confluentcloud:index/kafkaClientQuota:KafkaClientQuota example cq-abc123
 * ```
 *
 * !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 */
export class KafkaClientQuota extends pulumi.CustomResource {
    /**
     * Get an existing KafkaClientQuota resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaClientQuotaState, opts?: pulumi.CustomResourceOptions): KafkaClientQuota {
        return new KafkaClientQuota(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'confluentcloud:index/kafkaClientQuota:KafkaClientQuota';

    /**
     * Returns true if the given object is an instance of KafkaClientQuota.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KafkaClientQuota {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KafkaClientQuota.__pulumiType;
    }

    /**
     * The description of the Kafka Client Quota.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the Kafka Client Quota.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    public readonly environment!: pulumi.Output<outputs.KafkaClientQuotaEnvironment>;
    public readonly kafkaCluster!: pulumi.Output<outputs.KafkaClientQuotaKafkaCluster>;
    /**
     * The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, "<default>", to represent the default quota for all users and service accounts.
     */
    public readonly principals!: pulumi.Output<string[]>;
    /**
     * Block for representing a Kafka Quota.
     */
    public readonly throughput!: pulumi.Output<outputs.KafkaClientQuotaThroughput>;

    /**
     * Create a KafkaClientQuota resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaClientQuotaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KafkaClientQuotaArgs | KafkaClientQuotaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KafkaClientQuotaState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["kafkaCluster"] = state ? state.kafkaCluster : undefined;
            resourceInputs["principals"] = state ? state.principals : undefined;
            resourceInputs["throughput"] = state ? state.throughput : undefined;
        } else {
            const args = argsOrState as KafkaClientQuotaArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.kafkaCluster === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kafkaCluster'");
            }
            if ((!args || args.principals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principals'");
            }
            if ((!args || args.throughput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'throughput'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["kafkaCluster"] = args ? args.kafkaCluster : undefined;
            resourceInputs["principals"] = args ? args.principals : undefined;
            resourceInputs["throughput"] = args ? args.throughput : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KafkaClientQuota.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KafkaClientQuota resources.
 */
export interface KafkaClientQuotaState {
    /**
     * The description of the Kafka Client Quota.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Kafka Client Quota.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment?: pulumi.Input<inputs.KafkaClientQuotaEnvironment>;
    kafkaCluster?: pulumi.Input<inputs.KafkaClientQuotaKafkaCluster>;
    /**
     * The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, "<default>", to represent the default quota for all users and service accounts.
     */
    principals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Block for representing a Kafka Quota.
     */
    throughput?: pulumi.Input<inputs.KafkaClientQuotaThroughput>;
}

/**
 * The set of arguments for constructing a KafkaClientQuota resource.
 */
export interface KafkaClientQuotaArgs {
    /**
     * The description of the Kafka Client Quota.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Kafka Client Quota.
     */
    displayName: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.KafkaClientQuotaEnvironment>;
    kafkaCluster: pulumi.Input<inputs.KafkaClientQuotaKafkaCluster>;
    /**
     * The list of principals (i.e., service accounts or identity pools) to apply the Kafka Client Quota to. Use the special name, "<default>", to represent the default quota for all users and service accounts.
     */
    principals: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Block for representing a Kafka Quota.
     */
    throughput: pulumi.Input<inputs.KafkaClientQuotaThroughput>;
}
