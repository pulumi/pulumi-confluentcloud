// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * [![Preview](<https://img.shields.io/badge/Lifecycle%!S(MISSING)tage-Preview-%!a(MISSING)fba>)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * > **Note:** `confluentcloud.getFlinkRegion` data source is available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.\
 * **Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing Preview releases of the Preview features at any time in Confluent’s sole discretion.
 *
 * `confluentcloud.getFlinkRegion` describes a Flink cluster data source.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const exampleFlinkRegion = confluentcloud.getFlinkRegion({
 *     cloud: "AWS",
 *     region: "us-east-1",
 * });
 * export const example = exampleFlinkRegion;
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getFlinkRegion(args: GetFlinkRegionArgs, opts?: pulumi.InvokeOptions): Promise<GetFlinkRegionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluentcloud:index/getFlinkRegion:getFlinkRegion", {
        "cloud": args.cloud,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlinkRegion.
 */
export interface GetFlinkRegionArgs {
    /**
     * The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     */
    cloud: string;
    /**
     * The cloud service provider region, for example, `us-east-1`.
     */
    region: string;
}

/**
 * A collection of values returned by getFlinkRegion.
 */
export interface GetFlinkRegionResult {
    /**
     * (Required String) An API Version of the Flink region, for example, `fcpm/v2`.
     */
    readonly apiVersion: string;
    readonly cloud: string;
    /**
     * (Required String) The ID of the Flink region, for example, `aws.us-east-1`.
     */
    readonly id: string;
    /**
     * (Required String) A kind of the Flink region, for example, `Region`.
     */
    readonly kind: string;
    readonly region: string;
    /**
     * (Required String) The HTTP endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`.
     */
    readonly restEndpoint: string;
}
/**
 * [![Preview](<https://img.shields.io/badge/Lifecycle%!S(MISSING)tage-Preview-%!a(MISSING)fba>)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * > **Note:** `confluentcloud.getFlinkRegion` data source is available in **Preview** for early adopters. Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.\
 * **Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Preview features. Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing Preview releases of the Preview features at any time in Confluent’s sole discretion.
 *
 * `confluentcloud.getFlinkRegion` describes a Flink cluster data source.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const exampleFlinkRegion = confluentcloud.getFlinkRegion({
 *     cloud: "AWS",
 *     region: "us-east-1",
 * });
 * export const example = exampleFlinkRegion;
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getFlinkRegionOutput(args: GetFlinkRegionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFlinkRegionResult> {
    return pulumi.output(args).apply((a: any) => getFlinkRegion(a, opts))
}

/**
 * A collection of arguments for invoking getFlinkRegion.
 */
export interface GetFlinkRegionOutputArgs {
    /**
     * The cloud service provider that hosts the region. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     */
    cloud: pulumi.Input<string>;
    /**
     * The cloud service provider region, for example, `us-east-1`.
     */
    region: pulumi.Input<string>;
}
