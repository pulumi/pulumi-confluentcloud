// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![Open Preview](https://img.shields.io/badge/Lifecycle%20Stage-Open%20Preview-%2300afba)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * !> **WARNING:** `confluentcloud.StreamGovernanceCluster` data source is deprecated and will be removed in the next version. Use `confluentcloud.SchemaRegistryCluster` instead.
 *
 * > **Note:** `confluentcloud.StreamGovernanceCluster` resource is available in **Open Preview** for early adopters. Open Preview features are introduced to gather customer feedback. This feature should be used only for evaluation and non-production testing purposes or to provide feedback to Confluent, particularly as it becomes more widely available in follow-on editions.\
 * **Open Preview** features are intended for evaluation use in development and testing environments only, and not for production use. The warranty, SLA, and Support Services provisions of your agreement with Confluent do not apply to Open Preview features. Open Preview features are considered to be a Proof of Concept as defined in the Confluent Cloud Terms of Service. Confluent may discontinue providing preview releases of the Open Preview features at any time in Confluentâ€™s sole discretion.
 *
 * `confluentcloud.StreamGovernanceCluster` describes a Stream Governance cluster data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const exampleUsingIdStreatGovernanceCluster = confluentcloud.getStreatGovernanceCluster({
 *     id: "lsrc-abc123",
 *     environment: {
 *         id: "env-xyz456",
 *     },
 * });
 * export const exampleUsingId = exampleUsingIdStreatGovernanceCluster;
 * const exampleUsingNameStreatGovernanceCluster = confluentcloud.getStreatGovernanceCluster({
 *     displayName: "Stream Governance Package",
 *     environment: {
 *         id: "env-xyz456",
 *     },
 * });
 * export const exampleUsingName = exampleUsingNameStreatGovernanceCluster;
 * ```
 */
export function getStreatGovernanceCluster(args: GetStreatGovernanceClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetStreatGovernanceClusterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("confluentcloud:index/getStreatGovernanceCluster:getStreatGovernanceCluster", {
        "displayName": args.displayName,
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreatGovernanceCluster.
 */
export interface GetStreatGovernanceClusterArgs {
    /**
     * The name for the Stream Governance cluster.
     */
    displayName?: string;
    environment: inputs.GetStreatGovernanceClusterEnvironment;
    /**
     * The ID of the Environment that the Stream Governance cluster belongs to, for example, `env-xyz456`.
     */
    id?: string;
}

/**
 * A collection of values returned by getStreatGovernanceCluster.
 */
export interface GetStreatGovernanceClusterResult {
    /**
     * (Required String) An API Version of the schema version of the Stream Governance cluster, for example, `stream-governance/v2`.
     */
    readonly apiVersion: string;
    /**
     * (Required String) The name of the Stream Governance cluster, for example, `Stream Governance Package`.
     */
    readonly displayName: string;
    readonly environment: outputs.GetStreatGovernanceClusterEnvironment;
    /**
     * (Required String) The HTTP endpoint of the Stream Governance cluster, for example, `https://psrc-00000.us-west-2.aws.confluent.cloud`.
     */
    readonly httpEndpoint: string;
    readonly id: string;
    /**
     * (Required String) A kind of the Stream Governance cluster, for example, `Cluster`.
     */
    readonly kind: string;
    /**
     * (Required String) The type of the billing package. Accepted values are: `ESSENTIALS` and `ADVANCED`.
     * - `region` (Required Configuration Block) supports the following:
     */
    readonly package: string;
    readonly regions: outputs.GetStreatGovernanceClusterRegion[];
    /**
     * (Required String) The Confluent Resource Name of the Stream Governance cluster, for example, `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-abc123/schema-registry=lsrc-abc123`.
     */
    readonly resourceName: string;
}

export function getStreatGovernanceClusterOutput(args: GetStreatGovernanceClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreatGovernanceClusterResult> {
    return pulumi.output(args).apply(a => getStreatGovernanceCluster(a, opts))
}

/**
 * A collection of arguments for invoking getStreatGovernanceCluster.
 */
export interface GetStreatGovernanceClusterOutputArgs {
    /**
     * The name for the Stream Governance cluster.
     */
    displayName?: pulumi.Input<string>;
    environment: pulumi.Input<inputs.GetStreatGovernanceClusterEnvironmentArgs>;
    /**
     * The ID of the Environment that the Stream Governance cluster belongs to, for example, `env-xyz456`.
     */
    id?: pulumi.Input<string>;
}
