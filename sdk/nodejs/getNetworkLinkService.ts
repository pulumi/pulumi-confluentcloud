// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.NetworkLinkService` describes a Network Link Service data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const nls = confluentcloud.getNetworkLinkService({
 *     id: "nls-zyw30",
 *     environment: {
 *         id: "env-1234",
 *     },
 * });
 * export const networkLinkService = nls;
 * ```
 */
export function getNetworkLinkService(args: GetNetworkLinkServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkLinkServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluentcloud:index/getNetworkLinkService:getNetworkLinkService", {
        "accept": args.accept,
        "displayName": args.displayName,
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkLinkService.
 */
export interface GetNetworkLinkServiceArgs {
    /**
     * (Optional Configuration Block) supports the following:
     */
    accept?: inputs.GetNetworkLinkServiceAccept;
    /**
     * The Display Name of the Network Link Service, for example, `DR Link`
     */
    displayName?: string;
    environment: inputs.GetNetworkLinkServiceEnvironment;
    /**
     * The ID of the Network Link Service, for example, `nls-zyw30`.
     */
    id?: string;
}

/**
 * A collection of values returned by getNetworkLinkService.
 */
export interface GetNetworkLinkServiceResult {
    /**
     * (Optional Configuration Block) supports the following:
     */
    readonly accept: outputs.GetNetworkLinkServiceAccept;
    /**
     * (Optional String) The description of the Network Link Service.
     */
    readonly description: string;
    /**
     * (Optional String) The name of the Network Link Service.
     */
    readonly displayName: string;
    readonly environment: outputs.GetNetworkLinkServiceEnvironment;
    /**
     * (Required String) The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
     */
    readonly id: string;
    /**
     * (Required Configuration Block) supports the following:
     */
    readonly networks: outputs.GetNetworkLinkServiceNetwork[];
    /**
     * (Required String) The Confluent Resource Name of the Network Link Service.
     */
    readonly resourceName: string;
}
/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.NetworkLinkService` describes a Network Link Service data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const nls = confluentcloud.getNetworkLinkService({
 *     id: "nls-zyw30",
 *     environment: {
 *         id: "env-1234",
 *     },
 * });
 * export const networkLinkService = nls;
 * ```
 */
export function getNetworkLinkServiceOutput(args: GetNetworkLinkServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkLinkServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("confluentcloud:index/getNetworkLinkService:getNetworkLinkService", {
        "accept": args.accept,
        "displayName": args.displayName,
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkLinkService.
 */
export interface GetNetworkLinkServiceOutputArgs {
    /**
     * (Optional Configuration Block) supports the following:
     */
    accept?: pulumi.Input<inputs.GetNetworkLinkServiceAcceptArgs>;
    /**
     * The Display Name of the Network Link Service, for example, `DR Link`
     */
    displayName?: pulumi.Input<string>;
    environment: pulumi.Input<inputs.GetNetworkLinkServiceEnvironmentArgs>;
    /**
     * The ID of the Network Link Service, for example, `nls-zyw30`.
     */
    id?: pulumi.Input<string>;
}
