// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.Invitation` describes an Invitation data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const main = confluentcloud.getInvitation({
 *     id: "i-gxxn1",
 * });
 * export const invitation = main;
 * ```
 */
export function getInvitation(args: GetInvitationArgs, opts?: pulumi.InvokeOptions): Promise<GetInvitationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluentcloud:index/getInvitation:getInvitation", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getInvitation.
 */
export interface GetInvitationArgs {
    /**
     * The ID of the Invitation, for example, `i-zyw30`.
     */
    id: string;
}

/**
 * A collection of values returned by getInvitation.
 */
export interface GetInvitationResult {
    /**
     * (Optional String) The timestamp that the invitation was accepted.
     */
    readonly acceptedAt: string;
    /**
     * (Optional String) Accepted values are: `AUTH_TYPE_LOCAL` and `AUTH_TYPE_SSO`. The user/invitee's authentication type. Note that only the [`OrganizationAdmin role`](https://docs.confluent.io/cloud/current/access-management/access-control/cloud-rbac.html#organizationadmin) can invite `AUTH_TYPE_LOCAL` users to SSO organizations. The user's authType is set as `AUTH_TYPE_SSO` by default if the organization has SSO enabled. Otherwise, the user's authType is `AUTH_TYPE_LOCAL` by default.
     */
    readonly authType: string;
    /**
     * (Required Configuration Block) supports the following:
     */
    readonly creators: outputs.GetInvitationCreator[];
    /**
     * (Required String) The user/invitee's email address.
     */
    readonly email: string;
    /**
     * (Optional String) The timestamp that the invitation will expire.
     */
    readonly expiresAt: string;
    /**
     * (Required String) The id of invitation creator.
     */
    readonly id: string;
    /**
     * (Optional String) The status of invitations. Accepted values are: `INVITE_STATUS_SENT`,`INVITE_STATUS_STAGED`,`INVITE_STATUS_ACCEPTED`,`INVITE_STATUS_EXPIRED`, and `INVITE_STATUS_DEACTIVATED`.
     */
    readonly status: string;
    /**
     * (Required Configuration Block) supports the following:
     */
    readonly users: outputs.GetInvitationUser[];
}
/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.Invitation` describes an Invitation data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const main = confluentcloud.getInvitation({
 *     id: "i-gxxn1",
 * });
 * export const invitation = main;
 * ```
 */
export function getInvitationOutput(args: GetInvitationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInvitationResult> {
    return pulumi.output(args).apply((a: any) => getInvitation(a, opts))
}

/**
 * A collection of arguments for invoking getInvitation.
 */
export interface GetInvitationOutputArgs {
    /**
     * The ID of the Invitation, for example, `i-zyw30`.
     */
    id: pulumi.Input<string>;
}
