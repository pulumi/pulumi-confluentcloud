// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `confluentcloud.ServiceAccount` describes a Service Account data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const exampleUsingIdServiceAccount = confluentcloud.getServiceAccount({
 *     id: "sa-abc123",
 * });
 * export const exampleUsingId = exampleUsingIdServiceAccount;
 * const exampleUsingName = confluentcloud.getServiceAccount({
 *     displayName: "test_sa",
 * });
 * const test_env = new confluentcloud.Environment("test-env", {displayName: exampleUsingIdServiceAccount.then(exampleUsingIdServiceAccount => `env_for_${exampleUsingIdServiceAccount.displayName}`)});
 * ```
 */
export function getServiceAccount(args?: GetServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceAccountResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("confluentcloud:index/getServiceAccount:getServiceAccount", {
        "displayName": args.displayName,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceAccount.
 */
export interface GetServiceAccountArgs {
    /**
     * A human-readable name for the Service Account.
     */
    displayName?: string;
    /**
     * The ID of the Service Account (e.g., `sa-abc123`).
     */
    id?: string;
}

/**
 * A collection of values returned by getServiceAccount.
 */
export interface GetServiceAccountResult {
    /**
     * (Required String) An API Version of the schema version of the Service Account.
     */
    readonly apiVersion: string;
    /**
     * (Required String) A free-form description of the Service Account.
     */
    readonly description: string;
    /**
     * (Required String) A human-readable name for the Service Account.
     */
    readonly displayName: string;
    /**
     * (Required String) The ID of the Service Account (e.g., `sa-abc123`).
     */
    readonly id: string;
    /**
     * (Required String) A kind of the Service Account.
     */
    readonly kind: string;
}

export function getServiceAccountOutput(args?: GetServiceAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceAccountResult> {
    return pulumi.output(args).apply(a => getServiceAccount(a, opts))
}

/**
 * A collection of arguments for invoking getServiceAccount.
 */
export interface GetServiceAccountOutputArgs {
    /**
     * A human-readable name for the Service Account.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The ID of the Service Account (e.g., `sa-abc123`).
     */
    id?: pulumi.Input<string>;
}
