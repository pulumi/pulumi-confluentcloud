// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 * ### Example Transit Gateway Attachment on AWS
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const development = new confluentcloud.Environment("development", {});
 * const aws_transit_gateway_attachment = new confluentcloud.Network("aws-transit-gateway-attachment", {
 *     displayName: "AWS Transit Gateway Attachment Network",
 *     cloud: "AWS",
 *     region: "us-east-2",
 *     cidr: "10.10.0.0/16",
 *     connectionTypes: ["TRANSITGATEWAY"],
 *     environment: {
 *         id: development.id,
 *     },
 * });
 * const aws = new confluentcloud.TransitGatewayAttachment("aws", {
 *     displayName: "AWS Transit Gateway Attachment",
 *     aws: {
 *         ramResourceShareArn: "arn:aws:ram:us-east-2:000000000000:resource-share/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx",
 *         transitGatewayId: "tgw-xxxxxxxxxxxxxxxxx",
 *         routes: [
 *             "192.168.0.0/16",
 *             "172.16.0.0/12",
 *             "100.64.0.0/10",
 *             "10.0.0.0/8",
 *         ],
 *     },
 *     environment: {
 *         id: development.id,
 *     },
 *     network: {
 *         id: aws_transit_gateway_attachment.id,
 *     },
 * });
 * ```
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.TransitGatewayAttachment` resource:
 *   * `dedicated-transit-gateway-attachment-aws-kafka-acls`: _Dedicated_ Kafka cluster on AWS that is accessible via Transit Gateway Endpoint with authorization using ACLs
 *   * enterprise-privatelinkattachment-aws-kafka-acls
 *
 * ## Import
 *
 * You can import a Transit Gateway Attachment by using Environment ID and Transit Gateway Attachment ID, in the format `<Environment ID>/<Transit Gateway Attachment ID>`. The following example shows how to import a Transit Gateway Attachment:
 *
 *  $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
 *
 *  $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
 *
 * ```sh
 * $ pulumi import confluentcloud:index/transitGatewayAttachment:TransitGatewayAttachment my_tgwa env-abc123/tgwa-abc123
 * ```
 *
 *  !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 */
export class TransitGatewayAttachment extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TransitGatewayAttachmentState, opts?: pulumi.CustomResourceOptions): TransitGatewayAttachment {
        return new TransitGatewayAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'confluentcloud:index/transitGatewayAttachment:TransitGatewayAttachment';

    /**
     * Returns true if the given object is an instance of TransitGatewayAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TransitGatewayAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TransitGatewayAttachment.__pulumiType;
    }

    /**
     * (Required Configuration Block) The AWS-specific Transit Gateway Attachment details. It supports the following:
     */
    public readonly aws!: pulumi.Output<outputs.TransitGatewayAttachmentAws | undefined>;
    /**
     * The name of the Transit Gateway Attachment.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    public readonly environment!: pulumi.Output<outputs.TransitGatewayAttachmentEnvironment>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    public readonly network!: pulumi.Output<outputs.TransitGatewayAttachmentNetwork>;

    /**
     * Create a TransitGatewayAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TransitGatewayAttachmentArgs | TransitGatewayAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TransitGatewayAttachmentState | undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
        } else {
            const args = argsOrState as TransitGatewayAttachmentArgs | undefined;
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TransitGatewayAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TransitGatewayAttachment resources.
 */
export interface TransitGatewayAttachmentState {
    /**
     * (Required Configuration Block) The AWS-specific Transit Gateway Attachment details. It supports the following:
     */
    aws?: pulumi.Input<inputs.TransitGatewayAttachmentAws>;
    /**
     * The name of the Transit Gateway Attachment.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment?: pulumi.Input<inputs.TransitGatewayAttachmentEnvironment>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    network?: pulumi.Input<inputs.TransitGatewayAttachmentNetwork>;
}

/**
 * The set of arguments for constructing a TransitGatewayAttachment resource.
 */
export interface TransitGatewayAttachmentArgs {
    /**
     * (Required Configuration Block) The AWS-specific Transit Gateway Attachment details. It supports the following:
     */
    aws?: pulumi.Input<inputs.TransitGatewayAttachmentAws>;
    /**
     * The name of the Transit Gateway Attachment.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.TransitGatewayAttachmentEnvironment>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    network: pulumi.Input<inputs.TransitGatewayAttachmentNetwork>;
}
