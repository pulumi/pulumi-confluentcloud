// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.AccessPoint` provides a Access Point resource that enables creating, editing, and deleting Access Points on Confluent Cloud.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const development = new confluentcloud.Environment("development", {displayName: "Development"});
 * const aws = new confluentcloud.AccessPoint("aws", {
 *     displayName: "access_point",
 *     environment: {
 *         id: development.id,
 *     },
 *     gateway: {
 *         id: main.gateway[0].id,
 *     },
 *     awsEgressPrivateLinkEndpoint: {
 *         vpcEndpointServiceName: "com.amazonaws.vpce.us-west-2.vpce-svc-00000000000000000",
 *     },
 * });
 * const azure = new confluentcloud.AccessPoint("azure", {
 *     displayName: "access_point",
 *     environment: {
 *         id: development.id,
 *     },
 *     gateway: {
 *         id: main.gateway[0].id,
 *     },
 *     azureEgressPrivateLinkEndpoint: {
 *         privateLinkServiceResourceId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/s-abcde/providers/Microsoft.Network/privateLinkServices/pls-plt-abcdef-az3",
 *         privateLinkSubresourceName: "sqlServer",
 *     },
 * });
 * const gcp = new confluentcloud.AccessPoint("gcp", {
 *     displayName: "access_point",
 *     environment: {
 *         id: development.id,
 *     },
 *     gateway: {
 *         id: main.gateway[0].id,
 *     },
 *     gcpEgressPrivateServiceConnectEndpoint: {
 *         privateServiceConnectEndpointTarget: "projects/example-project/regions/us-central1/serviceAttachments/my-service-attachment",
 *     },
 * });
 * const pni = new confluentcloud.AccessPoint("pni", {
 *     displayName: "access_point",
 *     environment: {
 *         id: development.id,
 *     },
 *     gateway: {
 *         id: mainConfluentGateway.id,
 *     },
 *     awsPrivateNetworkInterface: {
 *         networkInterfaces: mainAwsNetworkInterface.map(__item => __item.id),
 *         account: awsAccountId,
 *     },
 * }, {
 *     dependsOn: [mainAwsNetworkInterfacePermission],
 * });
 * ```
 *
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.AccessPoint` resource:
 *   * enterprise-pni-aws-kafka-rbac: _Enterprise_ Kafka cluster on AWS that is accessible via Confluent Private Network Interface (PNI) with authorization using RBAC
 *   * freight-aws-kafka-rbac: _Freight_ Kafka cluster on AWS that is accessible via Confluent Private Network Interface (PNI) with authorization using RBAC
 *
 * ## Import
 *
 * You can import a Access Point by using Environment ID and Access Point ID, in the format `<Environment ID>/<Access Point ID>`. The following example shows how to import a Access Point:
 *
 * $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
 *
 * $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
 *
 * ```sh
 * $ pulumi import confluentcloud:index/accessPoint:AccessPoint main env-abc123/ap-abc123
 * ```
 *
 * !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 */
export class AccessPoint extends pulumi.CustomResource {
    /**
     * Get an existing AccessPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessPointState, opts?: pulumi.CustomResourceOptions): AccessPoint {
        return new AccessPoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'confluentcloud:index/accessPoint:AccessPoint';

    /**
     * Returns true if the given object is an instance of AccessPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccessPoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessPoint.__pulumiType;
    }

    /**
     * (Optional Configuration Block) supports the following:
     */
    declare public readonly awsEgressPrivateLinkEndpoint: pulumi.Output<outputs.AccessPointAwsEgressPrivateLinkEndpoint | undefined>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    declare public readonly awsPrivateNetworkInterface: pulumi.Output<outputs.AccessPointAwsPrivateNetworkInterface | undefined>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    declare public readonly azureEgressPrivateLinkEndpoint: pulumi.Output<outputs.AccessPointAzureEgressPrivateLinkEndpoint | undefined>;
    /**
     * The name of the Access Point.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    declare public readonly environment: pulumi.Output<outputs.AccessPointEnvironment>;
    declare public readonly gateway: pulumi.Output<outputs.AccessPointGateway>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    declare public readonly gcpEgressPrivateServiceConnectEndpoint: pulumi.Output<outputs.AccessPointGcpEgressPrivateServiceConnectEndpoint | undefined>;

    /**
     * Create a AccessPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessPointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccessPointArgs | AccessPointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccessPointState | undefined;
            resourceInputs["awsEgressPrivateLinkEndpoint"] = state?.awsEgressPrivateLinkEndpoint;
            resourceInputs["awsPrivateNetworkInterface"] = state?.awsPrivateNetworkInterface;
            resourceInputs["azureEgressPrivateLinkEndpoint"] = state?.azureEgressPrivateLinkEndpoint;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["gateway"] = state?.gateway;
            resourceInputs["gcpEgressPrivateServiceConnectEndpoint"] = state?.gcpEgressPrivateServiceConnectEndpoint;
        } else {
            const args = argsOrState as AccessPointArgs | undefined;
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.gateway === undefined && !opts.urn) {
                throw new Error("Missing required property 'gateway'");
            }
            resourceInputs["awsEgressPrivateLinkEndpoint"] = args?.awsEgressPrivateLinkEndpoint;
            resourceInputs["awsPrivateNetworkInterface"] = args?.awsPrivateNetworkInterface;
            resourceInputs["azureEgressPrivateLinkEndpoint"] = args?.azureEgressPrivateLinkEndpoint;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["environment"] = args?.environment;
            resourceInputs["gateway"] = args?.gateway;
            resourceInputs["gcpEgressPrivateServiceConnectEndpoint"] = args?.gcpEgressPrivateServiceConnectEndpoint;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessPoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccessPoint resources.
 */
export interface AccessPointState {
    /**
     * (Optional Configuration Block) supports the following:
     */
    awsEgressPrivateLinkEndpoint?: pulumi.Input<inputs.AccessPointAwsEgressPrivateLinkEndpoint>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    awsPrivateNetworkInterface?: pulumi.Input<inputs.AccessPointAwsPrivateNetworkInterface>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    azureEgressPrivateLinkEndpoint?: pulumi.Input<inputs.AccessPointAzureEgressPrivateLinkEndpoint>;
    /**
     * The name of the Access Point.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment?: pulumi.Input<inputs.AccessPointEnvironment>;
    gateway?: pulumi.Input<inputs.AccessPointGateway>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    gcpEgressPrivateServiceConnectEndpoint?: pulumi.Input<inputs.AccessPointGcpEgressPrivateServiceConnectEndpoint>;
}

/**
 * The set of arguments for constructing a AccessPoint resource.
 */
export interface AccessPointArgs {
    /**
     * (Optional Configuration Block) supports the following:
     */
    awsEgressPrivateLinkEndpoint?: pulumi.Input<inputs.AccessPointAwsEgressPrivateLinkEndpoint>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    awsPrivateNetworkInterface?: pulumi.Input<inputs.AccessPointAwsPrivateNetworkInterface>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    azureEgressPrivateLinkEndpoint?: pulumi.Input<inputs.AccessPointAzureEgressPrivateLinkEndpoint>;
    /**
     * The name of the Access Point.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.AccessPointEnvironment>;
    gateway: pulumi.Input<inputs.AccessPointGateway>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    gcpEgressPrivateServiceConnectEndpoint?: pulumi.Input<inputs.AccessPointGcpEgressPrivateServiceConnectEndpoint>;
}
