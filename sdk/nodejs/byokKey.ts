// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.ByokKey` provides a BYOK Key resource that enables creating, editing, and deleting BYOK Key on Confluent Cloud.
 *
 * ## Example Usage
 * ### Example BYOK Key on Azure
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const azureKey = new confluentcloud.ByokKey("azureKey", {azure: {
 *     keyIdentifier: "https://test-vault.vault.azure.net/keys/test-key",
 *     keyVaultId: "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/test-vault/providers/Microsoft.KeyVault/vaults/test-vault",
 *     tenantId: "11111111-1111-1111-1111-111111111111",
 * }});
 * ```
 * ### Example BYOK Key on GCP
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const gcpKey = new confluentcloud.ByokKey("gcpKey", {gcp: {
 *     keyId: "projects/temp-gear-123456/locations/us-central1/keyRings/byok-test/cryptoKeys/byok-test",
 * }});
 * ```
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.ByokKey` resource:
 *   * dedicated-public-aws-byok-kafka-acls: An example of Encrypting Confluent Cloud Dedicated Kafka Clusters using Self-Managed Keys on AWS.
 *   * dedicated-public-azure-byok-kafka-acls: An example of Encrypting Confluent Cloud Dedicated Kafka Clusters using Self-Managed Keys on Azure.
 *
 * See [Confluent Cloud Bring Your Own Key (BYOK) Management API](https://docs.confluent.io/cloud/current/clusters/byok/index.html) to learn more about Encrypting Confluent Cloud Kafka Clusters using Self-Managed Keys.
 *
 * ## Import
 *
 * You can import a BYOK Key by using BYOK Key ID. The following example shows how to import a BYOK Key:
 *
 *  $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
 *
 *  $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
 *
 * ```sh
 * $ pulumi import confluentcloud:index/byokKey:ByokKey aws_key cck-abcde
 * ```
 *
 *  !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 */
export class ByokKey extends pulumi.CustomResource {
    /**
     * Get an existing ByokKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ByokKeyState, opts?: pulumi.CustomResourceOptions): ByokKey {
        return new ByokKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'confluentcloud:index/byokKey:ByokKey';

    /**
     * Returns true if the given object is an instance of ByokKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ByokKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ByokKey.__pulumiType;
    }

    /**
     * (Optional Configuration Block) supports the following:
     */
    public readonly aws!: pulumi.Output<outputs.ByokKeyAws>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    public readonly azure!: pulumi.Output<outputs.ByokKeyAzure>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    public readonly gcp!: pulumi.Output<outputs.ByokKeyGcp>;

    /**
     * Create a ByokKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ByokKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ByokKeyArgs | ByokKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ByokKeyState | undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["azure"] = state ? state.azure : undefined;
            resourceInputs["gcp"] = state ? state.gcp : undefined;
        } else {
            const args = argsOrState as ByokKeyArgs | undefined;
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["azure"] = args ? args.azure : undefined;
            resourceInputs["gcp"] = args ? args.gcp : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ByokKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ByokKey resources.
 */
export interface ByokKeyState {
    /**
     * (Optional Configuration Block) supports the following:
     */
    aws?: pulumi.Input<inputs.ByokKeyAws>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    azure?: pulumi.Input<inputs.ByokKeyAzure>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    gcp?: pulumi.Input<inputs.ByokKeyGcp>;
}

/**
 * The set of arguments for constructing a ByokKey resource.
 */
export interface ByokKeyArgs {
    /**
     * (Optional Configuration Block) supports the following:
     */
    aws?: pulumi.Input<inputs.ByokKeyAws>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    azure?: pulumi.Input<inputs.ByokKeyAzure>;
    /**
     * (Optional Configuration Block) supports the following:
     */
    gcp?: pulumi.Input<inputs.ByokKeyGcp>;
}
