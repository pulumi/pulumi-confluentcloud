// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const nle = new confluentcloud.NetworkLinkEndpoint("nle", {
 *     displayName: "nle1",
 *     description: "TEST-NLE1",
 *     environment: {
 *         id: "env-xyz456",
 *     },
 *     network: {
 *         id: "n-abc123",
 *     },
 *     networkLinkService: {
 *         id: "nls-g3e1ox",
 *     },
 * });
 * export const networkLinkEndpoint = nle;
 * ```
 *
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.NetworkLinkEndpoint` resource:
 * * `cluster-link-over-aws-private-link-networks`: Cluster link over two dedicated clusters in separate AWS PrivateLink networks
 *
 * ## Import
 *
 * You can import a Network Link Endpoint by using Environment ID and Network Link Endpoint ID, in the format `<Environment ID>/<Network Link Endpoint ID>`. The following example shows how to import a Network Link Endpoint:
 *
 * $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
 *
 * $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
 *
 * ```sh
 * $ pulumi import confluentcloud:index/networkLinkEndpoint:NetworkLinkEndpoint my_nle env-abc123/nle-abc123
 * ```
 *
 * !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 */
export class NetworkLinkEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing NetworkLinkEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkLinkEndpointState, opts?: pulumi.CustomResourceOptions): NetworkLinkEndpoint {
        return new NetworkLinkEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'confluentcloud:index/networkLinkEndpoint:NetworkLinkEndpoint';

    /**
     * Returns true if the given object is an instance of NetworkLinkEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkLinkEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkLinkEndpoint.__pulumiType;
    }

    /**
     * The description of the Network Link Endpoint.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The name of the Network Link Endpoint.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    public readonly environment!: pulumi.Output<outputs.NetworkLinkEndpointEnvironment>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    public readonly network!: pulumi.Output<outputs.NetworkLinkEndpointNetwork>;
    public readonly networkLinkService!: pulumi.Output<outputs.NetworkLinkEndpointNetworkLinkService>;
    /**
     * (Required String) The Confluent Resource Name of the Network Link Endpoint.
     */
    public /*out*/ readonly resourceName!: pulumi.Output<string>;

    /**
     * Create a NetworkLinkEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkLinkEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkLinkEndpointArgs | NetworkLinkEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkLinkEndpointState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["networkLinkService"] = state ? state.networkLinkService : undefined;
            resourceInputs["resourceName"] = state ? state.resourceName : undefined;
        } else {
            const args = argsOrState as NetworkLinkEndpointArgs | undefined;
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.networkLinkService === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkLinkService'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["networkLinkService"] = args ? args.networkLinkService : undefined;
            resourceInputs["resourceName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkLinkEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkLinkEndpoint resources.
 */
export interface NetworkLinkEndpointState {
    /**
     * The description of the Network Link Endpoint.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Network Link Endpoint.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment?: pulumi.Input<inputs.NetworkLinkEndpointEnvironment>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    network?: pulumi.Input<inputs.NetworkLinkEndpointNetwork>;
    networkLinkService?: pulumi.Input<inputs.NetworkLinkEndpointNetworkLinkService>;
    /**
     * (Required String) The Confluent Resource Name of the Network Link Endpoint.
     */
    resourceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkLinkEndpoint resource.
 */
export interface NetworkLinkEndpointArgs {
    /**
     * The description of the Network Link Endpoint.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Network Link Endpoint.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.NetworkLinkEndpointEnvironment>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    network: pulumi.Input<inputs.NetworkLinkEndpointNetwork>;
    networkLinkService: pulumi.Input<inputs.NetworkLinkEndpointNetworkLinkService>;
}
