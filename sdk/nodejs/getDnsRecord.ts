// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.DnsRecord` describes a DNS Record data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const main = confluentcloud.getDnsRecord({
 *     id: "dnsrec-abc123",
 *     environment: {
 *         id: "env-123abc",
 *     },
 * });
 * export const dnsRecord = main;
 * ```
 */
export function getDnsRecord(args: GetDnsRecordArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsRecordResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluentcloud:index/getDnsRecord:getDnsRecord", {
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordArgs {
    environment: inputs.GetDnsRecordEnvironment;
    /**
     * The ID of the DNS Record, for example, `dnsrec-abc123`.
     */
    id: string;
}

/**
 * A collection of values returned by getDnsRecord.
 */
export interface GetDnsRecordResult {
    /**
     * (Required String) A human-readable name for the DNS Record.
     */
    readonly displayName: string;
    /**
     * (Required String) The fully qualified domain name of the DNS Record.
     */
    readonly domain: string;
    readonly environment: outputs.GetDnsRecordEnvironment;
    /**
     * (Required Configuration Block) supports the following:
     */
    readonly gateways: outputs.GetDnsRecordGateway[];
    /**
     * (Required String) The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
     */
    readonly id: string;
    /**
     * (Required Configuration Block) supports the following:
     */
    readonly privateLinkAccessPoints: outputs.GetDnsRecordPrivateLinkAccessPoint[];
}
/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.DnsRecord` describes a DNS Record data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const main = confluentcloud.getDnsRecord({
 *     id: "dnsrec-abc123",
 *     environment: {
 *         id: "env-123abc",
 *     },
 * });
 * export const dnsRecord = main;
 * ```
 */
export function getDnsRecordOutput(args: GetDnsRecordOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsRecordResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("confluentcloud:index/getDnsRecord:getDnsRecord", {
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsRecord.
 */
export interface GetDnsRecordOutputArgs {
    environment: pulumi.Input<inputs.GetDnsRecordEnvironmentArgs>;
    /**
     * The ID of the DNS Record, for example, `dnsrec-abc123`.
     */
    id: pulumi.Input<string>;
}
