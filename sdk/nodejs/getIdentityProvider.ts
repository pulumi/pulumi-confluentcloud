// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * [![Limited Availability](https://img.shields.io/badge/Lifecycle%20Stage-Limited%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy) [![Request Access To OAuth API](https://img.shields.io/badge/-Request%20Access%20To%20OAuth%20API-%23bc8540)](mailto:ccloud-api-access+iam-v2-closed-preview@confluent.io?subject=Request%20to%20join%20OAuth%20API%20Closed%20Preview&body=I%E2%80%99d%20like%20to%20join%20the%20Confluent%20Cloud%20API%20Closed%20Preview%20for%20iam/v2%20to%20provide%20early%20feedback%21%20My%20Cloud%20Organization%20ID%20is%20%3Cretrieve%20from%20https%3A//confluent.cloud/settings/billing/payment%3E.)
 *
 * `confluentcloud.IdentityProvider` describes an Identity Provider data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const exampleUsingIdIdentityProvider = confluentcloud.getIdentityProvider({
 *     id: "op-abc123",
 * });
 * export const exampleUsingId = exampleUsingIdIdentityProvider;
 * const exampleUsingNameIdentityProvider = confluentcloud.getIdentityProvider({
 *     displayName: "My OIDC Provider: Azure AD",
 * });
 * export const exampleUsingName = exampleUsingNameIdentityProvider;
 * ```
 */
export function getIdentityProvider(args?: GetIdentityProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityProviderResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("confluentcloud:index/getIdentityProvider:getIdentityProvider", {
        "displayName": args.displayName,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getIdentityProvider.
 */
export interface GetIdentityProviderArgs {
    /**
     * A human-readable name for the Identity Provider.
     */
    displayName?: string;
    /**
     * The ID of the Identity Provider, for example, `op-abc123`.
     */
    id?: string;
}

/**
 * A collection of values returned by getIdentityProvider.
 */
export interface GetIdentityProviderResult {
    /**
     * (Required String) A description for the Identity Provider.
     */
    readonly description: string;
    /**
     * (Required String) A human-readable name for the Identity Provider.
     */
    readonly displayName: string;
    /**
     * (Required String) The ID of the Identity Provider, for example, `op-abc123`.
     */
    readonly id: string;
    /**
     * (Required String) A publicly reachable issuer URI for the Identity Provider. The unique issuer URI string represents the entity for issuing tokens.
     */
    readonly issuer: string;
    /**
     * (Required String) A publicly reachable JSON Web Key Set (JWKS) URI for the Identity Provider. A JSON Web Key Set (JWKS) provides a set of keys containing the public keys used to verify any JSON Web Token (JWT) issued by your OAuth 2.0 identity provider.
     */
    readonly jwksUri: string;
}

export function getIdentityProviderOutput(args?: GetIdentityProviderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIdentityProviderResult> {
    return pulumi.output(args).apply(a => getIdentityProvider(a, opts))
}

/**
 * A collection of arguments for invoking getIdentityProvider.
 */
export interface GetIdentityProviderOutputArgs {
    /**
     * A human-readable name for the Identity Provider.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The ID of the Identity Provider, for example, `op-abc123`.
     */
    id?: pulumi.Input<string>;
}
