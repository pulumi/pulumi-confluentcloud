// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.PrivateLinkAttachment` describes a Private Link Attachment data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const main = confluentcloud.getPrivateLinkAttachment({
 *     id: "platt-abcde",
 *     environment: {
 *         id: "env-1234",
 *     },
 * });
 * export const platt = main;
 * ```
 *
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.PrivateLinkAttachment` data source:
 * * `enterprise-privatelinkattachment-aws-kafka-acls`: _Enterprise_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using ACLs
 * * `enterprise-privatelinkattachment-azure-kafka-acls`: _Enterprise_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using ACLs
 */
export function getPrivateLinkAttachment(args: GetPrivateLinkAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateLinkAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluentcloud:index/getPrivateLinkAttachment:getPrivateLinkAttachment", {
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateLinkAttachment.
 */
export interface GetPrivateLinkAttachmentArgs {
    environment: inputs.GetPrivateLinkAttachmentEnvironment;
    /**
     * The ID of the Private Link Attachment, for example, `platt-61ovvd`.
     */
    id: string;
}

/**
 * A collection of values returned by getPrivateLinkAttachment.
 */
export interface GetPrivateLinkAttachmentResult {
    /**
     * (Optional Configuration Block) supports the following:
     */
    readonly aws: outputs.GetPrivateLinkAttachmentAw[];
    /**
     * (Optional Configuration Block) supports the following:
     * - `privateLinkServiceAlias ` - (Required String) Azure Private Link service alias for the availability zone.
     */
    readonly azures: outputs.GetPrivateLinkAttachmentAzure[];
    /**
     * (Optional String) The cloud service provider that hosts the resources to access with the Private Link Attachment.
     */
    readonly cloud: string;
    /**
     * (Optional String) The name of the Private Link Attachment.
     */
    readonly displayName: string;
    /**
     * (Required String) The root DNS domain for the Private Link Attachment, for example, `pr123a.us-east-2.aws.confluent.cloud`.
     */
    readonly dnsDomain: string;
    readonly environment: outputs.GetPrivateLinkAttachmentEnvironment;
    readonly gcps: outputs.GetPrivateLinkAttachmentGcp[];
    readonly id: string;
    /**
     * (Optional String) The cloud service provider region where the resources to be accessed using the Private Link Attachment are located.
     */
    readonly region: string;
    /**
     * (Required String) The Confluent Resource Name of the Private Link Attachment, for example `crn://confluent.cloud/organization=1111aaaa-11aa-11aa-11aa-111111aaaaaa/environment=env-75gxp2/private-link-attachment=platt-1q0ky0`.
     */
    readonly resourceName: string;
}
/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.PrivateLinkAttachment` describes a Private Link Attachment data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const main = confluentcloud.getPrivateLinkAttachment({
 *     id: "platt-abcde",
 *     environment: {
 *         id: "env-1234",
 *     },
 * });
 * export const platt = main;
 * ```
 *
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.PrivateLinkAttachment` data source:
 * * `enterprise-privatelinkattachment-aws-kafka-acls`: _Enterprise_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using ACLs
 * * `enterprise-privatelinkattachment-azure-kafka-acls`: _Enterprise_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using ACLs
 */
export function getPrivateLinkAttachmentOutput(args: GetPrivateLinkAttachmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPrivateLinkAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("confluentcloud:index/getPrivateLinkAttachment:getPrivateLinkAttachment", {
        "environment": args.environment,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateLinkAttachment.
 */
export interface GetPrivateLinkAttachmentOutputArgs {
    environment: pulumi.Input<inputs.GetPrivateLinkAttachmentEnvironmentArgs>;
    /**
     * The ID of the Private Link Attachment, for example, `platt-61ovvd`.
     */
    id: pulumi.Input<string>;
}
