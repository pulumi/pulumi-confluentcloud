// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ### Example Private Link Access on AWS
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const development = new confluentcloud.Environment("development", {displayName: "Development"});
 * const aws_private_link = new confluentcloud.Network("aws-private-link", {
 *     displayName: "AWS Private Link Network",
 *     cloud: "AWS",
 *     region: "us-east-1",
 *     connectionTypes: ["PRIVATELINK"],
 *     zones: [
 *         "use1-az1",
 *         "use1-az2",
 *         "use1-az6",
 *     ],
 *     environment: {
 *         id: development.id,
 *     },
 * });
 * const aws = new confluentcloud.PrivateLinkAccess("aws", {
 *     displayName: "AWS Private Link Access",
 *     aws: {
 *         account: "012345678901",
 *     },
 *     environment: {
 *         id: development.id,
 *     },
 *     network: {
 *         id: aws_private_link.id,
 *     },
 * });
 * ```
 *
 * ### Example Private Link Access on Azure
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const development = new confluentcloud.Environment("development", {displayName: "Development"});
 * const azure_private_link = new confluentcloud.Network("azure-private-link", {
 *     displayName: "Azure Private Link Network",
 *     cloud: "AZURE",
 *     region: "centralus",
 *     connectionTypes: ["PRIVATELINK"],
 *     environment: {
 *         id: development.id,
 *     },
 * });
 * const azure = new confluentcloud.PrivateLinkAccess("azure", {
 *     displayName: "Azure Private Link Access",
 *     azure: {
 *         subscription: "1234abcd-12ab-34cd-1234-123456abcdef",
 *     },
 *     environment: {
 *         id: development.id,
 *     },
 *     network: {
 *         id: azure_private_link.id,
 *     },
 * });
 * ```
 *
 * ### Example Private Service Connect on GCP
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as confluentcloud from "@pulumi/confluentcloud";
 *
 * const development = new confluentcloud.Environment("development", {displayName: "Development"});
 * const gcp_private_service_connect = new confluentcloud.Network("gcp-private-service-connect", {
 *     displayName: "GCP Private Service Connect Network",
 *     cloud: "GCP",
 *     region: "us-central1",
 *     connectionTypes: ["PRIVATELINK"],
 *     zones: [
 *         "us-central1-a",
 *         "us-central1-b",
 *         "us-central1-c",
 *     ],
 *     environment: {
 *         id: development.id,
 *     },
 * });
 * const gcp = new confluentcloud.PrivateLinkAccess("gcp", {
 *     displayName: "GCP Private Service Connect",
 *     gcp: {
 *         project: "temp-gear-123456",
 *     },
 *     environment: {
 *         id: development.id,
 *     },
 *     network: {
 *         id: gcp_private_service_connect.id,
 *     },
 * });
 * ```
 *
 * ## Getting Started
 *
 * The following end-to-end examples might help to get started with `confluentcloud.PrivateLinkAccess` resource:
 *   * dedicated-privatelink-aws-kafka-acls: _Dedicated_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using ACLs
 *   * dedicated-privatelink-aws-kafka-rbac: _Dedicated_ Kafka cluster on AWS that is accessible via PrivateLink connections with authorization using RBAC
 *   * dedicated-privatelink-azure-kafka-rbac: _Dedicated_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using RBAC
 *   * dedicated-privatelink-azure-kafka-acls: _Dedicated_ Kafka cluster on Azure that is accessible via PrivateLink connections with authorization using ACLs
 *   * dedicated-private-service-connect-gcp-kafka-acls: _Dedicated_ Kafka cluster on GCP that is accessible via Private Service Connect connections with authorization using ACLs
 *   * dedicated-private-service-connect-gcp-kafka-rbac: _Dedicated_ Kafka cluster on GCP that is accessible via Private Service Connect connections with authorization using RBAC
 *
 * ## Import
 *
 * You can import a Private Link Access by using Environment ID and Private Link Access ID, in the format `<Environment ID>/<Private Link Access ID>`. The following example shows how to import a Private Link Access:
 *
 * $ export CONFLUENT_CLOUD_API_KEY="<cloud_api_key>"
 *
 * $ export CONFLUENT_CLOUD_API_SECRET="<cloud_api_secret>"
 *
 * ```sh
 * $ pulumi import confluentcloud:index/privateLinkAccess:PrivateLinkAccess my_pla env-abc123/pla-abc123
 * ```
 *
 * !> **Warning:** Do not forget to delete terminal command history afterwards for security purposes.
 */
export class PrivateLinkAccess extends pulumi.CustomResource {
    /**
     * Get an existing PrivateLinkAccess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateLinkAccessState, opts?: pulumi.CustomResourceOptions): PrivateLinkAccess {
        return new PrivateLinkAccess(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'confluentcloud:index/privateLinkAccess:PrivateLinkAccess';

    /**
     * Returns true if the given object is an instance of PrivateLinkAccess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateLinkAccess {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateLinkAccess.__pulumiType;
    }

    public readonly aws!: pulumi.Output<outputs.PrivateLinkAccessAws | undefined>;
    public readonly azure!: pulumi.Output<outputs.PrivateLinkAccessAzure | undefined>;
    /**
     * The name of the Private Link Access.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    public readonly environment!: pulumi.Output<outputs.PrivateLinkAccessEnvironment>;
    public readonly gcp!: pulumi.Output<outputs.PrivateLinkAccessGcp | undefined>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    public readonly network!: pulumi.Output<outputs.PrivateLinkAccessNetwork>;

    /**
     * Create a PrivateLinkAccess resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateLinkAccessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateLinkAccessArgs | PrivateLinkAccessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateLinkAccessState | undefined;
            resourceInputs["aws"] = state ? state.aws : undefined;
            resourceInputs["azure"] = state ? state.azure : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["gcp"] = state ? state.gcp : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
        } else {
            const args = argsOrState as PrivateLinkAccessArgs | undefined;
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["aws"] = args ? args.aws : undefined;
            resourceInputs["azure"] = args ? args.azure : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["gcp"] = args ? args.gcp : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateLinkAccess.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivateLinkAccess resources.
 */
export interface PrivateLinkAccessState {
    aws?: pulumi.Input<inputs.PrivateLinkAccessAws>;
    azure?: pulumi.Input<inputs.PrivateLinkAccessAzure>;
    /**
     * The name of the Private Link Access.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment?: pulumi.Input<inputs.PrivateLinkAccessEnvironment>;
    gcp?: pulumi.Input<inputs.PrivateLinkAccessGcp>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    network?: pulumi.Input<inputs.PrivateLinkAccessNetwork>;
}

/**
 * The set of arguments for constructing a PrivateLinkAccess resource.
 */
export interface PrivateLinkAccessArgs {
    aws?: pulumi.Input<inputs.PrivateLinkAccessAws>;
    azure?: pulumi.Input<inputs.PrivateLinkAccessAzure>;
    /**
     * The name of the Private Link Access.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.PrivateLinkAccessEnvironment>;
    gcp?: pulumi.Input<inputs.PrivateLinkAccessGcp>;
    /**
     * Network represents a network (VPC) in Confluent Cloud. All Networks exist within Confluent-managed cloud provider
     * accounts.
     */
    network: pulumi.Input<inputs.PrivateLinkAccessNetwork>;
}
