{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "apiKey.ts",
        "clusterLink.ts",
        "config/index.ts",
        "config/vars.ts",
        "connector.ts",
        "environment.ts",
        "getEnvironment.ts",
        "getIdentityPool.ts",
        "getIdentityProvider.ts",
        "getInvitation.ts",
        "getKafkaClientQuota.ts",
        "getKafkaCluster.ts",
        "getKafkaTopic.ts",
        "getKsqlCluster.ts",
        "getNetwork.ts",
        "getOrganization.ts",
        "getPeering.ts",
        "getPrivateLinkAccess.ts",
        "getRoleBinding.ts",
        "getSchema.ts",
        "getSchemaRegistryCluster.ts",
        "getSchemaRegistryClusterConfig.ts",
        "getSchemaRegistryClusterMode.ts",
        "getSchemaRegistryRegion.ts",
        "getServiceAccount.ts",
        "getSubjectConfig.ts",
        "getSubjectMode.ts",
        "getTransitGatewayAttachment.ts",
        "getUser.ts",
        "identityPool.ts",
        "identityProvider.ts",
        "index.ts",
        "invitation.ts",
        "kafkaAcl.ts",
        "kafkaClientQuota.ts",
        "kafkaCluster.ts",
        "kafkaClusterConfig.ts",
        "kafkaMirrorTopic.ts",
        "kafkaTopic.ts",
        "ksqlCluster.ts",
        "network.ts",
        "peering.ts",
        "privateLinkAccess.ts",
        "provider.ts",
        "roleBinding.ts",
        "schema.ts",
        "schemaRegistryCluster.ts",
        "schemaRegistryClusterConfig.ts",
        "schemaRegistryClusterMode.ts",
        "serviceAccount.ts",
        "subjectConfig.ts",
        "subjectMode.ts",
        "transitGatewayAttachment.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts"
    ]
}
