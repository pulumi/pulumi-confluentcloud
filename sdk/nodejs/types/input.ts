// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AccessPointAwsEgressPrivateLinkEndpoint {
    /**
     * Whether a resource should be provisioned with high availability. Endpoints deployed with high availability have network interfaces deployed in multiple AZs. Defaults to `false`.
     */
    enableHighAvailability?: pulumi.Input<boolean>;
    /**
     * (Required String) The DNS name of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `*.vpce-00000000000000000-abcd1234.s3.us-west-2.vpce.amazonaws.com`.
     */
    vpcEndpointDnsName?: pulumi.Input<string>;
    /**
     * (Required String) The ID of a VPC Endpoint (if any) that is connected to the VPC Endpoint service, for example, `vpce-00000000000000000`.
     */
    vpcEndpointId?: pulumi.Input<string>;
    /**
     * AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
     */
    vpcEndpointServiceName: pulumi.Input<string>;
}

export interface AccessPointAwsPrivateNetworkInterface {
    /**
     * (Required String) The AWS account ID associated with the ENIs you are using for the Confluent Private Network Interface, for example: `000000000000`.
     */
    account: pulumi.Input<string>;
    /**
     * (Required List of Strings) List of the IDs of the Elastic Network Interfaces, for example: `["eni-00000000000000000", "eni-00000000000000001", "eni-00000000000000002", "eni-00000000000000003", "eni-00000000000000004", "eni-00000000000000005"]`
     */
    networkInterfaces: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AccessPointAzureEgressPrivateLinkEndpoint {
    /**
     * (Required List of Strings) Domains of the Private Endpoint (if any) based off FQDNs in Azure custom DNS configs, which are required in your private DNS setup, for example: `["dbname.database.windows.net", "dbname-region.database.windows.net"]`.
     */
    privateEndpointCustomDnsConfigDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required String) Domain of the Private Endpoint (if any) that is connected to the Private Link service.
     */
    privateEndpointDomain?: pulumi.Input<string>;
    /**
     * (Required String) IP address of the Private Endpoint (if any) that is connected to the Private Link service.
     */
    privateEndpointIpAddress?: pulumi.Input<string>;
    /**
     * (Required String) Resource ID of the Private Endpoint (if any) that is connected to the Private Link service.
     */
    privateEndpointResourceId?: pulumi.Input<string>;
    /**
     * Resource ID of the Azure Private Link service.
     */
    privateLinkServiceResourceId: pulumi.Input<string>;
    /**
     * Name of the subresource for the Private Endpoint to connect to.
     */
    privateLinkSubresourceName?: pulumi.Input<string>;
}

export interface AccessPointEnvironment {
    /**
     * The ID of the Environment that the Access Point belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface AccessPointGateway {
    /**
     * The ID of the gateway to which the Access Point belongs, for example, `gw-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface ApiKeyManagedResource {
    /**
     * The API group and version of the managed resource that the API Key associated with, for example, `cmk/v2`.
     */
    apiVersion: pulumi.Input<string>;
    /**
     * Environment objects represent an isolated namespace for your Confluent resources for organizational purposes.
     */
    environment: pulumi.Input<inputs.ApiKeyManagedResourceEnvironment>;
    /**
     * The ID of the managed resource that the API Key associated with, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The kind of the managed resource that the API Key associated with, for example, `Cluster`.
     */
    kind: pulumi.Input<string>;
}

export interface ApiKeyManagedResourceEnvironment {
    /**
     * The ID of the Environment that the managed resource belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface ApiKeyOwner {
    /**
     * The API group and version of the owner that the API Key belongs to, for example, `iam/v2`.
     */
    apiVersion: pulumi.Input<string>;
    /**
     * The ID of the owner that the API Key belongs to, for example, `sa-abc123` or `u-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The kind of the owner that the API Key belongs to, for example, `ServiceAccount` or `User`.
     */
    kind: pulumi.Input<string>;
}

export interface BusinessMetadataAttributeDefinition {
    /**
     * The default value of this attribute.
     */
    defaultValue?: pulumi.Input<string>;
    /**
     * The description of this attribute.
     */
    description?: pulumi.Input<string>;
    /**
     * An optional flag to control whether the attribute should be optional or required. The default value is `false`.
     */
    isOptional?: pulumi.Input<boolean>;
    /**
     * The name of the attribute.
     */
    name: pulumi.Input<string>;
    /**
     * (Optional Map) Block for the attribute options:
     * - `applicableEntityTypes` - (Optional String) The entity types that the attribute is applicable, it always returns `[\"cf_entity\"]`.
     * - `maxStrLength` - (Optional String) The maximum length of the string value, it always returns `5000`.
     */
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Required String) The type of the attribute, it always returns `string`.
     */
    type?: pulumi.Input<string>;
}

export interface BusinessMetadataBindingCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface BusinessMetadataBindingSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface BusinessMetadataCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface BusinessMetadataSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface ByokKeyAws {
    /**
     * The Amazon Resource Name (ARN) of an AWS KMS key.
     */
    keyArn: pulumi.Input<string>;
    /**
     * (Optional List of Strings) The Amazon Resource Names (ARNs) of IAM Roles created for this key-environment
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ByokKeyAzure {
    /**
     * (Optional String) The Application ID created for this key-environment combination.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The unique Key Object Identifier URL of an Azure Key Vault key.
     */
    keyIdentifier: pulumi.Input<string>;
    /**
     * Key Vault ID containing the key.
     */
    keyVaultId: pulumi.Input<string>;
    /**
     * Tenant ID (uuid) hosting the Key Vault containing the key.
     */
    tenantId: pulumi.Input<string>;
}

export interface ByokKeyGcp {
    /**
     * The Google Cloud Platform key ID.
     */
    keyId: pulumi.Input<string>;
    /**
     * (Optional String) The Google security group created for this key.
     */
    securityGroup?: pulumi.Input<string>;
}

export interface CatalogEntityAttributesCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface CatalogEntityAttributesSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface CertificatePoolCertificateAuthority {
    /**
     * The ID of the Certificate Authority for this Certificate Pool, for example, `op-123abc`.
     */
    id: pulumi.Input<string>;
}

export interface ClusterLinkDestinationKafkaCluster {
    /**
     * The bootstrap endpoint of the destination Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkDestinationKafkaClusterCredentials>;
    /**
     * The ID of the destination Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkDestinationKafkaClusterCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface ClusterLinkLocalKafkaCluster {
    /**
     * The bootstrap endpoint of the local Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkLocalKafkaClusterCredentials>;
    /**
     * The ID of the local Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the local Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkLocalKafkaClusterCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface ClusterLinkRemoteKafkaCluster {
    /**
     * The bootstrap endpoint of the remote Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkRemoteKafkaClusterCredentials>;
    /**
     * The ID of the remote Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the remote Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkRemoteKafkaClusterCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface ClusterLinkSourceKafkaCluster {
    /**
     * The bootstrap endpoint of the source Kafka cluster, for example, `SASL_SSL://pkc-00000.us-central1.gcp.confluent.cloud:9092` or `pkc-00000.us-central1.gcp.confluent.cloud:9092`).
     */
    bootstrapEndpoint?: pulumi.Input<string>;
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.ClusterLinkSourceKafkaClusterCredentials>;
    /**
     * The ID of the source Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the source Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface ClusterLinkSourceKafkaClusterCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface ConnectorEnvironment {
    /**
     * The ID of the Environment that the connector belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface ConnectorKafkaCluster {
    /**
     * The ID of the Kafka cluster that the connector belongs to, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface DnsForwarderEnvironment {
    /**
     * The ID of the Environment that the DNS Forwarder belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface DnsForwarderForwardViaIp {
    /**
     * List of IP addresses of the DNS server.
     */
    dnsServerIps?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DnsForwarderGateway {
    /**
     * The ID of the gateway to which the DNS Forwarder belongs, for example, `gw-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface DnsRecordEnvironment {
    /**
     * The ID of the Environment that the DNS Record belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface DnsRecordGateway {
    /**
     * The ID of the gateway to which the DNS Record belongs, for example, `gw-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface DnsRecordPrivateLinkAccessPoint {
    /**
     * The ID of the Private Link access point to which the DNS Record is associated, for example `ap-123abc`.
     */
    id: pulumi.Input<string>;
}

export interface EnvironmentStreamGovernance {
    /**
     * The [stream governance package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages) for the Environment. Accepted values are: `ESSENTIALS` and `ADVANCED`.
     */
    package: pulumi.Input<string>;
}

export interface FlinkArtifactEnvironment {
    /**
     * The ID of the Environment that the Flink Artifact Pool belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface FlinkArtifactVersion {
    /**
     * The version of this Flink Artifact.
     */
    version: pulumi.Input<string>;
}

export interface FlinkComputePoolEnvironment {
    /**
     * The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface FlinkStatementComputePool {
    /**
     * The ID of the Flink Compute Pool, for example, `lfcp-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface FlinkStatementCredentials {
    /**
     * The Flink API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Flink API Secret.
     *
     * > **Note:** A Flink API key consists of a key and a secret. Flink API keys are required to interact with Flink Statements in Confluent Cloud. Each Flink API key is valid for one specific Flink Region.
     *
     * > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Flink API key, create a new Flink API key, update the `credentials` block in all configuration files to use the new Flink API key, run `pulumi up -target="confluent_flink_statement.example"`, and remove the old Flink API key. Alternatively, in case the old Flink API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_flink_statement.example" -out=rotate-flink-api-key` and `pulumi up rotate-flink-api-key` instead.
     */
    secret: pulumi.Input<string>;
}

export interface FlinkStatementEnvironment {
    /**
     * The ID of the Environment, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface FlinkStatementOrganization {
    /**
     * The ID of the Organization, for example, `1111aaaa-11aa-11aa-11aa-111111aaaaaa`.
     */
    id: pulumi.Input<string>;
}

export interface FlinkStatementPrincipal {
    /**
     * The ID of the Principal the Flink Statement runs as, for example, `sa-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GatewayAwsEgressPrivateLinkGateway {
    /**
     * (Required String) The principal ARN used by the AWS Egress Private Link Gateway, for example, `arn:aws:iam::123456789012:tenant-1-role`.
     */
    principalArn?: pulumi.Input<string>;
    /**
     * AWS region of the Gateway, for example, `us-east-1`.
     */
    region: pulumi.Input<string>;
}

export interface GatewayAwsPrivateNetworkInterfaceGateway {
    /**
     * (Required String) The AWS account ID associated with the Private Network Interface Gateway.
     */
    account?: pulumi.Input<string>;
    /**
     * AWS region of the Private Network Interface Gateway.
     */
    region: pulumi.Input<string>;
    /**
     * AWS availability zone ids of the Private Network Interface Gateway.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GatewayAzureEgressPrivateLinkGateway {
    /**
     * Azure region of the Gateway, for example, `eastus`.
     */
    region: pulumi.Input<string>;
    /**
     * (Required String) The Azure Subscription ID associated with the Confluent Cloud VPC, for example, `00000000-0000-0000-0000-000000000000`.
     */
    subscription?: pulumi.Input<string>;
}

export interface GatewayEnvironment {
    /**
     * The ID of the Environment that the Gateway belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetAccessPointEnvironment {
    /**
     * The ID of the Environment that the Access Point belongs to, for example, `env-123abc`.
     */
    id: string;
}

export interface GetAccessPointEnvironmentArgs {
    /**
     * The ID of the Environment that the Access Point belongs to, for example, `env-123abc`.
     */
    id: pulumi.Input<string>;
}

export interface GetBusinessMetadataBindingCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     *
     * > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
     */
    secret: string;
}

export interface GetBusinessMetadataBindingCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     *
     * > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetBusinessMetadataBindingSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetBusinessMetadataBindingSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetBusinessMetadataCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetBusinessMetadataCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetBusinessMetadataSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetBusinessMetadataSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetCertificatePoolCertificateAuthority {
    /**
     * The ID of the Certificate Authority for this Certificate Pool, for example, `op-123abc`.
     */
    id: string;
}

export interface GetCertificatePoolCertificateAuthorityArgs {
    /**
     * The ID of the Certificate Authority for this Certificate Pool, for example, `op-123abc`.
     */
    id: pulumi.Input<string>;
}

export interface GetDnsRecordEnvironment {
    /**
     * The ID of the Environment that the DNS Record belongs to, for example, `env-123abc`.
     */
    id: string;
}

export interface GetDnsRecordEnvironmentArgs {
    /**
     * The ID of the Environment that the DNS Record belongs to, for example, `env-123abc`.
     */
    id: pulumi.Input<string>;
}

export interface GetEnvironmentStreamGovernance {
    /**
     * Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
     */
    package: string;
}

export interface GetEnvironmentStreamGovernanceArgs {
    /**
     * Stream Governance Package. 'ESSENTIALS' or 'ADVANCED'
     */
    package: pulumi.Input<string>;
}

export interface GetFlinkArtifactEnvironment {
    /**
     * The ID of the Environment that the Flink Artifact belongs to, for example, `env-xyz456`.
     */
    id: string;
}

export interface GetFlinkArtifactEnvironmentArgs {
    /**
     * The ID of the Environment that the Flink Artifact belongs to, for example, `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface GetFlinkComputePoolEnvironment {
    /**
     * The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetFlinkComputePoolEnvironmentArgs {
    /**
     * The ID of the Environment that the Flink Compute Pool belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetGatewayEnvironment {
    /**
     * The ID of the Environment that the Gateway belongs to, for example, `env-123abc`.
     */
    id: string;
}

export interface GetGatewayEnvironmentArgs {
    /**
     * The ID of the Environment that the Gateway belongs to, for example, `env-123abc`.
     */
    id: pulumi.Input<string>;
}

export interface GetIdentityPoolIdentityProvider {
    /**
     * The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetIdentityPoolIdentityProviderArgs {
    /**
     * The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetIpAddressesFilter {
    /**
     * A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
     */
    addressTypes?: string[];
    /**
     * A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     */
    clouds?: string[];
    /**
     * A list of regions to filter by.
     */
    regions?: string[];
    /**
     * A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
     */
    services?: string[];
}

export interface GetIpAddressesFilterArgs {
    /**
     * A list of address types to filter by. Accepted values are: `EGRESS`, `INGRESS`.
     */
    addressTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of clouds to filter by. Accepted values are: `AWS`, `AZURE`, and `GCP`.
     */
    clouds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of regions to filter by.
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of services to filter by. Accepted values are: `CONNECT`, `KAFKA`.
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKafkaClusterBasic {
}

export interface GetKafkaClusterBasicArgs {
}

export interface GetKafkaClusterDedicated {
    /**
     * (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
     */
    cku?: number;
    /**
     * The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
     */
    encryptionKey?: string;
    /**
     * (Required List of String) The list of zones the cluster is in.
     * - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
     * - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
     * - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
     */
    zones?: string[];
}

export interface GetKafkaClusterDedicatedArgs {
    /**
     * (Required Number) The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
     */
    cku?: pulumi.Input<number>;
    /**
     * The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * (Required List of String) The list of zones the cluster is in.
     * - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
     * - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
     * - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKafkaClusterEnterprise {
}

export interface GetKafkaClusterEnterpriseArgs {
}

export interface GetKafkaClusterEnvironment {
    /**
     * The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetKafkaClusterEnvironmentArgs {
    /**
     * The ID of the Environment that the Kafka cluster belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetKafkaClusterFreight {
    /**
     * (Required List of String) The list of zones the cluster is in.
     * - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
     * - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
     * - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
     */
    zones?: string[];
}

export interface GetKafkaClusterFreightArgs {
    /**
     * (Required List of String) The list of zones the cluster is in.
     * - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
     * - On GCP, zones are GCP [zones](https://cloud.google.com/compute/docs/regions-zones), for example, `us-central1-c`.
     * - On Azure, zones are Confluent-chosen names (for example, `1`, `2`, `3`) since Azure does not have universal zone identifiers.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetKafkaClusterStandard {
}

export interface GetKafkaClusterStandardArgs {
}

export interface GetKafkaTopicCredentials {
    /**
     * The Kafka API Key.
     */
    key: string;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: string;
}

export interface GetKafkaTopicCredentialsArgs {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetKafkaTopicKafkaCluster {
    /**
     * The ID of the Kafka cluster, for example, `lkc-abc123`.
     */
    id: string;
}

export interface GetKafkaTopicKafkaClusterArgs {
    /**
     * The ID of the Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetKsqlClusterEnvironment {
    /**
     * The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetKsqlClusterEnvironmentArgs {
    /**
     * The ID of the Environment that the ksqlDB cluster belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetNetworkAw {
    /**
     * (Required String) The AWS account ID associated with the Confluent Cloud VPC.
     */
    account?: string;
    /**
     * (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
     */
    privateLinkEndpointService?: string;
    /**
     * (Required String) The Confluent Cloud VPC ID.
     */
    vpc?: string;
}

export interface GetNetworkAwArgs {
    /**
     * (Required String) The AWS account ID associated with the Confluent Cloud VPC.
     */
    account?: pulumi.Input<string>;
    /**
     * (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
     */
    privateLinkEndpointService?: pulumi.Input<string>;
    /**
     * (Required String) The Confluent Cloud VPC ID.
     */
    vpc?: pulumi.Input<string>;
}

export interface GetNetworkAzure {
    /**
     * (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
     */
    privateLinkServiceAliases?: {[key: string]: string};
}

export interface GetNetworkAzureArgs {
    /**
     * (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zones and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service).
     */
    privateLinkServiceAliases?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetNetworkDnsConfig {
    /**
     * (Required String) Network DNS resolution.
     * When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
     * When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
     */
    resolution?: string;
}

export interface GetNetworkDnsConfigArgs {
    /**
     * (Required String) Network DNS resolution.
     * When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
     * When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
     */
    resolution?: pulumi.Input<string>;
}

export interface GetNetworkEnvironment {
    /**
     * The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetNetworkEnvironmentArgs {
    /**
     * The ID of the Environment that the Network belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetNetworkGcp {
    /**
     * (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     */
    privateServiceConnectServiceAttachments?: {[key: string]: string};
    /**
     * (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
     */
    project?: string;
    /**
     * (Required String) The network name of the Confluent Cloud VPC.
     */
    vpcNetwork?: string;
}

export interface GetNetworkGcpArgs {
    /**
     * (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     */
    privateServiceConnectServiceAttachments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
     */
    project?: pulumi.Input<string>;
    /**
     * (Required String) The network name of the Confluent Cloud VPC.
     */
    vpcNetwork?: pulumi.Input<string>;
}

export interface GetNetworkLinkEndpointEnvironment {
    /**
     * The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
     */
    id: string;
}

export interface GetNetworkLinkEndpointEnvironmentArgs {
    /**
     * The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface GetNetworkLinkServiceAccept {
    /**
     * (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
     */
    environments?: string[];
    /**
     * (Optional List of Strings) List of network ids from which connections can be accepted.
     */
    networks?: string[];
}

export interface GetNetworkLinkServiceAcceptArgs {
    /**
     * (Optional List of Strings) List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
     */
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional List of Strings) List of network ids from which connections can be accepted.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetNetworkLinkServiceEnvironment {
    /**
     * The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
     */
    id: string;
}

export interface GetNetworkLinkServiceEnvironmentArgs {
    /**
     * The ID of the Environment that the Network Link Service belongs to, for example, `env-1234`.
     */
    id: pulumi.Input<string>;
}

export interface GetPeeringEnvironment {
    /**
     * The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetPeeringEnvironmentArgs {
    /**
     * The ID of the Environment that the Peering belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetPrivateLinkAccessEnvironment {
    /**
     * The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetPrivateLinkAccessEnvironmentArgs {
    /**
     * The ID of the Environment that the Private Link Access belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetPrivateLinkAttachmentConnectionEnvironment {
    /**
     * The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
     */
    id: string;
}

export interface GetPrivateLinkAttachmentConnectionEnvironmentArgs {
    /**
     * The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface GetPrivateLinkAttachmentEnvironment {
    /**
     * The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
     */
    id: string;
}

export interface GetPrivateLinkAttachmentEnvironmentArgs {
    /**
     * The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface GetProviderIntegrationEnvironment {
    /**
     * The ID of the Environment that the Provider Integration belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetProviderIntegrationEnvironmentArgs {
    /**
     * The ID of the Environment that the Provider Integration belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSchemaCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaMetadata {
    /**
     * (Optional Map) The custom properties to set:
     */
    properties?: {[key: string]: string};
    /**
     * (Optional List of Strings) A list of metadata properties to be encrypted.
     */
    sensitives?: string[];
    /**
     * (Optional String List) The tags to which the rule applies, if any.
     */
    tags?: inputs.GetSchemaMetadataTag[];
}

export interface GetSchemaMetadataArgs {
    /**
     * (Optional Map) The custom properties to set:
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional List of Strings) A list of metadata properties to be encrypted.
     */
    sensitives?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional String List) The tags to which the rule applies, if any.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.GetSchemaMetadataTagArgs>[]>;
}

export interface GetSchemaMetadataTag {
    /**
     * (Required String) The setting name.
     */
    key?: string;
    /**
     * (Required List of Strings) The list of tags.
     */
    values?: string[];
}

export interface GetSchemaMetadataTagArgs {
    /**
     * (Required String) The setting name.
     */
    key?: pulumi.Input<string>;
    /**
     * (Required List of Strings) The list of tags.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetSchemaRegistryClusterConfigCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSchemaRegistryClusterConfigCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterConfigSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSchemaRegistryClusterConfigSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterEnvironment {
    /**
     * The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
     */
    id: string;
}

export interface GetSchemaRegistryClusterEnvironmentArgs {
    /**
     * The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterModeCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     *
     * > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
     */
    secret: string;
}

export interface GetSchemaRegistryClusterModeCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     *
     * > **Note:** A Schema Registry API key consists of a key and a secret. Schema Registry API keys are required to interact with Schema Registry clusters in Confluent Cloud. Each Schema Registry API key is valid for one specific Schema Registry cluster.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryClusterModeSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSchemaRegistryClusterModeSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryClustersEnvironment {
    /**
     * The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
     * - If no environment id is specified, clusters from all environments will be displayed.
     */
    id: string;
}

export interface GetSchemaRegistryClustersEnvironmentArgs {
    /**
     * The ID of the Environment that the Schema Registry cluster belongs to, for example, `env-xyz456`.
     * - If no environment id is specified, clusters from all environments will be displayed.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryDekCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSchemaRegistryDekCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryDekSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSchemaRegistryDekSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRegistryKekCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSchemaRegistryKekCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemaRegistryKekSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSchemaRegistryKekSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemaRuleset {
    /**
     * (Optional List of Blocks) supports the following:
     */
    domainRules?: inputs.GetSchemaRulesetDomainRule[];
    migrationRules?: inputs.GetSchemaRulesetMigrationRule[];
}

export interface GetSchemaRulesetArgs {
    /**
     * (Optional List of Blocks) supports the following:
     */
    domainRules?: pulumi.Input<pulumi.Input<inputs.GetSchemaRulesetDomainRuleArgs>[]>;
    migrationRules?: pulumi.Input<pulumi.Input<inputs.GetSchemaRulesetMigrationRuleArgs>[]>;
}

export interface GetSchemaRulesetDomainRule {
    /**
     * (Optional Boolean) The boolean flag to control whether the rule should be disabled.
     */
    disabled?: boolean;
    /**
     * (Optional String) An optional description of the rule.
     */
    doc?: string;
    /**
     * (Optional String) The rule body. Data quality and transformation rules use `CEL` language expressions, data migration rules use `JSONata` expressions. Defaults to "".
     */
    expr?: string;
    /**
     * (Required String) The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`. `CONDITION` - validate the value of a field, `TRANSFORM` - transform the value of a field. Data quality rules use `CONDITION` kind, data transformation, encryption and migration rules use `TRANSFORM` kind.
     */
    kind: string;
    /**
     * (Required String) The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
     */
    mode: string;
    /**
     * (Required String) A user-defined name that can be used to reference the rule.
     */
    name: string;
    /**
     * (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type `ERROR` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
     */
    onFailure?: string;
    /**
     * (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type `NONE` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
     */
    onSuccess?: string;
    /**
     * (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
     */
    params?: {[key: string]: string};
    /**
     * (Optional String List) The tags to which the rule applies, if any.
     */
    tags?: string[];
    /**
     * (Required String) The type of rule, which invokes a specific rule executor that that will run the rule. Google Common Expression Language (`CEL`) is used for data quality and transformation rules, Confluent `ENCRYPT` is used for data encryption rules, and `JSONata` is used for migration rules.
     */
    type: string;
}

export interface GetSchemaRulesetDomainRuleArgs {
    /**
     * (Optional Boolean) The boolean flag to control whether the rule should be disabled.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * (Optional String) An optional description of the rule.
     */
    doc?: pulumi.Input<string>;
    /**
     * (Optional String) The rule body. Data quality and transformation rules use `CEL` language expressions, data migration rules use `JSONata` expressions. Defaults to "".
     */
    expr?: pulumi.Input<string>;
    /**
     * (Required String) The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`. `CONDITION` - validate the value of a field, `TRANSFORM` - transform the value of a field. Data quality rules use `CONDITION` kind, data transformation, encryption and migration rules use `TRANSFORM` kind.
     */
    kind: pulumi.Input<string>;
    /**
     * (Required String) The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
     */
    mode: pulumi.Input<string>;
    /**
     * (Required String) A user-defined name that can be used to reference the rule.
     */
    name: pulumi.Input<string>;
    /**
     * (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type `ERROR` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
     */
    onFailure?: pulumi.Input<string>;
    /**
     * (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type `NONE` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
     */
    onSuccess?: pulumi.Input<string>;
    /**
     * (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
     */
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional String List) The tags to which the rule applies, if any.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required String) The type of rule, which invokes a specific rule executor that that will run the rule. Google Common Expression Language (`CEL`) is used for data quality and transformation rules, Confluent `ENCRYPT` is used for data encryption rules, and `JSONata` is used for migration rules.
     */
    type: pulumi.Input<string>;
}

export interface GetSchemaRulesetMigrationRule {
    /**
     * (Optional Boolean) The boolean flag to control whether the rule should be disabled.
     */
    disabled?: boolean;
    /**
     * (Optional String) An optional description of the rule.
     */
    doc?: string;
    /**
     * (Optional String) The rule body. Data quality and transformation rules use `CEL` language expressions, data migration rules use `JSONata` expressions. Defaults to "".
     */
    expr?: string;
    /**
     * (Required String) The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`. `CONDITION` - validate the value of a field, `TRANSFORM` - transform the value of a field. Data quality rules use `CONDITION` kind, data transformation, encryption and migration rules use `TRANSFORM` kind.
     */
    kind: string;
    /**
     * (Required String) The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
     */
    mode: string;
    /**
     * (Required String) A user-defined name that can be used to reference the rule.
     */
    name: string;
    /**
     * (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type `ERROR` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
     */
    onFailure?: string;
    /**
     * (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type `NONE` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
     */
    onSuccess?: string;
    /**
     * (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
     */
    params?: {[key: string]: string};
    /**
     * (Optional String List) The tags to which the rule applies, if any.
     */
    tags?: string[];
    /**
     * (Required String) The type of rule, which invokes a specific rule executor that that will run the rule. Google Common Expression Language (`CEL`) is used for data quality and transformation rules, Confluent `ENCRYPT` is used for data encryption rules, and `JSONata` is used for migration rules.
     */
    type: string;
}

export interface GetSchemaRulesetMigrationRuleArgs {
    /**
     * (Optional Boolean) The boolean flag to control whether the rule should be disabled.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * (Optional String) An optional description of the rule.
     */
    doc?: pulumi.Input<string>;
    /**
     * (Optional String) The rule body. Data quality and transformation rules use `CEL` language expressions, data migration rules use `JSONata` expressions. Defaults to "".
     */
    expr?: pulumi.Input<string>;
    /**
     * (Required String) The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`. `CONDITION` - validate the value of a field, `TRANSFORM` - transform the value of a field. Data quality rules use `CONDITION` kind, data transformation, encryption and migration rules use `TRANSFORM` kind.
     */
    kind: pulumi.Input<string>;
    /**
     * (Required String) The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
     */
    mode: pulumi.Input<string>;
    /**
     * (Required String) A user-defined name that can be used to reference the rule.
     */
    name: pulumi.Input<string>;
    /**
     * (Optional String) An optional action to execute if the rule fails, otherwise the built-in action type `ERROR` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above.
     */
    onFailure?: pulumi.Input<string>;
    /**
     * (Optional String) An optional action to execute if the rule succeeds, otherwise the built-in action type `NONE` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`.
     */
    onSuccess?: pulumi.Input<string>;
    /**
     * (Optional Configuration Block) A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
     */
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional String List) The tags to which the rule applies, if any.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required String) The type of rule, which invokes a specific rule executor that that will run the rule. Google Common Expression Language (`CEL`) is used for data quality and transformation rules, Confluent `ENCRYPT` is used for data encryption rules, and `JSONata` is used for migration rules.
     */
    type: pulumi.Input<string>;
}

export interface GetSchemaSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSchemaSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSchemasCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSchemasCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSchemasFilter {
    /**
     * The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
     */
    deleted?: boolean;
    /**
     * The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
     */
    latestOnly?: boolean;
    /**
     * The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
     */
    subjectPrefix?: string;
}

export interface GetSchemasFilterArgs {
    /**
     * The boolean flag to control whether to return soft deleted schemas. Defaults to `false`.
     */
    deleted?: pulumi.Input<boolean>;
    /**
     * The boolean flag to control whether to return latest schema versions only for each matching subject. Defaults to `false`.
     */
    latestOnly?: pulumi.Input<boolean>;
    /**
     * The prefix of the subjects (in other words, the namespaces), representing the subjects under which the schemas are registered.
     */
    subjectPrefix?: pulumi.Input<string>;
}

export interface GetSchemasSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSchemasSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSubjectConfigCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSubjectConfigCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSubjectConfigSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSubjectConfigSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetSubjectModeCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetSubjectModeCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetSubjectModeSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetSubjectModeSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetTagBindingCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetTagBindingCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetTagBindingSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetTagBindingSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetTagCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: string;
    /**
     * The Schema Registry API Secret.
     */
    secret: string;
}

export interface GetTagCredentialsArgs {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface GetTagSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: string;
}

export interface GetTagSchemaRegistryClusterArgs {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface GetTransitGatewayAttachmentEnvironment {
    /**
     * The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: string;
}

export interface GetTransitGatewayAttachmentEnvironmentArgs {
    /**
     * The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-xyz456`.
     *
     * > **Note:** Exactly one from the `id` and `displayName` attributes must be specified.
     */
    id: pulumi.Input<string>;
}

export interface IdentityPoolIdentityProvider {
    /**
     * The ID of the Identity Provider associated with the Identity Pool, for example, `op-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface InvitationCreator {
    /**
     * (Required String) The id of invitation creator.
     */
    id?: pulumi.Input<string>;
}

export interface InvitationUser {
    /**
     * (Required String) The id of invitation creator.
     */
    id?: pulumi.Input<string>;
}

export interface KafkaAclCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaAclKafkaCluster {
    /**
     * The ID of the Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClientQuotaEnvironment {
    /**
     * The ID of the Environment that the corresponding Kafka Cluster belongs to, for example, `env-abc123`.
     *
     * > **Note:** Each principal assigned to a quota receives the full amount of the quota, meaning the quota is not shared by the principals it is assigned. For example, if a 10 MBps ingress quota is applied to Principals 1 and 2, Principal 1 can produce at most 10 MBps, independently of Principal 2.
     *
     * > **Note:** Define a throughput maximum, but do not guarantee a throughput floor. Applications are rate-limited through the use of the Kafka throttling mechanism. Kafka asks the client to wait before sending more data and mutes the channel, which appears as latency to the client application.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClientQuotaKafkaCluster {
    /**
     * The ID of the Kafka Cluster where the Kafka Client Quota is applied, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClientQuotaThroughput {
    /**
     * The egress throughput limit in bytes per second.
     */
    egressByteRate: pulumi.Input<string>;
    /**
     * The ingress throughput limit in bytes per second.
     */
    ingressByteRate: pulumi.Input<string>;
}

export interface KafkaClusterBasic {
}

export interface KafkaClusterByokKey {
    /**
     * The ID of the Confluent key that is used to encrypt the data in the Kafka cluster, for example, `cck-lye5m`.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterConfigCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     *
     * > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
     *
     * > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_cluster_config.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_cluster_config.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaClusterConfigKafkaCluster {
    /**
     * The ID of the Dedicated Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterDedicated {
    /**
     * The number of Confluent Kafka Units (CKUs) for Dedicated cluster types. The minimum number of CKUs for `SINGLE_ZONE` dedicated clusters is `1` whereas `MULTI_ZONE` dedicated clusters must have `2` CKUs or more.
     *
     * > **Note:** Exactly one from the `basic`, `standard`, `dedicated`, `enterprise` or `freight` configuration blocks must be specified.
     *
     * > **Note:** The `freight` block is in an [Early Access lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy).
     *
     * > **Note:** The `freight` Kafka cluster type is currently available only on AWS.
     *
     * > **Note:** The `enterprise` Kafka cluster type is currently available only on AWS and Azure.
     *
     * !> **Warning:** You can only upgrade clusters from `basic` to `standard`.
     *
     * > **Note:** Currently, provisioning of a Dedicated Kafka cluster takes around 25 minutes on average but might take up to 24 hours. If you can't wait for the `pulumi up` step to finish, you can exit it and import the cluster by using the `pulumi import` command once it has been provisioned. When the cluster is provisioned, you will receive an email notification, and you can also follow updates on the Target Environment web page of the Confluent Cloud website.
     */
    cku: pulumi.Input<number>;
    /**
     * The ID of the encryption key that is used to encrypt the data in the Kafka cluster.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * (Required List of String) The list of zones the cluster is in.
     * - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KafkaClusterEnterprise {
}

export interface KafkaClusterEnvironment {
    /**
     * The ID of the Environment that the Kafka cluster belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterFreight {
    /**
     * (Required List of String) The list of zones the cluster is in.
     * - On AWS, zones are AWS [AZ IDs](https://docs.aws.amazon.com/ram/latest/userguide/working-with-az-ids.html), for example, `use1-az3`.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KafkaClusterNetwork {
    /**
     * The ID of the Network that the Kafka cluster belongs to, for example, `n-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KafkaClusterStandard {
}

export interface KafkaMirrorTopicClusterLink {
    /**
     * The name of the cluster link to attach to the mirror topic, for example, `my-cluster-link`.
     */
    linkName: pulumi.Input<string>;
}

export interface KafkaMirrorTopicKafkaCluster {
    /**
     * The Kafka API Credentials.
     */
    credentials?: pulumi.Input<inputs.KafkaMirrorTopicKafkaClusterCredentials>;
    /**
     * The ID of the destination Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
    /**
     * The REST endpoint of the destination Kafka cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint?: pulumi.Input<string>;
}

export interface KafkaMirrorTopicKafkaClusterCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaMirrorTopicSourceKafkaTopic {
    /**
     * The name of the topic on the source cluster to be mirrored over the cluster link, for example, `orders`. A topic with the exact same name must exist on the source cluster, and no topic with this name should exist on the destination cluster.
     */
    topicName: pulumi.Input<string>;
}

export interface KafkaTopicCredentials {
    /**
     * The Kafka API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Kafka API Secret.
     *
     * > **Note:** A Kafka API key consists of a key and a secret. Kafka API keys are required to interact with Kafka clusters in Confluent Cloud. Each Kafka API key is valid for one specific Kafka cluster.
     *
     * > **Note:** Use Option #2 to simplify the key rotation process. When using Option #1, to rotate a Kafka API key, create a new Kafka API key, update the `credentials` block in all configuration files to use the new Kafka API key, run `pulumi up -target="confluent_kafka_topic.orders"`, and remove the old Kafka API key. Alternatively, in case the old Kafka API Key was deleted already, you might need to run `pulumi preview -refresh=false -target="confluent_kafka_topic.orders" -out=rotate-kafka-api-key` and `pulumi up rotate-kafka-api-key` instead.
     */
    secret: pulumi.Input<string>;
}

export interface KafkaTopicKafkaCluster {
    /**
     * The ID of the Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterCredentialIdentity {
    /**
     * The ID of the associated service or user account, for example, `sa-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterEnvironment {
    /**
     * The ID of the associated Environment, for example, `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface KsqlClusterKafkaCluster {
    /**
     * The ID of the associated Kafka cluster, for example, `lkc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkAw {
    /**
     * (Required String) The AWS account ID associated with the Confluent Cloud VPC.
     */
    account?: pulumi.Input<string>;
    /**
     * (Optional String) The endpoint service of the Confluent Cloud VPC (used for PrivateLink) if available.
     */
    privateLinkEndpointService?: pulumi.Input<string>;
    /**
     * (Required String) The Confluent Cloud VPC ID.
     */
    vpc?: pulumi.Input<string>;
}

export interface NetworkAzure {
    /**
     * (Optional Map) The mapping of zones to Private Link Service Aliases if available. Keys are zone names, for example, `1` and values are [Azure Private Link Service Aliases](https://docs.microsoft.com/en-us/azure/private-link/private-link-service-overview#share-your-service), for example, `s-nk99e-privatelink-1.8c43dcd0-695c-1234-bc35-11fe6abb303a.centralus.azure.privatelinkservice`.
     */
    privateLinkServiceAliases?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface NetworkDnsConfig {
    /**
     * Network DNS resolution.
     * When resolution is `CHASED_PRIVATE`, clusters in this network require both public and private DNS to resolve cluster endpoints.
     * When resolution is `PRIVATE`, clusters in this network only require private DNS to resolve cluster endpoints.
     * The Confluent Cloud Console uses `resolution = PRIVATE`.
     */
    resolution: pulumi.Input<string>;
}

export interface NetworkEnvironment {
    /**
     * The ID of the Environment that the Network belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkGateway {
    /**
     * (Optional String) The ID of the Gateway, for example, `gw-abc123`.
     */
    id?: pulumi.Input<string>;
}

export interface NetworkGcp {
    /**
     * (Optional Map) The mapping of zones to Private Service Connect Service Attachments if available. Keys are zones and values are [GCP Private Service Connect service attachment](https://cloud.google.com/vpc/docs/configure-private-service-connect-producer#api_7).
     */
    privateServiceConnectServiceAttachments?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Required String) The GCP Project ID associated with the Confluent Cloud VPC.
     */
    project?: pulumi.Input<string>;
    /**
     * (Required String) The network name of the Confluent Cloud VPC.
     */
    vpcNetwork?: pulumi.Input<string>;
}

export interface NetworkLinkEndpointEnvironment {
    /**
     * The ID of the Environment that the Network Link Endpoint belongs to, for example, `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkEndpointNetwork {
    /**
     * The ID of the Network that the Network Link Endpoint belongs to, for example, `n-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkEndpointNetworkLinkService {
    /**
     * The ID of the Network Link Service, for example, `nls-g3e1ox`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkServiceAccept {
    /**
     * List of environments ids from which connections can be accepted. All networks within the list of environment will be allowed.
     */
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of network ids from which connections can be accepted.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface NetworkLinkServiceEnvironment {
    /**
     * The ID of the Environment that the Network Link Service belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkLinkServiceNetwork {
    /**
     * The ID of the Network that the Network Link Service belongs to, for example, `n-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface NetworkZoneInfo {
    /**
     * The IPv4 CIDR block to be used for the network. Must be `/27`. Required for VPC peering and AWS TransitGateway.
     *
     * > **Note:** The `zoneInfo` configuration block and `reservedCidr` are in a [Limited Availability lifecycle stage](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy), and it's available only for AWS networks with PEERING connection type.
     */
    cidr?: pulumi.Input<string>;
    /**
     * Cloud provider zone ID.
     */
    zoneId?: pulumi.Input<string>;
}

export interface PeeringAws {
    /**
     * The AWS Account ID of the peer VPC owner. You can find your AWS Account ID [here](https://console.aws.amazon.com/billing/home?#/account) under **My Account** section of the AWS Management Console. Must be a **12 character string**.
     */
    account: pulumi.Input<string>;
    /**
     * The region of the AWS peer VPC.
     */
    customerRegion: pulumi.Input<string>;
    /**
     * The AWS VPC CIDR blocks or subsets. This must be from the supported CIDR blocks and must not overlap with your Confluent Cloud CIDR block or any other network peering connection VPC CIDR (learn more about the requirements [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws)). You can find AWS VPC CIDR [here](https://console.aws.amazon.com/vpc/) under **Your VPCs > Target VPC > Details** section of the AWS Management Console.
     */
    routes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The AWS VPC ID of the peer VPC that you're peering with Confluent Cloud. You can find your AWS VPC ID [here](https://console.aws.amazon.com/vpc/) under **Your VPCs** section of the AWS Management Console. Must start with `vpc-`.
     */
    vpc: pulumi.Input<string>;
}

export interface PeeringAzure {
    /**
     * The region of the Azure peer VNet.
     */
    customerRegion: pulumi.Input<string>;
    /**
     * The Tenant ID that represents an organization in Azure Active Directory. You can find your Azure Tenant ID in the [Azure Portal under Azure Active Directory](https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview). Must be a valid **32 character UUID string**.
     */
    tenant: pulumi.Input<string>;
    /**
     * The resource (composite) ID of the peer Virtual Network that you're peering with Confluent Cloud, in the format `/subscriptions/<Subscription ID>/resourceGroups/<Resource Group Name>/providers/Microsoft.Network/virtualNetworks/<VNet name>`. You can find Subscription ID, Resource Group Name and your VNet name under **Virtual Networks > Target VNet > Essentials** section of your [Microsoft Azure Portal](https://portal.azure.com/).
     */
    vnet: pulumi.Input<string>;
}

export interface PeeringEnvironment {
    /**
     * The ID of the Environment that the Peering belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface PeeringGcp {
    /**
     * The Import Custom Routes option enables connectivity to a Confluent Cloud cluster in Google Cloud from customer premise or other clouds, such as AWS and Azure, through a customer VPC that is peered with Confluent Cloud in the same region. Defaults to `false`. Learn more about considerations / limitations of the Import Custom Routes option [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#import-custom-routes).
     *
     * > **Note:** Exactly one from the `aws`, `azure`, and `gcp` configuration blocks must be specified.
     *
     * > **Note:** Learn more about VPC Peering requirements on AWS [here](https://docs.confluent.io/cloud/current/networking/peering/aws-peering.html#vpc-peering-on-aws).
     *
     * > **Note:** Learn more about VNet Peering requirements on Azure [here](https://docs.confluent.io/cloud/current/networking/peering/azure-peering.html#vnet-peering-on-az).
     *
     * > **Note:** Learn more about VPC Peering requirements on Google Cloud Platform [here](https://docs.confluent.io/cloud/current/networking/peering/gcp-peering.html#vpc-peering-on-gcp).
     */
    importCustomRoutes?: pulumi.Input<boolean>;
    /**
     * The GCP Project ID. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
     */
    project: pulumi.Input<string>;
    /**
     * The VPC network name that you're peering to Confluent Cloud. You can find your VPC network name under **VPC Networks** section of your [Google Cloud Console](https://console.cloud.google.com/networking/networks/list).
     */
    vpcNetwork: pulumi.Input<string>;
}

export interface PeeringNetwork {
    /**
     * The ID of the Network that the Peering belongs to, for example, `n-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAccessAws {
    /**
     * The AWS account ID to enable for the Private Link Access. You can find your AWS account ID [here] (https://console.aws.amazon.com/billing/home?#/account) under **My Account** in your AWS Management Console. Must be a **12 character string**.
     */
    account: pulumi.Input<string>;
}

export interface PrivateLinkAccessAzure {
    /**
     * The Azure subscription ID to enable for the Private Link Access. You can find your Azure subscription ID in the subscription section of your [Microsoft Azure Portal] (https://portal.azure.com/#blade/Microsoft_Azure_Billing/SubscriptionsBlade). Must be a valid **32 character UUID string**.
     */
    subscription: pulumi.Input<string>;
}

export interface PrivateLinkAccessEnvironment {
    /**
     * The ID of the Environment that the Private Link Access belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAccessGcp {
    /**
     * The GCP project ID to allow for Private Service Connect access. You can find your Google Cloud Project ID under **Project ID** section of your [Google Cloud Console dashboard](https://console.cloud.google.com/home/dashboard).
     *
     * > **Note:** Exactly one from the `aws`, `azure`, `gcp` configuration blocks must be specified.
     *
     * > **Note:** Learn more about Private Link Access limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/private-links/aws-privatelink.html#limitations).
     *
     * > **Note:** Learn more about Private Link Access limitations on Azure [here](https://docs.confluent.io/cloud/current/networking/private-links/azure-privatelink.html#limitations).
     */
    project: pulumi.Input<string>;
}

export interface PrivateLinkAccessNetwork {
    /**
     * The ID of the Network that the Private Link Access belongs to, for example, `n-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentAw {
    /**
     * (Required String) AWS VPC Endpoint Service that can be used to establish connections for all zones, for example `com.amazonaws.vpce.us-west-2.vpce-svc-0d3be37e21708ecd3`.
     */
    vpcEndpointServiceName?: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentAzure {
    /**
     * Azure PrivateLink service alias for the availability zone.
     */
    privateLinkServiceAlias?: pulumi.Input<string>;
    /**
     * (Required String) Azure Private Link service resource id for the availability zone.
     */
    privateLinkServiceResourceId?: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionAws {
    /**
     * Id of a VPC Endpoint that is connected to the VPC Endpoint service.
     */
    vpcEndpointId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionAzure {
    /**
     * Resource ID of the Private Endpoint that is connected to the Private Link service.
     */
    privateEndpointResourceId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionEnvironment {
    /**
     * The ID of the Environment that the Private Link Attachment Connection belongs to, for example `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionGcp {
    /**
     * Id of the Private Service connection.
     */
    privateServiceConnectConnectionId: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentConnectionPrivateLinkAttachment {
    /**
     * The unique identifier for the private link attachment.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentEnvironment {
    /**
     * The ID of the Environment that the Private Link Attachment belongs to, for example `env-xyz456`.
     */
    id: pulumi.Input<string>;
}

export interface PrivateLinkAttachmentGcp {
    /**
     * Id of a Private Service Connect Service Attachment in Confluent Cloud.
     */
    privateServiceConnectServiceAttachment?: pulumi.Input<string>;
    /**
     * Zone associated with the PSC Service attachment.
     */
    zone?: pulumi.Input<string>;
}

export interface ProviderIntegrationAws {
    /**
     * Amazon Resource Name (ARN) that identifies the AWS Identity and Access Management (IAM) role that Confluent Cloud assumes when it accesses resources in your AWS account.
     *
     * > **Note:** Currently only `aws` config is supported, more cloud service provider config will be supported in the short future.
     *
     * > **Note:** `customerRoleArn` must be unique in a given environment for creating a new Provider Integration.
     */
    customerRoleArn: pulumi.Input<string>;
    /**
     * (Required String) Unique external ID that Confluent Cloud uses when it assumes the IAM role in your Amazon Web Services (AWS) account.
     */
    externalId?: pulumi.Input<string>;
    /**
     * (Required String) The IAM role ARN used in Confluent Cloud internally, bundled with `customerRoleArn`.
     */
    iamRoleArn?: pulumi.Input<string>;
}

export interface ProviderIntegrationEnvironment {
    /**
     * The ID of the Environment that the Provider Integration belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SchemaCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaExporterCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaExporterDestinationSchemaRegistryCluster {
    credentials: pulumi.Input<inputs.SchemaExporterDestinationSchemaRegistryClusterCredentials>;
    /**
     * The REST endpoint of the destination Schema Registry cluster, for example, `https://pkc-00000.us-central1.gcp.confluent.cloud:443`).
     */
    restEndpoint: pulumi.Input<string>;
}

export interface SchemaExporterDestinationSchemaRegistryClusterCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaExporterSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SchemaMetadata {
    /**
     * The custom properties to set:
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of metadata properties to be encrypted.
     */
    sensitives?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags to which the rule applies, if any.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.SchemaMetadataTag>[]>;
}

export interface SchemaMetadataTag {
    /**
     * The setting name.
     */
    key?: pulumi.Input<string>;
    /**
     * The list of tags.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SchemaRegistryClusterConfigCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryClusterConfigSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SchemaRegistryClusterModeCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryClusterModeSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SchemaRegistryDekCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryDekSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SchemaRegistryKekCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface SchemaRegistryKekSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SchemaRuleset {
    domainRules?: pulumi.Input<pulumi.Input<inputs.SchemaRulesetDomainRule>[]>;
    migrationRules?: pulumi.Input<pulumi.Input<inputs.SchemaRulesetMigrationRule>[]>;
}

export interface SchemaRulesetDomainRule {
    /**
     * The boolean flag to control whether the rule should be disabled. Defaults to `false`.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * An optional description of the rule. Defaults to "".
     */
    doc?: pulumi.Input<string>;
    /**
     * The rule body. Data quality and transformation rules use `CEL` language expressions, data migration rules use `JSONata` expressions. Defaults to "".
     */
    expr?: pulumi.Input<string>;
    /**
     * The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`. `CONDITION` - validate the value of a field, `TRANSFORM` - transform the value of a field. Data quality rules use `CONDITION` kind, data transformation, encryption and migration rules use `TRANSFORM` kind.
     */
    kind: pulumi.Input<string>;
    /**
     * The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
     */
    mode: pulumi.Input<string>;
    /**
     * A user-defined name that can be used to reference the rule.
     */
    name: pulumi.Input<string>;
    /**
     * An optional action to execute if the rule fails, otherwise the built-in action type `ERROR` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above. Defaults to `ERROR,ERROR`.
     */
    onFailure?: pulumi.Input<string>;
    /**
     * An optional action to execute if the rule succeeds, otherwise the built-in action type `NONE` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`. Defaults to `NONE,NONE`.
     */
    onSuccess?: pulumi.Input<string>;
    /**
     * A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
     *
     * > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
     */
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The tags to which the rule applies, if any.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of rule, which invokes a specific rule executor that that will run the rule. Google Common Expression Language (`CEL`) is used for data quality and transformation rules, Confluent `ENCRYPT` is used for data encryption rules, and `JSONata` is used for migration rules.
     */
    type: pulumi.Input<string>;
}

export interface SchemaRulesetMigrationRule {
    /**
     * The boolean flag to control whether the rule should be disabled. Defaults to `false`.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * An optional description of the rule. Defaults to "".
     */
    doc?: pulumi.Input<string>;
    /**
     * The rule body. Data quality and transformation rules use `CEL` language expressions, data migration rules use `JSONata` expressions. Defaults to "".
     */
    expr?: pulumi.Input<string>;
    /**
     * The kind of the rule. Accepted values are `CONDITION` and `TRANSFORM`. `CONDITION` - validate the value of a field, `TRANSFORM` - transform the value of a field. Data quality rules use `CONDITION` kind, data transformation, encryption and migration rules use `TRANSFORM` kind.
     */
    kind: pulumi.Input<string>;
    /**
     * The mode of the rule. Accepted values are `UPGRADE`, `DOWNGRADE`, `UPDOWN`, `WRITE`, `READ`, and `WRITEREAD`.
     */
    mode: pulumi.Input<string>;
    name: pulumi.Input<string>;
    /**
     * An optional action to execute if the rule fails, otherwise the built-in action type `ERROR` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, as mentioned above. Defaults to `ERROR,ERROR`.
     */
    onFailure?: pulumi.Input<string>;
    /**
     * An optional action to execute if the rule succeeds, otherwise the built-in action type `NONE` is used. For `UPDOWN` and `WRITEREAD` rules, one can specify two actions separated by commas, such as "NONE,ERROR" for a `WRITEREAD` rule. In this case `NONE` applies to `WRITE` and `ERROR` applies to `READ`. Defaults to `NONE,NONE`.
     */
    onSuccess?: pulumi.Input<string>;
    /**
     * A set of static parameters for the rule, which is optional. These are key-value pairs that are passed to the rule.
     *
     * > **Note:** Schema rules (`ruleset`) are only available with the [Stream Governance Advanced package](https://docs.confluent.io/cloud/current/stream-governance/packages.html#packages).
     */
    params?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The tags to which the rule applies, if any.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of rule, which invokes a specific rule executor that that will run the rule. Google Common Expression Language (`CEL`) is used for data quality and transformation rules, Confluent `ENCRYPT` is used for data encryption rules, and `JSONata` is used for migration rules.
     */
    type: pulumi.Input<string>;
}

export interface SchemaSchemaReference {
    /**
     * The name of the subject, representing the subject under which the referenced schema is registered.
     */
    name: pulumi.Input<string>;
    /**
     * The name for the reference. (For Avro Schema, the reference name is the fully qualified schema name, for JSON Schema it is a URL, and for Protobuf Schema, it is the name of another Protobuf file.)
     */
    subjectName: pulumi.Input<string>;
    /**
     * The version, representing the exact version of the schema under the registered subject.
     */
    version: pulumi.Input<number>;
}

export interface SchemaSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SubjectConfigCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SubjectConfigSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface SubjectModeCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Cluster API Secret for your Confluent Cloud cluster.
     */
    secret: pulumi.Input<string>;
}

export interface SubjectModeSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface TagBindingCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface TagBindingSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface TagCredentials {
    /**
     * The Schema Registry API Key.
     */
    key: pulumi.Input<string>;
    /**
     * The Schema Registry API Secret.
     */
    secret: pulumi.Input<string>;
}

export interface TagSchemaRegistryCluster {
    /**
     * The ID of the Schema Registry cluster, for example, `lsrc-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentAws {
    /**
     * The Amazon Resource Name (ARN) of the Resource Access Manager (RAM) Resource Share of the transit gateway your Confluent Cloud network attaches to.
     */
    ramResourceShareArn: pulumi.Input<string>;
    /**
     * List of destination routes for traffic from Confluent VPC to customer VPC via Transit Gateway.
     *
     * > **Note:** Learn more about Transit Gateway Attachment limitations on AWS [here](https://docs.confluent.io/cloud/current/networking/aws-transit-gateway.html#limitations).
     */
    routes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required String) The ID of the AWS Transit Gateway VPC Attachment that attaches Confluent VPC to Transit Gateway.
     */
    transitGatewayAttachmentId?: pulumi.Input<string>;
    /**
     * The ID of the AWS Transit Gateway that you want Confluent CLoud to be attached to. Must start with `tgw-`.
     */
    transitGatewayId: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentEnvironment {
    /**
     * The ID of the Environment that the Transit Gateway Attachment belongs to, for example, `env-abc123`.
     */
    id: pulumi.Input<string>;
}

export interface TransitGatewayAttachmentNetwork {
    /**
     * The ID of the Network that the Transit Gateway Attachment belongs to, for example, `n-abc123`.
     */
    id: pulumi.Input<string>;
}
