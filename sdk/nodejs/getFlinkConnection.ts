// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.FlinkConnection` describes a Flink Connection data source.
 *
 * ## Example Usage
 */
export function getFlinkConnection(args: GetFlinkConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetFlinkConnectionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("confluentcloud:index/getFlinkConnection:getFlinkConnection", {
        "computePool": args.computePool,
        "credentials": args.credentials,
        "displayName": args.displayName,
        "environment": args.environment,
        "organization": args.organization,
        "principal": args.principal,
        "restEndpoint": args.restEndpoint,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlinkConnection.
 */
export interface GetFlinkConnectionArgs {
    computePool?: inputs.GetFlinkConnectionComputePool;
    credentials?: inputs.GetFlinkConnectionCredentials;
    /**
     * The name of the Flink Connection.
     */
    displayName: string;
    environment?: inputs.GetFlinkConnectionEnvironment;
    organization?: inputs.GetFlinkConnectionOrganization;
    principal?: inputs.GetFlinkConnectionPrincipal;
    /**
     * The REST endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`).
     */
    restEndpoint?: string;
    /**
     * The type of the Flink Connection. The accepted values are: `OPENAI`, `AZUREML`, `AZUREOPENAI`, `BEDROCK`, `SAGEMAKER`, `GOOGLEAI`, `VERTEXAI`, `MONGODB`, `PINECONE`, `ELASTIC` and `COUCHBASE`.
     */
    type?: string;
}

/**
 * A collection of values returned by getFlinkConnection.
 */
export interface GetFlinkConnectionResult {
    readonly computePool: outputs.GetFlinkConnectionComputePool;
    readonly credentials?: outputs.GetFlinkConnectionCredentials;
    /**
     * (Required String) The authentication data of the Flink Connection.
     */
    readonly data: string;
    readonly displayName: string;
    /**
     * (Required String) The endpoint of the Flink Connection, for example, `https://api.openai.com/v1/chat/completions`
     */
    readonly endpoint: string;
    readonly environment: outputs.GetFlinkConnectionEnvironment;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly organization: outputs.GetFlinkConnectionOrganization;
    readonly principal: outputs.GetFlinkConnectionPrincipal;
    readonly restEndpoint?: string;
    /**
     * (Required String) The status of the Flink Connection.
     */
    readonly status: string;
    /**
     * (Required String) The status details of the Flink Connection.
     * -
     */
    readonly statusDetail: string;
    readonly type?: string;
}
/**
 * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](https://docs.confluent.io/cloud/current/api.html#section/Versioning/API-Lifecycle-Policy)
 *
 * `confluentcloud.FlinkConnection` describes a Flink Connection data source.
 *
 * ## Example Usage
 */
export function getFlinkConnectionOutput(args: GetFlinkConnectionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlinkConnectionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("confluentcloud:index/getFlinkConnection:getFlinkConnection", {
        "computePool": args.computePool,
        "credentials": args.credentials,
        "displayName": args.displayName,
        "environment": args.environment,
        "organization": args.organization,
        "principal": args.principal,
        "restEndpoint": args.restEndpoint,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getFlinkConnection.
 */
export interface GetFlinkConnectionOutputArgs {
    computePool?: pulumi.Input<inputs.GetFlinkConnectionComputePoolArgs>;
    credentials?: pulumi.Input<inputs.GetFlinkConnectionCredentialsArgs>;
    /**
     * The name of the Flink Connection.
     */
    displayName: pulumi.Input<string>;
    environment?: pulumi.Input<inputs.GetFlinkConnectionEnvironmentArgs>;
    organization?: pulumi.Input<inputs.GetFlinkConnectionOrganizationArgs>;
    principal?: pulumi.Input<inputs.GetFlinkConnectionPrincipalArgs>;
    /**
     * The REST endpoint of the Flink region, for example, `https://flink.us-east-1.aws.confluent.cloud`).
     */
    restEndpoint?: pulumi.Input<string>;
    /**
     * The type of the Flink Connection. The accepted values are: `OPENAI`, `AZUREML`, `AZUREOPENAI`, `BEDROCK`, `SAGEMAKER`, `GOOGLEAI`, `VERTEXAI`, `MONGODB`, `PINECONE`, `ELASTIC` and `COUCHBASE`.
     */
    type?: pulumi.Input<string>;
}
